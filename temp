model type <class '__main__.DebertaModel'>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 0 0x660efd0 forward
0: [33mLOAD_FAST[0m(6, output_attentions) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(1, 1) 
3: [33mPOP_JUMP_IF_FALSE[0m(12, 12)  -> inst 6
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mJUMP_FORWARD[0m(6, 18)  -> inst 9
6: [33mLOAD_DEREF[0m(0, self) 
7: [33mLOAD_ATTR[0m(0, config) 
8: [33mLOAD_ATTR[0m(1, output_attentions) 
9: [33mSTORE_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(7, output_hidden_states) 
11: [33mLOAD_CONST[0m(0, None) 
12: [33mIS_OP[0m(1, 1) 
13: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
14: [33mLOAD_FAST[0m(7, output_hidden_states) 
15: [33mJUMP_FORWARD[0m(6, 38)  -> inst 19
16: [33mLOAD_DEREF[0m(0, self) 
17: [33mLOAD_ATTR[0m(0, config) 
18: [33mLOAD_ATTR[0m(2, output_hidden_states) 
19: [33mSTORE_FAST[0m(7, output_hidden_states) 
20: [33mLOAD_FAST[0m(8, return_dict) 
21: [33mLOAD_CONST[0m(0, None) 
22: [33mIS_OP[0m(1, 1) 
23: [33mPOP_JUMP_IF_FALSE[0m(52, 52)  -> inst 26
24: [33mLOAD_FAST[0m(8, return_dict) 
25: [33mJUMP_FORWARD[0m(6, 58)  -> inst 29
26: [33mLOAD_DEREF[0m(0, self) 
27: [33mLOAD_ATTR[0m(0, config) 
28: [33mLOAD_ATTR[0m(3, use_return_dict) 
29: [33mSTORE_FAST[0m(8, return_dict) 
30: [33mLOAD_FAST[0m(1, input_ids) 
31: [33mLOAD_CONST[0m(0, None) 
32: [33mIS_OP[0m(1, 1) 
33: [33mPOP_JUMP_IF_FALSE[0m(86, 86)  -> inst 43
34: [33mLOAD_FAST[0m(5, inputs_embeds) 
35: [33mLOAD_CONST[0m(0, None) 
36: [33mIS_OP[0m(1, 1) 
37: [33mPOP_JUMP_IF_FALSE[0m(86, 86)  -> inst 43
38: [33mLOAD_GLOBAL[0m(4, ValueError) 
39: [33mLOAD_CONST[0m(1, You cannot specify both input_ids and inputs_embeds at the same time) 
40: [33mCALL_FUNCTION[0m(1, 1) 
41: [33mRAISE_VARARGS[0m(1, 1) 
42: [33mJUMP_FORWARD[0m(52, 138)  -> inst 69
43: [33mLOAD_FAST[0m(1, input_ids) 
44: [33mLOAD_CONST[0m(0, None) 
45: [33mIS_OP[0m(1, 1) 
46: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
47: [33mLOAD_FAST[0m(1, input_ids) 
48: [33mLOAD_METHOD[0m(5, size) 
49: [33mCALL_METHOD[0m(0, 0) 
50: [33mSTORE_FAST[0m(9, input_shape) 
51: [33mJUMP_FORWARD[0m(34, 138)  -> inst 69
52: [33mLOAD_FAST[0m(5, inputs_embeds) 
53: [33mLOAD_CONST[0m(0, None) 
54: [33mIS_OP[0m(1, 1) 
55: [33mPOP_JUMP_IF_FALSE[0m(130, 130)  -> inst 65
56: [33mLOAD_FAST[0m(5, inputs_embeds) 
57: [33mLOAD_METHOD[0m(5, size) 
58: [33mCALL_METHOD[0m(0, 0) 
59: [33mLOAD_CONST[0m(0, None) 
60: [33mLOAD_CONST[0m(2, -1) 
61: [33mBUILD_SLICE[0m(2, 2) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mSTORE_FAST[0m(9, input_shape) 
64: [33mJUMP_FORWARD[0m(8, 138)  -> inst 69
65: [33mLOAD_GLOBAL[0m(4, ValueError) 
66: [33mLOAD_CONST[0m(3, You have to specify either input_ids or inputs_embeds) 
67: [33mCALL_FUNCTION[0m(1, 1) 
68: [33mRAISE_VARARGS[0m(1, 1) 
69: [33mLOAD_FAST[0m(1, input_ids) 
70: [33mLOAD_CONST[0m(0, None) 
71: [33mIS_OP[0m(1, 1) 
72: [33mPOP_JUMP_IF_FALSE[0m(152, 152)  -> inst 76
73: [33mLOAD_FAST[0m(1, input_ids) 
74: [33mLOAD_ATTR[0m(6, device) 
75: [33mJUMP_FORWARD[0m(4, 156)  -> inst 78
76: [33mLOAD_FAST[0m(5, inputs_embeds) 
77: [33mLOAD_ATTR[0m(6, device) 
78: [33mSTORE_FAST[0m(10, device) 
79: [33mLOAD_FAST[0m(2, attention_mask) 
80: [33mLOAD_CONST[0m(0, None) 
81: [33mIS_OP[0m(0, 0) 
82: [33mPOP_JUMP_IF_FALSE[0m(180, 180)  -> inst 90
83: [33mLOAD_GLOBAL[0m(7, torch) 
84: [33mLOAD_ATTR[0m(8, ones) 
85: [33mLOAD_FAST[0m(9, input_shape) 
86: [33mLOAD_FAST[0m(10, device) 
87: [33mLOAD_CONST[0m(4, ('device',)) 
88: [33mCALL_FUNCTION_KW[0m(2, 2) 
89: [33mSTORE_FAST[0m(2, attention_mask) 
90: [33mLOAD_FAST[0m(3, token_type_ids) 
91: [33mLOAD_CONST[0m(0, None) 
92: [33mIS_OP[0m(0, 0) 
93: [33mPOP_JUMP_IF_FALSE[0m(206, 206)  -> inst 103
94: [33mLOAD_GLOBAL[0m(7, torch) 
95: [33mLOAD_ATTR[0m(9, zeros) 
96: [33mLOAD_FAST[0m(9, input_shape) 
97: [33mLOAD_GLOBAL[0m(7, torch) 
98: [33mLOAD_ATTR[0m(10, long) 
99: [33mLOAD_FAST[0m(10, device) 
100: [33mLOAD_CONST[0m(5, ('dtype', 'device')) 
101: [33mCALL_FUNCTION_KW[0m(3, 3) 
102: [33mSTORE_FAST[0m(3, token_type_ids) 
103: [33mLOAD_DEREF[0m(0, self) 
104: [33mLOAD_ATTR[0m(11, embeddings) 
105: [33mLOAD_FAST[0m(1, input_ids) 
106: [33mLOAD_FAST[0m(3, token_type_ids) 
107: [33mLOAD_FAST[0m(4, position_ids) 
108: [33mLOAD_FAST[0m(2, attention_mask) 
109: [33mLOAD_FAST[0m(5, inputs_embeds) 
110: [33mLOAD_CONST[0m(6, ('input_ids', 'token_type_ids', 'position_ids', 'mask', 'inputs_embeds')) 
111: [33mCALL_FUNCTION_KW[0m(5, 5) 
112: [33mSTORE_FAST[0m(11, embedding_output) 
113: [33mLOAD_DEREF[0m(0, self) 
114: [33mLOAD_ATTR[0m(12, encoder) 
115: [33mLOAD_FAST[0m(11, embedding_output) 
116: [33mLOAD_FAST[0m(2, attention_mask) 
117: [33mLOAD_CONST[0m(7, True) 
118: [33mLOAD_FAST[0m(6, output_attentions) 
119: [33mLOAD_FAST[0m(8, return_dict) 
120: [33mLOAD_CONST[0m(8, ('output_hidden_states', 'output_attentions', 'return_dict')) 
121: [33mCALL_FUNCTION_KW[0m(5, 5) 
122: [33mSTORE_FAST[0m(12, encoder_outputs) 
123: [33mLOAD_FAST[0m(12, encoder_outputs) 
124: [33mLOAD_CONST[0m(9, 1) 
125: [33mBINARY_SUBSCR[0m(None, None) 
126: [33mSTORE_FAST[0m(13, encoded_layers) 
127: [33mLOAD_DEREF[0m(0, self) 
128: [33mLOAD_ATTR[0m(13, z_steps) 
129: [33mLOAD_CONST[0m(9, 1) 
130: [33mCOMPARE_OP[0m(4, >) 
131: [33mEXTENDED_ARG[0m(1, 1) 
132: [33mPOP_JUMP_IF_FALSE[0m(390, 390)  -> inst 195
133: [33mLOAD_FAST[0m(13, encoded_layers) 
134: [33mLOAD_CONST[0m(10, -2) 
135: [33mBINARY_SUBSCR[0m(None, None) 
136: [33mSTORE_FAST[0m(14, hidden_states) 
137: [33mLOAD_CLOSURE[0m(0, self) 
138: [33mBUILD_TUPLE[0m(1, 1) 
139: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f5548be0, file "/home/drc/frontend/test/test_model_deberta.py", line 994>) 
140: [33mLOAD_CONST[0m(12, DebertaModel.forward.<locals>.<listcomp>) 
141: [33mMAKE_FUNCTION[0m(8, 8) 
142: [33mLOAD_GLOBAL[0m(14, range) 
143: [33mLOAD_DEREF[0m(0, self) 
144: [33mLOAD_ATTR[0m(13, z_steps) 
145: [33mCALL_FUNCTION[0m(1, 1) 
146: [33mGET_ITER[0m(None, None) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mSTORE_FAST[0m(15, layers) 
149: [33mLOAD_FAST[0m(13, encoded_layers) 
150: [33mLOAD_CONST[0m(2, -1) 
151: [33mBINARY_SUBSCR[0m(None, None) 
152: [33mSTORE_FAST[0m(16, query_states) 
153: [33mLOAD_DEREF[0m(0, self) 
154: [33mLOAD_ATTR[0m(12, encoder) 
155: [33mLOAD_METHOD[0m(15, get_rel_embedding) 
156: [33mCALL_METHOD[0m(0, 0) 
157: [33mSTORE_FAST[0m(17, rel_embeddings) 
158: [33mLOAD_DEREF[0m(0, self) 
159: [33mLOAD_ATTR[0m(12, encoder) 
160: [33mLOAD_METHOD[0m(16, get_attention_mask) 
161: [33mLOAD_FAST[0m(2, attention_mask) 
162: [33mCALL_METHOD[0m(1, 1) 
163: [33mSTORE_FAST[0m(2, attention_mask) 
164: [33mLOAD_DEREF[0m(0, self) 
165: [33mLOAD_ATTR[0m(12, encoder) 
166: [33mLOAD_METHOD[0m(17, get_rel_pos) 
167: [33mLOAD_FAST[0m(11, embedding_output) 
168: [33mCALL_METHOD[0m(1, 1) 
169: [33mSTORE_FAST[0m(18, rel_pos) 
170: [33mLOAD_FAST[0m(15, layers) 
171: [33mLOAD_CONST[0m(9, 1) 
172: [33mLOAD_CONST[0m(0, None) 
173: [33mBUILD_SLICE[0m(2, 2) 
174: [33mBINARY_SUBSCR[0m(None, None) 
175: [33mGET_ITER[0m(None, None) 
176: [33mFOR_ITER[0m(36, 390)  -> inst 195
177: [33mSTORE_FAST[0m(19, layer) 
178: [33mLOAD_FAST[0m(19, layer) 
179: [33mLOAD_FAST[0m(14, hidden_states) 
180: [33mLOAD_FAST[0m(2, attention_mask) 
181: [33mLOAD_CONST[0m(13, False) 
182: [33mLOAD_FAST[0m(16, query_states) 
183: [33mLOAD_FAST[0m(18, rel_pos) 
184: [33mLOAD_FAST[0m(17, rel_embeddings) 
185: [33mLOAD_CONST[0m(14, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
186: [33mCALL_FUNCTION_KW[0m(6, 6) 
187: [33mSTORE_FAST[0m(16, query_states) 
188: [33mLOAD_FAST[0m(13, encoded_layers) 
189: [33mLOAD_METHOD[0m(18, append) 
190: [33mLOAD_FAST[0m(16, query_states) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mPOP_TOP[0m(None, None) 
193: [33mEXTENDED_ARG[0m(1, 1) 
194: [33mJUMP_ABSOLUTE[0m(352, 352)  -> inst 176
195: [33mLOAD_FAST[0m(13, encoded_layers) 
196: [33mLOAD_CONST[0m(2, -1) 
197: [33mBINARY_SUBSCR[0m(None, None) 
198: [33mSTORE_FAST[0m(20, sequence_output) 
199: [33mLOAD_FAST[0m(8, return_dict) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_TRUE[0m(432, 432)  -> inst 216
202: [33mLOAD_FAST[0m(20, sequence_output) 
203: [33mBUILD_TUPLE[0m(1, 1) 
204: [33mLOAD_FAST[0m(12, encoder_outputs) 
205: [33mLOAD_FAST[0m(7, output_hidden_states) 
206: [33mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(420, 420)  -> inst 210
208: [33mLOAD_CONST[0m(9, 1) 
209: [33mJUMP_FORWARD[0m(2, 422)  -> inst 211
210: [33mLOAD_CONST[0m(15, 2) 
211: [33mLOAD_CONST[0m(0, None) 
212: [33mBUILD_SLICE[0m(2, 2) 
213: [33mBINARY_SUBSCR[0m(None, None) 
214: [33mBINARY_ADD[0m(None, None) 
215: [33mRETURN_VALUE[0m(None, None) 
216: [33mLOAD_GLOBAL[0m(19, BaseModelOutput) 
217: [33mLOAD_FAST[0m(20, sequence_output) 
218: [33mLOAD_FAST[0m(7, output_hidden_states) 
219: [33mEXTENDED_ARG[0m(1, 1) 
220: [33mPOP_JUMP_IF_FALSE[0m(448, 448)  -> inst 224
221: [33mLOAD_FAST[0m(12, encoder_outputs) 
222: [33mLOAD_ATTR[0m(20, hidden_states) 
223: [33mJUMP_FORWARD[0m(2, 450)  -> inst 225
224: [33mLOAD_CONST[0m(0, None) 
225: [33mLOAD_FAST[0m(12, encoder_outputs) 
226: [33mLOAD_ATTR[0m(21, attentions) 
227: [33mLOAD_CONST[0m(16, ('last_hidden_state', 'hidden_states', 'attentions')) 
228: [33mCALL_FUNCTION_KW[0m(3, 3) 
229: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'code'>, <code object <listcomp> at 0x14d3f5548be0, file "/home/drc/frontend/test/test_model_deberta.py", line 994>), (<class 'bool'>, False), (<class 'tuple'>, ('output_hidden_states', 'output_attentions', 'return_dict')), (<class 'tuple'>, ('last_hidden_state', 'hidden_states', 'attentions')), (<class 'tuple'>, ('device',)), (<class 'tuple'>, ('input_ids', 'token_type_ids', 'position_ids', 'mask', 'inputs_embeds')), (<class 'str'>, 'You cannot specify both input_ids and inputs_embeds at the same time'), (<class 'str'>, 'You have to specify either input_ids or inputs_embeds'), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, -1), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'tuple'>, ('dtype', 'device')), (<class 'str'>, 'DebertaModel.forward.<locals>.<listcomp>'), (<class 'int'>, 0)]
guarded code
0: [32mEXTENDED_ARG[0m(1, 1) 
1: [32mJUMP_ABSOLUTE[0m(468, 468)  -> inst 234
2: [33mLOAD_FAST[0m(6, output_attentions) 
3: [33mLOAD_CONST[0m(8, None) 
4: [33mIS_OP[0m(1, 1) 
5: [33mPOP_JUMP_IF_FALSE[0m(16, 16)  -> inst 8
6: [33mLOAD_FAST[0m(6, output_attentions) 
7: [33mJUMP_FORWARD[0m(6, 22)  -> inst 11
8: [33mLOAD_DEREF[0m(0, self) 
9: [33mLOAD_ATTR[0m(0, config) 
10: [33mLOAD_ATTR[0m(1, output_attentions) 
11: [33mSTORE_FAST[0m(6, output_attentions) 
12: [33mLOAD_FAST[0m(7, output_hidden_states) 
13: [33mLOAD_CONST[0m(8, None) 
14: [33mIS_OP[0m(1, 1) 
15: [33mPOP_JUMP_IF_FALSE[0m(36, 36)  -> inst 18
16: [33mLOAD_FAST[0m(7, output_hidden_states) 
17: [33mJUMP_FORWARD[0m(6, 42)  -> inst 21
18: [33mLOAD_DEREF[0m(0, self) 
19: [33mLOAD_ATTR[0m(0, config) 
20: [33mLOAD_ATTR[0m(2, output_hidden_states) 
21: [33mSTORE_FAST[0m(7, output_hidden_states) 
22: [33mLOAD_FAST[0m(8, return_dict) 
23: [33mLOAD_CONST[0m(8, None) 
24: [33mIS_OP[0m(1, 1) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(8, return_dict) 
27: [33mJUMP_FORWARD[0m(6, 62)  -> inst 31
28: [33mLOAD_DEREF[0m(0, self) 
29: [33mLOAD_ATTR[0m(0, config) 
30: [33mLOAD_ATTR[0m(3, use_return_dict) 
31: [33mSTORE_FAST[0m(8, return_dict) 
32: [33mLOAD_FAST[0m(1, input_ids) 
33: [33mLOAD_CONST[0m(8, None) 
34: [33mIS_OP[0m(1, 1) 
35: [33mPOP_JUMP_IF_FALSE[0m(90, 90)  -> inst 45
36: [33mLOAD_FAST[0m(5, inputs_embeds) 
37: [33mLOAD_CONST[0m(8, None) 
38: [33mIS_OP[0m(1, 1) 
39: [33mPOP_JUMP_IF_FALSE[0m(90, 90)  -> inst 45
40: [33mLOAD_GLOBAL[0m(4, ValueError) 
41: [33mLOAD_CONST[0m(6, You cannot specify both input_ids and inputs_embeds at the same time) 
42: [33mCALL_FUNCTION[0m(1, 1) 
43: [33mRAISE_VARARGS[0m(1, 1) 
44: [33mJUMP_FORWARD[0m(52, 142)  -> inst 71
45: [33mLOAD_FAST[0m(1, input_ids) 
46: [33mLOAD_CONST[0m(8, None) 
47: [33mIS_OP[0m(1, 1) 
48: [33mPOP_JUMP_IF_FALSE[0m(108, 108)  -> inst 54
49: [33mLOAD_FAST[0m(1, input_ids) 
50: [33mLOAD_METHOD[0m(5, size) 
51: [33mCALL_METHOD[0m(0, 0) 
52: [33mSTORE_FAST[0m(9, input_shape) 
53: [33mJUMP_FORWARD[0m(34, 142)  -> inst 71
54: [33mLOAD_FAST[0m(5, inputs_embeds) 
55: [33mLOAD_CONST[0m(8, None) 
56: [33mIS_OP[0m(1, 1) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_FAST[0m(5, inputs_embeds) 
59: [33mLOAD_METHOD[0m(5, size) 
60: [33mCALL_METHOD[0m(0, 0) 
61: [33mLOAD_CONST[0m(8, None) 
62: [33mLOAD_CONST[0m(12, -1) 
63: [33mBUILD_SLICE[0m(2, 2) 
64: [33mBINARY_SUBSCR[0m(None, None) 
65: [33mSTORE_FAST[0m(9, input_shape) 
66: [33mJUMP_FORWARD[0m(8, 142)  -> inst 71
67: [33mLOAD_GLOBAL[0m(4, ValueError) 
68: [33mLOAD_CONST[0m(7, You have to specify either input_ids or inputs_embeds) 
69: [33mCALL_FUNCTION[0m(1, 1) 
70: [33mRAISE_VARARGS[0m(1, 1) 
71: [33mLOAD_FAST[0m(1, input_ids) 
72: [33mLOAD_CONST[0m(8, None) 
73: [33mIS_OP[0m(1, 1) 
74: [33mPOP_JUMP_IF_FALSE[0m(156, 156)  -> inst 78
75: [33mLOAD_FAST[0m(1, input_ids) 
76: [33mLOAD_ATTR[0m(6, device) 
77: [33mJUMP_FORWARD[0m(4, 160)  -> inst 80
78: [33mLOAD_FAST[0m(5, inputs_embeds) 
79: [33mLOAD_ATTR[0m(6, device) 
80: [33mSTORE_FAST[0m(10, device) 
81: [33mLOAD_FAST[0m(2, attention_mask) 
82: [33mLOAD_CONST[0m(8, None) 
83: [33mIS_OP[0m(0, 0) 
84: [33mPOP_JUMP_IF_FALSE[0m(184, 184)  -> inst 92
85: [33mLOAD_GLOBAL[0m(7, torch) 
86: [33mLOAD_ATTR[0m(8, ones) 
87: [33mLOAD_FAST[0m(9, input_shape) 
88: [33mLOAD_FAST[0m(10, device) 
89: [33mLOAD_CONST[0m(4, ('device',)) 
90: [33mCALL_FUNCTION_KW[0m(2, 2) 
91: [33mSTORE_FAST[0m(2, attention_mask) 
92: [33mLOAD_FAST[0m(3, token_type_ids) 
93: [33mLOAD_CONST[0m(8, None) 
94: [33mIS_OP[0m(0, 0) 
95: [33mPOP_JUMP_IF_FALSE[0m(210, 210)  -> inst 105
96: [33mLOAD_GLOBAL[0m(7, torch) 
97: [33mLOAD_ATTR[0m(9, zeros) 
98: [33mLOAD_FAST[0m(9, input_shape) 
99: [33mLOAD_GLOBAL[0m(7, torch) 
100: [33mLOAD_ATTR[0m(10, long) 
101: [33mLOAD_FAST[0m(10, device) 
102: [33mLOAD_CONST[0m(15, ('dtype', 'device')) 
103: [33mCALL_FUNCTION_KW[0m(3, 3) 
104: [33mSTORE_FAST[0m(3, token_type_ids) 
105: [33mLOAD_DEREF[0m(0, self) 
106: [33mLOAD_ATTR[0m(11, embeddings) 
107: [33mLOAD_FAST[0m(1, input_ids) 
108: [33mLOAD_FAST[0m(3, token_type_ids) 
109: [33mLOAD_FAST[0m(4, position_ids) 
110: [33mLOAD_FAST[0m(2, attention_mask) 
111: [33mLOAD_FAST[0m(5, inputs_embeds) 
112: [33mLOAD_CONST[0m(5, ('input_ids', 'token_type_ids', 'position_ids', 'mask', 'inputs_embeds')) 
113: [33mCALL_FUNCTION_KW[0m(5, 5) 
114: [33mSTORE_FAST[0m(11, embedding_output) 
115: [33mLOAD_DEREF[0m(0, self) 
116: [33mLOAD_ATTR[0m(12, encoder) 
117: [33mLOAD_FAST[0m(11, embedding_output) 
118: [33mLOAD_FAST[0m(2, attention_mask) 
119: [33mLOAD_CONST[0m(10, True) 
120: [33mLOAD_FAST[0m(6, output_attentions) 
121: [33mLOAD_FAST[0m(8, return_dict) 
122: [33mLOAD_CONST[0m(2, ('output_hidden_states', 'output_attentions', 'return_dict')) 
123: [33mCALL_FUNCTION_KW[0m(5, 5) 
124: [33mSTORE_FAST[0m(12, encoder_outputs) 
125: [33mLOAD_FAST[0m(12, encoder_outputs) 
126: [33mLOAD_CONST[0m(14, 1) 
127: [33mBINARY_SUBSCR[0m(None, None) 
128: [33mSTORE_FAST[0m(13, encoded_layers) 
129: [33mLOAD_DEREF[0m(0, self) 
130: [33mLOAD_ATTR[0m(13, z_steps) 
131: [33mLOAD_CONST[0m(14, 1) 
132: [33mCOMPARE_OP[0m(4, >) 
133: [32mEXTENDED_ARG[0m(1, 1) 
134: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
135: [33mLOAD_FAST[0m(13, encoded_layers) 
136: [33mLOAD_CONST[0m(13, -2) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mSTORE_FAST[0m(14, hidden_states) 
139: [33mLOAD_CLOSURE[0m(0, self) 
140: [33mBUILD_TUPLE[0m(1, 1) 
141: [33mLOAD_CONST[0m(0, <code object <listcomp> at 0x14d3f5548be0, file "/home/drc/frontend/test/test_model_deberta.py", line 994>) 
142: [33mLOAD_CONST[0m(16, DebertaModel.forward.<locals>.<listcomp>) 
143: [33mMAKE_FUNCTION[0m(8, 8) 
144: [33mLOAD_GLOBAL[0m(14, range) 
145: [33mLOAD_DEREF[0m(0, self) 
146: [33mLOAD_ATTR[0m(13, z_steps) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mGET_ITER[0m(None, None) 
149: [33mCALL_FUNCTION[0m(1, 1) 
150: [33mSTORE_FAST[0m(15, layers) 
151: [33mLOAD_FAST[0m(13, encoded_layers) 
152: [33mLOAD_CONST[0m(12, -1) 
153: [33mBINARY_SUBSCR[0m(None, None) 
154: [33mSTORE_FAST[0m(16, query_states) 
155: [33mLOAD_DEREF[0m(0, self) 
156: [33mLOAD_ATTR[0m(12, encoder) 
157: [33mLOAD_METHOD[0m(15, get_rel_embedding) 
158: [33mCALL_METHOD[0m(0, 0) 
159: [33mSTORE_FAST[0m(17, rel_embeddings) 
160: [33mLOAD_DEREF[0m(0, self) 
161: [33mLOAD_ATTR[0m(12, encoder) 
162: [33mLOAD_METHOD[0m(16, get_attention_mask) 
163: [33mLOAD_FAST[0m(2, attention_mask) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(2, attention_mask) 
166: [33mLOAD_DEREF[0m(0, self) 
167: [33mLOAD_ATTR[0m(12, encoder) 
168: [33mLOAD_METHOD[0m(17, get_rel_pos) 
169: [33mLOAD_FAST[0m(11, embedding_output) 
170: [33mCALL_METHOD[0m(1, 1) 
171: [33mSTORE_FAST[0m(18, rel_pos) 
172: [33mLOAD_FAST[0m(15, layers) 
173: [33mLOAD_CONST[0m(14, 1) 
174: [33mLOAD_CONST[0m(8, None) 
175: [33mBUILD_SLICE[0m(2, 2) 
176: [33mBINARY_SUBSCR[0m(None, None) 
177: [33mGET_ITER[0m(None, None) 
178: [33mFOR_ITER[0m(36, 394)  -> inst 197
179: [33mSTORE_FAST[0m(19, layer) 
180: [33mLOAD_FAST[0m(19, layer) 
181: [33mLOAD_FAST[0m(14, hidden_states) 
182: [33mLOAD_FAST[0m(2, attention_mask) 
183: [33mLOAD_CONST[0m(1, False) 
184: [33mLOAD_FAST[0m(16, query_states) 
185: [33mLOAD_FAST[0m(18, rel_pos) 
186: [33mLOAD_FAST[0m(17, rel_embeddings) 
187: [33mLOAD_CONST[0m(11, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
188: [33mCALL_FUNCTION_KW[0m(6, 6) 
189: [33mSTORE_FAST[0m(16, query_states) 
190: [33mLOAD_FAST[0m(13, encoded_layers) 
191: [33mLOAD_METHOD[0m(18, append) 
192: [33mLOAD_FAST[0m(16, query_states) 
193: [33mCALL_METHOD[0m(1, 1) 
194: [33mPOP_TOP[0m(None, None) 
195: [32mEXTENDED_ARG[0m(1, 1) 
196: [33mJUMP_ABSOLUTE[0m(356, 356)  -> inst 178
197: [33mLOAD_FAST[0m(13, encoded_layers) 
198: [33mLOAD_CONST[0m(12, -1) 
199: [33mBINARY_SUBSCR[0m(None, None) 
200: [33mSTORE_FAST[0m(20, sequence_output) 
201: [33mLOAD_FAST[0m(8, return_dict) 
202: [32mEXTENDED_ARG[0m(1, 1) 
203: [33mPOP_JUMP_IF_TRUE[0m(438, 438)  -> inst 219
204: [33mLOAD_FAST[0m(20, sequence_output) 
205: [33mBUILD_TUPLE[0m(1, 1) 
206: [33mLOAD_FAST[0m(12, encoder_outputs) 
207: [33mLOAD_FAST[0m(7, output_hidden_states) 
208: [32mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
210: [33mLOAD_CONST[0m(14, 1) 
211: [33mJUMP_FORWARD[0m(2, 426)  -> inst 213
212: [33mLOAD_CONST[0m(9, 2) 
213: [33mLOAD_CONST[0m(8, None) 
214: [33mBUILD_SLICE[0m(2, 2) 
215: [33mBINARY_SUBSCR[0m(None, None) 
216: [33mBINARY_ADD[0m(None, None) 
217: [32mEXTENDED_ARG[0m(1, 1) 
218: [32mJUMP_ABSOLUTE[0m(496, 496)  -> inst 248
219: [33mLOAD_GLOBAL[0m(19, BaseModelOutput) 
220: [33mLOAD_FAST[0m(20, sequence_output) 
221: [33mLOAD_FAST[0m(7, output_hidden_states) 
222: [32mEXTENDED_ARG[0m(1, 1) 
223: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
224: [33mLOAD_FAST[0m(12, encoder_outputs) 
225: [33mLOAD_ATTR[0m(20, hidden_states) 
226: [33mJUMP_FORWARD[0m(2, 456)  -> inst 228
227: [33mLOAD_CONST[0m(8, None) 
228: [33mLOAD_FAST[0m(12, encoder_outputs) 
229: [33mLOAD_ATTR[0m(21, attentions) 
230: [33mLOAD_CONST[0m(3, ('last_hidden_state', 'hidden_states', 'attentions')) 
231: [33mCALL_FUNCTION_KW[0m(3, 3) 
232: [32mEXTENDED_ARG[0m(1, 1) 
233: [32mJUMP_ABSOLUTE[0m(496, 496)  -> inst 248
234: [32mLOAD_GLOBAL[0m(25, guard_match) 
235: [32mLOAD_CONST[0m(17, 0) 
236: [32mLOAD_CONST[0m(17, 0) 
237: [32mLOAD_GLOBAL[0m(27, locals) 
238: [32mCALL_FUNCTION[0m(0, 0) 
239: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
240: [32mUNPACK_SEQUENCE[0m(2, 2) 
241: [32mSTORE_FAST[0m(22, __case_idx) 
242: [32mSTORE_FAST[0m(21, __graph_fn) 
243: [32mLOAD_GLOBAL[0m(23, enable_trace) 
244: [32mLOAD_CONST[0m(17, 0) 
245: [32mCALL_FUNCTION[0m(1, 1) 
246: [32mPOP_TOP[0m(None, None) 
247: [32mJUMP_ABSOLUTE[0m(4, 4)  -> inst 2
248: [32mLOAD_GLOBAL[0m(26, disable_trace) 
249: [32mLOAD_CONST[0m(17, 0) 
250: [32mCALL_FUNCTION[0m(1, 1) 
251: [32mPOP_TOP[0m(None, None) 
252: [32mRETURN_VALUE[0m(None, None) 

enable_trace
push tracker 0 frame 0x6614110 frame_id 0 read_stack False cf_info <class 'NoneType'> all [0]
tracing opcode POP_TOP None pc=492 frame=0(0x6614110)
restart: running injected code (f_lasti=492)
tracing opcode JUMP_ABSOLUTE None pc=494 frame=0(0x6614110)
restart: running injected code (f_lasti=494)
tracing line /home/drc/frontend/test/test_model_deberta.py:953
tracing opcode LOAD_FAST None pc=4 frame=0(0x6614110)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=6 frame=0(0x6614110)
tracing opcode IS_OP None pc=8 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=10 frame=0(0x6614110)
tracing opcode LOAD_DEREF None pc=16 frame=0(0x6614110)
load fast: 22897554686736
tracing opcode LOAD_ATTR None pc=18 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=20 frame=0(0x6614110)
generate any for DebertaConfig {
  "_name_or_path": "microsoft/deberta-base",
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-07,
  "max_position_embeddings": 512,
  "max_relative_positions": -1,
  "model_type": "deberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "pooler_dropout": 0,
  "pooler_hidden_act": "gelu",
  "pooler_hidden_size": 768,
  "pos_att_type": [
    "c2p",
    "p2c"
  ],
  "position_biased_input": false,
  "relative_attention": true,
  "return_dict": false,
  "transformers_version": "4.34.0",
  "type_vocab_size": 0,
  "vocab_size": 50265
}
 <class 'transformers.models.deberta.configuration_deberta.DebertaConfig'> [locals['self'].config]
tracing opcode STORE_FAST None pc=22 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:955
tracing opcode LOAD_FAST None pc=24 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=26 frame=0(0x6614110)
tracing opcode IS_OP None pc=28 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=30 frame=0(0x6614110)
tracing opcode LOAD_DEREF None pc=36 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=38 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=40 frame=0(0x6614110)
generate any for DebertaConfig {
  "_name_or_path": "microsoft/deberta-base",
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-07,
  "max_position_embeddings": 512,
  "max_relative_positions": -1,
  "model_type": "deberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "pooler_dropout": 0,
  "pooler_hidden_act": "gelu",
  "pooler_hidden_size": 768,
  "pos_att_type": [
    "c2p",
    "p2c"
  ],
  "position_biased_input": false,
  "relative_attention": true,
  "return_dict": false,
  "transformers_version": "4.34.0",
  "type_vocab_size": 0,
  "vocab_size": 50265
}
 <class 'transformers.models.deberta.configuration_deberta.DebertaConfig'> [locals['self'].config]
tracing line /home/drc/frontend/test/test_model_deberta.py:954
tracing opcode STORE_FAST None pc=42 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:957
tracing opcode LOAD_FAST None pc=44 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=46 frame=0(0x6614110)
tracing opcode IS_OP None pc=48 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=0(0x6614110)
tracing opcode LOAD_DEREF None pc=56 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=58 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=60 frame=0(0x6614110)
generate any for DebertaConfig {
  "_name_or_path": "microsoft/deberta-base",
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-07,
  "max_position_embeddings": 512,
  "max_relative_positions": -1,
  "model_type": "deberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "pooler_dropout": 0,
  "pooler_hidden_act": "gelu",
  "pooler_hidden_size": 768,
  "pos_att_type": [
    "c2p",
    "p2c"
  ],
  "position_biased_input": false,
  "relative_attention": true,
  "return_dict": false,
  "transformers_version": "4.34.0",
  "type_vocab_size": 0,
  "vocab_size": 50265
}
 <class 'transformers.models.deberta.configuration_deberta.DebertaConfig'> [locals['self'].config]
tracing opcode STORE_FAST None pc=62 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:959
tracing opcode LOAD_FAST None pc=64 frame=0(0x6614110)
load fast: 22897948193392
tracing opcode LOAD_CONST None pc=66 frame=0(0x6614110)
tracing opcode IS_OP None pc=68 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=0(0x6614110)
tracing opcode LOAD_FAST None pc=72 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=74 frame=0(0x6614110)
tracing opcode IS_OP None pc=76 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=78 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:961
tracing opcode LOAD_FAST None pc=90 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=92 frame=0(0x6614110)
tracing opcode IS_OP None pc=94 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=96 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:962
tracing opcode LOAD_FAST None pc=98 frame=0(0x6614110)
tracing opcode LOAD_METHOD None pc=100 frame=0(0x6614110)
tracing opcode CALL_METHOD None pc=102 frame=0(0x6614110)
tracing opcode STORE_FAST None pc=104 frame=0(0x6614110)
tracing opcode JUMP_FORWARD None pc=106 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:968
tracing opcode LOAD_FAST None pc=142 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=144 frame=0(0x6614110)
tracing opcode IS_OP None pc=146 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=148 frame=0(0x6614110)
tracing opcode LOAD_FAST None pc=150 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=152 frame=0(0x6614110)
tracing opcode JUMP_FORWARD None pc=154 frame=0(0x6614110)
tracing opcode STORE_FAST None pc=160 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:970
tracing opcode LOAD_FAST None pc=162 frame=0(0x6614110)
load fast: 22897696715536
tracing opcode LOAD_CONST None pc=164 frame=0(0x6614110)
tracing opcode IS_OP None pc=166 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=168 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:972
tracing opcode LOAD_FAST None pc=184 frame=0(0x6614110)
load fast: 22897553973136
tracing opcode LOAD_CONST None pc=186 frame=0(0x6614110)
tracing opcode IS_OP None pc=188 frame=0(0x6614110)
tracing opcode POP_JUMP_IF_FALSE None pc=190 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:975
tracing opcode LOAD_DEREF None pc=210 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=212 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:976
tracing opcode LOAD_FAST None pc=214 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:977
tracing opcode LOAD_FAST None pc=216 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:978
tracing opcode LOAD_FAST None pc=218 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:979
tracing opcode LOAD_FAST None pc=220 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:980
tracing opcode LOAD_FAST None pc=222 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:975
tracing opcode LOAD_CONST None pc=224 frame=0(0x6614110)
tracing opcode CALL_FUNCTION_KW None pc=226 frame=0(0x6614110)
run into user defined function DebertaEmbeddings(
  (word_embeddings): Embedding(50265, 768, padding_idx=0)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 1 0x14d340841640 forward
0: [33mLOAD_FAST[0m(1, input_ids) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(1, 1) 
3: [33mPOP_JUMP_IF_FALSE[0m(18, 18)  -> inst 9
4: [33mLOAD_FAST[0m(1, input_ids) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mCALL_METHOD[0m(0, 0) 
7: [33mSTORE_FAST[0m(6, input_shape) 
8: [33mJUMP_FORWARD[0m(16, 34)  -> inst 17
9: [33mLOAD_FAST[0m(5, inputs_embeds) 
10: [33mLOAD_METHOD[0m(0, size) 
11: [33mCALL_METHOD[0m(0, 0) 
12: [33mLOAD_CONST[0m(0, None) 
13: [33mLOAD_CONST[0m(1, -1) 
14: [33mBUILD_SLICE[0m(2, 2) 
15: [33mBINARY_SUBSCR[0m(None, None) 
16: [33mSTORE_FAST[0m(6, input_shape) 
17: [33mLOAD_FAST[0m(6, input_shape) 
18: [33mLOAD_CONST[0m(2, 1) 
19: [33mBINARY_SUBSCR[0m(None, None) 
20: [33mSTORE_FAST[0m(7, seq_length) 
21: [33mLOAD_FAST[0m(3, position_ids) 
22: [33mLOAD_CONST[0m(0, None) 
23: [33mIS_OP[0m(0, 0) 
24: [33mPOP_JUMP_IF_FALSE[0m(72, 72)  -> inst 36
25: [33mLOAD_FAST[0m(0, self) 
26: [33mLOAD_ATTR[0m(1, position_ids) 
27: [33mLOAD_CONST[0m(0, None) 
28: [33mLOAD_CONST[0m(0, None) 
29: [33mBUILD_SLICE[0m(2, 2) 
30: [33mLOAD_CONST[0m(0, None) 
31: [33mLOAD_FAST[0m(7, seq_length) 
32: [33mBUILD_SLICE[0m(2, 2) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mBINARY_SUBSCR[0m(None, None) 
35: [33mSTORE_FAST[0m(3, position_ids) 
36: [33mLOAD_FAST[0m(2, token_type_ids) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mIS_OP[0m(0, 0) 
39: [33mPOP_JUMP_IF_FALSE[0m(102, 102)  -> inst 51
40: [33mLOAD_GLOBAL[0m(2, torch) 
41: [33mLOAD_ATTR[0m(3, zeros) 
42: [33mLOAD_FAST[0m(6, input_shape) 
43: [33mLOAD_GLOBAL[0m(2, torch) 
44: [33mLOAD_ATTR[0m(4, long) 
45: [33mLOAD_FAST[0m(0, self) 
46: [33mLOAD_ATTR[0m(1, position_ids) 
47: [33mLOAD_ATTR[0m(5, device) 
48: [33mLOAD_CONST[0m(3, ('dtype', 'device')) 
49: [33mCALL_FUNCTION_KW[0m(3, 3) 
50: [33mSTORE_FAST[0m(2, token_type_ids) 
51: [33mLOAD_FAST[0m(5, inputs_embeds) 
52: [33mLOAD_CONST[0m(0, None) 
53: [33mIS_OP[0m(0, 0) 
54: [33mPOP_JUMP_IF_FALSE[0m(120, 120)  -> inst 60
55: [33mLOAD_FAST[0m(0, self) 
56: [33mLOAD_METHOD[0m(6, word_embeddings) 
57: [33mLOAD_FAST[0m(1, input_ids) 
58: [33mCALL_METHOD[0m(1, 1) 
59: [33mSTORE_FAST[0m(5, inputs_embeds) 
60: [33mLOAD_FAST[0m(0, self) 
61: [33mLOAD_ATTR[0m(7, position_embeddings) 
62: [33mLOAD_CONST[0m(0, None) 
63: [33mIS_OP[0m(1, 1) 
64: [33mPOP_JUMP_IF_FALSE[0m(146, 146)  -> inst 73
65: [33mLOAD_FAST[0m(0, self) 
66: [33mLOAD_METHOD[0m(7, position_embeddings) 
67: [33mLOAD_FAST[0m(3, position_ids) 
68: [33mLOAD_METHOD[0m(4, long) 
69: [33mCALL_METHOD[0m(0, 0) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mSTORE_FAST[0m(8, position_embeddings) 
72: [33mJUMP_FORWARD[0m(10, 156)  -> inst 78
73: [33mLOAD_GLOBAL[0m(2, torch) 
74: [33mLOAD_METHOD[0m(8, zeros_like) 
75: [33mLOAD_FAST[0m(5, inputs_embeds) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mSTORE_FAST[0m(8, position_embeddings) 
78: [33mLOAD_FAST[0m(5, inputs_embeds) 
79: [33mSTORE_FAST[0m(9, embeddings) 
80: [33mLOAD_FAST[0m(0, self) 
81: [33mLOAD_ATTR[0m(9, position_biased_input) 
82: [33mPOP_JUMP_IF_FALSE[0m(174, 174)  -> inst 87
83: [33mLOAD_FAST[0m(9, embeddings) 
84: [33mLOAD_FAST[0m(8, position_embeddings) 
85: [33mINPLACE_ADD[0m(None, None) 
86: [33mSTORE_FAST[0m(9, embeddings) 
87: [33mLOAD_FAST[0m(0, self) 
88: [33mLOAD_ATTR[0m(10, config) 
89: [33mLOAD_ATTR[0m(11, type_vocab_size) 
90: [33mLOAD_CONST[0m(4, 0) 
91: [33mCOMPARE_OP[0m(4, >) 
92: [33mPOP_JUMP_IF_FALSE[0m(204, 204)  -> inst 102
93: [33mLOAD_FAST[0m(0, self) 
94: [33mLOAD_METHOD[0m(12, token_type_embeddings) 
95: [33mLOAD_FAST[0m(2, token_type_ids) 
96: [33mCALL_METHOD[0m(1, 1) 
97: [33mSTORE_FAST[0m(10, token_type_embeddings) 
98: [33mLOAD_FAST[0m(9, embeddings) 
99: [33mLOAD_FAST[0m(10, token_type_embeddings) 
100: [33mINPLACE_ADD[0m(None, None) 
101: [33mSTORE_FAST[0m(9, embeddings) 
102: [33mLOAD_FAST[0m(0, self) 
103: [33mLOAD_ATTR[0m(13, embedding_size) 
104: [33mLOAD_FAST[0m(0, self) 
105: [33mLOAD_ATTR[0m(10, config) 
106: [33mLOAD_ATTR[0m(14, hidden_size) 
107: [33mCOMPARE_OP[0m(3, !=) 
108: [33mPOP_JUMP_IF_FALSE[0m(228, 228)  -> inst 114
109: [33mLOAD_FAST[0m(0, self) 
110: [33mLOAD_METHOD[0m(15, embed_proj) 
111: [33mLOAD_FAST[0m(9, embeddings) 
112: [33mCALL_METHOD[0m(1, 1) 
113: [33mSTORE_FAST[0m(9, embeddings) 
114: [33mLOAD_FAST[0m(0, self) 
115: [33mLOAD_METHOD[0m(16, LayerNorm) 
116: [33mLOAD_FAST[0m(9, embeddings) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mSTORE_FAST[0m(9, embeddings) 
119: [33mLOAD_FAST[0m(4, mask) 
120: [33mLOAD_CONST[0m(0, None) 
121: [33mIS_OP[0m(1, 1) 
122: [33mEXTENDED_ARG[0m(1, 1) 
123: [33mPOP_JUMP_IF_FALSE[0m(326, 326)  -> inst 163
124: [33mLOAD_FAST[0m(4, mask) 
125: [33mLOAD_METHOD[0m(17, dim) 
126: [33mCALL_METHOD[0m(0, 0) 
127: [33mLOAD_FAST[0m(9, embeddings) 
128: [33mLOAD_METHOD[0m(17, dim) 
129: [33mCALL_METHOD[0m(0, 0) 
130: [33mCOMPARE_OP[0m(3, !=) 
131: [33mEXTENDED_ARG[0m(1, 1) 
132: [33mPOP_JUMP_IF_FALSE[0m(306, 306)  -> inst 153
133: [33mLOAD_FAST[0m(4, mask) 
134: [33mLOAD_METHOD[0m(17, dim) 
135: [33mCALL_METHOD[0m(0, 0) 
136: [33mLOAD_CONST[0m(5, 4) 
137: [33mCOMPARE_OP[0m(2, ==) 
138: [33mEXTENDED_ARG[0m(1, 1) 
139: [33mPOP_JUMP_IF_FALSE[0m(296, 296)  -> inst 148
140: [33mLOAD_FAST[0m(4, mask) 
141: [33mLOAD_METHOD[0m(18, squeeze) 
142: [33mLOAD_CONST[0m(2, 1) 
143: [33mCALL_METHOD[0m(1, 1) 
144: [33mLOAD_METHOD[0m(18, squeeze) 
145: [33mLOAD_CONST[0m(2, 1) 
146: [33mCALL_METHOD[0m(1, 1) 
147: [33mSTORE_FAST[0m(4, mask) 
148: [33mLOAD_FAST[0m(4, mask) 
149: [33mLOAD_METHOD[0m(19, unsqueeze) 
150: [33mLOAD_CONST[0m(6, 2) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mSTORE_FAST[0m(4, mask) 
153: [33mLOAD_FAST[0m(4, mask) 
154: [33mLOAD_METHOD[0m(20, to) 
155: [33mLOAD_FAST[0m(9, embeddings) 
156: [33mLOAD_ATTR[0m(21, dtype) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mSTORE_FAST[0m(4, mask) 
159: [33mLOAD_FAST[0m(9, embeddings) 
160: [33mLOAD_FAST[0m(4, mask) 
161: [33mBINARY_MULTIPLY[0m(None, None) 
162: [33mSTORE_FAST[0m(9, embeddings) 
163: [33mLOAD_FAST[0m(0, self) 
164: [33mLOAD_METHOD[0m(22, dropout) 
165: [33mLOAD_FAST[0m(9, embeddings) 
166: [33mCALL_METHOD[0m(1, 1) 
167: [33mSTORE_FAST[0m(9, embeddings) 
168: [33mLOAD_FAST[0m(9, embeddings) 
169: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'tuple'>, ('dtype', 'device')), (<class 'int'>, 4)]
guarded code
0: [32mLOAD_GLOBAL[0m(27, disable_trace) 
1: [32mLOAD_CONST[0m(4, 1) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(1, 1) 
5: [32mJUMP_ABSOLUTE[0m(354, 354)  -> inst 177
6: [33mLOAD_FAST[0m(1, input_ids) 
7: [33mLOAD_CONST[0m(1, None) 
8: [33mIS_OP[0m(1, 1) 
9: [33mPOP_JUMP_IF_FALSE[0m(30, 30)  -> inst 15
10: [33mLOAD_FAST[0m(1, input_ids) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mCALL_METHOD[0m(0, 0) 
13: [33mSTORE_FAST[0m(6, input_shape) 
14: [33mJUMP_FORWARD[0m(16, 46)  -> inst 23
15: [33mLOAD_FAST[0m(5, inputs_embeds) 
16: [33mLOAD_METHOD[0m(0, size) 
17: [33mCALL_METHOD[0m(0, 0) 
18: [33mLOAD_CONST[0m(1, None) 
19: [33mLOAD_CONST[0m(3, -1) 
20: [33mBUILD_SLICE[0m(2, 2) 
21: [33mBINARY_SUBSCR[0m(None, None) 
22: [33mSTORE_FAST[0m(6, input_shape) 
23: [33mLOAD_FAST[0m(6, input_shape) 
24: [33mLOAD_CONST[0m(4, 1) 
25: [33mBINARY_SUBSCR[0m(None, None) 
26: [33mSTORE_FAST[0m(7, seq_length) 
27: [33mLOAD_FAST[0m(3, position_ids) 
28: [33mLOAD_CONST[0m(1, None) 
29: [33mIS_OP[0m(0, 0) 
30: [33mPOP_JUMP_IF_FALSE[0m(84, 84)  -> inst 42
31: [33mLOAD_FAST[0m(0, self) 
32: [33mLOAD_ATTR[0m(1, position_ids) 
33: [33mLOAD_CONST[0m(1, None) 
34: [33mLOAD_CONST[0m(1, None) 
35: [33mBUILD_SLICE[0m(2, 2) 
36: [33mLOAD_CONST[0m(1, None) 
37: [33mLOAD_FAST[0m(7, seq_length) 
38: [33mBUILD_SLICE[0m(2, 2) 
39: [33mBUILD_TUPLE[0m(2, 2) 
40: [33mBINARY_SUBSCR[0m(None, None) 
41: [33mSTORE_FAST[0m(3, position_ids) 
42: [33mLOAD_FAST[0m(2, token_type_ids) 
43: [33mLOAD_CONST[0m(1, None) 
44: [33mIS_OP[0m(0, 0) 
45: [33mPOP_JUMP_IF_FALSE[0m(114, 114)  -> inst 57
46: [33mLOAD_GLOBAL[0m(2, torch) 
47: [33mLOAD_ATTR[0m(3, zeros) 
48: [33mLOAD_FAST[0m(6, input_shape) 
49: [33mLOAD_GLOBAL[0m(2, torch) 
50: [33mLOAD_ATTR[0m(4, long) 
51: [33mLOAD_FAST[0m(0, self) 
52: [33mLOAD_ATTR[0m(1, position_ids) 
53: [33mLOAD_ATTR[0m(5, device) 
54: [33mLOAD_CONST[0m(5, ('dtype', 'device')) 
55: [33mCALL_FUNCTION_KW[0m(3, 3) 
56: [33mSTORE_FAST[0m(2, token_type_ids) 
57: [33mLOAD_FAST[0m(5, inputs_embeds) 
58: [33mLOAD_CONST[0m(1, None) 
59: [33mIS_OP[0m(0, 0) 
60: [33mPOP_JUMP_IF_FALSE[0m(132, 132)  -> inst 66
61: [33mLOAD_FAST[0m(0, self) 
62: [33mLOAD_METHOD[0m(6, word_embeddings) 
63: [33mLOAD_FAST[0m(1, input_ids) 
64: [33mCALL_METHOD[0m(1, 1) 
65: [33mSTORE_FAST[0m(5, inputs_embeds) 
66: [33mLOAD_FAST[0m(0, self) 
67: [33mLOAD_ATTR[0m(7, position_embeddings) 
68: [33mLOAD_CONST[0m(1, None) 
69: [33mIS_OP[0m(1, 1) 
70: [33mPOP_JUMP_IF_FALSE[0m(158, 158)  -> inst 79
71: [33mLOAD_FAST[0m(0, self) 
72: [33mLOAD_METHOD[0m(7, position_embeddings) 
73: [33mLOAD_FAST[0m(3, position_ids) 
74: [33mLOAD_METHOD[0m(4, long) 
75: [33mCALL_METHOD[0m(0, 0) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mSTORE_FAST[0m(8, position_embeddings) 
78: [33mJUMP_FORWARD[0m(10, 168)  -> inst 84
79: [33mLOAD_GLOBAL[0m(2, torch) 
80: [33mLOAD_METHOD[0m(8, zeros_like) 
81: [33mLOAD_FAST[0m(5, inputs_embeds) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(8, position_embeddings) 
84: [33mLOAD_FAST[0m(5, inputs_embeds) 
85: [33mSTORE_FAST[0m(9, embeddings) 
86: [33mLOAD_FAST[0m(0, self) 
87: [33mLOAD_ATTR[0m(9, position_biased_input) 
88: [33mPOP_JUMP_IF_FALSE[0m(186, 186)  -> inst 93
89: [33mLOAD_FAST[0m(9, embeddings) 
90: [33mLOAD_FAST[0m(8, position_embeddings) 
91: [33mINPLACE_ADD[0m(None, None) 
92: [33mSTORE_FAST[0m(9, embeddings) 
93: [33mLOAD_FAST[0m(0, self) 
94: [33mLOAD_ATTR[0m(10, config) 
95: [33mLOAD_ATTR[0m(11, type_vocab_size) 
96: [33mLOAD_CONST[0m(0, 0) 
97: [33mCOMPARE_OP[0m(4, >) 
98: [33mPOP_JUMP_IF_FALSE[0m(216, 216)  -> inst 108
99: [33mLOAD_FAST[0m(0, self) 
100: [33mLOAD_METHOD[0m(12, token_type_embeddings) 
101: [33mLOAD_FAST[0m(2, token_type_ids) 
102: [33mCALL_METHOD[0m(1, 1) 
103: [33mSTORE_FAST[0m(10, token_type_embeddings) 
104: [33mLOAD_FAST[0m(9, embeddings) 
105: [33mLOAD_FAST[0m(10, token_type_embeddings) 
106: [33mINPLACE_ADD[0m(None, None) 
107: [33mSTORE_FAST[0m(9, embeddings) 
108: [33mLOAD_FAST[0m(0, self) 
109: [33mLOAD_ATTR[0m(13, embedding_size) 
110: [33mLOAD_FAST[0m(0, self) 
111: [33mLOAD_ATTR[0m(10, config) 
112: [33mLOAD_ATTR[0m(14, hidden_size) 
113: [33mCOMPARE_OP[0m(3, !=) 
114: [33mPOP_JUMP_IF_FALSE[0m(240, 240)  -> inst 120
115: [33mLOAD_FAST[0m(0, self) 
116: [33mLOAD_METHOD[0m(15, embed_proj) 
117: [33mLOAD_FAST[0m(9, embeddings) 
118: [33mCALL_METHOD[0m(1, 1) 
119: [33mSTORE_FAST[0m(9, embeddings) 
120: [33mLOAD_FAST[0m(0, self) 
121: [33mLOAD_METHOD[0m(16, LayerNorm) 
122: [33mLOAD_FAST[0m(9, embeddings) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mSTORE_FAST[0m(9, embeddings) 
125: [33mLOAD_FAST[0m(4, mask) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mIS_OP[0m(1, 1) 
128: [32mEXTENDED_ARG[0m(1, 1) 
129: [33mPOP_JUMP_IF_FALSE[0m(338, 338)  -> inst 169
130: [33mLOAD_FAST[0m(4, mask) 
131: [33mLOAD_METHOD[0m(17, dim) 
132: [33mCALL_METHOD[0m(0, 0) 
133: [33mLOAD_FAST[0m(9, embeddings) 
134: [33mLOAD_METHOD[0m(17, dim) 
135: [33mCALL_METHOD[0m(0, 0) 
136: [33mCOMPARE_OP[0m(3, !=) 
137: [32mEXTENDED_ARG[0m(1, 1) 
138: [33mPOP_JUMP_IF_FALSE[0m(318, 318)  -> inst 159
139: [33mLOAD_FAST[0m(4, mask) 
140: [33mLOAD_METHOD[0m(17, dim) 
141: [33mCALL_METHOD[0m(0, 0) 
142: [33mLOAD_CONST[0m(6, 4) 
143: [33mCOMPARE_OP[0m(2, ==) 
144: [32mEXTENDED_ARG[0m(1, 1) 
145: [33mPOP_JUMP_IF_FALSE[0m(308, 308)  -> inst 154
146: [33mLOAD_FAST[0m(4, mask) 
147: [33mLOAD_METHOD[0m(18, squeeze) 
148: [33mLOAD_CONST[0m(4, 1) 
149: [33mCALL_METHOD[0m(1, 1) 
150: [33mLOAD_METHOD[0m(18, squeeze) 
151: [33mLOAD_CONST[0m(4, 1) 
152: [33mCALL_METHOD[0m(1, 1) 
153: [33mSTORE_FAST[0m(4, mask) 
154: [33mLOAD_FAST[0m(4, mask) 
155: [33mLOAD_METHOD[0m(19, unsqueeze) 
156: [33mLOAD_CONST[0m(2, 2) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mSTORE_FAST[0m(4, mask) 
159: [33mLOAD_FAST[0m(4, mask) 
160: [33mLOAD_METHOD[0m(20, to) 
161: [33mLOAD_FAST[0m(9, embeddings) 
162: [33mLOAD_ATTR[0m(21, dtype) 
163: [33mCALL_METHOD[0m(1, 1) 
164: [33mSTORE_FAST[0m(4, mask) 
165: [33mLOAD_FAST[0m(9, embeddings) 
166: [33mLOAD_FAST[0m(4, mask) 
167: [33mBINARY_MULTIPLY[0m(None, None) 
168: [33mSTORE_FAST[0m(9, embeddings) 
169: [33mLOAD_FAST[0m(0, self) 
170: [33mLOAD_METHOD[0m(22, dropout) 
171: [33mLOAD_FAST[0m(9, embeddings) 
172: [33mCALL_METHOD[0m(1, 1) 
173: [33mSTORE_FAST[0m(9, embeddings) 
174: [33mLOAD_FAST[0m(9, embeddings) 
175: [32mEXTENDED_ARG[0m(1, 1) 
176: [32mJUMP_ABSOLUTE[0m(382, 382)  -> inst 191
177: [32mLOAD_GLOBAL[0m(26, guard_match) 
178: [32mLOAD_CONST[0m(4, 1) 
179: [32mLOAD_CONST[0m(0, 0) 
180: [32mLOAD_GLOBAL[0m(28, locals) 
181: [32mCALL_FUNCTION[0m(0, 0) 
182: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
183: [32mUNPACK_SEQUENCE[0m(2, 2) 
184: [32mSTORE_FAST[0m(12, __case_idx) 
185: [32mSTORE_FAST[0m(11, __graph_fn) 
186: [32mLOAD_GLOBAL[0m(24, enable_trace) 
187: [32mLOAD_CONST[0m(4, 1) 
188: [32mCALL_FUNCTION[0m(1, 1) 
189: [32mPOP_TOP[0m(None, None) 
190: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
191: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:770
tracing opcode LOAD_GLOBAL None pc=0 frame=1(0x663aa30)
push tracker due to record
push tracker 1 frame 0x663aa30 frame_id 1 read_stack False cf_info <class 'NoneType'> all [0, 1]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=1(0x663aa30)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=1(0x663aa30)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 1] frame_id 1
enable_trace
push tracker 1 frame 0x663aa30 frame_id 1 read_stack False cf_info <class 'NoneType'> all [0, 1]
tracing opcode POP_TOP None pc=378 frame=1(0x663aa30)
restart: running injected code (f_lasti=378)
tracing opcode JUMP_ABSOLUTE None pc=380 frame=1(0x663aa30)
restart: running injected code (f_lasti=380)
tracing line /home/drc/frontend/test/test_model_deberta.py:771
tracing opcode LOAD_FAST None pc=12 frame=1(0x663aa30)
load fast: 22897948193392
tracing opcode LOAD_CONST None pc=14 frame=1(0x663aa30)
tracing opcode IS_OP None pc=16 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:772
tracing opcode LOAD_FAST None pc=20 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=22 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=24 frame=1(0x663aa30)
tracing opcode STORE_FAST None pc=26 frame=1(0x663aa30)
tracing opcode JUMP_FORWARD None pc=28 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:776
tracing opcode LOAD_FAST None pc=46 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=48 frame=1(0x663aa30)
tracing opcode BINARY_SUBSCR None pc=50 frame=1(0x663aa30)
tracing opcode STORE_FAST None pc=52 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:778
tracing opcode LOAD_FAST None pc=54 frame=1(0x663aa30)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=56 frame=1(0x663aa30)
tracing opcode IS_OP None pc=58 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:779
tracing opcode LOAD_FAST None pc=62 frame=1(0x663aa30)
load fast: 22897554686784
tracing opcode LOAD_ATTR None pc=64 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=66 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=68 frame=1(0x663aa30)
tracing opcode BUILD_SLICE None pc=70 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=72 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=74 frame=1(0x663aa30)
tracing opcode BUILD_SLICE None pc=76 frame=1(0x663aa30)
tracing opcode BUILD_TUPLE None pc=78 frame=1(0x663aa30)
tracing opcode BINARY_SUBSCR None pc=80 frame=1(0x663aa30)
record function in graph <built-in function getitem>
tracing opcode STORE_FAST None pc=82 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:781
tracing opcode LOAD_FAST None pc=84 frame=1(0x663aa30)
load fast: 22897553973136
tracing opcode LOAD_CONST None pc=86 frame=1(0x663aa30)
tracing opcode IS_OP None pc=88 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:784
tracing opcode LOAD_FAST None pc=114 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=116 frame=1(0x663aa30)
tracing opcode IS_OP None pc=118 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=120 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:785
tracing opcode LOAD_FAST None pc=122 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=124 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=126 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=128 frame=1(0x663aa30)
record function in graph Embedding(50265, 768, padding_idx=0)
tracing opcode STORE_FAST None pc=130 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:787
tracing opcode LOAD_FAST None pc=132 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=134 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=136 frame=1(0x663aa30)
tracing opcode IS_OP None pc=138 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=140 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:790
tracing opcode LOAD_GLOBAL None pc=158 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=160 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=162 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=164 frame=1(0x663aa30)
record function in graph <built-in method zeros_like of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=166 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:792
tracing opcode LOAD_FAST None pc=168 frame=1(0x663aa30)
tracing opcode STORE_FAST None pc=170 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:793
tracing opcode LOAD_FAST None pc=172 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=174 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=176 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:795
tracing opcode LOAD_FAST None pc=186 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=188 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=190 frame=1(0x663aa30)
generate any for DebertaConfig {
  "_name_or_path": "microsoft/deberta-base",
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-07,
  "max_position_embeddings": 512,
  "max_relative_positions": -1,
  "model_type": "deberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "pooler_dropout": 0,
  "pooler_hidden_act": "gelu",
  "pooler_hidden_size": 768,
  "pos_att_type": [
    "c2p",
    "p2c"
  ],
  "position_biased_input": false,
  "relative_attention": true,
  "return_dict": false,
  "transformers_version": "4.34.0",
  "type_vocab_size": 0,
  "vocab_size": 50265
}
 <class 'transformers.models.deberta.configuration_deberta.DebertaConfig'> [locals['self'].config]
tracing opcode LOAD_CONST None pc=192 frame=1(0x663aa30)
tracing opcode COMPARE_OP None pc=194 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=196 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:799
tracing opcode LOAD_FAST None pc=216 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=218 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=220 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=222 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=224 frame=1(0x663aa30)
generate any for DebertaConfig {
  "_name_or_path": "microsoft/deberta-base",
  "attention_probs_dropout_prob": 0.1,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-07,
  "max_position_embeddings": 512,
  "max_relative_positions": -1,
  "model_type": "deberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "pooler_dropout": 0,
  "pooler_hidden_act": "gelu",
  "pooler_hidden_size": 768,
  "pos_att_type": [
    "c2p",
    "p2c"
  ],
  "position_biased_input": false,
  "relative_attention": true,
  "return_dict": false,
  "transformers_version": "4.34.0",
  "type_vocab_size": 0,
  "vocab_size": 50265
}
 <class 'transformers.models.deberta.configuration_deberta.DebertaConfig'> [locals['self'].config]
tracing opcode COMPARE_OP None pc=226 frame=1(0x663aa30)
tracing opcode POP_JUMP_IF_FALSE None pc=228 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:802
tracing opcode LOAD_FAST None pc=240 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=242 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=244 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=246 frame=1(0x663aa30)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d340834610)
push tracker due to record
push tracker 2 frame 0x14d340834610 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 1, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d340834610)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d340834610)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 1, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d340834610 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 1, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d340834610)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d340834610)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d340834610)
load fast: 22897553399216
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d340834610)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d340834610)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d340834610)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d340834610)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d340834610)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d340834610)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d340834610)
record function in graph <built-in method mean of Tensor object at 0x14d340895db0>
func self id: 22897553399216
tracing opcode STORE_FAST None pc=36 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d340834610)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d340834610)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d340834610)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d340834610)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d340834610)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d340834610)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d340834610)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d340834610)
record function in graph <built-in method mean of Tensor object at 0x14d3407ffb80>
func self id: 22897552784256
tracing opcode STORE_FAST None pc=60 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d340834610)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d340834610)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d340834610)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d340834610)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d340834610)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d340834610)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d340834610)
load fast: 22897554686880
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d340834610)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d340834610)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d340834610)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d340834610)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d340834610)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d340834610)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d340834610)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d340834610)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d340834610)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d340834610)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d340834610)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d340834610)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d340834610)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d340834610)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d340834610)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d340834610)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d340834610)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d340834610)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_7 : [#users=4] = placeholder[target=tensor_7]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_7,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_7, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_7, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_7, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d340895db0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d340834610)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 1, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=248 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:804
tracing opcode LOAD_FAST None pc=250 frame=1(0x663aa30)
load fast: 22897696715536
tracing opcode LOAD_CONST None pc=252 frame=1(0x663aa30)
tracing opcode IS_OP None pc=254 frame=1(0x663aa30)
tracing opcode EXTENDED_ARG None pc=256 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:805
tracing opcode LOAD_FAST None pc=260 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=262 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=264 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=266 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=268 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=270 frame=1(0x663aa30)
tracing opcode COMPARE_OP None pc=272 frame=1(0x663aa30)
tracing opcode EXTENDED_ARG None pc=274 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:806
tracing opcode LOAD_FAST None pc=278 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=280 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=282 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=284 frame=1(0x663aa30)
tracing opcode COMPARE_OP None pc=286 frame=1(0x663aa30)
tracing opcode EXTENDED_ARG None pc=288 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:808
tracing opcode LOAD_FAST None pc=308 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=310 frame=1(0x663aa30)
tracing opcode LOAD_CONST None pc=312 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=314 frame=1(0x663aa30)
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=316 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:809
tracing opcode LOAD_FAST None pc=318 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=320 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=322 frame=1(0x663aa30)
tracing opcode LOAD_ATTR None pc=324 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=326 frame=1(0x663aa30)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=328 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:811
tracing opcode LOAD_FAST None pc=330 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=332 frame=1(0x663aa30)
tracing opcode BINARY_MULTIPLY None pc=334 frame=1(0x663aa30)
record function in graph <built-in function mul>
tracing opcode STORE_FAST None pc=336 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:813
tracing opcode LOAD_FAST None pc=338 frame=1(0x663aa30)
tracing opcode LOAD_METHOD None pc=340 frame=1(0x663aa30)
tracing opcode LOAD_FAST None pc=342 frame=1(0x663aa30)
tracing opcode CALL_METHOD None pc=344 frame=1(0x663aa30)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d34086edd0)
push tracker due to record
push tracker 3 frame 0x14d34086edd0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 1, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d34086edd0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d34086edd0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 1, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d34086edd0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 1, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d34086edd0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d34086edd0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d34086edd0)
load fast: 22897554686928
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d34086edd0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d34086edd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d34086edd0)
load fast: 22897552743216
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d34086edd0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_9 : [#users=0] = placeholder[target=tensor_9]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]), modified_attrs={}, prev=None) 22897552942032 22897552743216
obj: tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]) 22897552743216
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]), modified_attrs={}, prev=None) 22897552762672
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d34086edd0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 1, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=346 frame=1(0x663aa30)
tracing line /home/drc/frontend/test/test_model_deberta.py:814
tracing opcode LOAD_FAST None pc=348 frame=1(0x663aa30)
tracing opcode EXTENDED_ARG None pc=350 frame=1(0x663aa30)
restart: running injected code (f_lasti=350)
commiting 1 0 169 [32mRETURN_VALUE[0m(None, None)  350
callee is full graph, merge to caller
to merge graph graph():
    %tensor_4 : [#users=1] = placeholder[target=tensor_4]
    %tensor_5 : [#users=1] = placeholder[target=tensor_5]
    %getitem : [#users=0] = call_function[target=operator.getitem](args = (%tensor_5, [slice(None, None, None), slice(None, 256, None)]), kwargs = {})
    %tensor_6 : [#users=0] = placeholder[target=tensor_6]
    %word_embeddings : [#users=5] = call_module[target=word_embeddings](args = (%tensor_4,), kwargs = {})
    %zeros_like : [#users=0] = call_function[target=torch.zeros_like](args = (%word_embeddings,), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%word_embeddings,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%word_embeddings, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%word_embeddings, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%word_embeddings, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
    %tensor_8 : [#users=1] = placeholder[target=tensor_8]
    %unsqueeze : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_8, 2), kwargs = {})
    %to_1 : [#users=1] = call_function[target=torch.Tensor.to](args = (%unsqueeze, torch.float32), kwargs = {})
    %mul_1 : [#users=0] = call_function[target=operator.mul](args = (%add_1, %to_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=382 frame=1(0x663aa30)
restart: running injected code (f_lasti=382)
before pop_tracker [0, 1] frame_id 1
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=228 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:983
tracing opcode LOAD_DEREF None pc=230 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=232 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:984
tracing opcode LOAD_FAST None pc=234 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:985
tracing opcode LOAD_FAST None pc=236 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:986
tracing opcode LOAD_CONST None pc=238 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:987
tracing opcode LOAD_FAST None pc=240 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:988
tracing opcode LOAD_FAST None pc=242 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:983
tracing opcode LOAD_CONST None pc=244 frame=0(0x6614110)
tracing opcode CALL_FUNCTION_KW None pc=246 frame=0(0x6614110)
run into user defined function DebertaEncoder(
  (layer): ModuleList(
    (0-11): 12 x DebertaLayer(
      (attention): DebertaAttention(
        (self): DisentangledSelfAttention(
          (in_proj): Linear(in_features=768, out_features=2304, bias=False)
          (pos_dropout): StableDropout()
          (pos_proj): Linear(in_features=768, out_features=768, bias=False)
          (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
          (dropout): StableDropout()
        )
        (output): DebertaSelfOutput(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (LayerNorm): DebertaLayerNorm()
          (dropout): StableDropout()
        )
      )
      (intermediate): DebertaIntermediate(
        (dense): Linear(in_features=768, out_features=3072, bias=True)
        (intermediate_act_fn): GELUActivation()
      )
      (output): DebertaOutput(
        (dense): Linear(in_features=3072, out_features=768, bias=True)
        (LayerNorm): DebertaLayerNorm()
        (dropout): StableDropout()
      )
    )
  )
  (rel_embeddings): Embedding(1024, 768)
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 4 0x6643af0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, get_attention_mask) 
2: [33mLOAD_FAST[0m(2, attention_mask) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(2, attention_mask) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, get_rel_pos) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(5, query_states) 
9: [33mLOAD_FAST[0m(6, relative_pos) 
10: [33mCALL_METHOD[0m(3, 3) 
11: [33mSTORE_FAST[0m(6, relative_pos) 
12: [33mLOAD_FAST[0m(3, output_hidden_states) 
13: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
14: [33mLOAD_CONST[0m(1, ()) 
15: [33mJUMP_FORWARD[0m(2, 34)  -> inst 17
16: [33mLOAD_CONST[0m(0, None) 
17: [33mSTORE_FAST[0m(8, all_hidden_states) 
18: [33mLOAD_DEREF[0m(0, output_attentions) 
19: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
20: [33mLOAD_CONST[0m(1, ()) 
21: [33mJUMP_FORWARD[0m(2, 46)  -> inst 23
22: [33mLOAD_CONST[0m(0, None) 
23: [33mSTORE_FAST[0m(9, all_attentions) 
24: [33mLOAD_GLOBAL[0m(2, isinstance) 
25: [33mLOAD_FAST[0m(1, hidden_states) 
26: [33mLOAD_GLOBAL[0m(3, Sequence) 
27: [33mCALL_FUNCTION[0m(2, 2) 
28: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
29: [33mLOAD_FAST[0m(1, hidden_states) 
30: [33mLOAD_CONST[0m(2, 0) 
31: [33mBINARY_SUBSCR[0m(None, None) 
32: [33mSTORE_FAST[0m(10, next_kv) 
33: [33mJUMP_FORWARD[0m(4, 72)  -> inst 36
34: [33mLOAD_FAST[0m(1, hidden_states) 
35: [33mSTORE_FAST[0m(10, next_kv) 
36: [33mLOAD_FAST[0m(0, self) 
37: [33mLOAD_METHOD[0m(4, get_rel_embedding) 
38: [33mCALL_METHOD[0m(0, 0) 
39: [33mSTORE_FAST[0m(11, rel_embeddings) 
40: [33mLOAD_GLOBAL[0m(5, enumerate) 
41: [33mLOAD_FAST[0m(0, self) 
42: [33mLOAD_ATTR[0m(6, layer) 
43: [33mCALL_FUNCTION[0m(1, 1) 
44: [33mGET_ITER[0m(None, None) 
45: [33mFOR_ITER[0m(188, 280)  -> inst 140
46: [33mUNPACK_SEQUENCE[0m(2, 2) 
47: [33mSTORE_FAST[0m(12, i) 
48: [33mSTORE_FAST[0m(13, layer_module) 
49: [33mLOAD_FAST[0m(3, output_hidden_states) 
50: [33mPOP_JUMP_IF_FALSE[0m(112, 112)  -> inst 56
51: [33mLOAD_FAST[0m(8, all_hidden_states) 
52: [33mLOAD_FAST[0m(1, hidden_states) 
53: [33mBUILD_TUPLE[0m(1, 1) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(8, all_hidden_states) 
56: [33mLOAD_FAST[0m(0, self) 
57: [33mLOAD_ATTR[0m(7, gradient_checkpointing) 
58: [33mPOP_JUMP_IF_FALSE[0m(166, 166)  -> inst 83
59: [33mLOAD_FAST[0m(0, self) 
60: [33mLOAD_ATTR[0m(8, training) 
61: [33mPOP_JUMP_IF_FALSE[0m(166, 166)  -> inst 83
62: [33mLOAD_CLOSURE[0m(0, output_attentions) 
63: [33mBUILD_TUPLE[0m(1, 1) 
64: [33mLOAD_CONST[0m(3, <code object create_custom_forward at 0x14d3f554e240, file "/home/drc/frontend/test/test_model_deberta.py", line 460>) 
65: [33mLOAD_CONST[0m(4, DebertaEncoder.forward.<locals>.create_custom_forward) 
66: [33mMAKE_FUNCTION[0m(8, 8) 
67: [33mSTORE_FAST[0m(14, create_custom_forward) 
68: [33mLOAD_GLOBAL[0m(9, torch) 
69: [33mLOAD_ATTR[0m(10, utils) 
70: [33mLOAD_ATTR[0m(11, checkpoint) 
71: [33mLOAD_METHOD[0m(11, checkpoint) 
72: [33mLOAD_FAST[0m(14, create_custom_forward) 
73: [33mLOAD_FAST[0m(13, layer_module) 
74: [33mCALL_FUNCTION[0m(1, 1) 
75: [33mLOAD_FAST[0m(10, next_kv) 
76: [33mLOAD_FAST[0m(2, attention_mask) 
77: [33mLOAD_FAST[0m(5, query_states) 
78: [33mLOAD_FAST[0m(6, relative_pos) 
79: [33mLOAD_FAST[0m(11, rel_embeddings) 
80: [33mCALL_METHOD[0m(6, 6) 
81: [33mSTORE_FAST[0m(1, hidden_states) 
82: [33mJUMP_FORWARD[0m(20, 186)  -> inst 93
83: [33mLOAD_FAST[0m(13, layer_module) 
84: [33mLOAD_FAST[0m(10, next_kv) 
85: [33mLOAD_FAST[0m(2, attention_mask) 
86: [33mLOAD_FAST[0m(5, query_states) 
87: [33mLOAD_FAST[0m(6, relative_pos) 
88: [33mLOAD_FAST[0m(11, rel_embeddings) 
89: [33mLOAD_DEREF[0m(0, output_attentions) 
90: [33mLOAD_CONST[0m(5, ('query_states', 'relative_pos', 'rel_embeddings', 'output_attentions')) 
91: [33mCALL_FUNCTION_KW[0m(6, 6) 
92: [33mSTORE_FAST[0m(1, hidden_states) 
93: [33mLOAD_DEREF[0m(0, output_attentions) 
94: [33mPOP_JUMP_IF_FALSE[0m(198, 198)  -> inst 99
95: [33mLOAD_FAST[0m(1, hidden_states) 
96: [33mUNPACK_SEQUENCE[0m(2, 2) 
97: [33mSTORE_FAST[0m(1, hidden_states) 
98: [33mSTORE_FAST[0m(15, att_m) 
99: [33mLOAD_FAST[0m(5, query_states) 
100: [33mLOAD_CONST[0m(0, None) 
101: [33mIS_OP[0m(1, 1) 
102: [33mEXTENDED_ARG[0m(1, 1) 
103: [33mPOP_JUMP_IF_FALSE[0m(260, 260)  -> inst 130
104: [33mLOAD_FAST[0m(1, hidden_states) 
105: [33mSTORE_FAST[0m(5, query_states) 
106: [33mLOAD_GLOBAL[0m(2, isinstance) 
107: [33mLOAD_FAST[0m(1, hidden_states) 
108: [33mLOAD_GLOBAL[0m(3, Sequence) 
109: [33mCALL_FUNCTION[0m(2, 2) 
110: [33mEXTENDED_ARG[0m(1, 1) 
111: [33mPOP_JUMP_IF_FALSE[0m(264, 264)  -> inst 132
112: [33mLOAD_FAST[0m(12, i) 
113: [33mLOAD_CONST[0m(6, 1) 
114: [33mBINARY_ADD[0m(None, None) 
115: [33mLOAD_GLOBAL[0m(12, len) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_ATTR[0m(6, layer) 
118: [33mCALL_FUNCTION[0m(1, 1) 
119: [33mCOMPARE_OP[0m(0, <) 
120: [33mPOP_JUMP_IF_FALSE[0m(254, 254)  -> inst 127
121: [33mLOAD_FAST[0m(1, hidden_states) 
122: [33mLOAD_FAST[0m(12, i) 
123: [33mLOAD_CONST[0m(6, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mBINARY_SUBSCR[0m(None, None) 
126: [33mJUMP_FORWARD[0m(2, 256)  -> inst 128
127: [33mLOAD_CONST[0m(0, None) 
128: [33mSTORE_FAST[0m(10, next_kv) 
129: [33mJUMP_FORWARD[0m(4, 264)  -> inst 132
130: [33mLOAD_FAST[0m(1, hidden_states) 
131: [33mSTORE_FAST[0m(10, next_kv) 
132: [33mLOAD_DEREF[0m(0, output_attentions) 
133: [33mPOP_JUMP_IF_FALSE[0m(90, 90)  -> inst 45
134: [33mLOAD_FAST[0m(9, all_attentions) 
135: [33mLOAD_FAST[0m(15, att_m) 
136: [33mBUILD_TUPLE[0m(1, 1) 
137: [33mBINARY_ADD[0m(None, None) 
138: [33mSTORE_FAST[0m(9, all_attentions) 
139: [33mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
140: [33mLOAD_FAST[0m(3, output_hidden_states) 
141: [33mEXTENDED_ARG[0m(1, 1) 
142: [33mPOP_JUMP_IF_FALSE[0m(296, 296)  -> inst 148
143: [33mLOAD_FAST[0m(8, all_hidden_states) 
144: [33mLOAD_FAST[0m(1, hidden_states) 
145: [33mBUILD_TUPLE[0m(1, 1) 
146: [33mBINARY_ADD[0m(None, None) 
147: [33mSTORE_FAST[0m(8, all_hidden_states) 
148: [33mLOAD_FAST[0m(7, return_dict) 
149: [33mEXTENDED_ARG[0m(1, 1) 
150: [33mPOP_JUMP_IF_TRUE[0m(326, 326)  -> inst 163
151: [33mLOAD_GLOBAL[0m(13, tuple) 
152: [33mLOAD_CONST[0m(7, <code object <genexpr> at 0x14d3f554e2f0, file "/home/drc/frontend/test/test_model_deberta.py", line 501>) 
153: [33mLOAD_CONST[0m(8, DebertaEncoder.forward.<locals>.<genexpr>) 
154: [33mMAKE_FUNCTION[0m(0, 0) 
155: [33mLOAD_FAST[0m(1, hidden_states) 
156: [33mLOAD_FAST[0m(8, all_hidden_states) 
157: [33mLOAD_FAST[0m(9, all_attentions) 
158: [33mBUILD_TUPLE[0m(3, 3) 
159: [33mGET_ITER[0m(None, None) 
160: [33mCALL_FUNCTION[0m(1, 1) 
161: [33mCALL_FUNCTION[0m(1, 1) 
162: [33mRETURN_VALUE[0m(None, None) 
163: [33mLOAD_GLOBAL[0m(14, BaseModelOutput) 
164: [33mLOAD_FAST[0m(1, hidden_states) 
165: [33mLOAD_FAST[0m(8, all_hidden_states) 
166: [33mLOAD_FAST[0m(9, all_attentions) 
167: [33mLOAD_CONST[0m(9, ('last_hidden_state', 'hidden_states', 'attentions')) 
168: [33mCALL_FUNCTION_KW[0m(3, 3) 
169: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'code'>, <code object <genexpr> at 0x14d3f554e2f0, file "/home/drc/frontend/test/test_model_deberta.py", line 501>), (<class 'str'>, 'DebertaEncoder.forward.<locals>.<genexpr>'), (<class 'tuple'>, ('last_hidden_state', 'hidden_states', 'attentions')), (<class 'int'>, 0), (<class 'code'>, <code object create_custom_forward at 0x14d3f554e240, file "/home/drc/frontend/test/test_model_deberta.py", line 460>), (<class 'NoneType'>, None), (<class 'str'>, 'DebertaEncoder.forward.<locals>.create_custom_forward'), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings', 'output_attentions')), (<class 'int'>, 1), (<class 'tuple'>, ()), (<class 'int'>, 4)]
guarded code
0: [32mLOAD_GLOBAL[0m(19, disable_trace) 
1: [32mLOAD_CONST[0m(10, 4) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(1, 1) 
5: [32mJUMP_ABSOLUTE[0m(358, 358)  -> inst 179
6: [33mLOAD_FAST[0m(0, self) 
7: [33mLOAD_METHOD[0m(0, get_attention_mask) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mSTORE_FAST[0m(2, attention_mask) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(1, get_rel_pos) 
13: [33mLOAD_FAST[0m(1, hidden_states) 
14: [33mLOAD_FAST[0m(5, query_states) 
15: [33mLOAD_FAST[0m(6, relative_pos) 
16: [33mCALL_METHOD[0m(3, 3) 
17: [33mSTORE_FAST[0m(6, relative_pos) 
18: [33mLOAD_FAST[0m(3, output_hidden_states) 
19: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
20: [33mLOAD_CONST[0m(9, ()) 
21: [33mJUMP_FORWARD[0m(2, 46)  -> inst 23
22: [33mLOAD_CONST[0m(5, None) 
23: [33mSTORE_FAST[0m(8, all_hidden_states) 
24: [33mLOAD_DEREF[0m(0, output_attentions) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_CONST[0m(9, ()) 
27: [33mJUMP_FORWARD[0m(2, 58)  -> inst 29
28: [33mLOAD_CONST[0m(5, None) 
29: [33mSTORE_FAST[0m(9, all_attentions) 
30: [33mLOAD_GLOBAL[0m(2, isinstance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_GLOBAL[0m(3, Sequence) 
33: [33mCALL_FUNCTION[0m(2, 2) 
34: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
35: [33mLOAD_FAST[0m(1, hidden_states) 
36: [33mLOAD_CONST[0m(3, 0) 
37: [33mBINARY_SUBSCR[0m(None, None) 
38: [33mSTORE_FAST[0m(10, next_kv) 
39: [33mJUMP_FORWARD[0m(4, 84)  -> inst 42
40: [33mLOAD_FAST[0m(1, hidden_states) 
41: [33mSTORE_FAST[0m(10, next_kv) 
42: [33mLOAD_FAST[0m(0, self) 
43: [33mLOAD_METHOD[0m(4, get_rel_embedding) 
44: [33mCALL_METHOD[0m(0, 0) 
45: [33mSTORE_FAST[0m(11, rel_embeddings) 
46: [33mLOAD_GLOBAL[0m(5, enumerate) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(6, layer) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mGET_ITER[0m(None, None) 
51: [33mFOR_ITER[0m(190, 294)  -> inst 147
52: [33mUNPACK_SEQUENCE[0m(2, 2) 
53: [33mSTORE_FAST[0m(12, i) 
54: [33mSTORE_FAST[0m(13, layer_module) 
55: [33mLOAD_FAST[0m(3, output_hidden_states) 
56: [33mPOP_JUMP_IF_FALSE[0m(124, 124)  -> inst 62
57: [33mLOAD_FAST[0m(8, all_hidden_states) 
58: [33mLOAD_FAST[0m(1, hidden_states) 
59: [33mBUILD_TUPLE[0m(1, 1) 
60: [33mBINARY_ADD[0m(None, None) 
61: [33mSTORE_FAST[0m(8, all_hidden_states) 
62: [33mLOAD_FAST[0m(0, self) 
63: [33mLOAD_ATTR[0m(7, gradient_checkpointing) 
64: [33mPOP_JUMP_IF_FALSE[0m(178, 178)  -> inst 89
65: [33mLOAD_FAST[0m(0, self) 
66: [33mLOAD_ATTR[0m(8, training) 
67: [33mPOP_JUMP_IF_FALSE[0m(178, 178)  -> inst 89
68: [33mLOAD_CLOSURE[0m(0, output_attentions) 
69: [33mBUILD_TUPLE[0m(1, 1) 
70: [33mLOAD_CONST[0m(4, <code object create_custom_forward at 0x14d3f554e240, file "/home/drc/frontend/test/test_model_deberta.py", line 460>) 
71: [33mLOAD_CONST[0m(6, DebertaEncoder.forward.<locals>.create_custom_forward) 
72: [33mMAKE_FUNCTION[0m(8, 8) 
73: [33mSTORE_FAST[0m(14, create_custom_forward) 
74: [33mLOAD_GLOBAL[0m(9, torch) 
75: [33mLOAD_ATTR[0m(10, utils) 
76: [33mLOAD_ATTR[0m(11, checkpoint) 
77: [33mLOAD_METHOD[0m(11, checkpoint) 
78: [33mLOAD_FAST[0m(14, create_custom_forward) 
79: [33mLOAD_FAST[0m(13, layer_module) 
80: [33mCALL_FUNCTION[0m(1, 1) 
81: [33mLOAD_FAST[0m(10, next_kv) 
82: [33mLOAD_FAST[0m(2, attention_mask) 
83: [33mLOAD_FAST[0m(5, query_states) 
84: [33mLOAD_FAST[0m(6, relative_pos) 
85: [33mLOAD_FAST[0m(11, rel_embeddings) 
86: [33mCALL_METHOD[0m(6, 6) 
87: [33mSTORE_FAST[0m(1, hidden_states) 
88: [33mJUMP_FORWARD[0m(20, 198)  -> inst 99
89: [33mLOAD_FAST[0m(13, layer_module) 
90: [33mLOAD_FAST[0m(10, next_kv) 
91: [33mLOAD_FAST[0m(2, attention_mask) 
92: [33mLOAD_FAST[0m(5, query_states) 
93: [33mLOAD_FAST[0m(6, relative_pos) 
94: [33mLOAD_FAST[0m(11, rel_embeddings) 
95: [33mLOAD_DEREF[0m(0, output_attentions) 
96: [33mLOAD_CONST[0m(7, ('query_states', 'relative_pos', 'rel_embeddings', 'output_attentions')) 
97: [33mCALL_FUNCTION_KW[0m(6, 6) 
98: [33mSTORE_FAST[0m(1, hidden_states) 
99: [33mLOAD_DEREF[0m(0, output_attentions) 
100: [33mPOP_JUMP_IF_FALSE[0m(210, 210)  -> inst 105
101: [33mLOAD_FAST[0m(1, hidden_states) 
102: [33mUNPACK_SEQUENCE[0m(2, 2) 
103: [33mSTORE_FAST[0m(1, hidden_states) 
104: [33mSTORE_FAST[0m(15, att_m) 
105: [33mLOAD_FAST[0m(5, query_states) 
106: [33mLOAD_CONST[0m(5, None) 
107: [33mIS_OP[0m(1, 1) 
108: [32mEXTENDED_ARG[0m(1, 1) 
109: [33mPOP_JUMP_IF_FALSE[0m(274, 274)  -> inst 137
110: [33mLOAD_FAST[0m(1, hidden_states) 
111: [33mSTORE_FAST[0m(5, query_states) 
112: [33mLOAD_GLOBAL[0m(2, isinstance) 
113: [33mLOAD_FAST[0m(1, hidden_states) 
114: [33mLOAD_GLOBAL[0m(3, Sequence) 
115: [33mCALL_FUNCTION[0m(2, 2) 
116: [32mEXTENDED_ARG[0m(1, 1) 
117: [33mPOP_JUMP_IF_FALSE[0m(278, 278)  -> inst 139
118: [33mLOAD_FAST[0m(12, i) 
119: [33mLOAD_CONST[0m(8, 1) 
120: [33mBINARY_ADD[0m(None, None) 
121: [33mLOAD_GLOBAL[0m(12, len) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_ATTR[0m(6, layer) 
124: [33mCALL_FUNCTION[0m(1, 1) 
125: [33mCOMPARE_OP[0m(0, <) 
126: [32mEXTENDED_ARG[0m(1, 1) 
127: [33mPOP_JUMP_IF_FALSE[0m(268, 268)  -> inst 134
128: [33mLOAD_FAST[0m(1, hidden_states) 
129: [33mLOAD_FAST[0m(12, i) 
130: [33mLOAD_CONST[0m(8, 1) 
131: [33mBINARY_ADD[0m(None, None) 
132: [33mBINARY_SUBSCR[0m(None, None) 
133: [33mJUMP_FORWARD[0m(2, 270)  -> inst 135
134: [33mLOAD_CONST[0m(5, None) 
135: [33mSTORE_FAST[0m(10, next_kv) 
136: [33mJUMP_FORWARD[0m(4, 278)  -> inst 139
137: [33mLOAD_FAST[0m(1, hidden_states) 
138: [33mSTORE_FAST[0m(10, next_kv) 
139: [33mLOAD_DEREF[0m(0, output_attentions) 
140: [33mPOP_JUMP_IF_FALSE[0m(102, 102)  -> inst 51
141: [33mLOAD_FAST[0m(9, all_attentions) 
142: [33mLOAD_FAST[0m(15, att_m) 
143: [33mBUILD_TUPLE[0m(1, 1) 
144: [33mBINARY_ADD[0m(None, None) 
145: [33mSTORE_FAST[0m(9, all_attentions) 
146: [33mJUMP_ABSOLUTE[0m(102, 102)  -> inst 51
147: [33mLOAD_FAST[0m(3, output_hidden_states) 
148: [32mEXTENDED_ARG[0m(1, 1) 
149: [33mPOP_JUMP_IF_FALSE[0m(310, 310)  -> inst 155
150: [33mLOAD_FAST[0m(8, all_hidden_states) 
151: [33mLOAD_FAST[0m(1, hidden_states) 
152: [33mBUILD_TUPLE[0m(1, 1) 
153: [33mBINARY_ADD[0m(None, None) 
154: [33mSTORE_FAST[0m(8, all_hidden_states) 
155: [33mLOAD_FAST[0m(7, return_dict) 
156: [32mEXTENDED_ARG[0m(1, 1) 
157: [33mPOP_JUMP_IF_TRUE[0m(342, 342)  -> inst 171
158: [33mLOAD_GLOBAL[0m(13, tuple) 
159: [33mLOAD_CONST[0m(0, <code object <genexpr> at 0x14d3f554e2f0, file "/home/drc/frontend/test/test_model_deberta.py", line 501>) 
160: [33mLOAD_CONST[0m(1, DebertaEncoder.forward.<locals>.<genexpr>) 
161: [33mMAKE_FUNCTION[0m(0, 0) 
162: [33mLOAD_FAST[0m(1, hidden_states) 
163: [33mLOAD_FAST[0m(8, all_hidden_states) 
164: [33mLOAD_FAST[0m(9, all_attentions) 
165: [33mBUILD_TUPLE[0m(3, 3) 
166: [33mGET_ITER[0m(None, None) 
167: [33mCALL_FUNCTION[0m(1, 1) 
168: [33mCALL_FUNCTION[0m(1, 1) 
169: [32mEXTENDED_ARG[0m(1, 1) 
170: [32mJUMP_ABSOLUTE[0m(386, 386)  -> inst 193
171: [33mLOAD_GLOBAL[0m(14, BaseModelOutput) 
172: [33mLOAD_FAST[0m(1, hidden_states) 
173: [33mLOAD_FAST[0m(8, all_hidden_states) 
174: [33mLOAD_FAST[0m(9, all_attentions) 
175: [33mLOAD_CONST[0m(2, ('last_hidden_state', 'hidden_states', 'attentions')) 
176: [33mCALL_FUNCTION_KW[0m(3, 3) 
177: [32mEXTENDED_ARG[0m(1, 1) 
178: [32mJUMP_ABSOLUTE[0m(386, 386)  -> inst 193
179: [32mLOAD_GLOBAL[0m(18, guard_match) 
180: [32mLOAD_CONST[0m(10, 4) 
181: [32mLOAD_CONST[0m(3, 0) 
182: [32mLOAD_GLOBAL[0m(20, locals) 
183: [32mCALL_FUNCTION[0m(0, 0) 
184: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
185: [32mUNPACK_SEQUENCE[0m(2, 2) 
186: [32mSTORE_FAST[0m(17, __case_idx) 
187: [32mSTORE_FAST[0m(16, __graph_fn) 
188: [32mLOAD_GLOBAL[0m(16, enable_trace) 
189: [32mLOAD_CONST[0m(10, 4) 
190: [32mCALL_FUNCTION[0m(1, 1) 
191: [32mPOP_TOP[0m(None, None) 
192: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
193: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:433
tracing opcode LOAD_GLOBAL None pc=0 frame=4(0x6aceb20)
push tracker due to record
push tracker 4 frame 0x6aceb20 frame_id 4 read_stack False cf_info <class 'NoneType'> all [0, 4]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=4(0x6aceb20)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=4(0x6aceb20)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4] frame_id 4
enable_trace
push tracker 4 frame 0x6aceb20 frame_id 4 read_stack False cf_info <class 'NoneType'> all [0, 4]
tracing opcode POP_TOP None pc=382 frame=4(0x6aceb20)
restart: running injected code (f_lasti=382)
tracing opcode JUMP_ABSOLUTE None pc=384 frame=4(0x6aceb20)
restart: running injected code (f_lasti=384)
tracing line /home/drc/frontend/test/test_model_deberta.py:443
tracing opcode LOAD_FAST None pc=12 frame=4(0x6aceb20)
load fast: 22897554686976
tracing opcode LOAD_METHOD None pc=14 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=16 frame=4(0x6aceb20)
load fast: 22897696715536
tracing opcode CALL_METHOD None pc=18 frame=4(0x6aceb20)
run into user defined function <bound method DebertaEncoder.get_attention_mask of DebertaEncoder(
  (layer): ModuleList(
    (0-11): 12 x DebertaLayer(
      (attention): DebertaAttention(
        (self): DisentangledSelfAttention(
          (in_proj): Linear(in_features=768, out_features=2304, bias=False)
          (pos_dropout): StableDropout()
          (pos_proj): Linear(in_features=768, out_features=768, bias=False)
          (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
          (dropout): StableDropout()
        )
        (output): DebertaSelfOutput(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (LayerNorm): DebertaLayerNorm()
          (dropout): StableDropout()
        )
      )
      (intermediate): DebertaIntermediate(
        (dense): Linear(in_features=768, out_features=3072, bias=True)
        (intermediate_act_fn): GELUActivation()
      )
      (output): DebertaOutput(
        (dense): Linear(in_features=3072, out_features=768, bias=True)
        (LayerNorm): DebertaLayerNorm()
        (dropout): StableDropout()
      )
    )
  )
  (rel_embeddings): Embedding(1024, 768)
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 5 0x14d34081d240 get_attention_mask
0: [33mLOAD_FAST[0m(1, attention_mask) 
1: [33mLOAD_METHOD[0m(0, dim) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(1, 2) 
4: [33mCOMPARE_OP[0m(1, <=) 
5: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
6: [33mLOAD_FAST[0m(1, attention_mask) 
7: [33mLOAD_METHOD[0m(1, unsqueeze) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_METHOD[0m(1, unsqueeze) 
11: [33mLOAD_CONST[0m(1, 2) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mSTORE_FAST[0m(2, extended_attention_mask) 
14: [33mLOAD_FAST[0m(2, extended_attention_mask) 
15: [33mLOAD_FAST[0m(2, extended_attention_mask) 
16: [33mLOAD_METHOD[0m(2, squeeze) 
17: [33mLOAD_CONST[0m(3, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_METHOD[0m(1, unsqueeze) 
20: [33mLOAD_CONST[0m(4, -1) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mBINARY_MULTIPLY[0m(None, None) 
23: [33mSTORE_FAST[0m(1, attention_mask) 
24: [33mLOAD_FAST[0m(1, attention_mask) 
25: [33mLOAD_METHOD[0m(3, byte) 
26: [33mCALL_METHOD[0m(0, 0) 
27: [33mSTORE_FAST[0m(1, attention_mask) 
28: [33mJUMP_FORWARD[0m(22, 80)  -> inst 40
29: [33mLOAD_FAST[0m(1, attention_mask) 
30: [33mLOAD_METHOD[0m(0, dim) 
31: [33mCALL_METHOD[0m(0, 0) 
32: [33mLOAD_CONST[0m(5, 3) 
33: [33mCOMPARE_OP[0m(2, ==) 
34: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
35: [33mLOAD_FAST[0m(1, attention_mask) 
36: [33mLOAD_METHOD[0m(1, unsqueeze) 
37: [33mLOAD_CONST[0m(2, 1) 
38: [33mCALL_METHOD[0m(1, 1) 
39: [33mSTORE_FAST[0m(1, attention_mask) 
40: [33mLOAD_FAST[0m(1, attention_mask) 
41: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 5), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 5) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(94, 94)  -> inst 47
5: [33mLOAD_FAST[0m(1, attention_mask) 
6: [33mLOAD_METHOD[0m(0, dim) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, 2) 
9: [33mCOMPARE_OP[0m(1, <=) 
10: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
11: [33mLOAD_FAST[0m(1, attention_mask) 
12: [33mLOAD_METHOD[0m(1, unsqueeze) 
13: [33mLOAD_CONST[0m(5, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_METHOD[0m(1, unsqueeze) 
16: [33mLOAD_CONST[0m(2, 2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mSTORE_FAST[0m(2, extended_attention_mask) 
19: [33mLOAD_FAST[0m(2, extended_attention_mask) 
20: [33mLOAD_FAST[0m(2, extended_attention_mask) 
21: [33mLOAD_METHOD[0m(2, squeeze) 
22: [33mLOAD_CONST[0m(3, -2) 
23: [33mCALL_METHOD[0m(1, 1) 
24: [33mLOAD_METHOD[0m(1, unsqueeze) 
25: [33mLOAD_CONST[0m(4, -1) 
26: [33mCALL_METHOD[0m(1, 1) 
27: [33mBINARY_MULTIPLY[0m(None, None) 
28: [33mSTORE_FAST[0m(1, attention_mask) 
29: [33mLOAD_FAST[0m(1, attention_mask) 
30: [33mLOAD_METHOD[0m(3, byte) 
31: [33mCALL_METHOD[0m(0, 0) 
32: [33mSTORE_FAST[0m(1, attention_mask) 
33: [33mJUMP_FORWARD[0m(22, 90)  -> inst 45
34: [33mLOAD_FAST[0m(1, attention_mask) 
35: [33mLOAD_METHOD[0m(0, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(0, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(90, 90)  -> inst 45
40: [33mLOAD_FAST[0m(1, attention_mask) 
41: [33mLOAD_METHOD[0m(1, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(1, attention_mask) 
45: [33mLOAD_FAST[0m(1, attention_mask) 
46: [32mJUMP_ABSOLUTE[0m(122, 122)  -> inst 61
47: [32mLOAD_GLOBAL[0m(7, guard_match) 
48: [32mLOAD_CONST[0m(6, 5) 
49: [32mLOAD_CONST[0m(7, 0) 
50: [32mLOAD_GLOBAL[0m(9, locals) 
51: [32mCALL_FUNCTION[0m(0, 0) 
52: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
53: [32mUNPACK_SEQUENCE[0m(2, 2) 
54: [32mSTORE_FAST[0m(4, __case_idx) 
55: [32mSTORE_FAST[0m(3, __graph_fn) 
56: [32mLOAD_GLOBAL[0m(5, enable_trace) 
57: [32mLOAD_CONST[0m(6, 5) 
58: [32mCALL_FUNCTION[0m(1, 1) 
59: [32mPOP_TOP[0m(None, None) 
60: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
61: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:417
tracing opcode LOAD_GLOBAL None pc=0 frame=5(0x6d272a0)
push tracker due to record
push tracker 5 frame 0x6d272a0 frame_id 5 read_stack False cf_info <class 'NoneType'> all [0, 4, 5]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=5(0x6d272a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=5(0x6d272a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 5] frame_id 5
enable_trace
push tracker 5 frame 0x6d272a0 frame_id 5 read_stack False cf_info <class 'NoneType'> all [0, 4, 5]
tracing opcode POP_TOP None pc=118 frame=5(0x6d272a0)
restart: running injected code (f_lasti=118)
tracing opcode JUMP_ABSOLUTE None pc=120 frame=5(0x6d272a0)
restart: running injected code (f_lasti=120)
tracing line /home/drc/frontend/test/test_model_deberta.py:418
tracing opcode LOAD_FAST None pc=10 frame=5(0x6d272a0)
load fast: 22897696715536
tracing opcode LOAD_METHOD None pc=12 frame=5(0x6d272a0)
tracing opcode CALL_METHOD None pc=14 frame=5(0x6d272a0)
tracing opcode LOAD_CONST None pc=16 frame=5(0x6d272a0)
tracing opcode COMPARE_OP None pc=18 frame=5(0x6d272a0)
tracing opcode POP_JUMP_IF_FALSE None pc=20 frame=5(0x6d272a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:419
tracing opcode LOAD_FAST None pc=22 frame=5(0x6d272a0)
tracing opcode LOAD_METHOD None pc=24 frame=5(0x6d272a0)
tracing opcode LOAD_CONST None pc=26 frame=5(0x6d272a0)
tracing opcode CALL_METHOD None pc=28 frame=5(0x6d272a0)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=30 frame=5(0x6d272a0)
tracing opcode LOAD_CONST None pc=32 frame=5(0x6d272a0)
tracing opcode CALL_METHOD None pc=34 frame=5(0x6d272a0)
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=36 frame=5(0x6d272a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:420
tracing opcode LOAD_FAST None pc=38 frame=5(0x6d272a0)
tracing opcode LOAD_FAST None pc=40 frame=5(0x6d272a0)
tracing opcode LOAD_METHOD None pc=42 frame=5(0x6d272a0)
tracing opcode LOAD_CONST None pc=44 frame=5(0x6d272a0)
tracing opcode CALL_METHOD None pc=46 frame=5(0x6d272a0)
fetch:  -2 <class 'int'>
record function in graph <method 'squeeze' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=48 frame=5(0x6d272a0)
tracing opcode LOAD_CONST None pc=50 frame=5(0x6d272a0)
tracing opcode CALL_METHOD None pc=52 frame=5(0x6d272a0)
fetch:  -1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode BINARY_MULTIPLY None pc=54 frame=5(0x6d272a0)
record function in graph <built-in function mul>
tracing opcode STORE_FAST None pc=56 frame=5(0x6d272a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:421
tracing opcode LOAD_FAST None pc=58 frame=5(0x6d272a0)
tracing opcode LOAD_METHOD None pc=60 frame=5(0x6d272a0)
tracing opcode CALL_METHOD None pc=62 frame=5(0x6d272a0)
record function in graph <method 'byte' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=64 frame=5(0x6d272a0)
tracing opcode JUMP_FORWARD None pc=66 frame=5(0x6d272a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:425
tracing opcode LOAD_FAST None pc=90 frame=5(0x6d272a0)
tracing opcode JUMP_ABSOLUTE None pc=92 frame=5(0x6d272a0)
restart: running injected code (f_lasti=92)
commiting 5 0 41 [32mRETURN_VALUE[0m(None, None)  92
callee is full graph, merge to caller
to merge graph graph():
    %tensor_12 : [#users=1] = placeholder[target=tensor_12]
    %unsqueeze : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_12, 1), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze, 2), kwargs = {})
    %squeeze : [#users=1] = call_function[target=torch.Tensor.squeeze](args = (%unsqueeze_1, -2), kwargs = {})
    %unsqueeze_2 : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%squeeze, -1), kwargs = {})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%unsqueeze_1, %unsqueeze_2), kwargs = {})
    %byte : [#users=0] = call_function[target=torch.Tensor.byte](args = (%mul,), kwargs = {})
tracing opcode RETURN_VALUE None pc=122 frame=5(0x6d272a0)
restart: running injected code (f_lasti=122)
before pop_tracker [0, 4, 5] frame_id 5
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=20 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:444
tracing opcode LOAD_FAST None pc=22 frame=4(0x6aceb20)
tracing opcode LOAD_METHOD None pc=24 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=26 frame=4(0x6aceb20)
load fast: 22897552743216
tracing opcode LOAD_FAST None pc=28 frame=4(0x6aceb20)
load fast: 22900603167744
tracing opcode LOAD_FAST None pc=30 frame=4(0x6aceb20)
tracing opcode CALL_METHOD None pc=32 frame=4(0x6aceb20)
run into user defined function <bound method DebertaEncoder.get_rel_pos of DebertaEncoder(
  (layer): ModuleList(
    (0-11): 12 x DebertaLayer(
      (attention): DebertaAttention(
        (self): DisentangledSelfAttention(
          (in_proj): Linear(in_features=768, out_features=2304, bias=False)
          (pos_dropout): StableDropout()
          (pos_proj): Linear(in_features=768, out_features=768, bias=False)
          (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
          (dropout): StableDropout()
        )
        (output): DebertaSelfOutput(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (LayerNorm): DebertaLayerNorm()
          (dropout): StableDropout()
        )
      )
      (intermediate): DebertaIntermediate(
        (dense): Linear(in_features=768, out_features=3072, bias=True)
        (intermediate_act_fn): GELUActivation()
      )
      (output): DebertaOutput(
        (dense): Linear(in_features=3072, out_features=768, bias=True)
        (LayerNorm): DebertaLayerNorm()
        (dropout): StableDropout()
      )
    )
  )
  (rel_embeddings): Embedding(1024, 768)
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 6 0x6d24300 get_rel_pos
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, relative_attention) 
2: [33mPOP_JUMP_IF_FALSE[0m(62, 62)  -> inst 31
3: [33mLOAD_FAST[0m(3, relative_pos) 
4: [33mLOAD_CONST[0m(0, None) 
5: [33mIS_OP[0m(0, 0) 
6: [33mPOP_JUMP_IF_FALSE[0m(62, 62)  -> inst 31
7: [33mLOAD_FAST[0m(2, query_states) 
8: [33mLOAD_CONST[0m(0, None) 
9: [33mIS_OP[0m(1, 1) 
10: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
11: [33mLOAD_FAST[0m(2, query_states) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mJUMP_FORWARD[0m(8, 40)  -> inst 20
16: [33mLOAD_FAST[0m(1, hidden_states) 
17: [33mLOAD_METHOD[0m(1, size) 
18: [33mLOAD_CONST[0m(1, -2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mSTORE_FAST[0m(4, q) 
21: [33mLOAD_GLOBAL[0m(2, build_relative_position) 
22: [33mLOAD_FAST[0m(4, q) 
23: [33mLOAD_FAST[0m(1, hidden_states) 
24: [33mLOAD_METHOD[0m(1, size) 
25: [33mLOAD_CONST[0m(1, -2) 
26: [33mCALL_METHOD[0m(1, 1) 
27: [33mLOAD_FAST[0m(1, hidden_states) 
28: [33mLOAD_ATTR[0m(3, device) 
29: [33mCALL_FUNCTION[0m(3, 3) 
30: [33mSTORE_FAST[0m(3, relative_pos) 
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 6), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(2, 6) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, relative_attention) 
7: [33mPOP_JUMP_IF_FALSE[0m(72, 72)  -> inst 36
8: [33mLOAD_FAST[0m(3, relative_pos) 
9: [33mLOAD_CONST[0m(0, None) 
10: [33mIS_OP[0m(0, 0) 
11: [33mPOP_JUMP_IF_FALSE[0m(72, 72)  -> inst 36
12: [33mLOAD_FAST[0m(2, query_states) 
13: [33mLOAD_CONST[0m(0, None) 
14: [33mIS_OP[0m(1, 1) 
15: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
16: [33mLOAD_FAST[0m(2, query_states) 
17: [33mLOAD_METHOD[0m(1, size) 
18: [33mLOAD_CONST[0m(1, -2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mJUMP_FORWARD[0m(8, 50)  -> inst 25
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mLOAD_METHOD[0m(1, size) 
23: [33mLOAD_CONST[0m(1, -2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mSTORE_FAST[0m(4, q) 
26: [33mLOAD_GLOBAL[0m(2, build_relative_position) 
27: [33mLOAD_FAST[0m(4, q) 
28: [33mLOAD_FAST[0m(1, hidden_states) 
29: [33mLOAD_METHOD[0m(1, size) 
30: [33mLOAD_CONST[0m(1, -2) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mLOAD_FAST[0m(1, hidden_states) 
33: [33mLOAD_ATTR[0m(3, device) 
34: [33mCALL_FUNCTION[0m(3, 3) 
35: [33mSTORE_FAST[0m(3, relative_pos) 
36: [33mLOAD_FAST[0m(3, relative_pos) 
37: [32mJUMP_ABSOLUTE[0m(104, 104)  -> inst 52
38: [32mLOAD_GLOBAL[0m(7, guard_match) 
39: [32mLOAD_CONST[0m(2, 6) 
40: [32mLOAD_CONST[0m(3, 0) 
41: [32mLOAD_GLOBAL[0m(9, locals) 
42: [32mCALL_FUNCTION[0m(0, 0) 
43: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
44: [32mUNPACK_SEQUENCE[0m(2, 2) 
45: [32mSTORE_FAST[0m(6, __case_idx) 
46: [32mSTORE_FAST[0m(5, __graph_fn) 
47: [32mLOAD_GLOBAL[0m(5, enable_trace) 
48: [32mLOAD_CONST[0m(2, 6) 
49: [32mCALL_FUNCTION[0m(1, 1) 
50: [32mPOP_TOP[0m(None, None) 
51: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
52: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:427
tracing opcode LOAD_GLOBAL None pc=0 frame=6(0x6d25280)
push tracker due to record
push tracker 6 frame 0x6d25280 frame_id 6 read_stack False cf_info <class 'NoneType'> all [0, 4, 6]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=6(0x6d25280)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=6(0x6d25280)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 6] frame_id 6
enable_trace
push tracker 6 frame 0x6d25280 frame_id 6 read_stack False cf_info <class 'NoneType'> all [0, 4, 6]
tracing opcode POP_TOP None pc=100 frame=6(0x6d25280)
restart: running injected code (f_lasti=100)
tracing opcode JUMP_ABSOLUTE None pc=102 frame=6(0x6d25280)
restart: running injected code (f_lasti=102)
tracing line /home/drc/frontend/test/test_model_deberta.py:428
tracing opcode LOAD_FAST None pc=10 frame=6(0x6d25280)
load fast: 22897554686976
tracing opcode LOAD_ATTR None pc=12 frame=6(0x6d25280)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=6(0x6d25280)
tracing opcode LOAD_FAST None pc=16 frame=6(0x6d25280)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=18 frame=6(0x6d25280)
tracing opcode IS_OP None pc=20 frame=6(0x6d25280)
tracing opcode POP_JUMP_IF_FALSE None pc=22 frame=6(0x6d25280)
tracing line /home/drc/frontend/test/test_model_deberta.py:429
tracing opcode LOAD_FAST None pc=24 frame=6(0x6d25280)
tracing opcode LOAD_CONST None pc=26 frame=6(0x6d25280)
tracing opcode IS_OP None pc=28 frame=6(0x6d25280)
tracing opcode POP_JUMP_IF_FALSE None pc=30 frame=6(0x6d25280)
tracing opcode LOAD_FAST None pc=42 frame=6(0x6d25280)
load fast: 22897552743216
tracing opcode LOAD_METHOD None pc=44 frame=6(0x6d25280)
tracing opcode LOAD_CONST None pc=46 frame=6(0x6d25280)
tracing opcode CALL_METHOD None pc=48 frame=6(0x6d25280)
fetch:  -2 <class 'int'>
tracing opcode STORE_FAST None pc=50 frame=6(0x6d25280)
tracing line /home/drc/frontend/test/test_model_deberta.py:430
tracing opcode LOAD_GLOBAL None pc=52 frame=6(0x6d25280)
tracing opcode LOAD_FAST None pc=54 frame=6(0x6d25280)
tracing opcode LOAD_FAST None pc=56 frame=6(0x6d25280)
tracing opcode LOAD_METHOD None pc=58 frame=6(0x6d25280)
tracing opcode LOAD_CONST None pc=60 frame=6(0x6d25280)
tracing opcode CALL_METHOD None pc=62 frame=6(0x6d25280)
tracing opcode LOAD_FAST None pc=64 frame=6(0x6d25280)
tracing opcode LOAD_ATTR None pc=66 frame=6(0x6d25280)
tracing opcode CALL_FUNCTION None pc=68 frame=6(0x6d25280)
run into user defined function <function build_relative_position at 0x14d344d12ca0>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 7 0x6c50e30 build_relative_position
0: [33mLOAD_GLOBAL[0m(0, print) 
1: [33mLOAD_CONST[0m(1, size:) 
2: [33mLOAD_FAST[0m(0, query_size) 
3: [33mLOAD_FAST[0m(1, key_size) 
4: [33mCALL_FUNCTION[0m(3, 3) 
5: [33mPOP_TOP[0m(None, None) 
6: [33mLOAD_GLOBAL[0m(1, torch) 
7: [33mLOAD_ATTR[0m(2, arange) 
8: [33mLOAD_FAST[0m(0, query_size) 
9: [33mLOAD_GLOBAL[0m(1, torch) 
10: [33mLOAD_ATTR[0m(3, long) 
11: [33mLOAD_FAST[0m(2, device) 
12: [33mLOAD_CONST[0m(2, ('dtype', 'device')) 
13: [33mCALL_FUNCTION_KW[0m(3, 3) 
14: [33mSTORE_FAST[0m(3, q_ids) 
15: [33mLOAD_GLOBAL[0m(1, torch) 
16: [33mLOAD_ATTR[0m(2, arange) 
17: [33mLOAD_FAST[0m(1, key_size) 
18: [33mLOAD_GLOBAL[0m(1, torch) 
19: [33mLOAD_ATTR[0m(3, long) 
20: [33mLOAD_FAST[0m(2, device) 
21: [33mLOAD_CONST[0m(2, ('dtype', 'device')) 
22: [33mCALL_FUNCTION_KW[0m(3, 3) 
23: [33mSTORE_FAST[0m(4, k_ids) 
24: [33mLOAD_FAST[0m(3, q_ids) 
25: [33mLOAD_CONST[0m(3, None) 
26: [33mLOAD_CONST[0m(3, None) 
27: [33mBUILD_SLICE[0m(2, 2) 
28: [33mLOAD_CONST[0m(3, None) 
29: [33mBUILD_TUPLE[0m(2, 2) 
30: [33mBINARY_SUBSCR[0m(None, None) 
31: [33mLOAD_FAST[0m(4, k_ids) 
32: [33mLOAD_METHOD[0m(4, view) 
33: [33mLOAD_CONST[0m(4, 1) 
34: [33mLOAD_CONST[0m(5, -1) 
35: [33mCALL_METHOD[0m(2, 2) 
36: [33mLOAD_METHOD[0m(5, repeat) 
37: [33mLOAD_FAST[0m(0, query_size) 
38: [33mLOAD_CONST[0m(4, 1) 
39: [33mCALL_METHOD[0m(2, 2) 
40: [33mBINARY_SUBTRACT[0m(None, None) 
41: [33mSTORE_FAST[0m(5, rel_pos_ids) 
42: [33mLOAD_FAST[0m(5, rel_pos_ids) 
43: [33mLOAD_CONST[0m(3, None) 
44: [33mLOAD_FAST[0m(0, query_size) 
45: [33mBUILD_SLICE[0m(2, 2) 
46: [33mLOAD_CONST[0m(3, None) 
47: [33mLOAD_CONST[0m(3, None) 
48: [33mBUILD_SLICE[0m(2, 2) 
49: [33mBUILD_TUPLE[0m(2, 2) 
50: [33mBINARY_SUBSCR[0m(None, None) 
51: [33mSTORE_FAST[0m(5, rel_pos_ids) 
52: [33mLOAD_FAST[0m(5, rel_pos_ids) 
53: [33mLOAD_METHOD[0m(6, unsqueeze) 
54: [33mLOAD_CONST[0m(6, 0) 
55: [33mCALL_METHOD[0m(1, 1) 
56: [33mSTORE_FAST[0m(5, rel_pos_ids) 
57: [33mLOAD_FAST[0m(5, rel_pos_ids) 
58: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, 'size:'), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'str'>, '\n    Build relative position according to the query and key\n\n    We assume the absolute position of query \\(P_q\\) is range from (0, query_size) and the absolute position of key\n    \\(P_k\\) is range from (0, key_size), The relative positions from query to key is \\(R_{q \\rightarrow k} = P_q -\n    P_k\\)\n\n    Args:\n        query_size (int): the length of query\n        key_size (int): the length of key\n\n    Return:\n        `torch.LongTensor`: A tensor with shape [1, query_size, key_size]\n\n    '), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'tuple'>, ('dtype', 'device')), (<class 'int'>, 7)]
guarded code
0: [32mLOAD_GLOBAL[0m(11, disable_trace) 
1: [32mLOAD_CONST[0m(7, 7) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(128, 128)  -> inst 64
5: [33mLOAD_GLOBAL[0m(7, print) 
6: [33mLOAD_CONST[0m(0, size:) 
7: [33mLOAD_FAST[0m(0, query_size) 
8: [33mLOAD_FAST[0m(1, key_size) 
9: [33mCALL_FUNCTION[0m(3, 3) 
10: [33mPOP_TOP[0m(None, None) 
11: [33mLOAD_GLOBAL[0m(1, torch) 
12: [33mLOAD_ATTR[0m(2, arange) 
13: [33mLOAD_FAST[0m(0, query_size) 
14: [33mLOAD_GLOBAL[0m(1, torch) 
15: [33mLOAD_ATTR[0m(3, long) 
16: [33mLOAD_FAST[0m(2, device) 
17: [33mLOAD_CONST[0m(6, ('dtype', 'device')) 
18: [33mCALL_FUNCTION_KW[0m(3, 3) 
19: [33mSTORE_FAST[0m(3, q_ids) 
20: [33mLOAD_GLOBAL[0m(1, torch) 
21: [33mLOAD_ATTR[0m(2, arange) 
22: [33mLOAD_FAST[0m(1, key_size) 
23: [33mLOAD_GLOBAL[0m(1, torch) 
24: [33mLOAD_ATTR[0m(3, long) 
25: [33mLOAD_FAST[0m(2, device) 
26: [33mLOAD_CONST[0m(6, ('dtype', 'device')) 
27: [33mCALL_FUNCTION_KW[0m(3, 3) 
28: [33mSTORE_FAST[0m(4, k_ids) 
29: [33mLOAD_FAST[0m(3, q_ids) 
30: [33mLOAD_CONST[0m(2, None) 
31: [33mLOAD_CONST[0m(2, None) 
32: [33mBUILD_SLICE[0m(2, 2) 
33: [33mLOAD_CONST[0m(2, None) 
34: [33mBUILD_TUPLE[0m(2, 2) 
35: [33mBINARY_SUBSCR[0m(None, None) 
36: [33mLOAD_FAST[0m(4, k_ids) 
37: [33mLOAD_METHOD[0m(4, view) 
38: [33mLOAD_CONST[0m(5, 1) 
39: [33mLOAD_CONST[0m(4, -1) 
40: [33mCALL_METHOD[0m(2, 2) 
41: [33mLOAD_METHOD[0m(5, repeat) 
42: [33mLOAD_FAST[0m(0, query_size) 
43: [33mLOAD_CONST[0m(5, 1) 
44: [33mCALL_METHOD[0m(2, 2) 
45: [33mBINARY_SUBTRACT[0m(None, None) 
46: [33mSTORE_FAST[0m(5, rel_pos_ids) 
47: [33mLOAD_FAST[0m(5, rel_pos_ids) 
48: [33mLOAD_CONST[0m(2, None) 
49: [33mLOAD_FAST[0m(0, query_size) 
50: [33mBUILD_SLICE[0m(2, 2) 
51: [33mLOAD_CONST[0m(2, None) 
52: [33mLOAD_CONST[0m(2, None) 
53: [33mBUILD_SLICE[0m(2, 2) 
54: [33mBUILD_TUPLE[0m(2, 2) 
55: [33mBINARY_SUBSCR[0m(None, None) 
56: [33mSTORE_FAST[0m(5, rel_pos_ids) 
57: [33mLOAD_FAST[0m(5, rel_pos_ids) 
58: [33mLOAD_METHOD[0m(6, unsqueeze) 
59: [33mLOAD_CONST[0m(1, 0) 
60: [33mCALL_METHOD[0m(1, 1) 
61: [33mSTORE_FAST[0m(5, rel_pos_ids) 
62: [33mLOAD_FAST[0m(5, rel_pos_ids) 
63: [32mJUMP_ABSOLUTE[0m(156, 156)  -> inst 78
64: [32mLOAD_GLOBAL[0m(10, guard_match) 
65: [32mLOAD_CONST[0m(7, 7) 
66: [32mLOAD_CONST[0m(1, 0) 
67: [32mLOAD_GLOBAL[0m(12, locals) 
68: [32mCALL_FUNCTION[0m(0, 0) 
69: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
70: [32mUNPACK_SEQUENCE[0m(2, 2) 
71: [32mSTORE_FAST[0m(7, __case_idx) 
72: [32mSTORE_FAST[0m(6, __graph_fn) 
73: [32mLOAD_GLOBAL[0m(8, enable_trace) 
74: [32mLOAD_CONST[0m(7, 7) 
75: [32mCALL_FUNCTION[0m(1, 1) 
76: [32mPOP_TOP[0m(None, None) 
77: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
78: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:507
tracing opcode LOAD_GLOBAL None pc=0 frame=7(0x6d26290)
push tracker due to record
push tracker 7 frame 0x6d26290 frame_id 7 read_stack False cf_info <class 'NoneType'> all [0, 4, 6, 7]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=7(0x6d26290)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=7(0x6d26290)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 6, 7] frame_id 7
enable_trace
push tracker 7 frame 0x6d26290 frame_id 7 read_stack False cf_info <class 'NoneType'> all [0, 4, 6, 7]
tracing opcode POP_TOP None pc=152 frame=7(0x6d26290)
restart: running injected code (f_lasti=152)
tracing opcode JUMP_ABSOLUTE None pc=154 frame=7(0x6d26290)
restart: running injected code (f_lasti=154)
tracing line /home/drc/frontend/test/test_model_deberta.py:524
tracing opcode LOAD_GLOBAL None pc=10 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=12 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=14 frame=7(0x6d26290)
load fast: 22900595075472
tracing opcode LOAD_FAST None pc=16 frame=7(0x6d26290)
tracing opcode CALL_FUNCTION None pc=18 frame=7(0x6d26290)
fetch:  size: <class 'str'>
size: 256 256
tracing opcode POP_TOP None pc=20 frame=7(0x6d26290)
tracing line /home/drc/frontend/test/test_model_deberta.py:525
tracing opcode LOAD_GLOBAL None pc=22 frame=7(0x6d26290)
tracing opcode LOAD_ATTR None pc=24 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=26 frame=7(0x6d26290)
tracing opcode LOAD_GLOBAL None pc=28 frame=7(0x6d26290)
tracing opcode LOAD_ATTR None pc=30 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=32 frame=7(0x6d26290)
load fast: 22897553456720
tracing opcode LOAD_CONST None pc=34 frame=7(0x6d26290)
tracing opcode CALL_FUNCTION_KW None pc=36 frame=7(0x6d26290)
record function in graph <built-in method arange of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=38 frame=7(0x6d26290)
tracing line /home/drc/frontend/test/test_model_deberta.py:526
tracing opcode LOAD_GLOBAL None pc=40 frame=7(0x6d26290)
tracing opcode LOAD_ATTR None pc=42 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=44 frame=7(0x6d26290)
tracing opcode LOAD_GLOBAL None pc=46 frame=7(0x6d26290)
tracing opcode LOAD_ATTR None pc=48 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=50 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=52 frame=7(0x6d26290)
tracing opcode CALL_FUNCTION_KW None pc=54 frame=7(0x6d26290)
record function in graph <built-in method arange of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=56 frame=7(0x6d26290)
tracing line /home/drc/frontend/test/test_model_deberta.py:527
tracing opcode LOAD_FAST None pc=58 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=60 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=62 frame=7(0x6d26290)
tracing opcode BUILD_SLICE None pc=64 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=66 frame=7(0x6d26290)
tracing opcode BUILD_TUPLE None pc=68 frame=7(0x6d26290)
tracing opcode BINARY_SUBSCR None pc=70 frame=7(0x6d26290)
record function in graph <built-in function getitem>
tracing opcode LOAD_FAST None pc=72 frame=7(0x6d26290)
tracing opcode LOAD_METHOD None pc=74 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=76 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=78 frame=7(0x6d26290)
tracing opcode CALL_METHOD None pc=80 frame=7(0x6d26290)
fetch:  1 <class 'int'>
fetch:  -1 <class 'int'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=82 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=84 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=86 frame=7(0x6d26290)
tracing opcode CALL_METHOD None pc=88 frame=7(0x6d26290)
record function in graph <method 'repeat' of 'torch._C._TensorBase' objects>
tracing opcode BINARY_SUBTRACT None pc=90 frame=7(0x6d26290)
record function in graph <built-in function sub>
tracing opcode STORE_FAST None pc=92 frame=7(0x6d26290)
tracing line /home/drc/frontend/test/test_model_deberta.py:528
tracing opcode LOAD_FAST None pc=94 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=96 frame=7(0x6d26290)
tracing opcode LOAD_FAST None pc=98 frame=7(0x6d26290)
tracing opcode BUILD_SLICE None pc=100 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=102 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=104 frame=7(0x6d26290)
tracing opcode BUILD_SLICE None pc=106 frame=7(0x6d26290)
tracing opcode BUILD_TUPLE None pc=108 frame=7(0x6d26290)
tracing opcode BINARY_SUBSCR None pc=110 frame=7(0x6d26290)
record function in graph <built-in function getitem>
tracing opcode STORE_FAST None pc=112 frame=7(0x6d26290)
tracing line /home/drc/frontend/test/test_model_deberta.py:529
tracing opcode LOAD_FAST None pc=114 frame=7(0x6d26290)
tracing opcode LOAD_METHOD None pc=116 frame=7(0x6d26290)
tracing opcode LOAD_CONST None pc=118 frame=7(0x6d26290)
tracing opcode CALL_METHOD None pc=120 frame=7(0x6d26290)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=122 frame=7(0x6d26290)
tracing line /home/drc/frontend/test/test_model_deberta.py:530
tracing opcode LOAD_FAST None pc=124 frame=7(0x6d26290)
tracing opcode JUMP_ABSOLUTE None pc=126 frame=7(0x6d26290)
restart: running injected code (f_lasti=126)
commiting 7 0 58 [32mRETURN_VALUE[0m(None, None)  126
callee is full graph, merge to caller
to merge graph graph():
    %arange : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %arange_1 : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%arange, [slice(None, None, None), None]), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%arange_1, 1, -1), kwargs = {})
    %repeat : [#users=1] = call_function[target=torch.Tensor.repeat](args = (%view, 256, 1), kwargs = {})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%getitem, %repeat), kwargs = {})
    %getitem_1 : [#users=1] = call_function[target=operator.getitem](args = (%sub, [slice(None, 256, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze : [#users=0] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_1, 0), kwargs = {})
tracing opcode RETURN_VALUE None pc=156 frame=7(0x6d26290)
restart: running injected code (f_lasti=156)
before pop_tracker [0, 4, 6, 7] frame_id 7
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=70 frame=6(0x6d25280)
tracing line /home/drc/frontend/test/test_model_deberta.py:431
tracing opcode LOAD_FAST None pc=72 frame=6(0x6d25280)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=6(0x6d25280)
restart: running injected code (f_lasti=74)
commiting 6 0 32 [32mRETURN_VALUE[0m(None, None)  74
callee is full graph, merge to caller
to merge graph graph():
    %tensor_14 : [#users=0] = placeholder[target=tensor_14]
    %arange : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %arange_1 : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%arange, [slice(None, None, None), None]), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%arange_1, 1, -1), kwargs = {})
    %repeat : [#users=1] = call_function[target=torch.Tensor.repeat](args = (%view, 256, 1), kwargs = {})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%getitem, %repeat), kwargs = {})
    %getitem_1 : [#users=1] = call_function[target=operator.getitem](args = (%sub, [slice(None, 256, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze : [#users=0] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_1, 0), kwargs = {})
tracing opcode RETURN_VALUE None pc=104 frame=6(0x6d25280)
restart: running injected code (f_lasti=104)
before pop_tracker [0, 4, 6] frame_id 6
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=34 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:446
tracing opcode LOAD_FAST None pc=36 frame=4(0x6aceb20)
load fast: 22900603085216
tracing opcode POP_JUMP_IF_FALSE None pc=38 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=40 frame=4(0x6aceb20)
tracing opcode JUMP_FORWARD None pc=42 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=46 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:447
tracing opcode LOAD_DEREF None pc=48 frame=4(0x6aceb20)
load fast: 22900603085248
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=56 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=58 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:449
tracing opcode LOAD_GLOBAL None pc=60 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=62 frame=4(0x6aceb20)
tracing opcode LOAD_GLOBAL None pc=64 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION None pc=66 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:452
tracing opcode LOAD_FAST None pc=80 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=82 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:453
tracing opcode LOAD_FAST None pc=84 frame=4(0x6aceb20)
tracing opcode LOAD_METHOD None pc=86 frame=4(0x6aceb20)
tracing opcode CALL_METHOD None pc=88 frame=4(0x6aceb20)
run into user defined function <bound method DebertaEncoder.get_rel_embedding of DebertaEncoder(
  (layer): ModuleList(
    (0-11): 12 x DebertaLayer(
      (attention): DebertaAttention(
        (self): DisentangledSelfAttention(
          (in_proj): Linear(in_features=768, out_features=2304, bias=False)
          (pos_dropout): StableDropout()
          (pos_proj): Linear(in_features=768, out_features=768, bias=False)
          (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
          (dropout): StableDropout()
        )
        (output): DebertaSelfOutput(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (LayerNorm): DebertaLayerNorm()
          (dropout): StableDropout()
        )
      )
      (intermediate): DebertaIntermediate(
        (dense): Linear(in_features=768, out_features=3072, bias=True)
        (intermediate_act_fn): GELUActivation()
      )
      (output): DebertaOutput(
        (dense): Linear(in_features=3072, out_features=768, bias=True)
        (LayerNorm): DebertaLayerNorm()
        (dropout): StableDropout()
      )
    )
  )
  (rel_embeddings): Embedding(1024, 768)
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 8 0x6d29c60 get_rel_embedding
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, relative_attention) 
2: [33mPOP_JUMP_IF_FALSE[0m(14, 14)  -> inst 7
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, rel_embeddings) 
5: [33mLOAD_ATTR[0m(2, weight) 
6: [33mJUMP_FORWARD[0m(2, 16)  -> inst 8
7: [33mLOAD_CONST[0m(0, None) 
8: [33mSTORE_FAST[0m(1, rel_embeddings) 
9: [33mLOAD_FAST[0m(1, rel_embeddings) 
10: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 8), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 8) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(32, 32)  -> inst 16
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, relative_attention) 
7: [33mPOP_JUMP_IF_FALSE[0m(24, 24)  -> inst 12
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, rel_embeddings) 
10: [33mLOAD_ATTR[0m(2, weight) 
11: [33mJUMP_FORWARD[0m(2, 26)  -> inst 13
12: [33mLOAD_CONST[0m(0, None) 
13: [33mSTORE_FAST[0m(1, rel_embeddings) 
14: [33mLOAD_FAST[0m(1, rel_embeddings) 
15: [32mJUMP_ABSOLUTE[0m(60, 60)  -> inst 30
16: [32mLOAD_GLOBAL[0m(6, guard_match) 
17: [32mLOAD_CONST[0m(1, 8) 
18: [32mLOAD_CONST[0m(2, 0) 
19: [32mLOAD_GLOBAL[0m(8, locals) 
20: [32mCALL_FUNCTION[0m(0, 0) 
21: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
22: [32mUNPACK_SEQUENCE[0m(2, 2) 
23: [32mSTORE_FAST[0m(3, __case_idx) 
24: [32mSTORE_FAST[0m(2, __graph_fn) 
25: [32mLOAD_GLOBAL[0m(4, enable_trace) 
26: [32mLOAD_CONST[0m(1, 8) 
27: [32mCALL_FUNCTION[0m(1, 1) 
28: [32mPOP_TOP[0m(None, None) 
29: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
30: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:413
tracing opcode LOAD_GLOBAL None pc=0 frame=8(0x6d239e0)
push tracker due to record
push tracker 8 frame 0x6d239e0 frame_id 8 read_stack False cf_info <class 'NoneType'> all [0, 4, 8]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=8(0x6d239e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=8(0x6d239e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 8] frame_id 8
enable_trace
push tracker 8 frame 0x6d239e0 frame_id 8 read_stack False cf_info <class 'NoneType'> all [0, 4, 8]
tracing opcode POP_TOP None pc=56 frame=8(0x6d239e0)
restart: running injected code (f_lasti=56)
tracing opcode JUMP_ABSOLUTE None pc=58 frame=8(0x6d239e0)
restart: running injected code (f_lasti=58)
tracing line /home/drc/frontend/test/test_model_deberta.py:414
tracing opcode LOAD_FAST None pc=10 frame=8(0x6d239e0)
load fast: 22897554686976
tracing opcode LOAD_ATTR None pc=12 frame=8(0x6d239e0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=8(0x6d239e0)
tracing opcode LOAD_FAST None pc=16 frame=8(0x6d239e0)
tracing opcode LOAD_ATTR None pc=18 frame=8(0x6d239e0)
tracing opcode LOAD_ATTR None pc=20 frame=8(0x6d239e0)
tracing opcode JUMP_FORWARD None pc=22 frame=8(0x6d239e0)
tracing opcode STORE_FAST None pc=26 frame=8(0x6d239e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:415
tracing opcode LOAD_FAST None pc=28 frame=8(0x6d239e0)
tracing opcode JUMP_ABSOLUTE None pc=30 frame=8(0x6d239e0)
restart: running injected code (f_lasti=30)
commiting 8 0 10 [32mRETURN_VALUE[0m(None, None)  30
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=60 frame=8(0x6d239e0)
restart: running injected code (f_lasti=60)
before pop_tracker [0, 4, 8] frame_id 8
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=90 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode LOAD_GLOBAL None pc=92 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=94 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=96 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION None pc=98 frame=4(0x6aceb20)
tracing opcode GET_ITER None pc=100 frame=4(0x6aceb20)
generate any for <enumerate object at 0x14d33e56e040> <class 'enumerate'> [enumerate(locals['self'].layer)]
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x6ddf2e0)
push tracker due to record
push tracker 9 frame 0x6ddf2e0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x6ddf2e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x6ddf2e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x6ddf2e0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x6ddf2e0)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x6ddf2e0)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x6ddf2e0)
load fast: 22897554687072
tracing opcode LOAD_ATTR None pc=12 frame=9(0x6ddf2e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x6ddf2e0)
load fast: 22897552743216
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x6ddf2e0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x6ddf2e0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x6ddf2e0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x6ddf2e0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x6ddf2e0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x6ddf2e0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x6ddf2e0)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x6d46f10)
push tracker due to record
push tracker 10 frame 0x6d46f10 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x6d46f10)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x6d46f10)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x6d46f10 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x6d46f10)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x6d46f10)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x6d46f10)
load fast: 22897554687168
tracing opcode LOAD_ATTR None pc=12 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x6d46f10)
load fast: 22897552743216
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x6d46f10)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x6d46f10)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x6d46f10)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x6d46f10)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x6d46f10)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x6d46f10)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x6d46f10)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x6d37080)
push tracker due to record
push tracker 11 frame 0x6d37080 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x6d37080)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x6d37080)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x6d37080 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x6d37080)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x6d37080)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x6d37080)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x6d37080)
tracing opcode IS_OP None pc=16 frame=11(0x6d37080)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x6d37080)
load fast: 22897554687216
tracing opcode LOAD_METHOD None pc=22 frame=11(0x6d37080)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x6d37080)
load fast: 22897552743216
tracing opcode CALL_METHOD None pc=26 frame=11(0x6d37080)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=34 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=36 frame=11(0x6d37080)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6f00a80)
push tracker due to record
push tracker 12 frame 0x6f00a80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6f00a80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6f00a80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6f00a80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6f00a80)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6f00a80)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6f00a80)
load fast: 22897516780096
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6f00a80)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6f00a80)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6f00a80)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6f00a80)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6f00a80)
load fast: 22897554687216
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6f00a80)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6f00a80)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6f00a80)
tracing opcode STORE_FAST None pc=34 frame=12(0x6f00a80)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6f00a80)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6f00a80)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6f00a80)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6f00a80)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6f00a80)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6f00a80)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6f00a80)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6f00a80)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6f00a80)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6f00a80)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_22 : [#users=1] = placeholder[target=tensor_22]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_22, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6f00a80)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=40 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=42 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=44 frame=11(0x6d37080)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x6d37080)
record function in graph <built-in method chunk of Tensor object at 0x14d33e5ac9a0>
func self id: 22897516792224
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x6d37080)
sub_value 22897516779696 tensor([[[[-0.0176,  0.1657,  0.3035,  ...,  1.1980, -0.4564, -0.3679],
          [ 0.1613,  0.1503,  0.2665,  ...,  1.3702,  0.4775, -0.2064],
          [-0.3609,  0.3860, -0.8789,  ...,  0.6327,  0.0191, -0.7184],
          ...,
          [-0.0502, -0.4523,  1.0481,  ..., -0.3861, -0.6178, -1.0857],
          [ 0.2963, -0.6801, -0.1421,  ..., -0.2251, -0.2958, -0.8286],
          [ 0.2573, -0.2388,  0.2336,  ..., -0.7634,  0.6267, -0.7492]],

         [[ 0.6346,  0.5740,  0.3494,  ...,  0.1724, -1.2211, -0.1377],
          [-0.6364,  0.3476, -0.3180,  ..., -0.6699,  0.0154,  0.8278],
          [ 0.5880, -0.7657,  0.6158,  ..., -0.2323,  0.4738, -0.5701],
          ...,
          [ 0.1411, -0.0436,  0.0157,  ..., -0.8217, -0.0644, -0.0850],
          [-0.2021,  1.0462,  1.1804,  ...,  0.2274, -0.0976,  0.4872],
          [-0.9454,  0.3224, -0.2175,  ...,  0.3917,  0.7006,  0.4592]],

         [[-0.4329,  0.1701,  0.3381,  ...,  0.6084,  0.3117,  0.9699],
          [ 0.1118, -1.0178, -0.2011,  ...,  0.1099, -0.7249,  0.6045],
          [ 0.2284, -0.4482,  0.1560,  ..., -0.6189, -0.1168, -0.7783],
          ...,
          [ 1.0704, -0.5573, -0.0829,  ...,  0.5370, -0.0749, -0.5084],
          [-0.0234,  0.3626, -0.4062,  ...,  0.1479,  0.3264, -0.0820],
          [ 0.3902,  0.1781, -0.7973,  ..., -0.3250,  1.2170, -0.5595]],

         ...,

         [[-0.3544, -1.2667, -0.1690,  ...,  0.5425,  0.5977, -0.0510],
          [-0.9991, -0.0144,  0.2282,  ...,  0.3205, -0.1659,  0.2082],
          [ 0.0094, -1.9272,  0.5704,  ...,  0.5798,  0.1413, -0.0187],
          ...,
          [ 0.7778,  0.3469, -0.2660,  ...,  0.8566,  0.1331, -0.2903],
          [-0.1916,  1.1638, -0.6559,  ...,  0.7484, -0.4646,  0.7532],
          [-0.3068, -1.0473,  0.8691,  ..., -0.3870, -0.3721,  0.3689]],

         [[ 0.0640, -0.1682, -0.0482,  ...,  0.5810, -1.0319,  0.3547],
          [-0.6744, -1.0768,  0.0977,  ...,  0.3004, -0.6974, -0.4866],
          [-0.4251, -0.4832, -0.3114,  ...,  0.2621,  0.0110,  0.8826],
          ...,
          [-0.9020,  0.0113,  0.1736,  ..., -0.2034, -0.2389, -0.1905],
          [-0.0884,  0.5678, -0.6631,  ..., -0.0047, -0.1597,  0.8946],
          [ 0.5656,  0.4973,  0.1072,  ...,  0.2141,  0.3088,  0.4975]],

         [[ 0.4819, -0.0937,  0.0396,  ..., -0.4660, -0.1040, -0.6583],
          [ 0.7060,  0.0757,  0.6147,  ..., -0.1507,  0.0706,  0.6095],
          [ 0.8053,  0.6838,  0.6439,  ...,  0.2090, -0.1161, -0.1064],
          ...,
          [-0.2520,  0.3587, -0.0164,  ..., -0.2923,  0.1754, -0.4754],
          [-0.2975, -0.3365, -0.3144,  ..., -0.1474, -0.1489, -0.0211],
          [ 0.4016, -0.2031, -0.1322,  ...,  0.6762,  1.3550,  0.1800]]]])
sub_value 22897516791744 tensor([[[[ 0.0727, -1.0464,  0.0847,  ...,  0.1387,  0.2037,  0.8985],
          [ 0.2565, -0.0454,  0.2102,  ..., -0.0272, -0.7446, -0.2792],
          [-0.1768,  0.3803,  0.8382,  ...,  0.7230, -0.2633, -1.2531],
          ...,
          [-0.8307,  0.5848,  0.2511,  ..., -0.1340, -0.1121, -0.3579],
          [-0.5049, -0.7350,  0.1900,  ...,  0.0086,  0.6446,  0.8515],
          [-0.3510,  0.7004, -0.5688,  ...,  0.1443, -0.1170, -1.1316]],

         [[-0.8070,  0.0981, -0.2674,  ..., -0.7964,  0.3031, -0.3365],
          [ 0.4050,  0.1980,  0.6224,  ..., -0.2911,  0.6435,  0.9542],
          [ 0.4379,  0.5569,  0.4258,  ...,  1.0044,  0.3350,  0.0696],
          ...,
          [ 0.0315, -0.0691, -0.0512,  ...,  0.2859, -0.4730,  0.6827],
          [ 0.0745,  0.0057, -0.7604,  ...,  0.3494,  0.7709, -0.2682],
          [ 1.5437,  0.5566,  0.4594,  ...,  0.2740, -1.0227,  0.8764]],

         [[ 0.1728, -0.1556, -0.1496,  ..., -0.4293, -0.0388,  0.2574],
          [ 0.2701,  0.0735,  0.5104,  ..., -0.6408, -0.8777, -0.1313],
          [ 0.3248, -0.1373,  0.0185,  ..., -0.7333,  0.3078, -0.0379],
          ...,
          [ 0.0393,  0.4636,  0.3758,  ...,  0.7600, -0.0570, -0.3531],
          [ 0.1390,  0.3781, -0.0337,  ..., -0.2467,  0.6671, -0.4866],
          [-0.0691,  0.2195, -0.8750,  ..., -0.2379,  0.3937,  0.3258]],

         ...,

         [[-0.3046,  0.2258, -0.3157,  ...,  0.3454,  0.5670, -0.2950],
          [-0.2173, -0.3583,  0.1473,  ..., -0.4104,  0.6192, -0.6790],
          [ 0.1290, -1.1195,  0.1616,  ...,  0.2838, -0.1586,  0.0301],
          ...,
          [ 0.2931,  0.8123, -1.3327,  ...,  0.6272, -0.1478, -0.1892],
          [ 0.6002, -0.0350, -0.9182,  ...,  0.4857,  0.2848, -0.3752],
          [ 0.2522,  0.2068, -0.8533,  ...,  0.2701, -0.1548,  0.4609]],

         [[ 1.2455,  0.5347,  0.5816,  ..., -1.2074, -0.5919, -0.3739],
          [ 0.3762,  0.5334, -0.0936,  ..., -0.4474,  0.1492, -0.5425],
          [ 0.2650,  0.5485,  0.8270,  ..., -0.1131,  0.3031, -0.0783],
          ...,
          [-0.8036,  0.2090, -0.4550,  ...,  0.3216, -0.8566,  0.0061],
          [-0.0975, -0.0060,  0.0598,  ..., -0.0758,  0.0515, -0.4751],
          [ 0.2459, -0.8437,  0.4939,  ...,  0.8983,  0.2496, -0.0174]],

         [[ 0.0622, -0.6047, -0.4913,  ...,  0.8318, -0.6494, -0.3535],
          [ 0.6133, -0.0951,  0.1005,  ..., -0.3212,  0.6664, -0.1174],
          [ 0.0240, -0.7123, -0.0867,  ..., -0.1841,  0.7222, -0.0765],
          ...,
          [-0.5458, -1.4639,  0.5063,  ...,  0.2501, -1.3284, -0.6098],
          [ 0.5933, -0.8728,  0.5548,  ...,  0.4456,  0.0776, -0.3704],
          [ 0.3990, -0.1745, -1.0885,  ..., -0.8122, -0.1515, -0.4404]]]])
sub_value 22897516793344 tensor([[[[ 6.5891e-01, -6.4708e-01,  4.5871e-01,  ..., -1.7610e-01,
           -4.8178e-01, -1.8763e-01],
          [-8.1379e-01,  3.1524e-01,  3.3030e-01,  ...,  2.8770e-02,
            2.6018e-02,  3.6831e-01],
          [-2.3430e-01,  8.6440e-01, -4.7377e-01,  ..., -4.3807e-01,
            3.2176e-01, -7.3462e-01],
          ...,
          [-3.1536e-01,  4.7010e-01, -6.3941e-01,  ..., -2.5581e-01,
           -5.7208e-01, -2.2283e-01],
          [-5.0520e-01, -4.7294e-01, -3.1590e-01,  ..., -2.0906e-01,
           -2.1231e-01,  2.9358e-01],
          [ 7.7434e-02,  1.1395e+00, -5.0003e-01,  ..., -4.9967e-01,
           -4.1834e-01,  7.3843e-02]],

         [[ 5.7753e-01,  5.1824e-01, -1.7674e-02,  ...,  1.3472e-01,
            3.0439e-01, -1.1096e-01],
          [-7.5393e-02, -7.2599e-02,  8.0663e-02,  ..., -2.2697e-01,
           -1.0598e+00, -8.3628e-01],
          [-4.9422e-01,  5.3540e-01,  3.0002e-01,  ...,  6.8113e-02,
            9.9435e-01, -1.4214e-02],
          ...,
          [ 1.1864e-02, -1.1806e+00,  1.1411e-01,  ..., -1.8824e-01,
            2.4790e-01, -4.2732e-01],
          [-6.2120e-01, -3.9271e-01,  2.0523e-01,  ..., -2.8366e-01,
           -4.0902e-02,  7.3483e-01],
          [-6.8963e-01, -2.4382e-01, -1.0132e+00,  ...,  1.7977e-01,
           -2.6442e-01, -1.7776e-01]],

         [[ 4.9877e-01,  4.2481e-01, -2.2959e-01,  ..., -3.0307e-02,
           -7.6414e-03, -1.6677e-01],
          [ 4.1951e-01, -5.4843e-01,  1.4224e+00,  ...,  5.3398e-01,
            1.3773e-01,  7.1764e-01],
          [ 7.0637e-01,  5.5932e-01, -3.3760e-01,  ..., -4.5479e-01,
            5.4111e-01, -1.1296e+00],
          ...,
          [-2.4673e-01, -3.9196e-01, -2.3530e-01,  ..., -1.5880e-01,
            1.3833e-01,  9.7740e-01],
          [-4.6693e-01,  1.0088e+00, -1.0862e+00,  ..., -5.2015e-02,
            5.5027e-01,  8.0386e-01],
          [-4.7717e-02, -5.4697e-01, -1.6952e-01,  ..., -1.6501e-01,
           -6.8314e-01, -2.7915e-01]],

         ...,

         [[-3.1920e-01,  2.5342e-01, -2.9368e-02,  ...,  1.7616e-01,
           -2.8702e-01, -2.3813e-01],
          [ 6.5527e-01, -3.1934e-01, -4.4946e-01,  ..., -2.1027e-01,
            1.1557e-03,  2.8071e-01],
          [ 1.9890e-01, -4.6703e-01,  5.1052e-01,  ..., -4.0150e-01,
           -6.8973e-02,  3.3278e-02],
          ...,
          [ 7.5696e-01,  4.8583e-01, -2.4218e-01,  ...,  2.6136e-01,
           -2.8762e-01,  4.4005e-01],
          [-2.9983e-02,  2.5452e-01,  1.5212e-02,  ..., -5.2046e-01,
           -4.3200e-01,  2.8925e-01],
          [ 1.7098e-01, -6.6465e-01, -1.5366e-01,  ...,  7.6756e-01,
           -1.4483e-01, -2.9502e-01]],

         [[ 1.6043e+00, -7.9704e-01, -1.3449e-01,  ...,  8.6371e-01,
           -1.0202e+00,  6.3895e-01],
          [-3.6416e-01,  4.0991e-01, -2.9753e-01,  ...,  5.2031e-02,
            1.0043e+00, -9.9971e-01],
          [ 5.3115e-02,  2.8571e-01, -5.0671e-01,  ..., -4.9494e-01,
            1.5108e-01, -8.9164e-01],
          ...,
          [-6.3709e-01,  7.1806e-01, -7.9585e-01,  ...,  1.0932e+00,
            7.2918e-01, -2.4100e-01],
          [ 6.5217e-01, -9.1725e-01, -5.8266e-01,  ..., -6.9192e-01,
            3.7881e-01,  1.2858e-01],
          [-1.2288e+00,  1.3755e-02,  5.1668e-01,  ...,  9.4517e-01,
            6.3584e-01, -1.0071e-03]],

         [[-3.4164e-01, -3.5016e-01,  1.9149e-01,  ...,  9.9832e-01,
            1.4732e-01,  1.0232e+00],
          [-8.2321e-01,  8.0428e-01, -1.6696e-01,  ...,  3.8123e-02,
           -1.5602e-01,  4.6800e-01],
          [ 1.0098e+00, -7.1948e-01,  9.9368e-01,  ...,  2.6318e-01,
           -9.4659e-01,  5.3492e-01],
          ...,
          [ 1.5317e-01, -1.6229e-02,  1.0445e-01,  ..., -3.7858e-01,
           -2.3118e-01, -6.8021e-01],
          [-4.4647e-01,  5.1165e-01,  9.0345e-01,  ..., -9.4573e-02,
           -2.1962e-01,  1.2901e+00],
          [-7.2393e-01,  7.0850e-01,  1.2172e-01,  ..., -1.9972e-01,
           -5.1421e-01,  7.8868e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x6d37080)
tracing opcode STORE_FAST None pc=52 frame=11(0x6d37080)
tracing opcode STORE_FAST None pc=54 frame=11(0x6d37080)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x6d37080)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x6d37080)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=232 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=234 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=236 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=238 frame=11(0x6d37080)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x6d37080)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x6d37080)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x6d37080)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x6d37080)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d4a060)
push tracker due to record
push tracker 12 frame 0x6d4a060 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d4a060)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d4a060)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d4a060 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d4a060)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d4a060)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d4a060)
load fast: 22897552990832
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d4a060)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d4a060)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d4a060)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d4a060)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d4a060)
load fast: 22897554687216
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d4a060)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d4a060)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d4a060)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d4a060)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d4a060)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d4a060)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d4a060)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d4a060)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d4a060)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d4a060)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d4a060)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d4a060)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d4a060)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d4a060)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_23 : [#users=1] = placeholder[target=tensor_23]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_23, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d4a060)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x6d37080)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x6d37080)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x6d37080)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=262 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=264 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=266 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=268 frame=11(0x6d37080)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x6d37080)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x6d37080)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x6d37080)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x6d37080)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d154e0)
push tracker due to record
push tracker 12 frame 0x6d154e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d154e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d154e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d154e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d154e0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d154e0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d154e0)
load fast: 22897516791104
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d154e0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d154e0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d154e0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d154e0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d154e0)
load fast: 22897554687216
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d154e0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d154e0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d154e0)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d154e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d154e0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d154e0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d154e0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d154e0)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d154e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d154e0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d154e0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d154e0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d154e0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d154e0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_24 : [#users=1] = placeholder[target=tensor_24]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_24, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d154e0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x6d37080)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x6d37080)
tracing opcode STORE_FAST None pc=284 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x6d37080)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x6d37080)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x6d37080)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x6d37080)
tracing opcode BINARY_ADD None pc=296 frame=11(0x6d37080)
tracing opcode STORE_FAST None pc=298 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x6d37080)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=308 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=312 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=314 frame=11(0x6d37080)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=320 frame=11(0x6d37080)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x6d37080)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x6d37080)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x6d37080)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x6d37080)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=334 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=338 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=342 frame=11(0x6d37080)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x6d37080)
record function in graph <built-in method to of Tensor object at 0x14d33e5ad6d0>
func self id: 22897516795600
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x6d37080)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=354 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=356 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=360 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=362 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=364 frame=11(0x6d37080)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x6d37080)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x6d37080)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=382 frame=11(0x6d37080)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x6d37080)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e561420)
push tracker due to record
push tracker 3 frame 0x14d33e561420 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e561420)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e561420)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e561420 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e561420)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e561420)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e561420)
load fast: 22897554687312
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e561420)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e561420)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e561420)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e561420)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e561420)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=392 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=394 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=396 frame=11(0x6d37080)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=400 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=402 frame=11(0x6d37080)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x6ef8bb0)
push tracker due to record
push tracker 13 frame 0x6ef8bb0 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x6ef8bb0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x6ef8bb0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x6ef8bb0 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x6ef8bb0)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x6ef8bb0)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x6ef8bb0)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x6ef8bb0)
tracing opcode IS_OP None pc=16 frame=13(0x6ef8bb0)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=54 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=56 frame=13(0x6ef8bb0)
tracing opcode COMPARE_OP None pc=58 frame=13(0x6ef8bb0)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=84 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=86 frame=13(0x6ef8bb0)
tracing opcode COMPARE_OP None pc=88 frame=13(0x6ef8bb0)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=96 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=98 frame=13(0x6ef8bb0)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x6ef8bb0)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x6ef8bb0)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=138 frame=13(0x6ef8bb0)
load fast: 22897516794400
tracing opcode LOAD_METHOD None pc=140 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=142 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=144 frame=13(0x6ef8bb0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x6ef8bb0)
load fast: 22897516791744
tracing opcode LOAD_METHOD None pc=148 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=150 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=152 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=156 frame=13(0x6ef8bb0)
load fast: 22897554687216
tracing opcode LOAD_ATTR None pc=158 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x6ef8bb0)
tracing opcode STORE_FAST None pc=162 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=168 frame=13(0x6ef8bb0)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=172 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=176 frame=13(0x6ef8bb0)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x6ef8bb0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=186 frame=13(0x6ef8bb0)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=190 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=194 frame=13(0x6ef8bb0)
tracing opcode BINARY_ADD None pc=196 frame=13(0x6ef8bb0)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=200 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=202 frame=13(0x6ef8bb0)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x6ef8bb0)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x6ef8bb0)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x6ef8bb0)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x6ef8bb0)
tracing opcode STORE_FAST None pc=220 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=224 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x6ef8bb0)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x6ef8bb0)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=238 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=240 frame=13(0x6ef8bb0)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=248 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=250 frame=13(0x6ef8bb0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d49070)
push tracker due to record
push tracker 12 frame 0x6d49070 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d49070)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d49070)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d49070 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d49070)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d49070)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d49070)
load fast: 22897516614816
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d49070)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d49070)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d49070)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d49070)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d49070)
load fast: 22897554687216
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d49070)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d49070)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d49070)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d49070)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d49070)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d49070)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d49070)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d49070)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d49070)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d49070)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d49070)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d49070)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d49070)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d49070)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_29 : [#users=1] = placeholder[target=tensor_29]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_29, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d49070)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=258 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=260 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=264 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=266 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=268 frame=13(0x6ef8bb0)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x6ef8bb0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=278 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=280 frame=13(0x6ef8bb0)
tracing opcode BINARY_ADD None pc=282 frame=13(0x6ef8bb0)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=286 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=288 frame=13(0x6ef8bb0)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=292 frame=13(0x6ef8bb0)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=296 frame=13(0x6ef8bb0)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=304 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=306 frame=13(0x6ef8bb0)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=310 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=312 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=314 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x6ef8bb0)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x6ef2e80)
push tracker due to record
push tracker 14 frame 0x6ef2e80 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x6ef2e80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x6ef2e80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x6ef2e80 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x6ef2e80)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x6ef2e80)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x6ef2e80)
load fast: 22897516308576
tracing opcode LOAD_METHOD None pc=12 frame=14(0x6ef2e80)
tracing opcode LOAD_FAST None pc=14 frame=14(0x6ef2e80)
load fast: 22897516794400
tracing opcode LOAD_METHOD None pc=16 frame=14(0x6ef2e80)
tracing opcode LOAD_CONST None pc=18 frame=14(0x6ef2e80)
tracing opcode CALL_METHOD None pc=20 frame=14(0x6ef2e80)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x6ef2e80)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x6ef2e80)
tracing opcode LOAD_CONST None pc=26 frame=14(0x6ef2e80)
tracing opcode CALL_METHOD None pc=28 frame=14(0x6ef2e80)
tracing opcode LOAD_FAST None pc=30 frame=14(0x6ef2e80)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x6ef2e80)
tracing opcode LOAD_CONST None pc=34 frame=14(0x6ef2e80)
tracing opcode CALL_METHOD None pc=36 frame=14(0x6ef2e80)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x6ef2e80)
load fast: 22897516771824
tracing opcode LOAD_METHOD None pc=40 frame=14(0x6ef2e80)
tracing opcode LOAD_CONST None pc=42 frame=14(0x6ef2e80)
tracing opcode CALL_METHOD None pc=44 frame=14(0x6ef2e80)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x6ef2e80)
tracing opcode CALL_METHOD None pc=48 frame=14(0x6ef2e80)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x6ef2e80)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_30 : [#users=1] = placeholder[target=tensor_30]
    %tensor_31 : [#users=0] = placeholder[target=tensor_31]
    %tensor_32 : [#users=0] = placeholder[target=tensor_32]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_30, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x6ef2e80)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x6ef8bb0)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=326 frame=13(0x6ef8bb0)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x6ef8bb0)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=334 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x6ef8bb0)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x6ef8bb0)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=348 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=350 frame=13(0x6ef8bb0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=358 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=360 frame=13(0x6ef8bb0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d248e0)
push tracker due to record
push tracker 12 frame 0x6d248e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d248e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d248e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d248e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d248e0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d248e0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d248e0)
load fast: 22897516329056
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d248e0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d248e0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d248e0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d248e0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d248e0)
load fast: 22897554687216
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d248e0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d248e0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d248e0)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d248e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d248e0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d248e0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d248e0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d248e0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d248e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d248e0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d248e0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d248e0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d248e0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d248e0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_33 : [#users=1] = placeholder[target=tensor_33]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_33, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d248e0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x6ef8bb0)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x6ef8bb0)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=374 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=378 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=380 frame=13(0x6ef8bb0)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=386 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x6ef8bb0)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x6ef8bb0)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x6ef8bb0)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x6ef8bb0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x6ef8bb0)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=404 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=406 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=408 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=412 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=414 frame=13(0x6ef8bb0)
tracing opcode COMPARE_OP None pc=416 frame=13(0x6ef8bb0)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x6ef8bb0)
tracing opcode STORE_FAST None pc=452 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=458 frame=13(0x6ef8bb0)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x6ef8bb0)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x6ef8bb0)
tracing opcode BINARY_ADD None pc=464 frame=13(0x6ef8bb0)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=468 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=470 frame=13(0x6ef8bb0)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=474 frame=13(0x6ef8bb0)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=478 frame=13(0x6ef8bb0)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=486 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=488 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=492 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=494 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=496 frame=13(0x6ef8bb0)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=500 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=504 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x6ef8bb0)
record function in graph <built-in method to of Tensor object at 0x14d33e53edb0>
func self id: 22897516342704
tracing opcode CALL_METHOD None pc=508 frame=13(0x6ef8bb0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x6ef8bb0)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=518 frame=13(0x6ef8bb0)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=522 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=524 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=526 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x6ef8bb0)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x14d34086a640)
push tracker due to record
push tracker 15 frame 0x14d34086a640 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x14d34086a640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x14d34086a640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x14d34086a640 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x14d34086a640)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x14d34086a640)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x14d34086a640)
load fast: 22897516340624
tracing opcode LOAD_METHOD None pc=12 frame=15(0x14d34086a640)
tracing opcode LOAD_FAST None pc=14 frame=15(0x14d34086a640)
load fast: 22897516794400
tracing opcode LOAD_METHOD None pc=16 frame=15(0x14d34086a640)
tracing opcode LOAD_CONST None pc=18 frame=15(0x14d34086a640)
tracing opcode CALL_METHOD None pc=20 frame=15(0x14d34086a640)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x14d34086a640)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x14d34086a640)
tracing opcode LOAD_CONST None pc=26 frame=15(0x14d34086a640)
tracing opcode CALL_METHOD None pc=28 frame=15(0x14d34086a640)
tracing opcode LOAD_FAST None pc=30 frame=15(0x14d34086a640)
load fast: 22897516791744
tracing opcode LOAD_METHOD None pc=32 frame=15(0x14d34086a640)
tracing opcode LOAD_CONST None pc=34 frame=15(0x14d34086a640)
tracing opcode CALL_METHOD None pc=36 frame=15(0x14d34086a640)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x14d34086a640)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x14d34086a640)
tracing opcode LOAD_CONST None pc=42 frame=15(0x14d34086a640)
tracing opcode CALL_METHOD None pc=44 frame=15(0x14d34086a640)
tracing opcode BUILD_LIST None pc=46 frame=15(0x14d34086a640)
tracing opcode CALL_METHOD None pc=48 frame=15(0x14d34086a640)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x14d34086a640)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_34 : [#users=1] = placeholder[target=tensor_34]
    %tensor_35 : [#users=0] = placeholder[target=tensor_35]
    %tensor_36 : [#users=0] = placeholder[target=tensor_36]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_34, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x14d34086a640)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x6ef8bb0)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x6ef8bb0)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=538 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x6ef8bb0)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=548 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=550 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=552 frame=13(0x6ef8bb0)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x6ef8bb0)
tracing opcode LOAD_CONST None pc=556 frame=13(0x6ef8bb0)
tracing opcode CALL_METHOD None pc=558 frame=13(0x6ef8bb0)
tracing opcode COMPARE_OP None pc=560 frame=13(0x6ef8bb0)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x6ef8bb0)
tracing opcode LOAD_FAST None pc=626 frame=13(0x6ef8bb0)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x6ef8bb0)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x6ef8bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x6ef8bb0)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x6ef8bb0)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_26 : [#users=1] = placeholder[target=tensor_26]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_26, 1), kwargs = {})
    %tensor_27 : [#users=1] = placeholder[target=tensor_27]
    %tensor_28 : [#users=1] = placeholder[target=tensor_28]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_27, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_28, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x6ef8bb0)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=408 frame=11(0x6d37080)
tracing opcode IS_OP None pc=410 frame=11(0x6d37080)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=418 frame=11(0x6d37080)
tracing opcode BINARY_ADD None pc=420 frame=11(0x6d37080)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x6d37080)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=470 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=472 frame=11(0x6d37080)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=476 frame=11(0x6d37080)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=484 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=486 frame=11(0x6d37080)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e4d5840)
push tracker due to record
push tracker 3 frame 0x14d33e4d5840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e4d5840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e4d5840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e4d5840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e4d5840)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e4d5840)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e4d5840)
load fast: 22897554687504
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e4d5840)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e4d5840)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e4d5840)
load fast: 22897516461808
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e4d5840)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_38 : [#users=0] = placeholder[target=tensor_38]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0033, 0.0043, 0.0048,  ..., 0.0048, 0.0038, 0.0037],
          [0.0034, 0.0040, 0.0044,  ..., 0.0053, 0.0046, 0.0037],
          [0.0034, 0.0034, 0.0038,  ..., 0.0041, 0.0045, 0.0037],
          ...,
          [0.0030, 0.0040, 0.0051,  ..., 0.0049, 0.0034, 0.0043],
          [0.0043, 0.0050, 0.0037,  ..., 0.0034, 0.0039, 0.0037],
          [0.0032, 0.0049, 0.0039,  ..., 0.0038, 0.0029, 0.0040]],

         [[0.0043, 0.0046, 0.0038,  ..., 0.0044, 0.0029, 0.0045],
          [0.0043, 0.0044, 0.0039,  ..., 0.0034, 0.0037, 0.0037],
          [0.0039, 0.0035, 0.0038,  ..., 0.0027, 0.0039, 0.0047],
          ...,
          [0.0029, 0.0038, 0.0050,  ..., 0.0040, 0.0029, 0.0038],
          [0.0040, 0.0049, 0.0037,  ..., 0.0033, 0.0028, 0.0045],
          [0.0070, 0.0049, 0.0044,  ..., 0.0039, 0.0042, 0.0035]],

         [[0.0047, 0.0034, 0.0042,  ..., 0.0040, 0.0037, 0.0048],
          [0.0047, 0.0047, 0.0035,  ..., 0.0041, 0.0040, 0.0041],
          [0.0035, 0.0047, 0.0045,  ..., 0.0037, 0.0048, 0.0031],
          ...,
          [0.0032, 0.0050, 0.0031,  ..., 0.0053, 0.0052, 0.0032],
          [0.0032, 0.0049, 0.0045,  ..., 0.0041, 0.0044, 0.0050],
          [0.0039, 0.0031, 0.0046,  ..., 0.0049, 0.0037, 0.0031]],

         ...,

         [[0.0031, 0.0047, 0.0036,  ..., 0.0036, 0.0048, 0.0049],
          [0.0047, 0.0040, 0.0043,  ..., 0.0032, 0.0041, 0.0035],
          [0.0045, 0.0040, 0.0061,  ..., 0.0040, 0.0038, 0.0034],
          ...,
          [0.0039, 0.0041, 0.0044,  ..., 0.0043, 0.0041, 0.0043],
          [0.0035, 0.0048, 0.0034,  ..., 0.0045, 0.0039, 0.0040],
          [0.0025, 0.0044, 0.0040,  ..., 0.0032, 0.0042, 0.0052]],

         [[0.0044, 0.0036, 0.0046,  ..., 0.0033, 0.0040, 0.0039],
          [0.0042, 0.0043, 0.0030,  ..., 0.0028, 0.0031, 0.0050],
          [0.0038, 0.0039, 0.0042,  ..., 0.0039, 0.0068, 0.0037],
          ...,
          [0.0036, 0.0051, 0.0033,  ..., 0.0030, 0.0043, 0.0035],
          [0.0038, 0.0032, 0.0039,  ..., 0.0045, 0.0026, 0.0039],
          [0.0045, 0.0036, 0.0028,  ..., 0.0038, 0.0044, 0.0036]],

         [[0.0028, 0.0058, 0.0035,  ..., 0.0036, 0.0043, 0.0038],
          [0.0054, 0.0033, 0.0037,  ..., 0.0024, 0.0051, 0.0029],
          [0.0032, 0.0042, 0.0027,  ..., 0.0038, 0.0046, 0.0041],
          ...,
          [0.0044, 0.0035, 0.0039,  ..., 0.0027, 0.0038, 0.0049],
          [0.0057, 0.0032, 0.0045,  ..., 0.0036, 0.0043, 0.0039],
          [0.0044, 0.0038, 0.0030,  ..., 0.0029, 0.0045, 0.0028]]]]), modified_attrs={}, prev=None) 22897515161680 22897516461808
obj: tensor([[[[0.0033, 0.0043, 0.0048,  ..., 0.0048, 0.0038, 0.0037],
          [0.0034, 0.0040, 0.0044,  ..., 0.0053, 0.0046, 0.0037],
          [0.0034, 0.0034, 0.0038,  ..., 0.0041, 0.0045, 0.0037],
          ...,
          [0.0030, 0.0040, 0.0051,  ..., 0.0049, 0.0034, 0.0043],
          [0.0043, 0.0050, 0.0037,  ..., 0.0034, 0.0039, 0.0037],
          [0.0032, 0.0049, 0.0039,  ..., 0.0038, 0.0029, 0.0040]],

         [[0.0043, 0.0046, 0.0038,  ..., 0.0044, 0.0029, 0.0045],
          [0.0043, 0.0044, 0.0039,  ..., 0.0034, 0.0037, 0.0037],
          [0.0039, 0.0035, 0.0038,  ..., 0.0027, 0.0039, 0.0047],
          ...,
          [0.0029, 0.0038, 0.0050,  ..., 0.0040, 0.0029, 0.0038],
          [0.0040, 0.0049, 0.0037,  ..., 0.0033, 0.0028, 0.0045],
          [0.0070, 0.0049, 0.0044,  ..., 0.0039, 0.0042, 0.0035]],

         [[0.0047, 0.0034, 0.0042,  ..., 0.0040, 0.0037, 0.0048],
          [0.0047, 0.0047, 0.0035,  ..., 0.0041, 0.0040, 0.0041],
          [0.0035, 0.0047, 0.0045,  ..., 0.0037, 0.0048, 0.0031],
          ...,
          [0.0032, 0.0050, 0.0031,  ..., 0.0053, 0.0052, 0.0032],
          [0.0032, 0.0049, 0.0045,  ..., 0.0041, 0.0044, 0.0050],
          [0.0039, 0.0031, 0.0046,  ..., 0.0049, 0.0037, 0.0031]],

         ...,

         [[0.0031, 0.0047, 0.0036,  ..., 0.0036, 0.0048, 0.0049],
          [0.0047, 0.0040, 0.0043,  ..., 0.0032, 0.0041, 0.0035],
          [0.0045, 0.0040, 0.0061,  ..., 0.0040, 0.0038, 0.0034],
          ...,
          [0.0039, 0.0041, 0.0044,  ..., 0.0043, 0.0041, 0.0043],
          [0.0035, 0.0048, 0.0034,  ..., 0.0045, 0.0039, 0.0040],
          [0.0025, 0.0044, 0.0040,  ..., 0.0032, 0.0042, 0.0052]],

         [[0.0044, 0.0036, 0.0046,  ..., 0.0033, 0.0040, 0.0039],
          [0.0042, 0.0043, 0.0030,  ..., 0.0028, 0.0031, 0.0050],
          [0.0038, 0.0039, 0.0042,  ..., 0.0039, 0.0068, 0.0037],
          ...,
          [0.0036, 0.0051, 0.0033,  ..., 0.0030, 0.0043, 0.0035],
          [0.0038, 0.0032, 0.0039,  ..., 0.0045, 0.0026, 0.0039],
          [0.0045, 0.0036, 0.0028,  ..., 0.0038, 0.0044, 0.0036]],

         [[0.0028, 0.0058, 0.0035,  ..., 0.0036, 0.0043, 0.0038],
          [0.0054, 0.0033, 0.0037,  ..., 0.0024, 0.0051, 0.0029],
          [0.0032, 0.0042, 0.0027,  ..., 0.0038, 0.0046, 0.0041],
          ...,
          [0.0044, 0.0035, 0.0039,  ..., 0.0027, 0.0038, 0.0049],
          [0.0057, 0.0032, 0.0045,  ..., 0.0036, 0.0043, 0.0039],
          [0.0044, 0.0038, 0.0030,  ..., 0.0029, 0.0045, 0.0028]]]]) 22897516461808
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0033, 0.0043, 0.0048,  ..., 0.0048, 0.0038, 0.0037],
          [0.0034, 0.0040, 0.0044,  ..., 0.0053, 0.0046, 0.0037],
          [0.0034, 0.0034, 0.0038,  ..., 0.0041, 0.0045, 0.0037],
          ...,
          [0.0030, 0.0040, 0.0051,  ..., 0.0049, 0.0034, 0.0043],
          [0.0043, 0.0050, 0.0037,  ..., 0.0034, 0.0039, 0.0037],
          [0.0032, 0.0049, 0.0039,  ..., 0.0038, 0.0029, 0.0040]],

         [[0.0043, 0.0046, 0.0038,  ..., 0.0044, 0.0029, 0.0045],
          [0.0043, 0.0044, 0.0039,  ..., 0.0034, 0.0037, 0.0037],
          [0.0039, 0.0035, 0.0038,  ..., 0.0027, 0.0039, 0.0047],
          ...,
          [0.0029, 0.0038, 0.0050,  ..., 0.0040, 0.0029, 0.0038],
          [0.0040, 0.0049, 0.0037,  ..., 0.0033, 0.0028, 0.0045],
          [0.0070, 0.0049, 0.0044,  ..., 0.0039, 0.0042, 0.0035]],

         [[0.0047, 0.0034, 0.0042,  ..., 0.0040, 0.0037, 0.0048],
          [0.0047, 0.0047, 0.0035,  ..., 0.0041, 0.0040, 0.0041],
          [0.0035, 0.0047, 0.0045,  ..., 0.0037, 0.0048, 0.0031],
          ...,
          [0.0032, 0.0050, 0.0031,  ..., 0.0053, 0.0052, 0.0032],
          [0.0032, 0.0049, 0.0045,  ..., 0.0041, 0.0044, 0.0050],
          [0.0039, 0.0031, 0.0046,  ..., 0.0049, 0.0037, 0.0031]],

         ...,

         [[0.0031, 0.0047, 0.0036,  ..., 0.0036, 0.0048, 0.0049],
          [0.0047, 0.0040, 0.0043,  ..., 0.0032, 0.0041, 0.0035],
          [0.0045, 0.0040, 0.0061,  ..., 0.0040, 0.0038, 0.0034],
          ...,
          [0.0039, 0.0041, 0.0044,  ..., 0.0043, 0.0041, 0.0043],
          [0.0035, 0.0048, 0.0034,  ..., 0.0045, 0.0039, 0.0040],
          [0.0025, 0.0044, 0.0040,  ..., 0.0032, 0.0042, 0.0052]],

         [[0.0044, 0.0036, 0.0046,  ..., 0.0033, 0.0040, 0.0039],
          [0.0042, 0.0043, 0.0030,  ..., 0.0028, 0.0031, 0.0050],
          [0.0038, 0.0039, 0.0042,  ..., 0.0039, 0.0068, 0.0037],
          ...,
          [0.0036, 0.0051, 0.0033,  ..., 0.0030, 0.0043, 0.0035],
          [0.0038, 0.0032, 0.0039,  ..., 0.0045, 0.0026, 0.0039],
          [0.0045, 0.0036, 0.0028,  ..., 0.0038, 0.0044, 0.0036]],

         [[0.0028, 0.0058, 0.0035,  ..., 0.0036, 0.0043, 0.0038],
          [0.0054, 0.0033, 0.0037,  ..., 0.0024, 0.0051, 0.0029],
          [0.0032, 0.0042, 0.0027,  ..., 0.0038, 0.0046, 0.0041],
          ...,
          [0.0044, 0.0035, 0.0039,  ..., 0.0027, 0.0038, 0.0049],
          [0.0057, 0.0032, 0.0045,  ..., 0.0036, 0.0043, 0.0039],
          [0.0044, 0.0038, 0.0030,  ..., 0.0029, 0.0045, 0.0028]]]]), modified_attrs={}, prev=None) 22897515336992
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e4d5840)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x6d37080)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x6d37080)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=536 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=538 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=540 frame=11(0x6d37080)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=548 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=550 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=552 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=554 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=556 frame=11(0x6d37080)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=560 frame=11(0x6d37080)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=568 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=570 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=572 frame=11(0x6d37080)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x6d37080)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x6d37080)
tracing opcode LOAD_CONST None pc=578 frame=11(0x6d37080)
tracing opcode BINARY_ADD None pc=580 frame=11(0x6d37080)
tracing opcode STORE_FAST None pc=582 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x6d37080)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x6d37080)
tracing opcode LOAD_FAST None pc=588 frame=11(0x6d37080)
tracing opcode CALL_METHOD None pc=590 frame=11(0x6d37080)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x6d37080)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x6d37080)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x6d37080)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x6d37080)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_21 : [#users=1] = placeholder[target=tensor_21]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_21,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_25 : [#users=1] = placeholder[target=tensor_25]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_25, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_26 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_26, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_37 : [#users=1] = placeholder[target=tensor_37]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_37, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x6d37080)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x6d46f10)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x6d46f10)
tracing opcode LOAD_CONST None pc=46 frame=10(0x6d46f10)
tracing opcode IS_OP None pc=48 frame=10(0x6d46f10)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x6d46f10)
tracing opcode STORE_FAST None pc=54 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x6d46f10)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x6d46f10)
tracing opcode LOAD_FAST None pc=60 frame=10(0x6d46f10)
tracing opcode LOAD_FAST None pc=62 frame=10(0x6d46f10)
tracing opcode CALL_METHOD None pc=64 frame=10(0x6d46f10)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x14d33e56b610)
push tracker due to record
push tracker 16 frame 0x14d33e56b610 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x14d33e56b610)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x14d33e56b610)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x14d33e56b610 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x14d33e56b610)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x14d33e56b610)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x14d33e56b610)
load fast: 22897625157056
tracing opcode LOAD_METHOD None pc=12 frame=16(0x14d33e56b610)
tracing opcode LOAD_FAST None pc=14 frame=16(0x14d33e56b610)
load fast: 22897552743696
tracing opcode CALL_METHOD None pc=16 frame=16(0x14d33e56b610)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x14d33e56b610)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x14d33e56b610)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x14d33e56b610)
tracing opcode LOAD_FAST None pc=24 frame=16(0x14d33e56b610)
tracing opcode CALL_METHOD None pc=26 frame=16(0x14d33e56b610)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x6efdcd0)
push tracker due to record
push tracker 3 frame 0x6efdcd0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x6efdcd0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x6efdcd0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x6efdcd0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x6efdcd0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x6efdcd0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x6efdcd0)
load fast: 22897625198704
tracing opcode LOAD_ATTR None pc=12 frame=3(0x6efdcd0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x6efdcd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x6efdcd0)
load fast: 22897516561728
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x6efdcd0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_40 : [#users=0] = placeholder[target=tensor_40]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 6.1899e-03, -7.9387e-03,  5.9027e-03,  ..., -1.3429e-02,
          -6.9152e-03, -1.3175e-02],
         [ 2.2637e-03,  3.4370e-04,  1.2491e-03,  ..., -2.1740e-02,
          -1.6305e-02, -1.4487e-02],
         [ 6.6125e-03,  1.1303e-05,  4.8533e-03,  ..., -7.8812e-03,
          -8.0464e-03, -2.6371e-02],
         ...,
         [ 2.8356e-03, -1.3211e-03,  3.8016e-03,  ..., -8.7854e-03,
          -8.7285e-03, -1.0818e-02],
         [ 6.0349e-05,  1.4235e-03, -1.9950e-03,  ..., -1.5451e-02,
          -1.1727e-02, -1.3813e-02],
         [-3.7258e-03,  1.2057e-03,  3.1430e-03,  ..., -1.0656e-02,
          -8.9942e-03, -1.5172e-02]]]), modified_attrs={}, prev=None) 22897515021504 22897516561728
obj: tensor([[[ 6.1899e-03, -7.9387e-03,  5.9027e-03,  ..., -1.3429e-02,
          -6.9152e-03, -1.3175e-02],
         [ 2.2637e-03,  3.4370e-04,  1.2491e-03,  ..., -2.1740e-02,
          -1.6305e-02, -1.4487e-02],
         [ 6.6125e-03,  1.1303e-05,  4.8533e-03,  ..., -7.8812e-03,
          -8.0464e-03, -2.6371e-02],
         ...,
         [ 2.8356e-03, -1.3211e-03,  3.8016e-03,  ..., -8.7854e-03,
          -8.7285e-03, -1.0818e-02],
         [ 6.0349e-05,  1.4235e-03, -1.9950e-03,  ..., -1.5451e-02,
          -1.1727e-02, -1.3813e-02],
         [-3.7258e-03,  1.2057e-03,  3.1430e-03,  ..., -1.0656e-02,
          -8.9942e-03, -1.5172e-02]]]) 22897516561728
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 6.1899e-03, -7.9387e-03,  5.9027e-03,  ..., -1.3429e-02,
          -6.9152e-03, -1.3175e-02],
         [ 2.2637e-03,  3.4370e-04,  1.2491e-03,  ..., -2.1740e-02,
          -1.6305e-02, -1.4487e-02],
         [ 6.6125e-03,  1.1303e-05,  4.8533e-03,  ..., -7.8812e-03,
          -8.0464e-03, -2.6371e-02],
         ...,
         [ 2.8356e-03, -1.3211e-03,  3.8016e-03,  ..., -8.7854e-03,
          -8.7285e-03, -1.0818e-02],
         [ 6.0349e-05,  1.4235e-03, -1.9950e-03,  ..., -1.5451e-02,
          -1.1727e-02, -1.3813e-02],
         [-3.7258e-03,  1.2057e-03,  3.1430e-03,  ..., -1.0656e-02,
          -8.9942e-03, -1.5172e-02]]]), modified_attrs={}, prev=None) 22897515056960
tracing opcode RETURN_VALUE None pc=74 frame=3(0x6efdcd0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x14d33e56b610)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x14d33e56b610)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x14d33e56b610)
tracing opcode LOAD_FAST None pc=34 frame=16(0x14d33e56b610)
tracing opcode LOAD_FAST None pc=36 frame=16(0x14d33e56b610)
load fast: 22897552743216
tracing opcode BINARY_ADD None pc=38 frame=16(0x14d33e56b610)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x14d33e56b610)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d33e46aa40)
push tracker due to record
push tracker 2 frame 0x14d33e46aa40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d33e46aa40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d33e46aa40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d33e46aa40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d33e46aa40)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d33e46aa40)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d33e46aa40)
load fast: 22897515048848
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d33e46aa40)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d33e46aa40)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d33e46aa40)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d33e46aa40)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d33e46aa40)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d33e46aa40)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d33e46aa40)
record function in graph <built-in method mean of Tensor object at 0x14d33e402f90>
func self id: 22897515048848
tracing opcode STORE_FAST None pc=36 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d33e46aa40)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d33e46aa40)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d33e46aa40)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d33e46aa40)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d33e46aa40)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d33e46aa40)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d33e46aa40)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d33e46aa40)
record function in graph <built-in method mean of Tensor object at 0x14d33e429540>
func self id: 22897515205952
tracing opcode STORE_FAST None pc=60 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d33e46aa40)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d33e46aa40)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d33e46aa40)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d33e46aa40)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d33e46aa40)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d33e46aa40)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d33e46aa40)
load fast: 22897625157536
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d33e46aa40)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d33e46aa40)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d33e46aa40)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d33e46aa40)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d33e46aa40)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d33e46aa40)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d33e46aa40)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d33e46aa40)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d33e46aa40)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d33e46aa40)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d33e46aa40)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d33e46aa40)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d33e46aa40)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d33e46aa40)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d33e46aa40)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d33e46aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d33e46aa40)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d33e46aa40)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_42 : [#users=4] = placeholder[target=tensor_42]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_42,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_42, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_42, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_42, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d33e402f90>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d33e46aa40)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x14d33e56b610)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x14d33e56b610)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x14d33e56b610)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_39 : [#users=1] = placeholder[target=tensor_39]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_39,), kwargs = {})
    %tensor_41 : [#users=1] = placeholder[target=tensor_41]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_41), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x14d33e56b610)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x6d46f10)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x6d46f10)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x6d46f10)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x6d46f10)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_18 : [#users=2] = placeholder[target=tensor_18]
    %tensor_19 : [#users=1] = placeholder[target=tensor_19]
    %tensor_20 : [#users=1] = placeholder[target=tensor_20]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_18,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_20, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_26 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_26, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_19, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_18), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x6d46f10)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x6ddf2e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x6ddf2e0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x6ddf2e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x6ddf2e0)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x6ddf2e0)
tracing opcode LOAD_FAST None pc=48 frame=9(0x6ddf2e0)
tracing opcode CALL_METHOD None pc=50 frame=9(0x6ddf2e0)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d33e46ac40)
push tracker due to record
push tracker 17 frame 0x14d33e46ac40 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d33e46ac40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d33e46ac40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d33e46ac40 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d33e46ac40)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d33e46ac40)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d33e46ac40)
load fast: 22897625201440
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d33e46ac40)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d33e46ac40)
load fast: 22897515208592
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d33e46ac40)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d33e46ac40)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d33e46ac40)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d33e46ac40)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d33e46ac40)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d33e46ac40)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x14d3407f7a40)
push tracker due to record
push tracker 18 frame 0x14d3407f7a40 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x14d3407f7a40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x14d3407f7a40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x14d3407f7a40 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x14d3407f7a40)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x14d3407f7a40)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x14d3407f7a40)
load fast: 22897625200816
tracing opcode LOAD_METHOD None pc=12 frame=18(0x14d3407f7a40)
tracing opcode LOAD_FAST None pc=14 frame=18(0x14d3407f7a40)
load fast: 22897443906080
tracing opcode CALL_METHOD None pc=16 frame=18(0x14d3407f7a40)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x14d3407f7a40)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_44 : [#users=1] = placeholder[target=tensor_44]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_44,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x14d3407f7a40)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d33e46ac40)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d33e46ac40)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d33e46ac40)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_43 : [#users=1] = placeholder[target=tensor_43]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_43,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d33e46ac40)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x6ddf2e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x6ddf2e0)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x6ddf2e0)
tracing opcode LOAD_FAST None pc=58 frame=9(0x6ddf2e0)
tracing opcode LOAD_FAST None pc=60 frame=9(0x6ddf2e0)
tracing opcode CALL_METHOD None pc=62 frame=9(0x6ddf2e0)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x14d33e56bbe0)
push tracker due to record
push tracker 19 frame 0x14d33e56bbe0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x14d33e56bbe0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x14d33e56bbe0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x14d33e56bbe0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x14d33e56bbe0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x14d33e56bbe0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x14d33e56bbe0)
load fast: 22897625201056
tracing opcode LOAD_METHOD None pc=12 frame=19(0x14d33e56bbe0)
tracing opcode LOAD_FAST None pc=14 frame=19(0x14d33e56bbe0)
load fast: 22897443908720
tracing opcode CALL_METHOD None pc=16 frame=19(0x14d33e56bbe0)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x14d33e56bbe0)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x14d33e56bbe0)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x14d33e56bbe0)
tracing opcode LOAD_FAST None pc=24 frame=19(0x14d33e56bbe0)
tracing opcode CALL_METHOD None pc=26 frame=19(0x14d33e56bbe0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e40da40)
push tracker due to record
push tracker 3 frame 0x14d33e40da40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e40da40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e40da40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e40da40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e40da40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e40da40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e40da40)
load fast: 22897625201152
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e40da40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e40da40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e40da40)
load fast: 22897443833792
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e40da40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_46 : [#users=0] = placeholder[target=tensor_46]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.2333,  0.1906,  0.0957,  ...,  0.2045,  0.1126, -0.1497],
         [-0.1522,  0.0205,  0.2159,  ...,  0.2949, -0.0588, -0.1365],
         [ 0.4362, -0.4639, -0.5691,  ..., -0.2567, -0.3937,  0.7737],
         ...,
         [-0.6367,  0.0841, -0.4561,  ...,  0.3379,  0.1274, -0.1296],
         [-0.0953,  0.3954, -0.2641,  ..., -0.3517,  0.0095, -0.0121],
         [ 0.0638, -0.0928, -0.3187,  ..., -0.4291, -0.3627, -0.4435]]]), modified_attrs={}, prev=None) 22897336783104 22897443833792
obj: tensor([[[ 0.2333,  0.1906,  0.0957,  ...,  0.2045,  0.1126, -0.1497],
         [-0.1522,  0.0205,  0.2159,  ...,  0.2949, -0.0588, -0.1365],
         [ 0.4362, -0.4639, -0.5691,  ..., -0.2567, -0.3937,  0.7737],
         ...,
         [-0.6367,  0.0841, -0.4561,  ...,  0.3379,  0.1274, -0.1296],
         [-0.0953,  0.3954, -0.2641,  ..., -0.3517,  0.0095, -0.0121],
         [ 0.0638, -0.0928, -0.3187,  ..., -0.4291, -0.3627, -0.4435]]]) 22897443833792
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.2333,  0.1906,  0.0957,  ...,  0.2045,  0.1126, -0.1497],
         [-0.1522,  0.0205,  0.2159,  ...,  0.2949, -0.0588, -0.1365],
         [ 0.4362, -0.4639, -0.5691,  ..., -0.2567, -0.3937,  0.7737],
         ...,
         [-0.6367,  0.0841, -0.4561,  ...,  0.3379,  0.1274, -0.1296],
         [-0.0953,  0.3954, -0.2641,  ..., -0.3517,  0.0095, -0.0121],
         [ 0.0638, -0.0928, -0.3187,  ..., -0.4291, -0.3627, -0.4435]]]), modified_attrs={}, prev=None) 22897336696992
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e40da40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x14d33e56bbe0)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x14d33e56bbe0)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x14d33e56bbe0)
tracing opcode LOAD_FAST None pc=34 frame=19(0x14d33e56bbe0)
tracing opcode LOAD_FAST None pc=36 frame=19(0x14d33e56bbe0)
load fast: 22897515208592
tracing opcode BINARY_ADD None pc=38 frame=19(0x14d33e56bbe0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x14d33e56bbe0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d33e46a040)
push tracker due to record
push tracker 2 frame 0x14d33e46a040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d33e46a040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d33e46a040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d33e46a040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d33e46a040)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d33e46a040)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d33e46a040)
load fast: 22897336769648
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d33e46a040)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d33e46a040)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d33e46a040)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d33e46a040)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d33e46a040)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d33e46a040)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d33e46a040)
record function in graph <built-in method mean of Tensor object at 0x14d3339fdc70>
func self id: 22897336769648
tracing opcode STORE_FAST None pc=36 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d33e46a040)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d33e46a040)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d33e46a040)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d33e46a040)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d33e46a040)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d33e46a040)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d33e46a040)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d33e46a040)
record function in graph <built-in method mean of Tensor object at 0x14d333a133b0>
func self id: 22897336857520
tracing opcode STORE_FAST None pc=60 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d33e46a040)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d33e46a040)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d33e46a040)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d33e46a040)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d33e46a040)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d33e46a040)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d33e46a040)
load fast: 22897625202592
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d33e46a040)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d33e46a040)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d33e46a040)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d33e46a040)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d33e46a040)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d33e46a040)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d33e46a040)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d33e46a040)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d33e46a040)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d33e46a040)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d33e46a040)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d33e46a040)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d33e46a040)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d33e46a040)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d33e46a040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d33e46a040)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d33e46a040)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d33e46a040)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_48 : [#users=4] = placeholder[target=tensor_48]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_48,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_48, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_48, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_48, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d3339fdc70>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d33e46a040)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x14d33e56bbe0)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x14d33e56bbe0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x14d33e56bbe0)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_45 : [#users=1] = placeholder[target=tensor_45]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_45,), kwargs = {})
    %tensor_47 : [#users=1] = placeholder[target=tensor_47]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_47), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x14d33e56bbe0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x6ddf2e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x6ddf2e0)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x6ddf2e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x6ddf2e0)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x6ddf2e0)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_15 : [#users=2] = placeholder[target=tensor_15]
    %tensor_16 : [#users=1] = placeholder[target=tensor_16]
    %tensor_17 : [#users=1] = placeholder[target=tensor_17]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_15,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_17, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_26 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_26, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_16, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_15), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x6ddf2e0)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x7498470)
push tracker due to record
push tracker 9 frame 0x7498470 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x7498470)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x7498470)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x7498470 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x7498470)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x7498470)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x7498470)
load fast: 22897625200672
tracing opcode LOAD_ATTR None pc=12 frame=9(0x7498470)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x7498470)
load fast: 22897336860240
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x7498470)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x7498470)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x7498470)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x7498470)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x7498470)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x7498470)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x7498470)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x7494800)
push tracker due to record
push tracker 10 frame 0x7494800 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x7494800)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x7494800)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x7494800 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x7494800)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x7494800)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x7494800)
load fast: 22897625200864
tracing opcode LOAD_ATTR None pc=12 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x7494800)
load fast: 22897336860240
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x7494800)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x7494800)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x7494800)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x7494800)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x7494800)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x7494800)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x7494800)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x8894450)
push tracker due to record
push tracker 11 frame 0x8894450 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x8894450)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x8894450)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x8894450 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x8894450)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x8894450)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x8894450)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x8894450)
tracing opcode IS_OP None pc=16 frame=11(0x8894450)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x8894450)
load fast: 22897625199328
tracing opcode LOAD_METHOD None pc=22 frame=11(0x8894450)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x8894450)
load fast: 22897336860240
tracing opcode CALL_METHOD None pc=26 frame=11(0x8894450)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=34 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=36 frame=11(0x8894450)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x7490d30)
push tracker due to record
push tracker 12 frame 0x7490d30 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x7490d30)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x7490d30)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x7490d30 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x7490d30)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x7490d30)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x7490d30)
load fast: 22897231190592
tracing opcode LOAD_METHOD None pc=12 frame=12(0x7490d30)
tracing opcode CALL_METHOD None pc=14 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=16 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=18 frame=12(0x7490d30)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x7490d30)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x7490d30)
tracing opcode LOAD_FAST None pc=24 frame=12(0x7490d30)
load fast: 22897625199328
tracing opcode LOAD_ATTR None pc=26 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=28 frame=12(0x7490d30)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x7490d30)
tracing opcode BINARY_ADD None pc=32 frame=12(0x7490d30)
tracing opcode STORE_FAST None pc=34 frame=12(0x7490d30)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x7490d30)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x7490d30)
tracing opcode LOAD_FAST None pc=40 frame=12(0x7490d30)
tracing opcode CALL_METHOD None pc=42 frame=12(0x7490d30)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x7490d30)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x7490d30)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=50 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=52 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=54 frame=12(0x7490d30)
tracing opcode LOAD_CONST None pc=56 frame=12(0x7490d30)
tracing opcode CALL_METHOD None pc=58 frame=12(0x7490d30)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x7490d30)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_56 : [#users=1] = placeholder[target=tensor_56]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_56, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x7490d30)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=40 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=42 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=44 frame=11(0x8894450)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x8894450)
record function in graph <built-in method chunk of Tensor object at 0x14d32d516860>
func self id: 22897230964832
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x8894450)
sub_value 22897231191072 tensor([[[[ 8.9420e-01, -7.5232e-01,  1.5091e-01,  ...,  1.7418e-02,
           -1.2049e+00, -3.6054e-01],
          [-3.7824e-01, -2.3050e-01, -6.5708e-01,  ..., -3.1605e-02,
           -1.2945e+00, -1.6396e-01],
          [-5.2293e-01,  7.8448e-01,  3.3999e-01,  ...,  2.6128e-01,
           -3.3602e-01, -4.3922e-01],
          ...,
          [ 1.4760e-01, -6.1527e-02,  8.1437e-01,  ..., -6.6432e-01,
           -5.5014e-01, -2.1336e-01],
          [ 1.6248e-01, -5.6393e-01,  2.7383e-01,  ..., -9.2400e-01,
            3.3826e-01, -8.2620e-01],
          [ 2.3631e-01,  9.6508e-02,  1.3794e-01,  ...,  1.6423e-01,
            9.3663e-01, -3.8359e-02]],

         [[-4.1631e-01, -2.0041e-01, -3.5983e-01,  ..., -1.4315e-01,
           -2.9073e-01,  8.2629e-02],
          [-7.5299e-01, -3.8357e-03, -5.2026e-01,  ...,  9.6151e-01,
           -4.0719e-01, -7.2930e-01],
          [-3.6000e-01, -2.4464e-01,  2.8197e-01,  ...,  5.0975e-01,
            3.5642e-01, -1.2502e+00],
          ...,
          [ 4.1033e-01, -4.6342e-01,  1.3706e-01,  ...,  3.2239e-01,
            1.7965e-01,  2.1714e-01],
          [-5.1739e-01, -1.9557e-01,  8.8577e-02,  ...,  7.4513e-01,
           -7.5172e-01, -2.6395e-02],
          [ 4.6279e-01, -4.1065e-01,  5.9518e-01,  ..., -1.0263e+00,
            2.1686e-01,  8.3091e-01]],

         [[ 4.2140e-01,  2.8976e-01, -5.4982e-01,  ...,  1.4261e-03,
           -8.4496e-01, -8.4254e-01],
          [-1.4816e-01, -1.0610e+00, -6.8854e-01,  ...,  5.2723e-01,
            4.6186e-01, -8.5531e-01],
          [-8.8433e-01,  6.4453e-01,  4.6757e-02,  ...,  7.1051e-01,
           -1.1935e-01,  4.6961e-01],
          ...,
          [-5.1921e-01,  1.0573e+00,  2.6414e-01,  ..., -2.3890e-01,
            5.2211e-01, -4.5240e-01],
          [ 1.6102e+00, -6.5088e-01,  9.5179e-02,  ..., -2.6716e-02,
            1.7088e+00, -7.6766e-02],
          [-2.5513e-01, -2.0483e-02,  6.8200e-01,  ...,  3.5919e-01,
           -6.6940e-01, -1.2834e+00]],

         ...,

         [[-3.6149e-01,  7.2158e-02,  3.9929e-01,  ..., -9.0945e-02,
            2.1002e-01,  8.2714e-02],
          [ 8.4683e-02, -1.0728e+00,  5.7077e-01,  ...,  2.4096e-01,
            4.5151e-01,  2.9002e-01],
          [-1.9820e-01,  1.0568e+00, -3.2116e-01,  ...,  4.7602e-01,
           -7.8759e-01, -1.3224e-02],
          ...,
          [-2.1874e-01, -3.5764e-01, -1.9543e-02,  ...,  4.4716e-01,
           -3.1720e-01, -7.7994e-01],
          [-5.0061e-01,  1.0947e+00,  6.4522e-01,  ..., -4.9700e-01,
           -5.7743e-02,  3.1268e-01],
          [-5.0607e-01,  2.9260e-01,  6.8676e-01,  ..., -4.4188e-01,
            1.7567e-01, -1.3488e-01]],

         [[-1.1541e-02, -1.0015e-01,  4.9488e-01,  ...,  3.2089e-01,
            3.4183e-01,  7.0574e-01],
          [-6.1883e-01,  1.0425e+00, -4.6584e-01,  ...,  1.4918e-01,
           -5.9796e-01, -1.3522e+00],
          [ 1.4525e-02, -4.1141e-01,  6.5538e-01,  ...,  3.9054e-01,
           -3.8461e-01,  3.7357e-01],
          ...,
          [-3.5108e-01,  4.4759e-01, -4.9485e-01,  ..., -1.0329e-01,
            5.0582e-01, -2.9430e-01],
          [-9.3506e-01, -2.6282e-01,  6.1983e-02,  ..., -1.8975e-01,
            2.8587e-01, -6.4294e-01],
          [-5.5958e-01, -2.3577e-01, -1.3274e-01,  ..., -1.5832e-01,
           -2.8725e-01,  8.1783e-01]],

         [[ 1.4212e-01, -2.6456e-01,  7.3566e-01,  ...,  9.1216e-01,
            3.7686e-01,  4.7997e-01],
          [-2.6540e-01,  5.3953e-01, -1.0837e-01,  ..., -6.2015e-02,
            1.1205e+00, -5.1746e-01],
          [ 7.1008e-02,  5.3601e-01,  2.8082e-01,  ..., -1.0815e-01,
            7.8532e-01, -9.9438e-01],
          ...,
          [-3.8861e-01, -1.9022e-01, -2.8450e-03,  ..., -3.5894e-01,
           -5.3052e-01, -8.6531e-01],
          [ 2.5584e-01,  3.0855e-02,  3.2025e-01,  ...,  1.7062e-01,
           -2.5038e-01,  3.7590e-01],
          [ 8.8576e-01,  3.6948e-01,  1.7605e-01,  ...,  7.1986e-01,
            4.7451e-01,  1.4495e-01]]]])
sub_value 22897230964912 tensor([[[[-0.5479, -0.3857, -0.1205,  ...,  1.0978, -1.1153,  0.6217],
          [-1.5604, -0.2146, -0.2050,  ...,  0.4761, -0.5258, -0.8767],
          [ 1.1073, -0.2159, -0.2719,  ...,  0.1516,  0.5107,  0.0055],
          ...,
          [ 0.1629,  0.4051,  0.2268,  ..., -0.0853,  0.4859, -0.2522],
          [ 0.6757, -0.2110, -0.0774,  ..., -0.5735,  0.1762, -0.6055],
          [-0.0871,  1.1133, -1.0444,  ..., -0.5908, -0.5895,  0.5349]],

         [[ 0.0709, -0.3146,  0.4442,  ...,  0.1123,  0.1913,  0.0408],
          [ 0.4281, -0.2105, -0.3026,  ...,  0.1436, -0.5612,  0.0299],
          [ 0.3137,  0.1745, -0.3765,  ..., -0.1000, -0.9946, -0.1547],
          ...,
          [-0.4510,  0.5656, -0.0902,  ..., -0.3972,  0.5809,  0.1925],
          [ 1.0137, -0.0319,  0.0790,  ...,  0.2168, -0.4157,  0.2195],
          [-0.1318, -0.1468, -0.5880,  ...,  0.0668, -0.1467,  0.4130]],

         [[-0.3073, -0.0660,  1.2075,  ..., -0.6731,  0.9667,  0.9325],
          [ 0.1035,  0.5191,  0.2380,  ...,  0.5553,  0.1134, -0.2655],
          [ 0.8238,  0.3657, -0.4319,  ...,  0.4713, -0.5100,  0.4234],
          ...,
          [ 0.0142,  0.3887,  0.3518,  ...,  0.4523, -0.7701, -0.8986],
          [ 0.8855,  0.2163,  0.3370,  ...,  0.2381, -0.6622,  0.2638],
          [ 0.6893, -0.3692,  0.2915,  ...,  0.1073, -0.2051,  0.5696]],

         ...,

         [[ 0.7124, -0.4484,  0.5993,  ..., -0.9493,  0.5337, -0.3234],
          [ 0.2358,  0.1329, -0.0730,  ..., -0.5236, -0.6215,  0.7804],
          [-0.1022,  0.1179,  0.6602,  ..., -0.0544, -1.6495, -0.9642],
          ...,
          [ 0.1434,  0.4840, -0.1772,  ...,  0.0743,  0.1411,  0.2165],
          [-0.0785, -0.8964,  0.4434,  ...,  0.0537, -0.3081,  0.8706],
          [-1.2581, -0.9027,  0.3044,  ..., -0.7352, -0.7705, -0.8633]],

         [[ 0.1388,  0.3119,  0.5249,  ..., -0.1479, -0.7446,  0.7854],
          [-0.2383,  0.4426,  0.5117,  ..., -0.2167,  0.1507,  1.4951],
          [ 0.6663,  0.4350,  0.7196,  ...,  0.7344, -0.5872,  0.2655],
          ...,
          [-0.0651,  0.1687, -0.6745,  ...,  0.4397, -0.1654, -0.6100],
          [-0.0373, -0.0173,  0.1436,  ...,  0.0449, -0.4169, -0.0407],
          [-0.4106,  0.2750, -0.0748,  ...,  0.8301, -0.0884,  0.3389]],

         [[-0.0306,  0.8978,  0.2084,  ..., -0.2287, -1.0787,  0.0688],
          [ 1.0841,  0.5950, -0.9256,  ...,  0.1245, -0.4481,  0.2032],
          [ 0.7175,  0.3697,  0.5957,  ...,  0.0576,  0.3344,  0.4082],
          ...,
          [ 0.0570, -0.5197, -0.5968,  ..., -0.8552, -0.0141, -0.0431],
          [ 0.1587, -0.2033, -0.4466,  ...,  0.1447,  0.4717, -0.8506],
          [ 1.0778, -0.4067,  0.6311,  ..., -1.1484, -0.1873, -0.1117]]]])
sub_value 22897230963792 tensor([[[[ 0.3267, -0.2733, -0.1417,  ...,  0.2962,  0.3961, -0.2193],
          [ 0.0628,  0.2162, -0.4777,  ..., -0.1075, -0.4424, -0.8733],
          [ 0.3934, -1.5201, -0.5118,  ...,  0.4792,  0.0132,  0.0766],
          ...,
          [-0.7513,  0.2217, -1.1660,  ...,  0.4583, -0.4809,  0.9593],
          [ 0.1473,  0.6999, -0.3021,  ..., -0.5705,  0.3945,  0.1527],
          [-0.6213, -0.5346,  0.3417,  ..., -0.5700,  0.2104,  0.0409]],

         [[-0.2454, -0.0588,  0.3656,  ...,  0.6536,  1.2473,  1.4054],
          [ 0.0662,  0.0225, -0.9999,  ...,  0.0982, -0.1307,  1.0455],
          [-0.9040, -0.0756, -0.4935,  ...,  0.5527, -0.1890, -0.0188],
          ...,
          [ 0.4686, -0.9780,  0.3717,  ...,  1.1482,  0.0073, -0.2513],
          [-0.6214,  0.3419,  0.2702,  ..., -0.0502, -0.7678,  0.0570],
          [-0.0187, -0.1227, -0.1790,  ...,  0.2868, -0.5612, -0.1949]],

         [[ 0.8722, -0.2485,  0.2215,  ...,  0.8277, -0.2579, -0.3663],
          [ 0.1193,  0.4898, -0.0744,  ...,  0.3295,  0.4364, -0.6373],
          [ 0.1134, -0.3269,  0.5195,  ...,  0.6893, -0.8941, -1.1840],
          ...,
          [ 0.1178, -1.6715, -1.2398,  ...,  0.8237, -0.1071, -0.4230],
          [ 0.3885,  1.1090,  0.0209,  ...,  0.6585, -0.2550, -0.7786],
          [ 0.6219, -0.1048, -0.0747,  ...,  0.8077, -0.3767, -0.4490]],

         ...,

         [[-0.9121, -0.7335,  1.1616,  ..., -0.5626, -0.7344,  0.0902],
          [ 0.0628, -0.1390,  0.3463,  ...,  0.2554,  0.2659,  0.3384],
          [ 0.8661,  0.1711,  0.4907,  ..., -0.3624,  0.7025,  0.4320],
          ...,
          [ 0.3872,  0.4294, -0.2069,  ..., -0.9873, -0.8507, -0.3292],
          [ 0.1764, -0.9261,  0.2406,  ...,  0.4205,  0.3208,  0.3778],
          [-0.8721,  0.6661, -0.3486,  ...,  0.2885, -0.8897,  0.3097]],

         [[ 0.0196, -0.1267, -0.1854,  ..., -0.5603, -1.1107, -1.4524],
          [ 0.3500,  0.0780,  0.3383,  ..., -0.6301,  0.4960, -0.1204],
          [ 0.6454, -0.5009, -0.0647,  ..., -0.7647,  0.0462, -0.3013],
          ...,
          [ 0.9118,  0.4216,  0.1089,  ..., -1.0337,  0.6387,  0.3642],
          [-0.1948,  0.2057,  0.2859,  ..., -0.7854, -0.1792, -0.7172],
          [ 0.7131, -0.1868, -0.8373,  ..., -0.2478, -0.3858, -0.4468]],

         [[-0.3624,  0.2312, -0.9265,  ...,  0.1259,  0.1026, -0.1077],
          [-0.0586,  1.0062,  0.8340,  ..., -1.0226,  0.7358, -0.7204],
          [-1.0643,  0.1499, -0.1538,  ...,  0.8914,  0.4039, -0.1688],
          ...,
          [-0.9304, -1.0207,  0.2640,  ...,  0.6193, -0.6775, -0.2045],
          [-0.4070,  0.6563, -0.3495,  ..., -0.3237, -0.6740,  0.4946],
          [-0.9081,  0.9216, -0.1313,  ...,  0.4893, -0.7444, -0.1519]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x8894450)
tracing opcode STORE_FAST None pc=52 frame=11(0x8894450)
tracing opcode STORE_FAST None pc=54 frame=11(0x8894450)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x8894450)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x8894450)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=232 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=234 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=236 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=238 frame=11(0x8894450)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x8894450)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x8894450)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x8894450)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x8894450)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d3339f0c40)
push tracker due to record
push tracker 12 frame 0x14d3339f0c40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d3339f0c40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d3339f0c40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d3339f0c40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d3339f0c40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d3339f0c40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d3339f0c40)
load fast: 22897515204912
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d3339f0c40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d3339f0c40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d3339f0c40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d3339f0c40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d3339f0c40)
load fast: 22897625199328
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d3339f0c40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d3339f0c40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d3339f0c40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d3339f0c40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d3339f0c40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d3339f0c40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d3339f0c40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d3339f0c40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d3339f0c40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d3339f0c40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d3339f0c40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d3339f0c40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d3339f0c40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d3339f0c40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_57 : [#users=1] = placeholder[target=tensor_57]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_57, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d3339f0c40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x8894450)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x8894450)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x8894450)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=262 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=264 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=266 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=268 frame=11(0x8894450)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x8894450)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x8894450)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x8894450)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x8894450)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d34086aa40)
push tracker due to record
push tracker 12 frame 0x14d34086aa40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d34086aa40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d34086aa40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d34086aa40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d34086aa40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d34086aa40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d34086aa40)
load fast: 22897230789184
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d34086aa40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d34086aa40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d34086aa40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d34086aa40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d34086aa40)
load fast: 22897625199328
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d34086aa40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d34086aa40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d34086aa40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d34086aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d34086aa40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d34086aa40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d34086aa40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d34086aa40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d34086aa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d34086aa40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d34086aa40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d34086aa40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d34086aa40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d34086aa40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_58 : [#users=1] = placeholder[target=tensor_58]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_58, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d34086aa40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x8894450)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x8894450)
tracing opcode STORE_FAST None pc=284 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x8894450)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x8894450)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x8894450)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x8894450)
tracing opcode BINARY_ADD None pc=296 frame=11(0x8894450)
tracing opcode STORE_FAST None pc=298 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x8894450)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=308 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=312 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=314 frame=11(0x8894450)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=320 frame=11(0x8894450)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x8894450)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x8894450)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x8894450)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x8894450)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=334 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=338 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=342 frame=11(0x8894450)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x8894450)
record function in graph <built-in method to of Tensor object at 0x14d32d4aaae0>
func self id: 22897230523104
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x8894450)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=354 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=356 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=360 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=362 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=364 frame=11(0x8894450)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x8894450)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x8894450)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=382 frame=11(0x8894450)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x8894450)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d3339f0240)
push tracker due to record
push tracker 3 frame 0x14d3339f0240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d3339f0240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d3339f0240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d3339f0240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d3339f0240)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d3339f0240)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d3339f0240)
load fast: 22897625200960
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d3339f0240)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d3339f0240)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d3339f0240)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d3339f0240)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d3339f0240)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=392 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=394 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=396 frame=11(0x8894450)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=400 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=402 frame=11(0x8894450)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x6d1a590)
push tracker due to record
push tracker 13 frame 0x6d1a590 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x6d1a590)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x6d1a590)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x6d1a590 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x6d1a590)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x6d1a590)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x6d1a590)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x6d1a590)
tracing opcode IS_OP None pc=16 frame=13(0x6d1a590)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=54 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=56 frame=13(0x6d1a590)
tracing opcode COMPARE_OP None pc=58 frame=13(0x6d1a590)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=84 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=86 frame=13(0x6d1a590)
tracing opcode COMPARE_OP None pc=88 frame=13(0x6d1a590)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=96 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=98 frame=13(0x6d1a590)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x6d1a590)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x6d1a590)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=138 frame=13(0x6d1a590)
load fast: 22897230523504
tracing opcode LOAD_METHOD None pc=140 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=142 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=144 frame=13(0x6d1a590)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x6d1a590)
load fast: 22897230964912
tracing opcode LOAD_METHOD None pc=148 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=150 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=152 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=156 frame=13(0x6d1a590)
load fast: 22897625199328
tracing opcode LOAD_ATTR None pc=158 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x6d1a590)
tracing opcode STORE_FAST None pc=162 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=168 frame=13(0x6d1a590)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=172 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=176 frame=13(0x6d1a590)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x6d1a590)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=186 frame=13(0x6d1a590)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=190 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=194 frame=13(0x6d1a590)
tracing opcode BINARY_ADD None pc=196 frame=13(0x6d1a590)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=200 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=202 frame=13(0x6d1a590)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x6d1a590)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x6d1a590)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x6d1a590)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x6d1a590)
tracing opcode STORE_FAST None pc=220 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=224 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x6d1a590)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x6d1a590)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=238 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=240 frame=13(0x6d1a590)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=248 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=250 frame=13(0x6d1a590)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6c52ea0)
push tracker due to record
push tracker 12 frame 0x6c52ea0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6c52ea0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6c52ea0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6c52ea0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6c52ea0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6c52ea0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6c52ea0)
load fast: 22897443906240
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6c52ea0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6c52ea0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6c52ea0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6c52ea0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6c52ea0)
load fast: 22897625199328
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6c52ea0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6c52ea0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6c52ea0)
tracing opcode STORE_FAST None pc=34 frame=12(0x6c52ea0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6c52ea0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6c52ea0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6c52ea0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6c52ea0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6c52ea0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6c52ea0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6c52ea0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6c52ea0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6c52ea0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6c52ea0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_63 : [#users=1] = placeholder[target=tensor_63]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_63, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6c52ea0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=258 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=260 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=264 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=266 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=268 frame=13(0x6d1a590)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x6d1a590)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=278 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=280 frame=13(0x6d1a590)
tracing opcode BINARY_ADD None pc=282 frame=13(0x6d1a590)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=286 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=288 frame=13(0x6d1a590)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=292 frame=13(0x6d1a590)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=296 frame=13(0x6d1a590)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=304 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=306 frame=13(0x6d1a590)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=310 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=312 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=314 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x6d1a590)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x7499530)
push tracker due to record
push tracker 14 frame 0x7499530 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x7499530)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x7499530)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x7499530 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x7499530)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x7499530)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x7499530)
load fast: 22897516780496
tracing opcode LOAD_METHOD None pc=12 frame=14(0x7499530)
tracing opcode LOAD_FAST None pc=14 frame=14(0x7499530)
load fast: 22897230523504
tracing opcode LOAD_METHOD None pc=16 frame=14(0x7499530)
tracing opcode LOAD_CONST None pc=18 frame=14(0x7499530)
tracing opcode CALL_METHOD None pc=20 frame=14(0x7499530)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x7499530)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x7499530)
tracing opcode LOAD_CONST None pc=26 frame=14(0x7499530)
tracing opcode CALL_METHOD None pc=28 frame=14(0x7499530)
tracing opcode LOAD_FAST None pc=30 frame=14(0x7499530)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x7499530)
tracing opcode LOAD_CONST None pc=34 frame=14(0x7499530)
tracing opcode CALL_METHOD None pc=36 frame=14(0x7499530)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x7499530)
load fast: 22897552959264
tracing opcode LOAD_METHOD None pc=40 frame=14(0x7499530)
tracing opcode LOAD_CONST None pc=42 frame=14(0x7499530)
tracing opcode CALL_METHOD None pc=44 frame=14(0x7499530)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x7499530)
tracing opcode CALL_METHOD None pc=48 frame=14(0x7499530)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x7499530)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_64 : [#users=1] = placeholder[target=tensor_64]
    %tensor_65 : [#users=0] = placeholder[target=tensor_65]
    %tensor_66 : [#users=0] = placeholder[target=tensor_66]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_64, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x7499530)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x6d1a590)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=326 frame=13(0x6d1a590)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x6d1a590)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=334 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x6d1a590)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x6d1a590)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=348 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=350 frame=13(0x6d1a590)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=358 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=360 frame=13(0x6d1a590)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6ef2bb0)
push tracker due to record
push tracker 12 frame 0x6ef2bb0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6ef2bb0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6ef2bb0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6ef2bb0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6ef2bb0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6ef2bb0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6ef2bb0)
load fast: 22897230787024
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6ef2bb0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6ef2bb0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6ef2bb0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6ef2bb0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6ef2bb0)
load fast: 22897625199328
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6ef2bb0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6ef2bb0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6ef2bb0)
tracing opcode STORE_FAST None pc=34 frame=12(0x6ef2bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6ef2bb0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6ef2bb0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6ef2bb0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6ef2bb0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6ef2bb0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6ef2bb0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6ef2bb0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6ef2bb0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6ef2bb0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6ef2bb0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_67 : [#users=1] = placeholder[target=tensor_67]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_67, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6ef2bb0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x6d1a590)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x6d1a590)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=374 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=378 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=380 frame=13(0x6d1a590)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=386 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x6d1a590)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x6d1a590)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x6d1a590)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x6d1a590)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x6d1a590)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=404 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=406 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=408 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=412 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=414 frame=13(0x6d1a590)
tracing opcode COMPARE_OP None pc=416 frame=13(0x6d1a590)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x6d1a590)
tracing opcode STORE_FAST None pc=452 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=458 frame=13(0x6d1a590)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x6d1a590)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x6d1a590)
tracing opcode BINARY_ADD None pc=464 frame=13(0x6d1a590)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=468 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=470 frame=13(0x6d1a590)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=474 frame=13(0x6d1a590)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=478 frame=13(0x6d1a590)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=486 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=488 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=492 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=494 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=496 frame=13(0x6d1a590)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=500 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=504 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x6d1a590)
record function in graph <built-in method to of Tensor object at 0x14d32d4b93b0>
func self id: 22897230582704
tracing opcode CALL_METHOD None pc=508 frame=13(0x6d1a590)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x6d1a590)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=518 frame=13(0x6d1a590)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=522 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=524 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=526 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x6d1a590)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x834adc0)
push tracker due to record
push tracker 15 frame 0x834adc0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x834adc0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x834adc0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x834adc0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x834adc0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x834adc0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x834adc0)
load fast: 22897230583584
tracing opcode LOAD_METHOD None pc=12 frame=15(0x834adc0)
tracing opcode LOAD_FAST None pc=14 frame=15(0x834adc0)
load fast: 22897230523504
tracing opcode LOAD_METHOD None pc=16 frame=15(0x834adc0)
tracing opcode LOAD_CONST None pc=18 frame=15(0x834adc0)
tracing opcode CALL_METHOD None pc=20 frame=15(0x834adc0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x834adc0)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x834adc0)
tracing opcode LOAD_CONST None pc=26 frame=15(0x834adc0)
tracing opcode CALL_METHOD None pc=28 frame=15(0x834adc0)
tracing opcode LOAD_FAST None pc=30 frame=15(0x834adc0)
load fast: 22897230964912
tracing opcode LOAD_METHOD None pc=32 frame=15(0x834adc0)
tracing opcode LOAD_CONST None pc=34 frame=15(0x834adc0)
tracing opcode CALL_METHOD None pc=36 frame=15(0x834adc0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x834adc0)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x834adc0)
tracing opcode LOAD_CONST None pc=42 frame=15(0x834adc0)
tracing opcode CALL_METHOD None pc=44 frame=15(0x834adc0)
tracing opcode BUILD_LIST None pc=46 frame=15(0x834adc0)
tracing opcode CALL_METHOD None pc=48 frame=15(0x834adc0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x834adc0)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_68 : [#users=1] = placeholder[target=tensor_68]
    %tensor_69 : [#users=0] = placeholder[target=tensor_69]
    %tensor_70 : [#users=0] = placeholder[target=tensor_70]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_68, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x834adc0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x6d1a590)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x6d1a590)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=538 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x6d1a590)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=548 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=550 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=552 frame=13(0x6d1a590)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x6d1a590)
tracing opcode LOAD_CONST None pc=556 frame=13(0x6d1a590)
tracing opcode CALL_METHOD None pc=558 frame=13(0x6d1a590)
tracing opcode COMPARE_OP None pc=560 frame=13(0x6d1a590)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x6d1a590)
tracing opcode LOAD_FAST None pc=626 frame=13(0x6d1a590)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x6d1a590)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x6d1a590)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x6d1a590)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x6d1a590)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_60 : [#users=1] = placeholder[target=tensor_60]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_60, 1), kwargs = {})
    %tensor_61 : [#users=1] = placeholder[target=tensor_61]
    %tensor_62 : [#users=1] = placeholder[target=tensor_62]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_61, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_62, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x6d1a590)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=408 frame=11(0x8894450)
tracing opcode IS_OP None pc=410 frame=11(0x8894450)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=418 frame=11(0x8894450)
tracing opcode BINARY_ADD None pc=420 frame=11(0x8894450)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x8894450)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=470 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=472 frame=11(0x8894450)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=476 frame=11(0x8894450)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=484 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=486 frame=11(0x8894450)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e54cc40)
push tracker due to record
push tracker 3 frame 0x14d33e54cc40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e54cc40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e54cc40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e54cc40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e54cc40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e54cc40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e54cc40)
load fast: 22897625201200
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e54cc40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e54cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e54cc40)
load fast: 22897230267232
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e54cc40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_72 : [#users=0] = placeholder[target=tensor_72]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0041, 0.0042, 0.0047,  ..., 0.0038, 0.0041, 0.0036],
          [0.0043, 0.0058, 0.0045,  ..., 0.0035, 0.0040, 0.0045],
          [0.0035, 0.0038, 0.0026,  ..., 0.0035, 0.0033, 0.0044],
          ...,
          [0.0039, 0.0038, 0.0029,  ..., 0.0049, 0.0028, 0.0029],
          [0.0043, 0.0032, 0.0042,  ..., 0.0031, 0.0036, 0.0045],
          [0.0041, 0.0040, 0.0036,  ..., 0.0040, 0.0036, 0.0035]],

         [[0.0042, 0.0041, 0.0047,  ..., 0.0036, 0.0035, 0.0054],
          [0.0055, 0.0026, 0.0046,  ..., 0.0041, 0.0033, 0.0045],
          [0.0043, 0.0028, 0.0033,  ..., 0.0055, 0.0040, 0.0040],
          ...,
          [0.0034, 0.0035, 0.0036,  ..., 0.0038, 0.0029, 0.0045],
          [0.0053, 0.0039, 0.0036,  ..., 0.0044, 0.0038, 0.0038],
          [0.0043, 0.0058, 0.0033,  ..., 0.0035, 0.0045, 0.0042]],

         [[0.0030, 0.0039, 0.0036,  ..., 0.0054, 0.0038, 0.0031],
          [0.0037, 0.0037, 0.0030,  ..., 0.0047, 0.0038, 0.0027],
          [0.0040, 0.0043, 0.0048,  ..., 0.0043, 0.0039, 0.0028],
          ...,
          [0.0037, 0.0048, 0.0027,  ..., 0.0045, 0.0030, 0.0035],
          [0.0057, 0.0036, 0.0030,  ..., 0.0040, 0.0039, 0.0030],
          [0.0036, 0.0039, 0.0033,  ..., 0.0034, 0.0031, 0.0033]],

         ...,

         [[0.0037, 0.0046, 0.0032,  ..., 0.0035, 0.0048, 0.0036],
          [0.0046, 0.0042, 0.0038,  ..., 0.0039, 0.0045, 0.0040],
          [0.0026, 0.0052, 0.0039,  ..., 0.0038, 0.0029, 0.0039],
          ...,
          [0.0038, 0.0036, 0.0032,  ..., 0.0037, 0.0041, 0.0030],
          [0.0036, 0.0061, 0.0035,  ..., 0.0033, 0.0031, 0.0046],
          [0.0045, 0.0031, 0.0048,  ..., 0.0049, 0.0034, 0.0042]],

         [[0.0039, 0.0045, 0.0043,  ..., 0.0027, 0.0039, 0.0037],
          [0.0049, 0.0058, 0.0028,  ..., 0.0042, 0.0040, 0.0031],
          [0.0051, 0.0035, 0.0047,  ..., 0.0038, 0.0042, 0.0041],
          ...,
          [0.0036, 0.0033, 0.0043,  ..., 0.0046, 0.0038, 0.0055],
          [0.0042, 0.0040, 0.0051,  ..., 0.0047, 0.0040, 0.0042],
          [0.0054, 0.0050, 0.0037,  ..., 0.0036, 0.0070, 0.0038]],

         [[0.0031, 0.0040, 0.0039,  ..., 0.0033, 0.0037, 0.0038],
          [0.0041, 0.0035, 0.0030,  ..., 0.0045, 0.0037, 0.0031],
          [0.0034, 0.0034, 0.0044,  ..., 0.0040, 0.0044, 0.0050],
          ...,
          [0.0035, 0.0045, 0.0039,  ..., 0.0050, 0.0034, 0.0039],
          [0.0044, 0.0048, 0.0036,  ..., 0.0034, 0.0036, 0.0046],
          [0.0041, 0.0042, 0.0034,  ..., 0.0032, 0.0034, 0.0035]]]]), modified_attrs={}, prev=None) 22897516287408 22897230267232
obj: tensor([[[[0.0041, 0.0042, 0.0047,  ..., 0.0038, 0.0041, 0.0036],
          [0.0043, 0.0058, 0.0045,  ..., 0.0035, 0.0040, 0.0045],
          [0.0035, 0.0038, 0.0026,  ..., 0.0035, 0.0033, 0.0044],
          ...,
          [0.0039, 0.0038, 0.0029,  ..., 0.0049, 0.0028, 0.0029],
          [0.0043, 0.0032, 0.0042,  ..., 0.0031, 0.0036, 0.0045],
          [0.0041, 0.0040, 0.0036,  ..., 0.0040, 0.0036, 0.0035]],

         [[0.0042, 0.0041, 0.0047,  ..., 0.0036, 0.0035, 0.0054],
          [0.0055, 0.0026, 0.0046,  ..., 0.0041, 0.0033, 0.0045],
          [0.0043, 0.0028, 0.0033,  ..., 0.0055, 0.0040, 0.0040],
          ...,
          [0.0034, 0.0035, 0.0036,  ..., 0.0038, 0.0029, 0.0045],
          [0.0053, 0.0039, 0.0036,  ..., 0.0044, 0.0038, 0.0038],
          [0.0043, 0.0058, 0.0033,  ..., 0.0035, 0.0045, 0.0042]],

         [[0.0030, 0.0039, 0.0036,  ..., 0.0054, 0.0038, 0.0031],
          [0.0037, 0.0037, 0.0030,  ..., 0.0047, 0.0038, 0.0027],
          [0.0040, 0.0043, 0.0048,  ..., 0.0043, 0.0039, 0.0028],
          ...,
          [0.0037, 0.0048, 0.0027,  ..., 0.0045, 0.0030, 0.0035],
          [0.0057, 0.0036, 0.0030,  ..., 0.0040, 0.0039, 0.0030],
          [0.0036, 0.0039, 0.0033,  ..., 0.0034, 0.0031, 0.0033]],

         ...,

         [[0.0037, 0.0046, 0.0032,  ..., 0.0035, 0.0048, 0.0036],
          [0.0046, 0.0042, 0.0038,  ..., 0.0039, 0.0045, 0.0040],
          [0.0026, 0.0052, 0.0039,  ..., 0.0038, 0.0029, 0.0039],
          ...,
          [0.0038, 0.0036, 0.0032,  ..., 0.0037, 0.0041, 0.0030],
          [0.0036, 0.0061, 0.0035,  ..., 0.0033, 0.0031, 0.0046],
          [0.0045, 0.0031, 0.0048,  ..., 0.0049, 0.0034, 0.0042]],

         [[0.0039, 0.0045, 0.0043,  ..., 0.0027, 0.0039, 0.0037],
          [0.0049, 0.0058, 0.0028,  ..., 0.0042, 0.0040, 0.0031],
          [0.0051, 0.0035, 0.0047,  ..., 0.0038, 0.0042, 0.0041],
          ...,
          [0.0036, 0.0033, 0.0043,  ..., 0.0046, 0.0038, 0.0055],
          [0.0042, 0.0040, 0.0051,  ..., 0.0047, 0.0040, 0.0042],
          [0.0054, 0.0050, 0.0037,  ..., 0.0036, 0.0070, 0.0038]],

         [[0.0031, 0.0040, 0.0039,  ..., 0.0033, 0.0037, 0.0038],
          [0.0041, 0.0035, 0.0030,  ..., 0.0045, 0.0037, 0.0031],
          [0.0034, 0.0034, 0.0044,  ..., 0.0040, 0.0044, 0.0050],
          ...,
          [0.0035, 0.0045, 0.0039,  ..., 0.0050, 0.0034, 0.0039],
          [0.0044, 0.0048, 0.0036,  ..., 0.0034, 0.0036, 0.0046],
          [0.0041, 0.0042, 0.0034,  ..., 0.0032, 0.0034, 0.0035]]]]) 22897230267232
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0041, 0.0042, 0.0047,  ..., 0.0038, 0.0041, 0.0036],
          [0.0043, 0.0058, 0.0045,  ..., 0.0035, 0.0040, 0.0045],
          [0.0035, 0.0038, 0.0026,  ..., 0.0035, 0.0033, 0.0044],
          ...,
          [0.0039, 0.0038, 0.0029,  ..., 0.0049, 0.0028, 0.0029],
          [0.0043, 0.0032, 0.0042,  ..., 0.0031, 0.0036, 0.0045],
          [0.0041, 0.0040, 0.0036,  ..., 0.0040, 0.0036, 0.0035]],

         [[0.0042, 0.0041, 0.0047,  ..., 0.0036, 0.0035, 0.0054],
          [0.0055, 0.0026, 0.0046,  ..., 0.0041, 0.0033, 0.0045],
          [0.0043, 0.0028, 0.0033,  ..., 0.0055, 0.0040, 0.0040],
          ...,
          [0.0034, 0.0035, 0.0036,  ..., 0.0038, 0.0029, 0.0045],
          [0.0053, 0.0039, 0.0036,  ..., 0.0044, 0.0038, 0.0038],
          [0.0043, 0.0058, 0.0033,  ..., 0.0035, 0.0045, 0.0042]],

         [[0.0030, 0.0039, 0.0036,  ..., 0.0054, 0.0038, 0.0031],
          [0.0037, 0.0037, 0.0030,  ..., 0.0047, 0.0038, 0.0027],
          [0.0040, 0.0043, 0.0048,  ..., 0.0043, 0.0039, 0.0028],
          ...,
          [0.0037, 0.0048, 0.0027,  ..., 0.0045, 0.0030, 0.0035],
          [0.0057, 0.0036, 0.0030,  ..., 0.0040, 0.0039, 0.0030],
          [0.0036, 0.0039, 0.0033,  ..., 0.0034, 0.0031, 0.0033]],

         ...,

         [[0.0037, 0.0046, 0.0032,  ..., 0.0035, 0.0048, 0.0036],
          [0.0046, 0.0042, 0.0038,  ..., 0.0039, 0.0045, 0.0040],
          [0.0026, 0.0052, 0.0039,  ..., 0.0038, 0.0029, 0.0039],
          ...,
          [0.0038, 0.0036, 0.0032,  ..., 0.0037, 0.0041, 0.0030],
          [0.0036, 0.0061, 0.0035,  ..., 0.0033, 0.0031, 0.0046],
          [0.0045, 0.0031, 0.0048,  ..., 0.0049, 0.0034, 0.0042]],

         [[0.0039, 0.0045, 0.0043,  ..., 0.0027, 0.0039, 0.0037],
          [0.0049, 0.0058, 0.0028,  ..., 0.0042, 0.0040, 0.0031],
          [0.0051, 0.0035, 0.0047,  ..., 0.0038, 0.0042, 0.0041],
          ...,
          [0.0036, 0.0033, 0.0043,  ..., 0.0046, 0.0038, 0.0055],
          [0.0042, 0.0040, 0.0051,  ..., 0.0047, 0.0040, 0.0042],
          [0.0054, 0.0050, 0.0037,  ..., 0.0036, 0.0070, 0.0038]],

         [[0.0031, 0.0040, 0.0039,  ..., 0.0033, 0.0037, 0.0038],
          [0.0041, 0.0035, 0.0030,  ..., 0.0045, 0.0037, 0.0031],
          [0.0034, 0.0034, 0.0044,  ..., 0.0040, 0.0044, 0.0050],
          ...,
          [0.0035, 0.0045, 0.0039,  ..., 0.0050, 0.0034, 0.0039],
          [0.0044, 0.0048, 0.0036,  ..., 0.0034, 0.0036, 0.0046],
          [0.0041, 0.0042, 0.0034,  ..., 0.0032, 0.0034, 0.0035]]]]), modified_attrs={}, prev=None) 22897443714576
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e54cc40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x8894450)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x8894450)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=536 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=538 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=540 frame=11(0x8894450)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=548 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=550 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=552 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=554 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=556 frame=11(0x8894450)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=560 frame=11(0x8894450)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=568 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=570 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=572 frame=11(0x8894450)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x8894450)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x8894450)
tracing opcode LOAD_CONST None pc=578 frame=11(0x8894450)
tracing opcode BINARY_ADD None pc=580 frame=11(0x8894450)
tracing opcode STORE_FAST None pc=582 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x8894450)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x8894450)
tracing opcode LOAD_FAST None pc=588 frame=11(0x8894450)
tracing opcode CALL_METHOD None pc=590 frame=11(0x8894450)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x8894450)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x8894450)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x8894450)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x8894450)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_55 : [#users=1] = placeholder[target=tensor_55]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_55,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_59 : [#users=1] = placeholder[target=tensor_59]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_59, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_60 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_60, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_71 : [#users=1] = placeholder[target=tensor_71]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_71, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x8894450)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x7494800)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x7494800)
tracing opcode LOAD_CONST None pc=46 frame=10(0x7494800)
tracing opcode IS_OP None pc=48 frame=10(0x7494800)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x7494800)
tracing opcode STORE_FAST None pc=54 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x7494800)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x7494800)
tracing opcode LOAD_FAST None pc=60 frame=10(0x7494800)
tracing opcode LOAD_FAST None pc=62 frame=10(0x7494800)
tracing opcode CALL_METHOD None pc=64 frame=10(0x7494800)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x6d499b0)
push tracker due to record
push tracker 16 frame 0x6d499b0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x6d499b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x6d499b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x6d499b0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x6d499b0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x6d499b0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x6d499b0)
load fast: 22897625200912
tracing opcode LOAD_METHOD None pc=12 frame=16(0x6d499b0)
tracing opcode LOAD_FAST None pc=14 frame=16(0x6d499b0)
load fast: 22897230258960
tracing opcode CALL_METHOD None pc=16 frame=16(0x6d499b0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x6d499b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x6d499b0)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x6d499b0)
tracing opcode LOAD_FAST None pc=24 frame=16(0x6d499b0)
tracing opcode CALL_METHOD None pc=26 frame=16(0x6d499b0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x748f7f0)
push tracker due to record
push tracker 3 frame 0x748f7f0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x748f7f0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x748f7f0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x748f7f0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x748f7f0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x748f7f0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x748f7f0)
load fast: 22897625201248
tracing opcode LOAD_ATTR None pc=12 frame=3(0x748f7f0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x748f7f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x748f7f0)
load fast: 22897230322320
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x748f7f0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_74 : [#users=0] = placeholder[target=tensor_74]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.0166,  0.0387, -0.0414,  ...,  0.0363,  0.0312, -0.0682],
         [ 0.0202,  0.0334, -0.0490,  ...,  0.0474,  0.0312, -0.0666],
         [ 0.0193,  0.0412, -0.0435,  ...,  0.0359,  0.0345, -0.0647],
         ...,
         [ 0.0169,  0.0360, -0.0423,  ...,  0.0354,  0.0343, -0.0667],
         [ 0.0149,  0.0345, -0.0463,  ...,  0.0397,  0.0359, -0.0667],
         [ 0.0110,  0.0335, -0.0451,  ...,  0.0355,  0.0357, -0.0656]]]), modified_attrs={}, prev=None) 22897515715312 22897230322320
obj: tensor([[[ 0.0166,  0.0387, -0.0414,  ...,  0.0363,  0.0312, -0.0682],
         [ 0.0202,  0.0334, -0.0490,  ...,  0.0474,  0.0312, -0.0666],
         [ 0.0193,  0.0412, -0.0435,  ...,  0.0359,  0.0345, -0.0647],
         ...,
         [ 0.0169,  0.0360, -0.0423,  ...,  0.0354,  0.0343, -0.0667],
         [ 0.0149,  0.0345, -0.0463,  ...,  0.0397,  0.0359, -0.0667],
         [ 0.0110,  0.0335, -0.0451,  ...,  0.0355,  0.0357, -0.0656]]]) 22897230322320
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.0166,  0.0387, -0.0414,  ...,  0.0363,  0.0312, -0.0682],
         [ 0.0202,  0.0334, -0.0490,  ...,  0.0474,  0.0312, -0.0666],
         [ 0.0193,  0.0412, -0.0435,  ...,  0.0359,  0.0345, -0.0647],
         ...,
         [ 0.0169,  0.0360, -0.0423,  ...,  0.0354,  0.0343, -0.0667],
         [ 0.0149,  0.0345, -0.0463,  ...,  0.0397,  0.0359, -0.0667],
         [ 0.0110,  0.0335, -0.0451,  ...,  0.0355,  0.0357, -0.0656]]]), modified_attrs={}, prev=None) 22897515381616
tracing opcode RETURN_VALUE None pc=74 frame=3(0x748f7f0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x6d499b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x6d499b0)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x6d499b0)
tracing opcode LOAD_FAST None pc=34 frame=16(0x6d499b0)
tracing opcode LOAD_FAST None pc=36 frame=16(0x6d499b0)
load fast: 22897336860240
tracing opcode BINARY_ADD None pc=38 frame=16(0x6d499b0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x6d499b0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d33e54c040)
push tracker due to record
push tracker 2 frame 0x14d33e54c040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d33e54c040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d33e54c040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d33e54c040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d33e54c040)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d33e54c040)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d33e54c040)
load fast: 22897230058816
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d33e54c040)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d33e54c040)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d33e54c040)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d33e54c040)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d33e54c040)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d33e54c040)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d33e54c040)
record function in graph <built-in method mean of Tensor object at 0x14d32d439540>
func self id: 22897230058816
tracing opcode STORE_FAST None pc=36 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d33e54c040)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d33e54c040)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d33e54c040)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d33e54c040)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d33e54c040)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d33e54c040)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d33e54c040)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d33e54c040)
record function in graph <built-in method mean of Tensor object at 0x14d32d4399f0>
func self id: 22897230060016
tracing opcode STORE_FAST None pc=60 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d33e54c040)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d33e54c040)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d33e54c040)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d33e54c040)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d33e54c040)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d33e54c040)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d33e54c040)
load fast: 22897625201776
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d33e54c040)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d33e54c040)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d33e54c040)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d33e54c040)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d33e54c040)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d33e54c040)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d33e54c040)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d33e54c040)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d33e54c040)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d33e54c040)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d33e54c040)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d33e54c040)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d33e54c040)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d33e54c040)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d33e54c040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d33e54c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d33e54c040)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d33e54c040)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_76 : [#users=4] = placeholder[target=tensor_76]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_76,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_76, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_76, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_76, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d32d439540>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d33e54c040)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x6d499b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x6d499b0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x6d499b0)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_73 : [#users=1] = placeholder[target=tensor_73]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_73,), kwargs = {})
    %tensor_75 : [#users=1] = placeholder[target=tensor_75]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_75), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x6d499b0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x7494800)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x7494800)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x7494800)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x7494800)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_52 : [#users=2] = placeholder[target=tensor_52]
    %tensor_53 : [#users=1] = placeholder[target=tensor_53]
    %tensor_54 : [#users=1] = placeholder[target=tensor_54]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_52,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_54, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_60 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_60, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_53, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_52), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x7494800)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x7498470)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x7498470)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x7498470)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x7498470)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x7498470)
tracing opcode LOAD_FAST None pc=48 frame=9(0x7498470)
tracing opcode CALL_METHOD None pc=50 frame=9(0x7498470)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d33e40d040)
push tracker due to record
push tracker 17 frame 0x14d33e40d040 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d33e40d040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d33e40d040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d33e40d040 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d33e40d040)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d33e40d040)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d33e40d040)
load fast: 22897625201584
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d33e40d040)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d33e40d040)
load fast: 22897230120176
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d33e40d040)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d33e40d040)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d33e40d040)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d33e40d040)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d33e40d040)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d33e40d040)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x7497c10)
push tracker due to record
push tracker 18 frame 0x7497c10 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x7497c10)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x7497c10)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x7497c10 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x7497c10)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x7497c10)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x7497c10)
load fast: 22897625201824
tracing opcode LOAD_METHOD None pc=12 frame=18(0x7497c10)
tracing opcode LOAD_FAST None pc=14 frame=18(0x7497c10)
load fast: 22897229771776
tracing opcode CALL_METHOD None pc=16 frame=18(0x7497c10)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x7497c10)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_78 : [#users=1] = placeholder[target=tensor_78]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_78,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x7497c10)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d33e40d040)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d33e40d040)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d33e40d040)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_77 : [#users=1] = placeholder[target=tensor_77]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_77,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d33e40d040)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x7498470)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x7498470)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x7498470)
tracing opcode LOAD_FAST None pc=58 frame=9(0x7498470)
tracing opcode LOAD_FAST None pc=60 frame=9(0x7498470)
tracing opcode CALL_METHOD None pc=62 frame=9(0x7498470)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x6637910)
push tracker due to record
push tracker 19 frame 0x6637910 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x6637910)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x6637910)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x6637910 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x6637910)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x6637910)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x6637910)
load fast: 22897625202016
tracing opcode LOAD_METHOD None pc=12 frame=19(0x6637910)
tracing opcode LOAD_FAST None pc=14 frame=19(0x6637910)
load fast: 22897229773776
tracing opcode CALL_METHOD None pc=16 frame=19(0x6637910)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x6637910)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x6637910)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x6637910)
tracing opcode LOAD_FAST None pc=24 frame=19(0x6637910)
tracing opcode CALL_METHOD None pc=26 frame=19(0x6637910)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e40d440)
push tracker due to record
push tracker 3 frame 0x14d33e40d440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e40d440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e40d440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e40d440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e40d440)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e40d440)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e40d440)
load fast: 22897625199280
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e40d440)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e40d440)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e40d440)
load fast: 22897229838752
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e40d440)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_80 : [#users=0] = placeholder[target=tensor_80]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.4903, -0.3187, -0.0233,  ..., -0.2651,  0.0849, -0.2227],
         [-0.0185,  0.1959, -0.1861,  ..., -0.2641,  0.0922, -0.3892],
         [ 0.1202, -0.4921, -0.3434,  ...,  0.1027, -0.5639, -0.1673],
         ...,
         [ 0.0506, -0.4999, -0.6067,  ..., -0.3228, -0.0563,  0.2052],
         [ 0.0816, -0.4909,  0.1671,  ..., -0.6406,  0.1209, -0.2555],
         [ 0.1729, -0.5748,  0.3256,  ...,  0.3526,  0.1278, -0.0979]]]), modified_attrs={}, prev=None) 22897229877504 22897229838752
obj: tensor([[[-0.4903, -0.3187, -0.0233,  ..., -0.2651,  0.0849, -0.2227],
         [-0.0185,  0.1959, -0.1861,  ..., -0.2641,  0.0922, -0.3892],
         [ 0.1202, -0.4921, -0.3434,  ...,  0.1027, -0.5639, -0.1673],
         ...,
         [ 0.0506, -0.4999, -0.6067,  ..., -0.3228, -0.0563,  0.2052],
         [ 0.0816, -0.4909,  0.1671,  ..., -0.6406,  0.1209, -0.2555],
         [ 0.1729, -0.5748,  0.3256,  ...,  0.3526,  0.1278, -0.0979]]]) 22897229838752
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.4903, -0.3187, -0.0233,  ..., -0.2651,  0.0849, -0.2227],
         [-0.0185,  0.1959, -0.1861,  ..., -0.2641,  0.0922, -0.3892],
         [ 0.1202, -0.4921, -0.3434,  ...,  0.1027, -0.5639, -0.1673],
         ...,
         [ 0.0506, -0.4999, -0.6067,  ..., -0.3228, -0.0563,  0.2052],
         [ 0.0816, -0.4909,  0.1671,  ..., -0.6406,  0.1209, -0.2555],
         [ 0.1729, -0.5748,  0.3256,  ...,  0.3526,  0.1278, -0.0979]]]), modified_attrs={}, prev=None) 22897229848784
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e40d440)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x6637910)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x6637910)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x6637910)
tracing opcode LOAD_FAST None pc=34 frame=19(0x6637910)
tracing opcode LOAD_FAST None pc=36 frame=19(0x6637910)
load fast: 22897230120176
tracing opcode BINARY_ADD None pc=38 frame=19(0x6637910)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x6637910)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x6eedb50)
push tracker due to record
push tracker 2 frame 0x6eedb50 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x6eedb50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x6eedb50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x6eedb50 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x6eedb50)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x6eedb50)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x6eedb50)
load fast: 22897229891200
tracing opcode LOAD_ATTR None pc=12 frame=2(0x6eedb50)
tracing opcode STORE_FAST None pc=14 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x6eedb50)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x6eedb50)
tracing opcode CALL_METHOD None pc=20 frame=2(0x6eedb50)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x6eedb50)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=28 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=30 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=32 frame=2(0x6eedb50)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x6eedb50)
record function in graph <built-in method mean of Tensor object at 0x14d32d410680>
func self id: 22897229891200
tracing opcode STORE_FAST None pc=36 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x6eedb50)
tracing opcode LOAD_FAST None pc=40 frame=2(0x6eedb50)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x6eedb50)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=46 frame=2(0x6eedb50)
tracing opcode CALL_METHOD None pc=48 frame=2(0x6eedb50)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=52 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=54 frame=2(0x6eedb50)
tracing opcode LOAD_CONST None pc=56 frame=2(0x6eedb50)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x6eedb50)
record function in graph <built-in method mean of Tensor object at 0x14d32d410a40>
func self id: 22897229892160
tracing opcode STORE_FAST None pc=60 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x6eedb50)
tracing opcode LOAD_FAST None pc=64 frame=2(0x6eedb50)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x6eedb50)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x6eedb50)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x6eedb50)
tracing opcode LOAD_FAST None pc=72 frame=2(0x6eedb50)
tracing opcode LOAD_FAST None pc=74 frame=2(0x6eedb50)
load fast: 22897625200240
tracing opcode LOAD_ATTR None pc=76 frame=2(0x6eedb50)
tracing opcode BINARY_ADD None pc=78 frame=2(0x6eedb50)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x6eedb50)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x6eedb50)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x6eedb50)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x6eedb50)
tracing opcode LOAD_FAST None pc=90 frame=2(0x6eedb50)
tracing opcode CALL_METHOD None pc=92 frame=2(0x6eedb50)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x6eedb50)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x6eedb50)
tracing opcode LOAD_FAST None pc=100 frame=2(0x6eedb50)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x6eedb50)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x6eedb50)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x6eedb50)
tracing opcode BINARY_ADD None pc=108 frame=2(0x6eedb50)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x6eedb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x6eedb50)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x6eedb50)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_82 : [#users=4] = placeholder[target=tensor_82]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_82,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_82, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_82, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_82, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d32d410680>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x6eedb50)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x6637910)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x6637910)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x6637910)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_79 : [#users=1] = placeholder[target=tensor_79]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_79,), kwargs = {})
    %tensor_81 : [#users=1] = placeholder[target=tensor_81]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_81), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x6637910)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x7498470)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x7498470)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x7498470)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x7498470)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x7498470)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_49 : [#users=2] = placeholder[target=tensor_49]
    %tensor_50 : [#users=1] = placeholder[target=tensor_50]
    %tensor_51 : [#users=1] = placeholder[target=tensor_51]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_49,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_51, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_60 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_60, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_50, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_49), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x7498470)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0xa4d8520)
push tracker due to record
push tracker 9 frame 0xa4d8520 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0xa4d8520)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0xa4d8520)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0xa4d8520 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0xa4d8520)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0xa4d8520)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0xa4d8520)
load fast: 22897625200192
tracing opcode LOAD_ATTR None pc=12 frame=9(0xa4d8520)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0xa4d8520)
load fast: 22897229976896
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0xa4d8520)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0xa4d8520)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0xa4d8520)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0xa4d8520)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0xa4d8520)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0xa4d8520)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0xa4d8520)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x74a2070)
push tracker due to record
push tracker 10 frame 0x74a2070 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x74a2070)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x74a2070)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x74a2070 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x74a2070)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x74a2070)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x74a2070)
load fast: 22897625200144
tracing opcode LOAD_ATTR None pc=12 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x74a2070)
load fast: 22897229976896
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x74a2070)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x74a2070)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x74a2070)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x74a2070)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x74a2070)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x74a2070)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x74a2070)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0xa4d34d0)
push tracker due to record
push tracker 11 frame 0xa4d34d0 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0xa4d34d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0xa4d34d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0xa4d34d0 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0xa4d34d0)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0xa4d34d0)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0xa4d34d0)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0xa4d34d0)
tracing opcode IS_OP None pc=16 frame=11(0xa4d34d0)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0xa4d34d0)
load fast: 22897625199568
tracing opcode LOAD_METHOD None pc=22 frame=11(0xa4d34d0)
tracing opcode LOAD_DEREF None pc=24 frame=11(0xa4d34d0)
load fast: 22897229976896
tracing opcode CALL_METHOD None pc=26 frame=11(0xa4d34d0)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=32 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=34 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=36 frame=11(0xa4d34d0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d286f0)
push tracker due to record
push tracker 12 frame 0x6d286f0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d286f0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d286f0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d286f0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d286f0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d286f0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d286f0)
load fast: 22897160197280
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d286f0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d286f0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d286f0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d286f0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d286f0)
load fast: 22897625199568
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d286f0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d286f0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d286f0)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d286f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d286f0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d286f0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d286f0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d286f0)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d286f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d286f0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d286f0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d286f0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d286f0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d286f0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_90 : [#users=1] = placeholder[target=tensor_90]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_90, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d286f0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=40 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=42 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=44 frame=11(0xa4d34d0)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0xa4d34d0)
record function in graph <built-in method chunk of Tensor object at 0x14d329108360>
func self id: 22897159603040
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0xa4d34d0)
sub_value 22897229773216 tensor([[[[-0.1881,  0.7554,  0.4032,  ...,  0.1887, -0.3800,  0.3050],
          [ 0.4756, -0.3310, -0.0796,  ..., -0.0303, -0.8890,  0.7274],
          [-0.0287, -0.0680, -0.5867,  ..., -0.4987, -0.2274, -0.5816],
          ...,
          [-0.0172, -0.1699,  0.5147,  ..., -0.0283, -0.6114, -0.2184],
          [-1.1125,  0.3995, -0.0394,  ..., -1.2890, -0.6009,  0.5921],
          [ 0.5905, -0.3318, -0.2446,  ...,  0.0134, -0.0268,  0.4589]],

         [[ 0.0878,  0.1589, -0.1483,  ..., -0.3107, -0.2992, -0.0725],
          [ 0.1849, -0.4960,  0.2931,  ..., -0.8943,  1.0227, -0.3780],
          [ 0.1903, -0.2325, -0.1882,  ...,  0.1940, -0.3276, -0.6869],
          ...,
          [ 0.4368, -0.3730, -0.0807,  ..., -0.1893,  0.1888,  0.0850],
          [-0.4157,  0.1499, -0.2952,  ...,  0.6766,  0.4068, -0.6883],
          [-0.2808, -1.1885,  0.0394,  ...,  1.2057, -0.7499, -0.3629]],

         [[ 0.4559, -0.4335,  1.0835,  ..., -0.6922,  1.0386,  0.0472],
          [ 0.4057, -0.1103,  0.8842,  ...,  0.6670,  0.0470, -0.7829],
          [-1.1474, -0.4405,  0.2893,  ...,  0.6176, -0.2635, -0.0162],
          ...,
          [ 0.6098, -0.7302, -0.5890,  ..., -0.6543, -0.7032,  0.0547],
          [ 0.4044, -0.4922, -0.2936,  ...,  0.2355,  0.0214, -0.4441],
          [ 0.3104,  0.6281,  0.8664,  ...,  0.4807, -0.2621,  0.4710]],

         ...,

         [[ 0.2282,  0.1164,  0.2666,  ..., -0.2569,  0.9534, -0.4959],
          [-0.1373, -0.1276,  0.0762,  ..., -0.0398, -0.0280, -0.2098],
          [-0.1006, -0.7933,  0.2514,  ..., -0.2457, -0.7066,  0.6940],
          ...,
          [ 0.6985, -0.5683, -1.1651,  ..., -0.2738, -0.1073, -0.0235],
          [-0.6307,  0.8317, -0.0855,  ..., -0.2810, -0.9261,  0.4528],
          [-1.1398, -0.0236,  0.6328,  ..., -0.1195, -0.3468, -0.1980]],

         [[-0.1057,  0.3864,  0.0808,  ...,  0.7507, -0.2698,  0.3243],
          [ 0.0729, -0.3561, -0.2429,  ...,  0.3281, -0.0951,  0.2420],
          [ 0.0412,  0.5494, -0.3833,  ..., -0.5950,  0.0763, -0.7724],
          ...,
          [ 0.0735,  1.3256,  0.3848,  ..., -0.2342, -0.3140, -0.0171],
          [-0.3097, -0.2191,  0.1875,  ..., -0.3142,  0.1812, -0.2239],
          [-0.7113,  1.4281,  0.6001,  ...,  0.8623, -0.2202, -0.5650]],

         [[ 0.1967, -0.1263,  1.6014,  ...,  0.1060,  1.1454, -0.3693],
          [-0.5161, -0.3720, -0.1740,  ..., -0.6825,  1.2124,  0.9482],
          [-0.4627, -0.7151, -0.0667,  ..., -0.2220, -0.2965, -0.2421],
          ...,
          [-0.5558, -0.3028, -0.0389,  ...,  0.5693, -1.3948, -0.5876],
          [-0.2357,  0.2229, -1.7344,  ...,  0.4868,  0.3053,  0.4416],
          [ 0.5637, -0.7194,  0.3232,  ...,  0.4696, -0.0772,  0.2846]]]])
sub_value 22897160204016 tensor([[[[-0.2112,  0.2139, -0.5614,  ...,  0.8818,  0.8802,  0.4236],
          [-0.4213, -0.1881, -0.8238,  ...,  0.2495,  0.2162, -0.5918],
          [ 0.5795, -0.1298, -0.3271,  ..., -0.5945, -0.2800,  1.1085],
          ...,
          [ 0.6035,  1.0892, -0.4414,  ...,  0.1278,  0.4340,  1.1868],
          [ 0.1844, -0.2935, -1.5381,  ...,  0.3051, -0.4616,  0.5451],
          [-0.4405, -0.6688, -1.0164,  ...,  0.8514, -0.5711,  1.0018]],

         [[ 0.6194, -0.0141,  0.0549,  ..., -0.1044, -0.5561,  0.3010],
          [ 0.1828,  0.5327,  0.5149,  ..., -0.5554,  0.3885, -1.1352],
          [-0.5465,  0.3640, -1.0804,  ...,  0.0727,  0.0357,  0.2131],
          ...,
          [-0.4725,  0.2548, -0.0282,  ...,  0.1652,  0.4211, -0.7459],
          [ 0.5830,  0.0619, -0.0487,  ..., -0.3175, -0.9679, -0.9425],
          [ 0.0344, -0.3859, -0.4513,  ...,  0.5430,  0.3245,  0.2283]],

         [[-0.0116,  0.5010, -0.7581,  ..., -0.6737,  0.7756,  0.3192],
          [-0.0521, -0.3650, -0.2752,  ..., -0.1471,  0.0914, -0.0254],
          [-0.4795,  0.1095,  0.0561,  ...,  0.0246,  0.0763,  0.0364],
          ...,
          [ 0.2127,  0.1004,  0.1614,  ..., -0.4502,  0.2067,  0.1010],
          [ 0.4009, -0.3668, -0.5939,  ...,  0.4171, -0.3102, -0.5746],
          [-0.2910,  0.4864, -0.4504,  ..., -0.5316, -0.0360, -0.2906]],

         ...,

         [[ 0.8146, -0.6466,  0.3515,  ...,  0.2446, -0.0369, -0.4409],
          [-0.6871,  0.2721, -0.5368,  ..., -0.5258,  0.5603,  0.2503],
          [-0.3210,  0.6973,  0.6892,  ..., -0.0021,  0.8529, -0.8339],
          ...,
          [-0.1491,  0.2750, -0.8954,  ..., -0.7803, -0.2485, -0.1244],
          [-0.3068, -0.2291, -0.6535,  ..., -0.6746,  0.3855,  0.6780],
          [-0.3506,  0.1964, -0.5362,  ...,  0.3948,  0.1956, -0.1094]],

         [[ 0.9162, -0.2585, -0.1431,  ...,  0.2823,  0.0634,  0.6047],
          [ 0.5245, -0.0990, -0.8057,  ...,  0.1874,  0.1821,  0.1989],
          [-0.2916,  0.1951,  0.3361,  ...,  0.2818, -0.1479, -0.3476],
          ...,
          [ 0.9247,  0.0412,  0.3817,  ..., -0.5002,  0.7192,  0.7587],
          [-0.2496, -0.4090, -0.2616,  ...,  0.3258, -0.7730,  0.5778],
          [ 0.0942,  0.5841, -0.1998,  ...,  0.0634,  0.7291,  0.0839]],

         [[-0.9621, -0.7572, -0.2901,  ...,  1.1371, -0.6179, -0.2974],
          [-0.5463, -0.0393, -1.0465,  ..., -0.0645,  0.1954, -0.0643],
          [-0.4250,  0.5124,  0.0087,  ...,  0.7154,  0.1165, -0.2228],
          ...,
          [ 0.5625, -0.3681, -0.7309,  ...,  0.2276, -0.9434,  0.4896],
          [ 0.0777, -0.1728,  0.0225,  ...,  0.0960, -0.0170,  1.2784],
          [ 0.2002,  0.7153, -0.0706,  ..., -0.5455, -0.2135,  0.6543]]]])
sub_value 22897160204096 tensor([[[[-0.3622, -0.1193,  0.0615,  ..., -0.8765,  0.2477,  0.1170],
          [ 0.2408,  0.1287,  0.9082,  ...,  0.3483, -0.6205,  0.2900],
          [-0.2492, -0.4994, -0.2180,  ..., -1.8311,  0.3022, -0.6677],
          ...,
          [ 0.1240, -0.4656, -0.5104,  ..., -0.0998,  0.6738,  0.1547],
          [ 0.3391, -0.1688, -0.0126,  ...,  0.3597, -0.2530, -0.1247],
          [ 0.2442,  0.0279, -0.4127,  ..., -0.0766,  1.4982,  0.2274]],

         [[-0.0256, -0.5519, -0.4094,  ..., -0.5175, -0.0045, -0.0305],
          [ 0.5996,  0.1720,  0.1355,  ...,  0.1571, -0.1534,  0.3644],
          [ 0.4138,  0.4113, -1.3764,  ..., -1.1687, -0.1037, -1.2209],
          ...,
          [ 1.2950,  0.5351, -0.1080,  ...,  1.0958,  0.1258, -0.0638],
          [-0.1694,  0.2266, -0.2717,  ..., -0.7820, -0.1066,  1.7653],
          [ 0.5392, -0.5328, -0.0211,  ..., -0.5422,  0.8930,  0.0642]],

         [[ 0.7764,  0.1518, -0.1970,  ..., -0.5053, -0.2963, -0.3975],
          [-1.3671, -0.4781, -0.6987,  ...,  0.0313, -0.6017,  0.4229],
          [-0.9782, -0.1001, -0.3759,  ..., -0.4204, -0.3984, -0.0061],
          ...,
          [ 0.2351,  0.2220, -0.6128,  ..., -0.0412, -0.6796,  0.1910],
          [ 0.8468,  0.8242, -1.2567,  ..., -0.0570, -0.5213,  0.4928],
          [ 0.2148,  0.2449, -1.0308,  ..., -0.0974, -1.4905, -0.7837]],

         ...,

         [[-0.5284, -0.3693, -0.8708,  ...,  0.5097, -0.0113,  0.4129],
          [-0.4761,  0.3824,  0.1154,  ..., -1.2199, -1.0603,  0.1340],
          [-0.1452,  0.1149, -0.5468,  ..., -0.3763,  0.4847, -0.3880],
          ...,
          [-0.9247, -0.3670, -0.3145,  ..., -0.3604,  0.7006, -0.5652],
          [-0.2020, -0.0089, -0.1517,  ...,  0.7090, -0.8917, -0.4402],
          [ 0.9605, -0.2685,  0.7927,  ..., -0.2127, -0.1641, -0.0135]],

         [[-0.1106, -0.8350, -0.7068,  ..., -0.1515,  0.8962, -0.0358],
          [-0.2845,  0.1150,  0.5780,  ...,  0.5633,  0.4155,  0.5059],
          [ 0.4265, -0.1857,  0.8664,  ..., -0.3467, -0.2384, -0.4410],
          ...,
          [-0.6540,  0.2818, -0.7873,  ...,  0.2762,  0.2799,  0.4621],
          [ 0.1149, -0.4996,  0.3383,  ..., -0.0085,  0.6579,  0.1554],
          [ 0.4693,  0.1825,  0.0845,  ...,  1.3676, -0.4350, -0.0167]],

         [[-0.2175, -0.2066,  0.9431,  ...,  0.3879,  0.3026,  0.2377],
          [-1.0747, -0.1813, -0.2872,  ..., -0.5672, -0.5649,  0.0464],
          [ 0.4500,  0.6202, -0.0270,  ..., -0.5247, -0.2382,  0.2294],
          ...,
          [-0.4766, -0.2007,  0.5768,  ..., -0.0608, -0.6732,  0.3486],
          [ 0.6359,  0.9537,  0.6761,  ...,  1.2631,  0.2289, -0.2031],
          [-0.8634, -0.4688, -0.7529,  ...,  0.7252, -0.5314, -0.0668]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0xa4d34d0)
tracing opcode STORE_FAST None pc=52 frame=11(0xa4d34d0)
tracing opcode STORE_FAST None pc=54 frame=11(0xa4d34d0)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0xa4d34d0)
tracing opcode LOAD_DEREF None pc=224 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=226 frame=11(0xa4d34d0)
tracing opcode LOAD_DEREF None pc=228 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=230 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=232 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=234 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=236 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=238 frame=11(0xa4d34d0)
tracing opcode BUILD_SLICE None pc=240 frame=11(0xa4d34d0)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0xa4d34d0)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0xa4d34d0)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0xa4d34d0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d33e54ca40)
push tracker due to record
push tracker 12 frame 0x14d33e54ca40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d33e54ca40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d33e54ca40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d33e54ca40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d33e54ca40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d33e54ca40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d33e54ca40)
load fast: 22897160164112
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d33e54ca40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d33e54ca40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d33e54ca40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d33e54ca40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d33e54ca40)
load fast: 22897625199568
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d33e54ca40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d33e54ca40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d33e54ca40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d33e54ca40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d33e54ca40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d33e54ca40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d33e54ca40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d33e54ca40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d33e54ca40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d33e54ca40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d33e54ca40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d33e54ca40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d33e54ca40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d33e54ca40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_91 : [#users=1] = placeholder[target=tensor_91]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_91, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d33e54ca40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0xa4d34d0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0xa4d34d0)
tracing opcode LOAD_DEREF None pc=254 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=256 frame=11(0xa4d34d0)
tracing opcode LOAD_DEREF None pc=258 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=260 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=262 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=264 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=266 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=268 frame=11(0xa4d34d0)
tracing opcode BUILD_SLICE None pc=270 frame=11(0xa4d34d0)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0xa4d34d0)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0xa4d34d0)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0xa4d34d0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d31600)
push tracker due to record
push tracker 12 frame 0x6d31600 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d31600)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d31600)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d31600 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d31600)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d31600)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d31600)
load fast: 22897159718208
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d31600)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d31600)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d31600)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d31600)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d31600)
load fast: 22897625199568
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d31600)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d31600)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d31600)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d31600)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d31600)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d31600)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d31600)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d31600)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d31600)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d31600)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d31600)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d31600)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d31600)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d31600)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_92 : [#users=1] = placeholder[target=tensor_92]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_92, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d31600)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0xa4d34d0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0xa4d34d0)
tracing opcode STORE_FAST None pc=284 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0xa4d34d0)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0xa4d34d0)
tracing opcode LOAD_DEREF None pc=290 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=292 frame=11(0xa4d34d0)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0xa4d34d0)
tracing opcode BINARY_ADD None pc=296 frame=11(0xa4d34d0)
tracing opcode STORE_FAST None pc=298 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=302 frame=11(0xa4d34d0)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=306 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=308 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=310 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=312 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=314 frame=11(0xa4d34d0)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=318 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=320 frame=11(0xa4d34d0)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0xa4d34d0)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0xa4d34d0)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0xa4d34d0)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0xa4d34d0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=334 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=336 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=338 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=340 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=342 frame=11(0xa4d34d0)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0xa4d34d0)
record function in graph <built-in method to of Tensor object at 0x14d32910e5e0>
func self id: 22897159628256
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0xa4d34d0)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=352 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=354 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=356 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=358 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=360 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=362 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=364 frame=11(0xa4d34d0)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0xa4d34d0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=372 frame=11(0xa4d34d0)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=380 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=382 frame=11(0xa4d34d0)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0xa4d34d0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x870cf40)
push tracker due to record
push tracker 3 frame 0x870cf40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x870cf40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x870cf40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x870cf40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x870cf40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x870cf40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x870cf40)
load fast: 22897554686112
tracing opcode LOAD_ATTR None pc=12 frame=3(0x870cf40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x870cf40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x870cf40)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x870cf40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x870cf40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=390 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=392 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=394 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=396 frame=11(0xa4d34d0)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=400 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=402 frame=11(0xa4d34d0)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x8890540)
push tracker due to record
push tracker 13 frame 0x8890540 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x8890540)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x8890540)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x8890540 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x8890540)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x8890540)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x8890540)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x8890540)
tracing opcode IS_OP None pc=16 frame=13(0x8890540)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=54 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=56 frame=13(0x8890540)
tracing opcode COMPARE_OP None pc=58 frame=13(0x8890540)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=84 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=86 frame=13(0x8890540)
tracing opcode COMPARE_OP None pc=88 frame=13(0x8890540)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=96 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=98 frame=13(0x8890540)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x8890540)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x8890540)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=138 frame=13(0x8890540)
load fast: 22897159628656
tracing opcode LOAD_METHOD None pc=140 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=142 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=144 frame=13(0x8890540)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x8890540)
load fast: 22897160204016
tracing opcode LOAD_METHOD None pc=148 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=150 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=152 frame=13(0x8890540)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=156 frame=13(0x8890540)
load fast: 22897625199568
tracing opcode LOAD_ATTR None pc=158 frame=13(0x8890540)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x8890540)
tracing opcode STORE_FAST None pc=162 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=168 frame=13(0x8890540)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=172 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=176 frame=13(0x8890540)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x8890540)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=186 frame=13(0x8890540)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=190 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=194 frame=13(0x8890540)
tracing opcode BINARY_ADD None pc=196 frame=13(0x8890540)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=200 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=202 frame=13(0x8890540)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x8890540)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x8890540)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x8890540)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x8890540)
tracing opcode STORE_FAST None pc=220 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=224 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x8890540)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x8890540)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=238 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=240 frame=13(0x8890540)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=248 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=250 frame=13(0x8890540)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xa4e0660)
push tracker due to record
push tracker 12 frame 0xa4e0660 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xa4e0660)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xa4e0660)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0xa4e0660 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xa4e0660)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xa4e0660)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xa4e0660)
load fast: 22897159421840
tracing opcode LOAD_METHOD None pc=12 frame=12(0xa4e0660)
tracing opcode CALL_METHOD None pc=14 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=16 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=18 frame=12(0xa4e0660)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xa4e0660)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xa4e0660)
tracing opcode LOAD_FAST None pc=24 frame=12(0xa4e0660)
load fast: 22897625199568
tracing opcode LOAD_ATTR None pc=26 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=28 frame=12(0xa4e0660)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xa4e0660)
tracing opcode BINARY_ADD None pc=32 frame=12(0xa4e0660)
tracing opcode STORE_FAST None pc=34 frame=12(0xa4e0660)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xa4e0660)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xa4e0660)
tracing opcode LOAD_FAST None pc=40 frame=12(0xa4e0660)
tracing opcode CALL_METHOD None pc=42 frame=12(0xa4e0660)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xa4e0660)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xa4e0660)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=50 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=52 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=54 frame=12(0xa4e0660)
tracing opcode LOAD_CONST None pc=56 frame=12(0xa4e0660)
tracing opcode CALL_METHOD None pc=58 frame=12(0xa4e0660)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xa4e0660)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_97 : [#users=1] = placeholder[target=tensor_97]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_97, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xa4e0660)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=258 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=260 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=264 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=266 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=268 frame=13(0x8890540)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x8890540)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=278 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=280 frame=13(0x8890540)
tracing opcode BINARY_ADD None pc=282 frame=13(0x8890540)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=286 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=288 frame=13(0x8890540)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=292 frame=13(0x8890540)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=296 frame=13(0x8890540)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=304 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=306 frame=13(0x8890540)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=310 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=312 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=314 frame=13(0x8890540)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x8890540)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0xa1d0d70)
push tracker due to record
push tracker 14 frame 0xa1d0d70 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0xa1d0d70)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0xa1d0d70)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0xa1d0d70 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0xa1d0d70)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0xa1d0d70)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0xa1d0d70)
load fast: 22897159025264
tracing opcode LOAD_METHOD None pc=12 frame=14(0xa1d0d70)
tracing opcode LOAD_FAST None pc=14 frame=14(0xa1d0d70)
load fast: 22897159628656
tracing opcode LOAD_METHOD None pc=16 frame=14(0xa1d0d70)
tracing opcode LOAD_CONST None pc=18 frame=14(0xa1d0d70)
tracing opcode CALL_METHOD None pc=20 frame=14(0xa1d0d70)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0xa1d0d70)
tracing opcode LOAD_METHOD None pc=24 frame=14(0xa1d0d70)
tracing opcode LOAD_CONST None pc=26 frame=14(0xa1d0d70)
tracing opcode CALL_METHOD None pc=28 frame=14(0xa1d0d70)
tracing opcode LOAD_FAST None pc=30 frame=14(0xa1d0d70)
tracing opcode LOAD_METHOD None pc=32 frame=14(0xa1d0d70)
tracing opcode LOAD_CONST None pc=34 frame=14(0xa1d0d70)
tracing opcode CALL_METHOD None pc=36 frame=14(0xa1d0d70)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0xa1d0d70)
load fast: 22897159418080
tracing opcode LOAD_METHOD None pc=40 frame=14(0xa1d0d70)
tracing opcode LOAD_CONST None pc=42 frame=14(0xa1d0d70)
tracing opcode CALL_METHOD None pc=44 frame=14(0xa1d0d70)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0xa1d0d70)
tracing opcode CALL_METHOD None pc=48 frame=14(0xa1d0d70)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0xa1d0d70)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_98 : [#users=1] = placeholder[target=tensor_98]
    %tensor_99 : [#users=0] = placeholder[target=tensor_99]
    %tensor_100 : [#users=0] = placeholder[target=tensor_100]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_98, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0xa1d0d70)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x8890540)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x8890540)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=326 frame=13(0x8890540)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x8890540)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=334 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x8890540)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x8890540)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=348 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=350 frame=13(0x8890540)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=358 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=360 frame=13(0x8890540)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6efe8b0)
push tracker due to record
push tracker 12 frame 0x6efe8b0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6efe8b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6efe8b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6efe8b0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6efe8b0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6efe8b0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6efe8b0)
load fast: 22897159070000
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6efe8b0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6efe8b0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6efe8b0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6efe8b0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6efe8b0)
load fast: 22897625199568
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6efe8b0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6efe8b0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6efe8b0)
tracing opcode STORE_FAST None pc=34 frame=12(0x6efe8b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6efe8b0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6efe8b0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6efe8b0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6efe8b0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6efe8b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6efe8b0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6efe8b0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6efe8b0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6efe8b0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6efe8b0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_101 : [#users=1] = placeholder[target=tensor_101]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_101, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6efe8b0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x8890540)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x8890540)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=374 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=378 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=380 frame=13(0x8890540)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=386 frame=13(0x8890540)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x8890540)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x8890540)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x8890540)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x8890540)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x8890540)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=404 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=406 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=408 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=412 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=414 frame=13(0x8890540)
tracing opcode COMPARE_OP None pc=416 frame=13(0x8890540)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x8890540)
tracing opcode STORE_FAST None pc=452 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=458 frame=13(0x8890540)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x8890540)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x8890540)
tracing opcode BINARY_ADD None pc=464 frame=13(0x8890540)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=468 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=470 frame=13(0x8890540)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=474 frame=13(0x8890540)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=478 frame=13(0x8890540)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=486 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=488 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=492 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=494 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=496 frame=13(0x8890540)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=500 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=504 frame=13(0x8890540)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x8890540)
record function in graph <built-in method to of Tensor object at 0x14d329086950>
func self id: 22897159072080
tracing opcode CALL_METHOD None pc=508 frame=13(0x8890540)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x8890540)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=518 frame=13(0x8890540)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=522 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=524 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=526 frame=13(0x8890540)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x8890540)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0xa4d77d0)
push tracker due to record
push tracker 15 frame 0xa4d77d0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0xa4d77d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0xa4d77d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0xa4d77d0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0xa4d77d0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0xa4d77d0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0xa4d77d0)
load fast: 22897159072960
tracing opcode LOAD_METHOD None pc=12 frame=15(0xa4d77d0)
tracing opcode LOAD_FAST None pc=14 frame=15(0xa4d77d0)
load fast: 22897159628656
tracing opcode LOAD_METHOD None pc=16 frame=15(0xa4d77d0)
tracing opcode LOAD_CONST None pc=18 frame=15(0xa4d77d0)
tracing opcode CALL_METHOD None pc=20 frame=15(0xa4d77d0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0xa4d77d0)
tracing opcode LOAD_METHOD None pc=24 frame=15(0xa4d77d0)
tracing opcode LOAD_CONST None pc=26 frame=15(0xa4d77d0)
tracing opcode CALL_METHOD None pc=28 frame=15(0xa4d77d0)
tracing opcode LOAD_FAST None pc=30 frame=15(0xa4d77d0)
load fast: 22897160204016
tracing opcode LOAD_METHOD None pc=32 frame=15(0xa4d77d0)
tracing opcode LOAD_CONST None pc=34 frame=15(0xa4d77d0)
tracing opcode CALL_METHOD None pc=36 frame=15(0xa4d77d0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0xa4d77d0)
tracing opcode LOAD_METHOD None pc=40 frame=15(0xa4d77d0)
tracing opcode LOAD_CONST None pc=42 frame=15(0xa4d77d0)
tracing opcode CALL_METHOD None pc=44 frame=15(0xa4d77d0)
tracing opcode BUILD_LIST None pc=46 frame=15(0xa4d77d0)
tracing opcode CALL_METHOD None pc=48 frame=15(0xa4d77d0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0xa4d77d0)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_102 : [#users=1] = placeholder[target=tensor_102]
    %tensor_103 : [#users=0] = placeholder[target=tensor_103]
    %tensor_104 : [#users=0] = placeholder[target=tensor_104]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_102, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0xa4d77d0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x8890540)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x8890540)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=538 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x8890540)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=548 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=550 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=552 frame=13(0x8890540)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x8890540)
tracing opcode LOAD_CONST None pc=556 frame=13(0x8890540)
tracing opcode CALL_METHOD None pc=558 frame=13(0x8890540)
tracing opcode COMPARE_OP None pc=560 frame=13(0x8890540)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x8890540)
tracing opcode LOAD_FAST None pc=626 frame=13(0x8890540)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x8890540)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x8890540)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x8890540)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x8890540)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_94 : [#users=1] = placeholder[target=tensor_94]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_94, 1), kwargs = {})
    %tensor_95 : [#users=1] = placeholder[target=tensor_95]
    %tensor_96 : [#users=1] = placeholder[target=tensor_96]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_95, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_96, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x8890540)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=408 frame=11(0xa4d34d0)
tracing opcode IS_OP None pc=410 frame=11(0xa4d34d0)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=418 frame=11(0xa4d34d0)
tracing opcode BINARY_ADD None pc=420 frame=11(0xa4d34d0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=426 frame=11(0xa4d34d0)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=468 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=470 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=472 frame=11(0xa4d34d0)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=476 frame=11(0xa4d34d0)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=482 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=484 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=486 frame=11(0xa4d34d0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d3339f0440)
push tracker due to record
push tracker 3 frame 0x14d3339f0440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d3339f0440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d3339f0440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d3339f0440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d3339f0440)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d3339f0440)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d3339f0440)
load fast: 22897554686304
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d3339f0440)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d3339f0440)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d3339f0440)
load fast: 22897159067104
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d3339f0440)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_106 : [#users=0] = placeholder[target=tensor_106]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0035, 0.0045, 0.0037,  ..., 0.0037, 0.0029, 0.0039],
          [0.0033, 0.0029, 0.0039,  ..., 0.0039, 0.0040, 0.0048],
          [0.0037, 0.0033, 0.0035,  ..., 0.0037, 0.0042, 0.0044],
          ...,
          [0.0035, 0.0041, 0.0028,  ..., 0.0039, 0.0035, 0.0038],
          [0.0040, 0.0035, 0.0039,  ..., 0.0032, 0.0040, 0.0048],
          [0.0035, 0.0037, 0.0037,  ..., 0.0048, 0.0045, 0.0050]],

         [[0.0055, 0.0038, 0.0053,  ..., 0.0037, 0.0048, 0.0027],
          [0.0035, 0.0039, 0.0039,  ..., 0.0054, 0.0040, 0.0038],
          [0.0043, 0.0052, 0.0031,  ..., 0.0045, 0.0042, 0.0039],
          ...,
          [0.0042, 0.0031, 0.0043,  ..., 0.0047, 0.0031, 0.0032],
          [0.0038, 0.0041, 0.0039,  ..., 0.0040, 0.0038, 0.0042],
          [0.0038, 0.0032, 0.0035,  ..., 0.0029, 0.0040, 0.0045]],

         [[0.0043, 0.0037, 0.0035,  ..., 0.0054, 0.0032, 0.0039],
          [0.0039, 0.0039, 0.0039,  ..., 0.0041, 0.0035, 0.0042],
          [0.0041, 0.0041, 0.0052,  ..., 0.0041, 0.0046, 0.0031],
          ...,
          [0.0039, 0.0037, 0.0037,  ..., 0.0043, 0.0034, 0.0044],
          [0.0052, 0.0039, 0.0042,  ..., 0.0037, 0.0041, 0.0041],
          [0.0042, 0.0041, 0.0020,  ..., 0.0045, 0.0038, 0.0041]],

         ...,

         [[0.0035, 0.0037, 0.0036,  ..., 0.0040, 0.0047, 0.0043],
          [0.0040, 0.0037, 0.0040,  ..., 0.0048, 0.0034, 0.0039],
          [0.0040, 0.0043, 0.0042,  ..., 0.0046, 0.0043, 0.0038],
          ...,
          [0.0044, 0.0041, 0.0036,  ..., 0.0037, 0.0032, 0.0037],
          [0.0032, 0.0030, 0.0030,  ..., 0.0037, 0.0036, 0.0038],
          [0.0039, 0.0036, 0.0044,  ..., 0.0036, 0.0040, 0.0046]],

         [[0.0041, 0.0037, 0.0046,  ..., 0.0038, 0.0041, 0.0059],
          [0.0039, 0.0041, 0.0034,  ..., 0.0038, 0.0041, 0.0033],
          [0.0039, 0.0040, 0.0036,  ..., 0.0039, 0.0036, 0.0048],
          ...,
          [0.0034, 0.0033, 0.0049,  ..., 0.0037, 0.0035, 0.0055],
          [0.0042, 0.0024, 0.0043,  ..., 0.0029, 0.0038, 0.0044],
          [0.0031, 0.0035, 0.0045,  ..., 0.0036, 0.0036, 0.0046]],

         [[0.0037, 0.0025, 0.0032,  ..., 0.0026, 0.0040, 0.0038],
          [0.0051, 0.0048, 0.0027,  ..., 0.0035, 0.0046, 0.0039],
          [0.0043, 0.0051, 0.0030,  ..., 0.0037, 0.0038, 0.0036],
          ...,
          [0.0048, 0.0040, 0.0045,  ..., 0.0051, 0.0042, 0.0035],
          [0.0040, 0.0040, 0.0044,  ..., 0.0045, 0.0032, 0.0034],
          [0.0042, 0.0047, 0.0030,  ..., 0.0047, 0.0045, 0.0031]]]]), modified_attrs={}, prev=None) 22897159405680 22897159067104
obj: tensor([[[[0.0035, 0.0045, 0.0037,  ..., 0.0037, 0.0029, 0.0039],
          [0.0033, 0.0029, 0.0039,  ..., 0.0039, 0.0040, 0.0048],
          [0.0037, 0.0033, 0.0035,  ..., 0.0037, 0.0042, 0.0044],
          ...,
          [0.0035, 0.0041, 0.0028,  ..., 0.0039, 0.0035, 0.0038],
          [0.0040, 0.0035, 0.0039,  ..., 0.0032, 0.0040, 0.0048],
          [0.0035, 0.0037, 0.0037,  ..., 0.0048, 0.0045, 0.0050]],

         [[0.0055, 0.0038, 0.0053,  ..., 0.0037, 0.0048, 0.0027],
          [0.0035, 0.0039, 0.0039,  ..., 0.0054, 0.0040, 0.0038],
          [0.0043, 0.0052, 0.0031,  ..., 0.0045, 0.0042, 0.0039],
          ...,
          [0.0042, 0.0031, 0.0043,  ..., 0.0047, 0.0031, 0.0032],
          [0.0038, 0.0041, 0.0039,  ..., 0.0040, 0.0038, 0.0042],
          [0.0038, 0.0032, 0.0035,  ..., 0.0029, 0.0040, 0.0045]],

         [[0.0043, 0.0037, 0.0035,  ..., 0.0054, 0.0032, 0.0039],
          [0.0039, 0.0039, 0.0039,  ..., 0.0041, 0.0035, 0.0042],
          [0.0041, 0.0041, 0.0052,  ..., 0.0041, 0.0046, 0.0031],
          ...,
          [0.0039, 0.0037, 0.0037,  ..., 0.0043, 0.0034, 0.0044],
          [0.0052, 0.0039, 0.0042,  ..., 0.0037, 0.0041, 0.0041],
          [0.0042, 0.0041, 0.0020,  ..., 0.0045, 0.0038, 0.0041]],

         ...,

         [[0.0035, 0.0037, 0.0036,  ..., 0.0040, 0.0047, 0.0043],
          [0.0040, 0.0037, 0.0040,  ..., 0.0048, 0.0034, 0.0039],
          [0.0040, 0.0043, 0.0042,  ..., 0.0046, 0.0043, 0.0038],
          ...,
          [0.0044, 0.0041, 0.0036,  ..., 0.0037, 0.0032, 0.0037],
          [0.0032, 0.0030, 0.0030,  ..., 0.0037, 0.0036, 0.0038],
          [0.0039, 0.0036, 0.0044,  ..., 0.0036, 0.0040, 0.0046]],

         [[0.0041, 0.0037, 0.0046,  ..., 0.0038, 0.0041, 0.0059],
          [0.0039, 0.0041, 0.0034,  ..., 0.0038, 0.0041, 0.0033],
          [0.0039, 0.0040, 0.0036,  ..., 0.0039, 0.0036, 0.0048],
          ...,
          [0.0034, 0.0033, 0.0049,  ..., 0.0037, 0.0035, 0.0055],
          [0.0042, 0.0024, 0.0043,  ..., 0.0029, 0.0038, 0.0044],
          [0.0031, 0.0035, 0.0045,  ..., 0.0036, 0.0036, 0.0046]],

         [[0.0037, 0.0025, 0.0032,  ..., 0.0026, 0.0040, 0.0038],
          [0.0051, 0.0048, 0.0027,  ..., 0.0035, 0.0046, 0.0039],
          [0.0043, 0.0051, 0.0030,  ..., 0.0037, 0.0038, 0.0036],
          ...,
          [0.0048, 0.0040, 0.0045,  ..., 0.0051, 0.0042, 0.0035],
          [0.0040, 0.0040, 0.0044,  ..., 0.0045, 0.0032, 0.0034],
          [0.0042, 0.0047, 0.0030,  ..., 0.0047, 0.0045, 0.0031]]]]) 22897159067104
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0035, 0.0045, 0.0037,  ..., 0.0037, 0.0029, 0.0039],
          [0.0033, 0.0029, 0.0039,  ..., 0.0039, 0.0040, 0.0048],
          [0.0037, 0.0033, 0.0035,  ..., 0.0037, 0.0042, 0.0044],
          ...,
          [0.0035, 0.0041, 0.0028,  ..., 0.0039, 0.0035, 0.0038],
          [0.0040, 0.0035, 0.0039,  ..., 0.0032, 0.0040, 0.0048],
          [0.0035, 0.0037, 0.0037,  ..., 0.0048, 0.0045, 0.0050]],

         [[0.0055, 0.0038, 0.0053,  ..., 0.0037, 0.0048, 0.0027],
          [0.0035, 0.0039, 0.0039,  ..., 0.0054, 0.0040, 0.0038],
          [0.0043, 0.0052, 0.0031,  ..., 0.0045, 0.0042, 0.0039],
          ...,
          [0.0042, 0.0031, 0.0043,  ..., 0.0047, 0.0031, 0.0032],
          [0.0038, 0.0041, 0.0039,  ..., 0.0040, 0.0038, 0.0042],
          [0.0038, 0.0032, 0.0035,  ..., 0.0029, 0.0040, 0.0045]],

         [[0.0043, 0.0037, 0.0035,  ..., 0.0054, 0.0032, 0.0039],
          [0.0039, 0.0039, 0.0039,  ..., 0.0041, 0.0035, 0.0042],
          [0.0041, 0.0041, 0.0052,  ..., 0.0041, 0.0046, 0.0031],
          ...,
          [0.0039, 0.0037, 0.0037,  ..., 0.0043, 0.0034, 0.0044],
          [0.0052, 0.0039, 0.0042,  ..., 0.0037, 0.0041, 0.0041],
          [0.0042, 0.0041, 0.0020,  ..., 0.0045, 0.0038, 0.0041]],

         ...,

         [[0.0035, 0.0037, 0.0036,  ..., 0.0040, 0.0047, 0.0043],
          [0.0040, 0.0037, 0.0040,  ..., 0.0048, 0.0034, 0.0039],
          [0.0040, 0.0043, 0.0042,  ..., 0.0046, 0.0043, 0.0038],
          ...,
          [0.0044, 0.0041, 0.0036,  ..., 0.0037, 0.0032, 0.0037],
          [0.0032, 0.0030, 0.0030,  ..., 0.0037, 0.0036, 0.0038],
          [0.0039, 0.0036, 0.0044,  ..., 0.0036, 0.0040, 0.0046]],

         [[0.0041, 0.0037, 0.0046,  ..., 0.0038, 0.0041, 0.0059],
          [0.0039, 0.0041, 0.0034,  ..., 0.0038, 0.0041, 0.0033],
          [0.0039, 0.0040, 0.0036,  ..., 0.0039, 0.0036, 0.0048],
          ...,
          [0.0034, 0.0033, 0.0049,  ..., 0.0037, 0.0035, 0.0055],
          [0.0042, 0.0024, 0.0043,  ..., 0.0029, 0.0038, 0.0044],
          [0.0031, 0.0035, 0.0045,  ..., 0.0036, 0.0036, 0.0046]],

         [[0.0037, 0.0025, 0.0032,  ..., 0.0026, 0.0040, 0.0038],
          [0.0051, 0.0048, 0.0027,  ..., 0.0035, 0.0046, 0.0039],
          [0.0043, 0.0051, 0.0030,  ..., 0.0037, 0.0038, 0.0036],
          ...,
          [0.0048, 0.0040, 0.0045,  ..., 0.0051, 0.0042, 0.0035],
          [0.0040, 0.0040, 0.0044,  ..., 0.0045, 0.0032, 0.0034],
          [0.0042, 0.0047, 0.0030,  ..., 0.0047, 0.0045, 0.0031]]]]), modified_attrs={}, prev=None) 22897159121360
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d3339f0440)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0xa4d34d0)
tracing opcode LOAD_ATTR None pc=492 frame=11(0xa4d34d0)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=534 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=536 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=538 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=540 frame=11(0xa4d34d0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=546 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=548 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=550 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=552 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=554 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=556 frame=11(0xa4d34d0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=560 frame=11(0xa4d34d0)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=566 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=568 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=570 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=572 frame=11(0xa4d34d0)
tracing opcode BUILD_SLICE None pc=574 frame=11(0xa4d34d0)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0xa4d34d0)
tracing opcode LOAD_CONST None pc=578 frame=11(0xa4d34d0)
tracing opcode BINARY_ADD None pc=580 frame=11(0xa4d34d0)
tracing opcode STORE_FAST None pc=582 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0xa4d34d0)
tracing opcode LOAD_METHOD None pc=586 frame=11(0xa4d34d0)
tracing opcode LOAD_FAST None pc=588 frame=11(0xa4d34d0)
tracing opcode CALL_METHOD None pc=590 frame=11(0xa4d34d0)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0xa4d34d0)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0xa4d34d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0xa4d34d0)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0xa4d34d0)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_89 : [#users=1] = placeholder[target=tensor_89]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_89,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_93 : [#users=1] = placeholder[target=tensor_93]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_93, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_94 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_94, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_105 : [#users=1] = placeholder[target=tensor_105]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_105, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0xa4d34d0)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x74a2070)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x74a2070)
tracing opcode LOAD_CONST None pc=46 frame=10(0x74a2070)
tracing opcode IS_OP None pc=48 frame=10(0x74a2070)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x74a2070)
tracing opcode STORE_FAST None pc=54 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x74a2070)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x74a2070)
tracing opcode LOAD_FAST None pc=60 frame=10(0x74a2070)
tracing opcode LOAD_FAST None pc=62 frame=10(0x74a2070)
tracing opcode CALL_METHOD None pc=64 frame=10(0x74a2070)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x6d49be0)
push tracker due to record
push tracker 16 frame 0x6d49be0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x6d49be0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x6d49be0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x6d49be0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x6d49be0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x6d49be0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x6d49be0)
load fast: 22897554686352
tracing opcode LOAD_METHOD None pc=12 frame=16(0x6d49be0)
tracing opcode LOAD_FAST None pc=14 frame=16(0x6d49be0)
load fast: 22897159149344
tracing opcode CALL_METHOD None pc=16 frame=16(0x6d49be0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x6d49be0)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x6d49be0)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x6d49be0)
tracing opcode LOAD_FAST None pc=24 frame=16(0x6d49be0)
tracing opcode CALL_METHOD None pc=26 frame=16(0x6d49be0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x7492490)
push tracker due to record
push tracker 3 frame 0x7492490 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x7492490)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x7492490)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x7492490 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x7492490)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x7492490)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x7492490)
load fast: 22897554686496
tracing opcode LOAD_ATTR None pc=12 frame=3(0x7492490)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x7492490)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x7492490)
load fast: 22897158755248
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x7492490)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_108 : [#users=0] = placeholder[target=tensor_108]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.0490, -0.0308, -0.0632,  ..., -0.0325, -0.0125,  0.0345],
         [-0.0437, -0.0355, -0.0634,  ..., -0.0224, -0.0014,  0.0271],
         [-0.0430, -0.0358, -0.0595,  ..., -0.0204, -0.0082,  0.0290],
         ...,
         [-0.0447, -0.0309, -0.0632,  ..., -0.0213, -0.0086,  0.0330],
         [-0.0426, -0.0279, -0.0615,  ..., -0.0297, -0.0061,  0.0302],
         [-0.0492, -0.0354, -0.0619,  ..., -0.0303, -0.0030,  0.0328]]]), modified_attrs={}, prev=None) 22897158768336 22897158755248
obj: tensor([[[-0.0490, -0.0308, -0.0632,  ..., -0.0325, -0.0125,  0.0345],
         [-0.0437, -0.0355, -0.0634,  ..., -0.0224, -0.0014,  0.0271],
         [-0.0430, -0.0358, -0.0595,  ..., -0.0204, -0.0082,  0.0290],
         ...,
         [-0.0447, -0.0309, -0.0632,  ..., -0.0213, -0.0086,  0.0330],
         [-0.0426, -0.0279, -0.0615,  ..., -0.0297, -0.0061,  0.0302],
         [-0.0492, -0.0354, -0.0619,  ..., -0.0303, -0.0030,  0.0328]]]) 22897158755248
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.0490, -0.0308, -0.0632,  ..., -0.0325, -0.0125,  0.0345],
         [-0.0437, -0.0355, -0.0634,  ..., -0.0224, -0.0014,  0.0271],
         [-0.0430, -0.0358, -0.0595,  ..., -0.0204, -0.0082,  0.0290],
         ...,
         [-0.0447, -0.0309, -0.0632,  ..., -0.0213, -0.0086,  0.0330],
         [-0.0426, -0.0279, -0.0615,  ..., -0.0297, -0.0061,  0.0302],
         [-0.0492, -0.0354, -0.0619,  ..., -0.0303, -0.0030,  0.0328]]]), modified_attrs={}, prev=None) 22897158705696
tracing opcode RETURN_VALUE None pc=74 frame=3(0x7492490)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x6d49be0)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x6d49be0)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x6d49be0)
tracing opcode LOAD_FAST None pc=34 frame=16(0x6d49be0)
tracing opcode LOAD_FAST None pc=36 frame=16(0x6d49be0)
load fast: 22897229976896
tracing opcode BINARY_ADD None pc=38 frame=16(0x6d49be0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x6d49be0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d3339f0640)
push tracker due to record
push tracker 2 frame 0x14d3339f0640 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d3339f0640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d3339f0640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d3339f0640 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d3339f0640)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d3339f0640)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d3339f0640)
load fast: 22897158736368
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d3339f0640)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d3339f0640)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d3339f0640)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d3339f0640)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d3339f0640)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d3339f0640)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d3339f0640)
record function in graph <built-in method mean of Tensor object at 0x14d3290349f0>
func self id: 22897158736368
tracing opcode STORE_FAST None pc=36 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d3339f0640)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d3339f0640)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d3339f0640)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d3339f0640)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d3339f0640)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d3339f0640)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d3339f0640)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d3339f0640)
record function in graph <built-in method mean of Tensor object at 0x14d329034f40>
func self id: 22897158737728
tracing opcode STORE_FAST None pc=60 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d3339f0640)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d3339f0640)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d3339f0640)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d3339f0640)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d3339f0640)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d3339f0640)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d3339f0640)
load fast: 22897554686448
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d3339f0640)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d3339f0640)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d3339f0640)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d3339f0640)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d3339f0640)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d3339f0640)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d3339f0640)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d3339f0640)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d3339f0640)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d3339f0640)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d3339f0640)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d3339f0640)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d3339f0640)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d3339f0640)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d3339f0640)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d3339f0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d3339f0640)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d3339f0640)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_110 : [#users=4] = placeholder[target=tensor_110]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_110,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_110, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_110, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_110, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d3290349f0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d3339f0640)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x6d49be0)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x6d49be0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x6d49be0)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_107 : [#users=1] = placeholder[target=tensor_107]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_107,), kwargs = {})
    %tensor_109 : [#users=1] = placeholder[target=tensor_109]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_109), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x6d49be0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x74a2070)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x74a2070)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x74a2070)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x74a2070)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_86 : [#users=2] = placeholder[target=tensor_86]
    %tensor_87 : [#users=1] = placeholder[target=tensor_87]
    %tensor_88 : [#users=1] = placeholder[target=tensor_88]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_86,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_88, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_94 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_94, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_87, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_86), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x74a2070)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0xa4d8520)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0xa4d8520)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0xa4d8520)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0xa4d8520)
tracing opcode LOAD_METHOD None pc=46 frame=9(0xa4d8520)
tracing opcode LOAD_FAST None pc=48 frame=9(0xa4d8520)
tracing opcode CALL_METHOD None pc=50 frame=9(0xa4d8520)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d32d3fb040)
push tracker due to record
push tracker 17 frame 0x14d32d3fb040 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d32d3fb040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d32d3fb040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d32d3fb040 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d32d3fb040)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d32d3fb040)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d32d3fb040)
load fast: 22897554686544
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d32d3fb040)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d32d3fb040)
load fast: 22897158904224
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d32d3fb040)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d32d3fb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d32d3fb040)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d32d3fb040)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d32d3fb040)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d32d3fb040)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x6622ae0)
push tracker due to record
push tracker 18 frame 0x6622ae0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x6622ae0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x6622ae0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x6622ae0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x6622ae0)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x6622ae0)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x6622ae0)
load fast: 22897554686640
tracing opcode LOAD_METHOD None pc=12 frame=18(0x6622ae0)
tracing opcode LOAD_FAST None pc=14 frame=18(0x6622ae0)
load fast: 22897158560080
tracing opcode CALL_METHOD None pc=16 frame=18(0x6622ae0)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x6622ae0)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_112 : [#users=1] = placeholder[target=tensor_112]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_112,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x6622ae0)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d32d3fb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d32d3fb040)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d32d3fb040)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_111 : [#users=1] = placeholder[target=tensor_111]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_111,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d32d3fb040)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0xa4d8520)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0xa4d8520)
tracing opcode LOAD_METHOD None pc=56 frame=9(0xa4d8520)
tracing opcode LOAD_FAST None pc=58 frame=9(0xa4d8520)
tracing opcode LOAD_FAST None pc=60 frame=9(0xa4d8520)
tracing opcode CALL_METHOD None pc=62 frame=9(0xa4d8520)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x6d475e0)
push tracker due to record
push tracker 19 frame 0x6d475e0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x6d475e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x6d475e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x6d475e0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x6d475e0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x6d475e0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x6d475e0)
load fast: 22897554686688
tracing opcode LOAD_METHOD None pc=12 frame=19(0x6d475e0)
tracing opcode LOAD_FAST None pc=14 frame=19(0x6d475e0)
load fast: 22897158611328
tracing opcode CALL_METHOD None pc=16 frame=19(0x6d475e0)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x6d475e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x6d475e0)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x6d475e0)
tracing opcode LOAD_FAST None pc=24 frame=19(0x6d475e0)
tracing opcode CALL_METHOD None pc=26 frame=19(0x6d475e0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d32d3fb240)
push tracker due to record
push tracker 3 frame 0x14d32d3fb240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d32d3fb240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d32d3fb240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d32d3fb240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d32d3fb240)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d32d3fb240)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d32d3fb240)
load fast: 22897554686256
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d32d3fb240)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d32d3fb240)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d32d3fb240)
load fast: 22897158614768
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d32d3fb240)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_114 : [#users=0] = placeholder[target=tensor_114]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.2460, -0.1247,  0.0628,  ..., -0.5549,  0.1996, -0.7837],
         [ 0.5071, -0.0355,  0.3351,  ..., -0.2795,  0.3392, -0.1007],
         [-0.1895, -0.0442,  0.4583,  ...,  0.6293, -0.0208, -0.7414],
         ...,
         [-0.2826, -0.3191,  0.1766,  ...,  0.0805, -0.5387, -0.7031],
         [-0.2867, -0.4711,  0.0645,  ..., -0.0744, -0.3002, -0.1060],
         [ 0.2643,  0.0346, -0.1293,  ...,  0.0043,  0.4261, -0.5981]]]), modified_attrs={}, prev=None) 22897088693680 22897158614768
obj: tensor([[[-0.2460, -0.1247,  0.0628,  ..., -0.5549,  0.1996, -0.7837],
         [ 0.5071, -0.0355,  0.3351,  ..., -0.2795,  0.3392, -0.1007],
         [-0.1895, -0.0442,  0.4583,  ...,  0.6293, -0.0208, -0.7414],
         ...,
         [-0.2826, -0.3191,  0.1766,  ...,  0.0805, -0.5387, -0.7031],
         [-0.2867, -0.4711,  0.0645,  ..., -0.0744, -0.3002, -0.1060],
         [ 0.2643,  0.0346, -0.1293,  ...,  0.0043,  0.4261, -0.5981]]]) 22897158614768
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.2460, -0.1247,  0.0628,  ..., -0.5549,  0.1996, -0.7837],
         [ 0.5071, -0.0355,  0.3351,  ..., -0.2795,  0.3392, -0.1007],
         [-0.1895, -0.0442,  0.4583,  ...,  0.6293, -0.0208, -0.7414],
         ...,
         [-0.2826, -0.3191,  0.1766,  ...,  0.0805, -0.5387, -0.7031],
         [-0.2867, -0.4711,  0.0645,  ..., -0.0744, -0.3002, -0.1060],
         [ 0.2643,  0.0346, -0.1293,  ...,  0.0043,  0.4261, -0.5981]]]), modified_attrs={}, prev=None) 22897158664544
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d32d3fb240)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x6d475e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x6d475e0)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x6d475e0)
tracing opcode LOAD_FAST None pc=34 frame=19(0x6d475e0)
tracing opcode LOAD_FAST None pc=36 frame=19(0x6d475e0)
load fast: 22897158904224
tracing opcode BINARY_ADD None pc=38 frame=19(0x6d475e0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x6d475e0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x88948b0)
push tracker due to record
push tracker 2 frame 0x88948b0 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x88948b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x88948b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x88948b0 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x88948b0)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x88948b0)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x88948b0)
load fast: 22897088698544
tracing opcode LOAD_ATTR None pc=12 frame=2(0x88948b0)
tracing opcode STORE_FAST None pc=14 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x88948b0)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x88948b0)
tracing opcode CALL_METHOD None pc=20 frame=2(0x88948b0)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x88948b0)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=28 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=30 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=32 frame=2(0x88948b0)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x88948b0)
record function in graph <built-in method mean of Tensor object at 0x14d324d698b0>
func self id: 22897088698544
tracing opcode STORE_FAST None pc=36 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x88948b0)
tracing opcode LOAD_FAST None pc=40 frame=2(0x88948b0)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x88948b0)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=46 frame=2(0x88948b0)
tracing opcode CALL_METHOD None pc=48 frame=2(0x88948b0)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=52 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=54 frame=2(0x88948b0)
tracing opcode LOAD_CONST None pc=56 frame=2(0x88948b0)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x88948b0)
record function in graph <built-in method mean of Tensor object at 0x14d324d7a090>
func self id: 22897088766096
tracing opcode STORE_FAST None pc=60 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x88948b0)
tracing opcode LOAD_FAST None pc=64 frame=2(0x88948b0)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x88948b0)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x88948b0)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x88948b0)
tracing opcode LOAD_FAST None pc=72 frame=2(0x88948b0)
tracing opcode LOAD_FAST None pc=74 frame=2(0x88948b0)
load fast: 22897554686208
tracing opcode LOAD_ATTR None pc=76 frame=2(0x88948b0)
tracing opcode BINARY_ADD None pc=78 frame=2(0x88948b0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x88948b0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x88948b0)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x88948b0)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x88948b0)
tracing opcode LOAD_FAST None pc=90 frame=2(0x88948b0)
tracing opcode CALL_METHOD None pc=92 frame=2(0x88948b0)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x88948b0)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x88948b0)
tracing opcode LOAD_FAST None pc=100 frame=2(0x88948b0)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x88948b0)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x88948b0)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x88948b0)
tracing opcode BINARY_ADD None pc=108 frame=2(0x88948b0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x88948b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x88948b0)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x88948b0)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_116 : [#users=4] = placeholder[target=tensor_116]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_116,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_116, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_116, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_116, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d324d698b0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x88948b0)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x6d475e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x6d475e0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x6d475e0)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_113 : [#users=1] = placeholder[target=tensor_113]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_113,), kwargs = {})
    %tensor_115 : [#users=1] = placeholder[target=tensor_115]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_115), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x6d475e0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0xa4d8520)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0xa4d8520)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0xa4d8520)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0xa4d8520)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0xa4d8520)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_83 : [#users=2] = placeholder[target=tensor_83]
    %tensor_84 : [#users=1] = placeholder[target=tensor_84]
    %tensor_85 : [#users=1] = placeholder[target=tensor_85]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_83,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_85, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_94 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_94, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_84, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_83), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0xa4d8520)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0xd188320)
push tracker due to record
push tracker 9 frame 0xd188320 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0xd188320)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0xd188320)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0xd188320 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0xd188320)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0xd188320)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0xd188320)
load fast: 22897554687600
tracing opcode LOAD_ATTR None pc=12 frame=9(0xd188320)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0xd188320)
load fast: 22897088768656
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0xd188320)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0xd188320)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0xd188320)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0xd188320)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0xd188320)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0xd188320)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0xd188320)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x88972d0)
push tracker due to record
push tracker 10 frame 0x88972d0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x88972d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x88972d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x88972d0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x88972d0)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x88972d0)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x88972d0)
load fast: 22897554687648
tracing opcode LOAD_ATTR None pc=12 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x88972d0)
load fast: 22897088768656
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x88972d0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x88972d0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x88972d0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x88972d0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x88972d0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x88972d0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x88972d0)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x889b7a0)
push tracker due to record
push tracker 11 frame 0x889b7a0 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x889b7a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x889b7a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x889b7a0 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x889b7a0)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x889b7a0)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x889b7a0)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x889b7a0)
tracing opcode IS_OP None pc=16 frame=11(0x889b7a0)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x889b7a0)
load fast: 22897554687696
tracing opcode LOAD_METHOD None pc=22 frame=11(0x889b7a0)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x889b7a0)
load fast: 22897088768656
tracing opcode CALL_METHOD None pc=26 frame=11(0x889b7a0)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=34 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=36 frame=11(0x889b7a0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x8af6030)
push tracker due to record
push tracker 12 frame 0x8af6030 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x8af6030)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x8af6030)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x8af6030 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x8af6030)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x8af6030)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x8af6030)
load fast: 22897158559200
tracing opcode LOAD_METHOD None pc=12 frame=12(0x8af6030)
tracing opcode CALL_METHOD None pc=14 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=16 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=18 frame=12(0x8af6030)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x8af6030)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x8af6030)
tracing opcode LOAD_FAST None pc=24 frame=12(0x8af6030)
load fast: 22897554687696
tracing opcode LOAD_ATTR None pc=26 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=28 frame=12(0x8af6030)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x8af6030)
tracing opcode BINARY_ADD None pc=32 frame=12(0x8af6030)
tracing opcode STORE_FAST None pc=34 frame=12(0x8af6030)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x8af6030)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x8af6030)
tracing opcode LOAD_FAST None pc=40 frame=12(0x8af6030)
tracing opcode CALL_METHOD None pc=42 frame=12(0x8af6030)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x8af6030)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x8af6030)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=50 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=52 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=54 frame=12(0x8af6030)
tracing opcode LOAD_CONST None pc=56 frame=12(0x8af6030)
tracing opcode CALL_METHOD None pc=58 frame=12(0x8af6030)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x8af6030)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_124 : [#users=1] = placeholder[target=tensor_124]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_124, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x8af6030)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=40 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=42 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=44 frame=11(0x889b7a0)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x889b7a0)
record function in graph <built-in method chunk of Tensor object at 0x14d324d388b0>
func self id: 22897088497840
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x889b7a0)
sub_value 22897158614528 tensor([[[[ 2.9730e-01,  2.1685e-01,  5.3471e-01,  ..., -1.8167e-01,
            4.9765e-01,  5.1840e-01],
          [-1.3305e+00, -3.7004e-01,  8.6663e-01,  ...,  1.2467e-01,
            5.8227e-01, -1.3585e-01],
          [ 5.8167e-02,  2.7272e-01,  1.0474e+00,  ...,  3.3622e-01,
           -6.9149e-02, -9.8303e-02],
          ...,
          [ 2.0989e-01,  4.3865e-01,  1.3145e+00,  ..., -1.9225e-01,
            7.5093e-01,  9.3773e-02],
          [-9.8752e-02,  2.2440e-01,  5.9855e-01,  ...,  9.5974e-02,
           -8.7153e-01,  2.6851e-01],
          [-5.4283e-01,  6.9193e-01,  4.5358e-01,  ..., -1.6420e-01,
            2.0550e-01, -9.1292e-01]],

         [[-3.7603e-01, -1.7700e-02,  7.2138e-02,  ...,  3.4416e-01,
            4.6851e-01, -7.5217e-01],
          [-3.2120e-01,  5.3953e-01, -1.0095e+00,  ..., -3.1571e-01,
            3.4575e-01,  1.1146e+00],
          [-8.6677e-01,  6.5629e-01,  2.1607e-01,  ..., -3.1139e-01,
            3.8704e-01, -5.2632e-01],
          ...,
          [ 7.5779e-02, -4.8293e-01, -2.2626e-01,  ..., -4.3734e-01,
            1.9526e-01, -5.6579e-01],
          [-1.7053e-01, -3.9607e-02, -9.7951e-01,  ...,  7.8575e-02,
            4.4859e-01,  4.3993e-01],
          [ 3.8958e-01,  3.7907e-02, -2.7260e-01,  ...,  7.1520e-01,
           -4.8716e-02,  5.7784e-01]],

         [[ 6.2348e-02,  1.0629e+00, -4.5343e-01,  ...,  2.8055e-01,
            1.6712e-02,  4.7688e-01],
          [-1.3246e-01, -2.6853e-01,  3.4439e-01,  ...,  3.3809e-01,
            5.6776e-02, -8.7543e-01],
          [ 1.3239e-01,  5.4897e-01, -9.4461e-01,  ..., -5.9397e-01,
           -4.1459e-01,  1.6271e-01],
          ...,
          [-4.6213e-01,  5.6172e-02,  4.6630e-01,  ..., -2.4161e-01,
           -1.5293e-01,  5.7554e-02],
          [ 1.4880e-01, -8.2802e-01,  5.6124e-02,  ...,  2.7288e-01,
            2.3919e-01, -4.5700e-01],
          [-6.0571e-02, -3.8976e-01, -2.6032e-01,  ..., -5.3444e-02,
           -1.8113e+00, -3.6485e-01]],

         ...,

         [[ 2.2488e-01, -7.6178e-01,  3.0663e-01,  ...,  6.0458e-01,
           -4.9018e-02, -7.8408e-01],
          [ 5.8878e-01, -3.4256e-02,  1.2299e+00,  ..., -2.7334e-01,
            1.7037e-01, -6.4499e-01],
          [ 3.1473e-01,  9.1819e-01,  3.1637e-01,  ..., -4.1267e-01,
            6.8507e-01, -1.9872e-01],
          ...,
          [ 9.7902e-01, -5.2046e-03, -5.1457e-01,  ..., -4.1734e-01,
           -2.0515e-01,  2.0645e-01],
          [-1.8466e-01, -7.6504e-01, -2.1713e-02,  ...,  3.0686e-01,
           -1.4840e-01, -7.6034e-01],
          [ 2.0465e-01,  3.1998e-01, -5.6781e-01,  ..., -2.7086e-01,
            1.5627e-01,  7.8610e-01]],

         [[-1.9885e-01,  2.0479e-01, -3.4027e-01,  ..., -6.4879e-01,
           -1.1277e-02, -1.7418e-01],
          [-1.0107e+00,  8.5281e-02, -3.4588e-01,  ..., -3.0184e-01,
            2.8966e-01,  6.6409e-01],
          [ 1.4534e+00,  4.5173e-01, -6.8294e-01,  ..., -2.8443e-01,
           -1.9402e-01,  3.0911e-01],
          ...,
          [ 3.8109e-01,  1.2677e+00,  7.3663e-02,  ..., -7.6847e-01,
            7.8711e-01,  4.5382e-01],
          [ 4.1894e-02, -2.2031e-01, -1.3998e-02,  ..., -2.3631e-01,
            2.9778e-01, -3.2013e-01],
          [ 7.3387e-01,  1.1003e+00,  1.1146e+00,  ...,  6.9239e-01,
           -1.4498e-03, -2.7227e-01]],

         [[-3.2866e-02, -1.1899e-01, -2.3393e-01,  ..., -2.8913e-01,
           -6.7202e-01, -2.8693e-01],
          [ 8.9551e-01,  2.8717e-01, -2.7087e-02,  ..., -3.8921e-01,
           -4.0714e-01, -1.4450e-01],
          [-1.8564e+00,  9.0853e-01,  1.9866e-01,  ..., -8.7061e-01,
            1.1592e+00, -3.7708e-01],
          ...,
          [ 4.5990e-01, -2.5916e-01, -1.7031e-01,  ...,  3.4115e-01,
           -9.2376e-02, -3.7381e-01],
          [-8.8218e-01,  6.6293e-02,  1.3495e+00,  ..., -1.3437e-02,
           -3.2400e-01, -9.7046e-02],
          [-1.7632e-01, -6.1828e-01,  1.3198e+00,  ..., -1.6933e-01,
           -1.4107e+00, -8.1565e-02]]]])
sub_value 22897088497920 tensor([[[[-4.2770e-01, -2.0719e-01,  6.9591e-01,  ...,  5.6511e-01,
            1.1064e+00, -5.2703e-01],
          [-4.5914e-01,  4.3578e-02,  2.9624e-01,  ...,  1.2329e+00,
           -1.5171e-01, -8.3602e-01],
          [-6.1471e-01,  2.3545e-01, -8.3742e-01,  ...,  4.5029e-01,
           -3.2512e-01, -5.6992e-01],
          ...,
          [-1.7148e-01,  2.7392e-01,  6.2774e-02,  ..., -3.0487e-01,
            2.7813e-01, -6.9360e-01],
          [ 2.2931e-01, -2.4746e-01,  6.8434e-01,  ..., -9.7807e-02,
           -7.1560e-01, -9.2487e-03],
          [-5.9708e-01,  6.6008e-01,  2.3032e-01,  ..., -7.8841e-01,
           -7.3275e-01,  4.7187e-01]],

         [[ 6.6017e-01, -5.5751e-01,  3.0547e-01,  ...,  1.5886e-02,
           -2.5349e-01,  4.8787e-01],
          [-8.2927e-03, -2.5810e-02,  7.1599e-02,  ...,  2.9366e-01,
           -2.5429e-01, -1.1731e+00],
          [-7.1973e-01,  2.6926e-01, -8.8142e-02,  ..., -2.6687e-01,
           -2.2081e-01, -2.2029e-01],
          ...,
          [-3.2892e-01,  1.9957e-01, -4.3191e-01,  ..., -3.5434e-01,
            1.0599e-01, -9.4427e-02],
          [-5.6197e-01,  1.1722e+00, -2.8593e-01,  ...,  2.4229e-02,
            2.0886e-01,  1.8178e-01],
          [ 3.6148e-01,  2.1782e-01,  7.1968e-01,  ...,  3.4588e-02,
           -4.2140e-01, -1.0227e+00]],

         [[ 8.8228e-02, -2.4694e-01, -7.6220e-01,  ...,  2.6542e-01,
            3.8533e-02,  4.2014e-01],
          [ 5.5901e-01,  5.6038e-01, -5.8622e-01,  ..., -3.0071e-02,
            7.1444e-02,  2.5873e-01],
          [-5.8109e-01,  6.4528e-02,  5.7510e-02,  ...,  4.7552e-01,
           -1.9875e-01, -1.4357e-02],
          ...,
          [ 2.5296e-01,  3.7983e-01,  5.4436e-01,  ...,  4.7131e-01,
            3.7352e-01,  6.3520e-01],
          [ 1.0749e-01,  6.2924e-01, -4.5249e-01,  ...,  3.8114e-01,
            2.5506e-01, -2.8087e-01],
          [-4.2803e-01,  1.4636e-01, -7.2461e-01,  ...,  2.9359e-01,
            3.5306e-01,  1.2752e-01]],

         ...,

         [[-6.9876e-01,  6.1344e-01, -5.4713e-01,  ..., -4.4504e-01,
            7.5343e-01,  6.1543e-01],
          [-6.9929e-02,  3.8450e-01,  1.0414e-02,  ...,  8.5622e-02,
            4.2505e-03,  4.6536e-01],
          [-6.0335e-01, -5.0789e-01, -2.8730e-01,  ...,  2.6684e-01,
           -2.3571e-01, -5.6725e-01],
          ...,
          [-2.3197e-01, -5.8369e-01,  7.3475e-01,  ...,  1.6217e-01,
            1.0123e+00, -4.0964e-01],
          [ 3.1609e-01, -7.7300e-01, -4.1802e-01,  ...,  8.9265e-04,
           -3.3562e-01,  5.2206e-01],
          [ 2.1502e-01,  6.3558e-01, -2.4663e-01,  ..., -7.2547e-01,
            4.2227e-01,  5.4122e-01]],

         [[ 3.8804e-01, -2.0469e-01,  5.0183e-01,  ..., -2.8855e-01,
           -2.3918e-01, -1.6739e-02],
          [-8.1597e-01,  4.0919e-01,  5.7724e-01,  ...,  7.4764e-02,
           -6.3751e-01,  3.0255e-02],
          [ 2.5252e-01,  5.2902e-01,  5.2370e-02,  ..., -6.5085e-01,
           -2.6687e-01, -7.4587e-01],
          ...,
          [-5.1433e-01,  3.5959e-01,  7.0976e-01,  ..., -5.9608e-01,
           -2.8501e-01,  8.9326e-01],
          [-9.1021e-01,  2.2074e-01, -3.9705e-01,  ..., -1.1764e+00,
           -1.0525e-01,  1.7336e-01],
          [-1.9148e-01, -1.1962e-01,  6.0245e-02,  ..., -1.2912e+00,
           -1.5595e-01,  1.8676e-01]],

         [[ 6.3187e-01, -4.0032e-01,  1.0826e-01,  ...,  7.9898e-01,
            5.5744e-01, -6.3382e-01],
          [-1.9653e-01,  3.8690e-01, -3.3920e-01,  ..., -1.8374e-01,
            3.7863e-01,  8.4659e-01],
          [-1.8134e-01,  1.3350e+00,  1.3099e-01,  ..., -2.5551e-01,
           -8.9181e-01, -4.2880e-01],
          ...,
          [ 5.3650e-01,  4.2729e-01, -5.9812e-01,  ...,  9.4069e-01,
            1.0242e-01,  2.2545e-01],
          [ 2.8309e-01, -5.6228e-01,  1.9962e-01,  ...,  2.9183e-01,
           -3.8126e-03,  2.9469e-01],
          [-4.8683e-01,  1.0767e+00, -2.4582e-01,  ...,  1.3375e-01,
           -1.9056e-01,  6.6321e-01]]]])
sub_value 22897088496800 tensor([[[[-1.0000e-01, -3.1078e-01, -5.5034e-01,  ...,  2.3804e-01,
            3.4654e-01, -1.9550e-01],
          [ 2.8879e-01,  1.1916e-01,  3.2451e-01,  ...,  2.6139e-01,
           -4.6529e-01,  1.8248e-01],
          [-9.5321e-01,  4.9218e-01,  5.5422e-01,  ..., -1.1799e+00,
           -1.3937e+00,  7.9621e-01],
          ...,
          [-1.1333e+00,  3.3702e-01,  9.1885e-01,  ...,  4.1585e-02,
           -6.3061e-01, -6.3497e-02],
          [ 3.7879e-01, -1.0309e+00,  3.3835e-01,  ..., -4.8152e-01,
            6.0462e-01,  9.6548e-02],
          [-6.3634e-01,  1.4223e+00,  4.2169e-01,  ..., -1.2784e-01,
           -3.3993e-02, -3.3234e-01]],

         [[ 9.8781e-02, -6.5907e-01,  5.7517e-01,  ..., -1.1813e+00,
            4.5581e-01,  3.4024e-01],
          [ 4.4438e-01, -7.0585e-01,  1.1713e+00,  ...,  5.1432e-01,
           -1.5828e-01, -7.6765e-01],
          [ 3.8855e-02,  3.3310e-02, -6.9262e-02,  ...,  6.1160e-01,
           -1.7516e-01,  5.4645e-02],
          ...,
          [ 4.9583e-01, -8.3700e-01,  8.8896e-01,  ...,  9.6530e-01,
            1.5162e-01,  6.9194e-01],
          [-5.0116e-01,  1.2235e-01, -1.6326e-01,  ..., -6.4371e-01,
           -5.8510e-01,  2.0300e-01],
          [ 2.4675e-01,  2.9641e-01, -2.2973e-01,  ..., -2.4978e-01,
           -1.0899e+00, -3.8485e-01]],

         [[-9.0459e-01,  5.5835e-01, -8.7928e-01,  ..., -4.2710e-01,
           -2.5512e-01, -5.9472e-01],
          [-8.5288e-02,  2.8163e-01,  1.6145e-01,  ...,  5.1407e-01,
           -9.9895e-02, -5.7468e-01],
          [-2.0428e-01, -5.5219e-02, -1.8819e-01,  ...,  1.0872e-01,
           -5.5857e-02,  6.1081e-01],
          ...,
          [-9.6018e-03,  4.9769e-01, -5.3086e-02,  ..., -6.5065e-02,
           -4.4099e-02, -3.4312e-01],
          [ 5.0620e-01,  1.6163e-01,  1.6057e-01,  ..., -1.5556e-01,
            6.4224e-01, -2.5982e-01],
          [ 3.3710e-01, -5.4727e-01,  4.9467e-01,  ...,  3.0499e-01,
           -4.1844e-01,  8.1112e-01]],

         ...,

         [[ 2.4554e-01, -8.4139e-01,  1.0062e+00,  ...,  1.2384e+00,
           -1.1945e+00,  4.2340e-03],
          [-4.7428e-01, -4.1510e-01,  6.0084e-01,  ...,  1.0494e+00,
            1.7981e-01,  4.6411e-01],
          [ 2.7540e-03,  5.8030e-01, -3.9702e-02,  ...,  5.7488e-01,
            4.5892e-01,  4.6819e-02],
          ...,
          [-7.0418e-01,  9.8958e-01, -1.9866e-01,  ...,  5.7073e-01,
           -1.4420e+00,  3.0819e-01],
          [ 1.9847e-01, -6.9664e-01, -1.6354e-04,  ...,  6.7738e-01,
            3.8396e-01, -1.1655e+00],
          [-6.7892e-01,  1.0539e+00, -2.1948e-01,  ...,  3.6679e-01,
           -4.8715e-01, -1.2533e-02]],

         [[ 2.2719e-01, -2.6659e-01,  6.3343e-01,  ..., -7.8986e-01,
            3.1983e-01, -6.5809e-01],
          [ 5.4146e-01, -4.5494e-01,  2.8564e-01,  ..., -1.6542e-01,
            5.5038e-01,  2.0608e-01],
          [ 1.3723e-02,  1.3452e-01,  7.3489e-01,  ...,  5.9060e-01,
           -1.3871e+00,  1.4229e-01],
          ...,
          [-1.0705e+00, -2.4922e-01, -7.8164e-01,  ..., -1.8445e-01,
            4.5616e-01,  2.5060e-01],
          [ 7.1752e-02,  9.4723e-02,  1.8940e-01,  ..., -1.2531e-01,
           -1.0062e+00, -3.8455e-02],
          [ 9.4086e-01,  1.3931e-01, -3.9281e-01,  ..., -1.0029e+00,
           -1.1743e-01,  2.8912e-01]],

         [[ 7.6211e-01, -4.7856e-01,  1.4315e-01,  ...,  2.0377e-01,
           -1.0790e+00, -1.7755e-01],
          [-3.1139e-01,  3.7585e-01,  4.3123e-01,  ..., -6.8423e-01,
            5.0422e-02,  2.4736e-01],
          [-8.2956e-01,  1.0651e-01, -1.1253e-01,  ..., -2.8936e-01,
            1.6095e-01, -6.3770e-02],
          ...,
          [ 5.8627e-01, -1.3051e+00, -9.2092e-01,  ..., -2.1336e-01,
           -2.7455e-02,  8.5235e-01],
          [-4.5723e-01, -9.1696e-01, -1.0241e-01,  ...,  3.4073e-01,
           -1.4484e-01,  1.0627e+00],
          [-1.1692e-01,  1.3921e-01, -2.1003e-01,  ..., -4.4568e-01,
           -6.4404e-01,  5.1533e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x889b7a0)
tracing opcode STORE_FAST None pc=52 frame=11(0x889b7a0)
tracing opcode STORE_FAST None pc=54 frame=11(0x889b7a0)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x889b7a0)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x889b7a0)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=232 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=234 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=236 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=238 frame=11(0x889b7a0)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x889b7a0)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x889b7a0)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x889b7a0)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x889b7a0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d32d3fb640)
push tracker due to record
push tracker 12 frame 0x14d32d3fb640 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d32d3fb640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d32d3fb640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d32d3fb640 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d32d3fb640)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d32d3fb640)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d32d3fb640)
load fast: 22897158612688
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d32d3fb640)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d32d3fb640)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d32d3fb640)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d32d3fb640)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d32d3fb640)
load fast: 22897554687696
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d32d3fb640)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d32d3fb640)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d32d3fb640)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d32d3fb640)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d32d3fb640)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d32d3fb640)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d32d3fb640)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d32d3fb640)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d32d3fb640)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d32d3fb640)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d32d3fb640)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d32d3fb640)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d32d3fb640)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d32d3fb640)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_125 : [#users=1] = placeholder[target=tensor_125]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_125, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d32d3fb640)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x889b7a0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x889b7a0)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x889b7a0)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=262 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=264 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=266 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=268 frame=11(0x889b7a0)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x889b7a0)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x889b7a0)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x889b7a0)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x889b7a0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x6d49e10)
push tracker due to record
push tracker 12 frame 0x6d49e10 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x6d49e10)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x6d49e10)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x6d49e10 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x6d49e10)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x6d49e10)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x6d49e10)
load fast: 22897158614208
tracing opcode LOAD_METHOD None pc=12 frame=12(0x6d49e10)
tracing opcode CALL_METHOD None pc=14 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=16 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=18 frame=12(0x6d49e10)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x6d49e10)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x6d49e10)
tracing opcode LOAD_FAST None pc=24 frame=12(0x6d49e10)
load fast: 22897554687696
tracing opcode LOAD_ATTR None pc=26 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=28 frame=12(0x6d49e10)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x6d49e10)
tracing opcode BINARY_ADD None pc=32 frame=12(0x6d49e10)
tracing opcode STORE_FAST None pc=34 frame=12(0x6d49e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x6d49e10)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x6d49e10)
tracing opcode LOAD_FAST None pc=40 frame=12(0x6d49e10)
tracing opcode CALL_METHOD None pc=42 frame=12(0x6d49e10)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x6d49e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x6d49e10)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=50 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=52 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=54 frame=12(0x6d49e10)
tracing opcode LOAD_CONST None pc=56 frame=12(0x6d49e10)
tracing opcode CALL_METHOD None pc=58 frame=12(0x6d49e10)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x6d49e10)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_126 : [#users=1] = placeholder[target=tensor_126]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_126, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x6d49e10)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x889b7a0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x889b7a0)
tracing opcode STORE_FAST None pc=284 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x889b7a0)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x889b7a0)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x889b7a0)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x889b7a0)
tracing opcode BINARY_ADD None pc=296 frame=11(0x889b7a0)
tracing opcode STORE_FAST None pc=298 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x889b7a0)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=308 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=312 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=314 frame=11(0x889b7a0)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=320 frame=11(0x889b7a0)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x889b7a0)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x889b7a0)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x889b7a0)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x889b7a0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=334 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=338 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=342 frame=11(0x889b7a0)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x889b7a0)
record function in graph <built-in method to of Tensor object at 0x14d324d129f0>
func self id: 22897088342512
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x889b7a0)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=354 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=356 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=360 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=362 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=364 frame=11(0x889b7a0)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x889b7a0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x889b7a0)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=382 frame=11(0x889b7a0)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x889b7a0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x8899d40)
push tracker due to record
push tracker 3 frame 0x8899d40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x8899d40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x8899d40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x8899d40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x8899d40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x8899d40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x8899d40)
load fast: 22897554687792
tracing opcode LOAD_ATTR None pc=12 frame=3(0x8899d40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x8899d40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x8899d40)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x8899d40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x8899d40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=392 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=394 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=396 frame=11(0x889b7a0)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=400 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=402 frame=11(0x889b7a0)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0xd18a660)
push tracker due to record
push tracker 13 frame 0xd18a660 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0xd18a660)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0xd18a660)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0xd18a660 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0xd18a660)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0xd18a660)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0xd18a660)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0xd18a660)
tracing opcode IS_OP None pc=16 frame=13(0xd18a660)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=52 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=54 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=56 frame=13(0xd18a660)
tracing opcode COMPARE_OP None pc=58 frame=13(0xd18a660)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=82 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=84 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=86 frame=13(0xd18a660)
tracing opcode COMPARE_OP None pc=88 frame=13(0xd18a660)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=94 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=96 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=98 frame=13(0xd18a660)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0xd18a660)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0xd18a660)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=138 frame=13(0xd18a660)
load fast: 22897088342912
tracing opcode LOAD_METHOD None pc=140 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=142 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=144 frame=13(0xd18a660)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0xd18a660)
load fast: 22897088497920
tracing opcode LOAD_METHOD None pc=148 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=150 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=152 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=156 frame=13(0xd18a660)
load fast: 22897554687696
tracing opcode LOAD_ATTR None pc=158 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0xd18a660)
tracing opcode STORE_FAST None pc=162 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=166 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=168 frame=13(0xd18a660)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=172 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=174 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=176 frame=13(0xd18a660)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0xd18a660)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=184 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=186 frame=13(0xd18a660)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=190 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=192 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=194 frame=13(0xd18a660)
tracing opcode BINARY_ADD None pc=196 frame=13(0xd18a660)
tracing opcode BUILD_SLICE None pc=198 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=200 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=202 frame=13(0xd18a660)
tracing opcode BUILD_SLICE None pc=204 frame=13(0xd18a660)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0xd18a660)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0xd18a660)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0xd18a660)
tracing opcode STORE_FAST None pc=220 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=224 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=226 frame=13(0xd18a660)
tracing opcode CONTAINS_OP None pc=228 frame=13(0xd18a660)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=236 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=238 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=240 frame=13(0xd18a660)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=246 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=248 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=250 frame=13(0xd18a660)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xd187c80)
push tracker due to record
push tracker 12 frame 0xd187c80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xd187c80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xd187c80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0xd187c80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xd187c80)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xd187c80)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xd187c80)
load fast: 22897087636720
tracing opcode LOAD_METHOD None pc=12 frame=12(0xd187c80)
tracing opcode CALL_METHOD None pc=14 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=16 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=18 frame=12(0xd187c80)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xd187c80)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xd187c80)
tracing opcode LOAD_FAST None pc=24 frame=12(0xd187c80)
load fast: 22897554687696
tracing opcode LOAD_ATTR None pc=26 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=28 frame=12(0xd187c80)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xd187c80)
tracing opcode BINARY_ADD None pc=32 frame=12(0xd187c80)
tracing opcode STORE_FAST None pc=34 frame=12(0xd187c80)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xd187c80)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xd187c80)
tracing opcode LOAD_FAST None pc=40 frame=12(0xd187c80)
tracing opcode CALL_METHOD None pc=42 frame=12(0xd187c80)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xd187c80)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xd187c80)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=50 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=52 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=54 frame=12(0xd187c80)
tracing opcode LOAD_CONST None pc=56 frame=12(0xd187c80)
tracing opcode CALL_METHOD None pc=58 frame=12(0xd187c80)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xd187c80)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_131 : [#users=1] = placeholder[target=tensor_131]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_131, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xd187c80)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=256 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=258 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=260 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=262 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=264 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=266 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=268 frame=13(0xd18a660)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0xd18a660)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=276 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=278 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=280 frame=13(0xd18a660)
tracing opcode BINARY_ADD None pc=282 frame=13(0xd18a660)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=286 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=288 frame=13(0xd18a660)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=292 frame=13(0xd18a660)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=296 frame=13(0xd18a660)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=302 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=304 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=306 frame=13(0xd18a660)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=310 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=312 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=314 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0xd18a660)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0xbabc0a0)
push tracker due to record
push tracker 14 frame 0xbabc0a0 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0xbabc0a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0xbabc0a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0xbabc0a0 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0xbabc0a0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0xbabc0a0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0xbabc0a0)
load fast: 22897087882960
tracing opcode LOAD_METHOD None pc=12 frame=14(0xbabc0a0)
tracing opcode LOAD_FAST None pc=14 frame=14(0xbabc0a0)
load fast: 22897088342912
tracing opcode LOAD_METHOD None pc=16 frame=14(0xbabc0a0)
tracing opcode LOAD_CONST None pc=18 frame=14(0xbabc0a0)
tracing opcode CALL_METHOD None pc=20 frame=14(0xbabc0a0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0xbabc0a0)
tracing opcode LOAD_METHOD None pc=24 frame=14(0xbabc0a0)
tracing opcode LOAD_CONST None pc=26 frame=14(0xbabc0a0)
tracing opcode CALL_METHOD None pc=28 frame=14(0xbabc0a0)
tracing opcode LOAD_FAST None pc=30 frame=14(0xbabc0a0)
tracing opcode LOAD_METHOD None pc=32 frame=14(0xbabc0a0)
tracing opcode LOAD_CONST None pc=34 frame=14(0xbabc0a0)
tracing opcode CALL_METHOD None pc=36 frame=14(0xbabc0a0)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0xbabc0a0)
load fast: 22897087964640
tracing opcode LOAD_METHOD None pc=40 frame=14(0xbabc0a0)
tracing opcode LOAD_CONST None pc=42 frame=14(0xbabc0a0)
tracing opcode CALL_METHOD None pc=44 frame=14(0xbabc0a0)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0xbabc0a0)
tracing opcode CALL_METHOD None pc=48 frame=14(0xbabc0a0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0xbabc0a0)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_132 : [#users=1] = placeholder[target=tensor_132]
    %tensor_133 : [#users=0] = placeholder[target=tensor_133]
    %tensor_134 : [#users=0] = placeholder[target=tensor_134]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_132, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0xbabc0a0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0xd18a660)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=326 frame=13(0xd18a660)
tracing opcode INPLACE_ADD None pc=328 frame=13(0xd18a660)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=334 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=336 frame=13(0xd18a660)
tracing opcode CONTAINS_OP None pc=338 frame=13(0xd18a660)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=346 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=348 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=350 frame=13(0xd18a660)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=356 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=358 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=360 frame=13(0xd18a660)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xbab3560)
push tracker due to record
push tracker 12 frame 0xbab3560 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xbab3560)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xbab3560)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0xbab3560 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xbab3560)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xbab3560)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xbab3560)
load fast: 22897087714704
tracing opcode LOAD_METHOD None pc=12 frame=12(0xbab3560)
tracing opcode CALL_METHOD None pc=14 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=16 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=18 frame=12(0xbab3560)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xbab3560)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xbab3560)
tracing opcode LOAD_FAST None pc=24 frame=12(0xbab3560)
load fast: 22897554687696
tracing opcode LOAD_ATTR None pc=26 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=28 frame=12(0xbab3560)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xbab3560)
tracing opcode BINARY_ADD None pc=32 frame=12(0xbab3560)
tracing opcode STORE_FAST None pc=34 frame=12(0xbab3560)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xbab3560)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xbab3560)
tracing opcode LOAD_FAST None pc=40 frame=12(0xbab3560)
tracing opcode CALL_METHOD None pc=42 frame=12(0xbab3560)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xbab3560)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xbab3560)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=50 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=52 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=54 frame=12(0xbab3560)
tracing opcode LOAD_CONST None pc=56 frame=12(0xbab3560)
tracing opcode CALL_METHOD None pc=58 frame=12(0xbab3560)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xbab3560)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_135 : [#users=1] = placeholder[target=tensor_135]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_135, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xbab3560)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0xd18a660)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=368 frame=13(0xd18a660)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=372 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=374 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=376 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=378 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=380 frame=13(0xd18a660)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=384 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=386 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0xd18a660)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0xd18a660)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0xd18a660)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0xd18a660)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0xd18a660)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=402 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=404 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=406 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=408 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=410 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=412 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=414 frame=13(0xd18a660)
tracing opcode COMPARE_OP None pc=416 frame=13(0xd18a660)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0xd18a660)
tracing opcode STORE_FAST None pc=452 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=456 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=458 frame=13(0xd18a660)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0xd18a660)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0xd18a660)
tracing opcode BINARY_ADD None pc=464 frame=13(0xd18a660)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=468 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=470 frame=13(0xd18a660)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=474 frame=13(0xd18a660)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=478 frame=13(0xd18a660)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=484 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=486 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=488 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=490 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=492 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=494 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=496 frame=13(0xd18a660)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=500 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=502 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=504 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0xd18a660)
record function in graph <built-in method to of Tensor object at 0x14d324c7f130>
func self id: 22897087738160
tracing opcode CALL_METHOD None pc=508 frame=13(0xd18a660)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0xd18a660)
tracing opcode LOAD_ATTR None pc=514 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=518 frame=13(0xd18a660)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=522 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=524 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=526 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0xd18a660)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0xd182c90)
push tracker due to record
push tracker 15 frame 0xd182c90 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0xd182c90)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0xd182c90)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0xd182c90 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0xd182c90)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0xd182c90)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0xd182c90)
load fast: 22897087717104
tracing opcode LOAD_METHOD None pc=12 frame=15(0xd182c90)
tracing opcode LOAD_FAST None pc=14 frame=15(0xd182c90)
load fast: 22897088342912
tracing opcode LOAD_METHOD None pc=16 frame=15(0xd182c90)
tracing opcode LOAD_CONST None pc=18 frame=15(0xd182c90)
tracing opcode CALL_METHOD None pc=20 frame=15(0xd182c90)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0xd182c90)
tracing opcode LOAD_METHOD None pc=24 frame=15(0xd182c90)
tracing opcode LOAD_CONST None pc=26 frame=15(0xd182c90)
tracing opcode CALL_METHOD None pc=28 frame=15(0xd182c90)
tracing opcode LOAD_FAST None pc=30 frame=15(0xd182c90)
load fast: 22897088497920
tracing opcode LOAD_METHOD None pc=32 frame=15(0xd182c90)
tracing opcode LOAD_CONST None pc=34 frame=15(0xd182c90)
tracing opcode CALL_METHOD None pc=36 frame=15(0xd182c90)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0xd182c90)
tracing opcode LOAD_METHOD None pc=40 frame=15(0xd182c90)
tracing opcode LOAD_CONST None pc=42 frame=15(0xd182c90)
tracing opcode CALL_METHOD None pc=44 frame=15(0xd182c90)
tracing opcode BUILD_LIST None pc=46 frame=15(0xd182c90)
tracing opcode CALL_METHOD None pc=48 frame=15(0xd182c90)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0xd182c90)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_136 : [#users=1] = placeholder[target=tensor_136]
    %tensor_137 : [#users=0] = placeholder[target=tensor_137]
    %tensor_138 : [#users=0] = placeholder[target=tensor_138]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_136, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0xd182c90)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0xd18a660)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0xd18a660)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=538 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0xd18a660)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=546 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=548 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=550 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=552 frame=13(0xd18a660)
tracing opcode LOAD_METHOD None pc=554 frame=13(0xd18a660)
tracing opcode LOAD_CONST None pc=556 frame=13(0xd18a660)
tracing opcode CALL_METHOD None pc=558 frame=13(0xd18a660)
tracing opcode COMPARE_OP None pc=560 frame=13(0xd18a660)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0xd18a660)
tracing opcode LOAD_FAST None pc=626 frame=13(0xd18a660)
tracing opcode INPLACE_ADD None pc=628 frame=13(0xd18a660)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0xd18a660)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0xd18a660)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0xd18a660)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_128 : [#users=1] = placeholder[target=tensor_128]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_128, 1), kwargs = {})
    %tensor_129 : [#users=1] = placeholder[target=tensor_129]
    %tensor_130 : [#users=1] = placeholder[target=tensor_130]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_129, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_130, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0xd18a660)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=408 frame=11(0x889b7a0)
tracing opcode IS_OP None pc=410 frame=11(0x889b7a0)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=418 frame=11(0x889b7a0)
tracing opcode BINARY_ADD None pc=420 frame=11(0x889b7a0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x889b7a0)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=470 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=472 frame=11(0x889b7a0)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=476 frame=11(0x889b7a0)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=484 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=486 frame=11(0x889b7a0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e46a240)
push tracker due to record
push tracker 3 frame 0x14d33e46a240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e46a240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e46a240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e46a240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e46a240)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e46a240)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e46a240)
load fast: 22897554687936
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e46a240)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e46a240)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e46a240)
load fast: 22897087739280
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e46a240)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_140 : [#users=0] = placeholder[target=tensor_140]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0061, 0.0033, 0.0038,  ..., 0.0039, 0.0033, 0.0041],
          [0.0047, 0.0041, 0.0036,  ..., 0.0034, 0.0045, 0.0042],
          [0.0049, 0.0058, 0.0028,  ..., 0.0035, 0.0034, 0.0027],
          ...,
          [0.0039, 0.0032, 0.0033,  ..., 0.0043, 0.0033, 0.0032],
          [0.0046, 0.0034, 0.0045,  ..., 0.0034, 0.0035, 0.0036],
          [0.0039, 0.0044, 0.0031,  ..., 0.0044, 0.0030, 0.0038]],

         [[0.0045, 0.0058, 0.0038,  ..., 0.0043, 0.0035, 0.0035],
          [0.0030, 0.0040, 0.0041,  ..., 0.0036, 0.0049, 0.0040],
          [0.0031, 0.0039, 0.0036,  ..., 0.0051, 0.0041, 0.0052],
          ...,
          [0.0038, 0.0032, 0.0044,  ..., 0.0048, 0.0048, 0.0034],
          [0.0032, 0.0050, 0.0038,  ..., 0.0045, 0.0034, 0.0038],
          [0.0040, 0.0055, 0.0032,  ..., 0.0045, 0.0029, 0.0037]],

         [[0.0045, 0.0033, 0.0035,  ..., 0.0032, 0.0046, 0.0037],
          [0.0035, 0.0040, 0.0035,  ..., 0.0031, 0.0037, 0.0035],
          [0.0050, 0.0051, 0.0039,  ..., 0.0042, 0.0041, 0.0035],
          ...,
          [0.0039, 0.0034, 0.0045,  ..., 0.0046, 0.0038, 0.0033],
          [0.0043, 0.0037, 0.0043,  ..., 0.0031, 0.0035, 0.0041],
          [0.0039, 0.0041, 0.0047,  ..., 0.0042, 0.0040, 0.0042]],

         ...,

         [[0.0030, 0.0033, 0.0035,  ..., 0.0071, 0.0040, 0.0026],
          [0.0039, 0.0035, 0.0030,  ..., 0.0042, 0.0054, 0.0034],
          [0.0044, 0.0031, 0.0045,  ..., 0.0041, 0.0026, 0.0037],
          ...,
          [0.0047, 0.0045, 0.0038,  ..., 0.0045, 0.0072, 0.0041],
          [0.0030, 0.0041, 0.0038,  ..., 0.0031, 0.0041, 0.0031],
          [0.0041, 0.0043, 0.0038,  ..., 0.0048, 0.0035, 0.0043]],

         [[0.0041, 0.0046, 0.0037,  ..., 0.0035, 0.0036, 0.0034],
          [0.0038, 0.0040, 0.0032,  ..., 0.0030, 0.0042, 0.0029],
          [0.0047, 0.0037, 0.0050,  ..., 0.0039, 0.0034, 0.0040],
          ...,
          [0.0051, 0.0035, 0.0037,  ..., 0.0043, 0.0040, 0.0038],
          [0.0034, 0.0042, 0.0040,  ..., 0.0032, 0.0034, 0.0046],
          [0.0034, 0.0044, 0.0048,  ..., 0.0034, 0.0025, 0.0031]],

         [[0.0040, 0.0047, 0.0033,  ..., 0.0029, 0.0044, 0.0044],
          [0.0046, 0.0034, 0.0042,  ..., 0.0038, 0.0038, 0.0044],
          [0.0036, 0.0033, 0.0047,  ..., 0.0036, 0.0027, 0.0044],
          ...,
          [0.0048, 0.0030, 0.0032,  ..., 0.0040, 0.0041, 0.0031],
          [0.0028, 0.0039, 0.0036,  ..., 0.0025, 0.0038, 0.0049],
          [0.0038, 0.0027, 0.0034,  ..., 0.0045, 0.0032, 0.0041]]]]), modified_attrs={}, prev=None) 22897087451392 22897087739280
obj: tensor([[[[0.0061, 0.0033, 0.0038,  ..., 0.0039, 0.0033, 0.0041],
          [0.0047, 0.0041, 0.0036,  ..., 0.0034, 0.0045, 0.0042],
          [0.0049, 0.0058, 0.0028,  ..., 0.0035, 0.0034, 0.0027],
          ...,
          [0.0039, 0.0032, 0.0033,  ..., 0.0043, 0.0033, 0.0032],
          [0.0046, 0.0034, 0.0045,  ..., 0.0034, 0.0035, 0.0036],
          [0.0039, 0.0044, 0.0031,  ..., 0.0044, 0.0030, 0.0038]],

         [[0.0045, 0.0058, 0.0038,  ..., 0.0043, 0.0035, 0.0035],
          [0.0030, 0.0040, 0.0041,  ..., 0.0036, 0.0049, 0.0040],
          [0.0031, 0.0039, 0.0036,  ..., 0.0051, 0.0041, 0.0052],
          ...,
          [0.0038, 0.0032, 0.0044,  ..., 0.0048, 0.0048, 0.0034],
          [0.0032, 0.0050, 0.0038,  ..., 0.0045, 0.0034, 0.0038],
          [0.0040, 0.0055, 0.0032,  ..., 0.0045, 0.0029, 0.0037]],

         [[0.0045, 0.0033, 0.0035,  ..., 0.0032, 0.0046, 0.0037],
          [0.0035, 0.0040, 0.0035,  ..., 0.0031, 0.0037, 0.0035],
          [0.0050, 0.0051, 0.0039,  ..., 0.0042, 0.0041, 0.0035],
          ...,
          [0.0039, 0.0034, 0.0045,  ..., 0.0046, 0.0038, 0.0033],
          [0.0043, 0.0037, 0.0043,  ..., 0.0031, 0.0035, 0.0041],
          [0.0039, 0.0041, 0.0047,  ..., 0.0042, 0.0040, 0.0042]],

         ...,

         [[0.0030, 0.0033, 0.0035,  ..., 0.0071, 0.0040, 0.0026],
          [0.0039, 0.0035, 0.0030,  ..., 0.0042, 0.0054, 0.0034],
          [0.0044, 0.0031, 0.0045,  ..., 0.0041, 0.0026, 0.0037],
          ...,
          [0.0047, 0.0045, 0.0038,  ..., 0.0045, 0.0072, 0.0041],
          [0.0030, 0.0041, 0.0038,  ..., 0.0031, 0.0041, 0.0031],
          [0.0041, 0.0043, 0.0038,  ..., 0.0048, 0.0035, 0.0043]],

         [[0.0041, 0.0046, 0.0037,  ..., 0.0035, 0.0036, 0.0034],
          [0.0038, 0.0040, 0.0032,  ..., 0.0030, 0.0042, 0.0029],
          [0.0047, 0.0037, 0.0050,  ..., 0.0039, 0.0034, 0.0040],
          ...,
          [0.0051, 0.0035, 0.0037,  ..., 0.0043, 0.0040, 0.0038],
          [0.0034, 0.0042, 0.0040,  ..., 0.0032, 0.0034, 0.0046],
          [0.0034, 0.0044, 0.0048,  ..., 0.0034, 0.0025, 0.0031]],

         [[0.0040, 0.0047, 0.0033,  ..., 0.0029, 0.0044, 0.0044],
          [0.0046, 0.0034, 0.0042,  ..., 0.0038, 0.0038, 0.0044],
          [0.0036, 0.0033, 0.0047,  ..., 0.0036, 0.0027, 0.0044],
          ...,
          [0.0048, 0.0030, 0.0032,  ..., 0.0040, 0.0041, 0.0031],
          [0.0028, 0.0039, 0.0036,  ..., 0.0025, 0.0038, 0.0049],
          [0.0038, 0.0027, 0.0034,  ..., 0.0045, 0.0032, 0.0041]]]]) 22897087739280
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0061, 0.0033, 0.0038,  ..., 0.0039, 0.0033, 0.0041],
          [0.0047, 0.0041, 0.0036,  ..., 0.0034, 0.0045, 0.0042],
          [0.0049, 0.0058, 0.0028,  ..., 0.0035, 0.0034, 0.0027],
          ...,
          [0.0039, 0.0032, 0.0033,  ..., 0.0043, 0.0033, 0.0032],
          [0.0046, 0.0034, 0.0045,  ..., 0.0034, 0.0035, 0.0036],
          [0.0039, 0.0044, 0.0031,  ..., 0.0044, 0.0030, 0.0038]],

         [[0.0045, 0.0058, 0.0038,  ..., 0.0043, 0.0035, 0.0035],
          [0.0030, 0.0040, 0.0041,  ..., 0.0036, 0.0049, 0.0040],
          [0.0031, 0.0039, 0.0036,  ..., 0.0051, 0.0041, 0.0052],
          ...,
          [0.0038, 0.0032, 0.0044,  ..., 0.0048, 0.0048, 0.0034],
          [0.0032, 0.0050, 0.0038,  ..., 0.0045, 0.0034, 0.0038],
          [0.0040, 0.0055, 0.0032,  ..., 0.0045, 0.0029, 0.0037]],

         [[0.0045, 0.0033, 0.0035,  ..., 0.0032, 0.0046, 0.0037],
          [0.0035, 0.0040, 0.0035,  ..., 0.0031, 0.0037, 0.0035],
          [0.0050, 0.0051, 0.0039,  ..., 0.0042, 0.0041, 0.0035],
          ...,
          [0.0039, 0.0034, 0.0045,  ..., 0.0046, 0.0038, 0.0033],
          [0.0043, 0.0037, 0.0043,  ..., 0.0031, 0.0035, 0.0041],
          [0.0039, 0.0041, 0.0047,  ..., 0.0042, 0.0040, 0.0042]],

         ...,

         [[0.0030, 0.0033, 0.0035,  ..., 0.0071, 0.0040, 0.0026],
          [0.0039, 0.0035, 0.0030,  ..., 0.0042, 0.0054, 0.0034],
          [0.0044, 0.0031, 0.0045,  ..., 0.0041, 0.0026, 0.0037],
          ...,
          [0.0047, 0.0045, 0.0038,  ..., 0.0045, 0.0072, 0.0041],
          [0.0030, 0.0041, 0.0038,  ..., 0.0031, 0.0041, 0.0031],
          [0.0041, 0.0043, 0.0038,  ..., 0.0048, 0.0035, 0.0043]],

         [[0.0041, 0.0046, 0.0037,  ..., 0.0035, 0.0036, 0.0034],
          [0.0038, 0.0040, 0.0032,  ..., 0.0030, 0.0042, 0.0029],
          [0.0047, 0.0037, 0.0050,  ..., 0.0039, 0.0034, 0.0040],
          ...,
          [0.0051, 0.0035, 0.0037,  ..., 0.0043, 0.0040, 0.0038],
          [0.0034, 0.0042, 0.0040,  ..., 0.0032, 0.0034, 0.0046],
          [0.0034, 0.0044, 0.0048,  ..., 0.0034, 0.0025, 0.0031]],

         [[0.0040, 0.0047, 0.0033,  ..., 0.0029, 0.0044, 0.0044],
          [0.0046, 0.0034, 0.0042,  ..., 0.0038, 0.0038, 0.0044],
          [0.0036, 0.0033, 0.0047,  ..., 0.0036, 0.0027, 0.0044],
          ...,
          [0.0048, 0.0030, 0.0032,  ..., 0.0040, 0.0041, 0.0031],
          [0.0028, 0.0039, 0.0036,  ..., 0.0025, 0.0038, 0.0049],
          [0.0038, 0.0027, 0.0034,  ..., 0.0045, 0.0032, 0.0041]]]]), modified_attrs={}, prev=None) 22897087689104
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e46a240)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x889b7a0)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x889b7a0)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=536 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=538 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=540 frame=11(0x889b7a0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=548 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=550 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=552 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=554 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=556 frame=11(0x889b7a0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=560 frame=11(0x889b7a0)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=568 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=570 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=572 frame=11(0x889b7a0)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x889b7a0)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x889b7a0)
tracing opcode LOAD_CONST None pc=578 frame=11(0x889b7a0)
tracing opcode BINARY_ADD None pc=580 frame=11(0x889b7a0)
tracing opcode STORE_FAST None pc=582 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x889b7a0)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x889b7a0)
tracing opcode LOAD_FAST None pc=588 frame=11(0x889b7a0)
tracing opcode CALL_METHOD None pc=590 frame=11(0x889b7a0)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x889b7a0)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x889b7a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x889b7a0)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x889b7a0)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_123 : [#users=1] = placeholder[target=tensor_123]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_123,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_127 : [#users=1] = placeholder[target=tensor_127]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_127, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_128 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_128, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_139 : [#users=1] = placeholder[target=tensor_139]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_139, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x889b7a0)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x88972d0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x88972d0)
tracing opcode LOAD_CONST None pc=46 frame=10(0x88972d0)
tracing opcode IS_OP None pc=48 frame=10(0x88972d0)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x88972d0)
tracing opcode STORE_FAST None pc=54 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x88972d0)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x88972d0)
tracing opcode LOAD_FAST None pc=60 frame=10(0x88972d0)
tracing opcode LOAD_FAST None pc=62 frame=10(0x88972d0)
tracing opcode CALL_METHOD None pc=64 frame=10(0x88972d0)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x74ac560)
push tracker due to record
push tracker 16 frame 0x74ac560 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x74ac560)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x74ac560)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x74ac560 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x74ac560)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x74ac560)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x74ac560)
load fast: 22897554687984
tracing opcode LOAD_METHOD None pc=12 frame=16(0x74ac560)
tracing opcode LOAD_FAST None pc=14 frame=16(0x74ac560)
load fast: 22897087619936
tracing opcode CALL_METHOD None pc=16 frame=16(0x74ac560)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x74ac560)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x74ac560)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x74ac560)
tracing opcode LOAD_FAST None pc=24 frame=16(0x74ac560)
tracing opcode CALL_METHOD None pc=26 frame=16(0x74ac560)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0xa4daa80)
push tracker due to record
push tracker 3 frame 0xa4daa80 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0xa4daa80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0xa4daa80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0xa4daa80 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0xa4daa80)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0xa4daa80)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0xa4daa80)
load fast: 22897554688128
tracing opcode LOAD_ATTR None pc=12 frame=3(0xa4daa80)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0xa4daa80)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0xa4daa80)
load fast: 22897087489904
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0xa4daa80)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_142 : [#users=0] = placeholder[target=tensor_142]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.0272, -0.0112, -0.0618,  ...,  0.0648,  0.0431, -0.0715],
         [ 0.0323, -0.0200, -0.0588,  ...,  0.0606,  0.0519, -0.0783],
         [ 0.0236, -0.0123, -0.0546,  ...,  0.0620,  0.0366, -0.0749],
         ...,
         [ 0.0317, -0.0100, -0.0568,  ...,  0.0614,  0.0462, -0.0756],
         [ 0.0243, -0.0185, -0.0553,  ...,  0.0652,  0.0441, -0.0748],
         [ 0.0213, -0.0078, -0.0545,  ...,  0.0583,  0.0354, -0.0842]]]), modified_attrs={}, prev=None) 22897087529312 22897087489904
obj: tensor([[[ 0.0272, -0.0112, -0.0618,  ...,  0.0648,  0.0431, -0.0715],
         [ 0.0323, -0.0200, -0.0588,  ...,  0.0606,  0.0519, -0.0783],
         [ 0.0236, -0.0123, -0.0546,  ...,  0.0620,  0.0366, -0.0749],
         ...,
         [ 0.0317, -0.0100, -0.0568,  ...,  0.0614,  0.0462, -0.0756],
         [ 0.0243, -0.0185, -0.0553,  ...,  0.0652,  0.0441, -0.0748],
         [ 0.0213, -0.0078, -0.0545,  ...,  0.0583,  0.0354, -0.0842]]]) 22897087489904
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.0272, -0.0112, -0.0618,  ...,  0.0648,  0.0431, -0.0715],
         [ 0.0323, -0.0200, -0.0588,  ...,  0.0606,  0.0519, -0.0783],
         [ 0.0236, -0.0123, -0.0546,  ...,  0.0620,  0.0366, -0.0749],
         ...,
         [ 0.0317, -0.0100, -0.0568,  ...,  0.0614,  0.0462, -0.0756],
         [ 0.0243, -0.0185, -0.0553,  ...,  0.0652,  0.0441, -0.0748],
         [ 0.0213, -0.0078, -0.0545,  ...,  0.0583,  0.0354, -0.0842]]]), modified_attrs={}, prev=None) 22897087666928
tracing opcode RETURN_VALUE None pc=74 frame=3(0xa4daa80)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x74ac560)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x74ac560)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x74ac560)
tracing opcode LOAD_FAST None pc=34 frame=16(0x74ac560)
tracing opcode LOAD_FAST None pc=36 frame=16(0x74ac560)
load fast: 22897088768656
tracing opcode BINARY_ADD None pc=38 frame=16(0x74ac560)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x74ac560)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d3290e9240)
push tracker due to record
push tracker 2 frame 0x14d3290e9240 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d3290e9240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d3290e9240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d3290e9240 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d3290e9240)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d3290e9240)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d3290e9240)
load fast: 22897087568208
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d3290e9240)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d3290e9240)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d3290e9240)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d3290e9240)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d3290e9240)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d3290e9240)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d3290e9240)
record function in graph <built-in method mean of Tensor object at 0x14d324c55950>
func self id: 22897087568208
tracing opcode STORE_FAST None pc=36 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d3290e9240)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d3290e9240)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d3290e9240)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d3290e9240)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d3290e9240)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d3290e9240)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d3290e9240)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d3290e9240)
record function in graph <built-in method mean of Tensor object at 0x14d324be8400>
func self id: 22897087120384
tracing opcode STORE_FAST None pc=60 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d3290e9240)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d3290e9240)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d3290e9240)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d3290e9240)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d3290e9240)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d3290e9240)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d3290e9240)
load fast: 22897554688080
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d3290e9240)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d3290e9240)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d3290e9240)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d3290e9240)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d3290e9240)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d3290e9240)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d3290e9240)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d3290e9240)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d3290e9240)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d3290e9240)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d3290e9240)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d3290e9240)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d3290e9240)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d3290e9240)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d3290e9240)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d3290e9240)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d3290e9240)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d3290e9240)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_144 : [#users=4] = placeholder[target=tensor_144]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_144,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_144, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_144, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_144, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d324c55950>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d3290e9240)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x74ac560)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x74ac560)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x74ac560)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_141 : [#users=1] = placeholder[target=tensor_141]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_141,), kwargs = {})
    %tensor_143 : [#users=1] = placeholder[target=tensor_143]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_143), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x74ac560)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x88972d0)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x88972d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x88972d0)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x88972d0)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_120 : [#users=2] = placeholder[target=tensor_120]
    %tensor_121 : [#users=1] = placeholder[target=tensor_121]
    %tensor_122 : [#users=1] = placeholder[target=tensor_122]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_120,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_122, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_128 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_128, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_121, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_120), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x88972d0)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0xd188320)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0xd188320)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0xd188320)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0xd188320)
tracing opcode LOAD_METHOD None pc=46 frame=9(0xd188320)
tracing opcode LOAD_FAST None pc=48 frame=9(0xd188320)
tracing opcode CALL_METHOD None pc=50 frame=9(0xd188320)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d324d6b640)
push tracker due to record
push tracker 17 frame 0x14d324d6b640 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d324d6b640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d324d6b640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d324d6b640 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d324d6b640)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d324d6b640)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d324d6b640)
load fast: 22897554688176
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d324d6b640)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d324d6b640)
load fast: 22897087123104
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d324d6b640)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d324d6b640)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d324d6b640)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d324d6b640)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d324d6b640)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d324d6b640)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0xd183f50)
push tracker due to record
push tracker 18 frame 0xd183f50 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0xd183f50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0xd183f50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0xd183f50 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0xd183f50)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0xd183f50)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0xd183f50)
load fast: 22897554688272
tracing opcode LOAD_METHOD None pc=12 frame=18(0xd183f50)
tracing opcode LOAD_FAST None pc=14 frame=18(0xd183f50)
load fast: 22897087286864
tracing opcode CALL_METHOD None pc=16 frame=18(0xd183f50)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0xd183f50)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_146 : [#users=1] = placeholder[target=tensor_146]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_146,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0xd183f50)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d324d6b640)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d324d6b640)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d324d6b640)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_145 : [#users=1] = placeholder[target=tensor_145]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_145,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d324d6b640)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0xd188320)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0xd188320)
tracing opcode LOAD_METHOD None pc=56 frame=9(0xd188320)
tracing opcode LOAD_FAST None pc=58 frame=9(0xd188320)
tracing opcode LOAD_FAST None pc=60 frame=9(0xd188320)
tracing opcode CALL_METHOD None pc=62 frame=9(0xd188320)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x748ee50)
push tracker due to record
push tracker 19 frame 0x748ee50 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x748ee50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x748ee50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x748ee50 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x748ee50)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x748ee50)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x748ee50)
load fast: 22897554688320
tracing opcode LOAD_METHOD None pc=12 frame=19(0x748ee50)
tracing opcode LOAD_FAST None pc=14 frame=19(0x748ee50)
load fast: 22897087284624
tracing opcode CALL_METHOD None pc=16 frame=19(0x748ee50)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x748ee50)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x748ee50)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x748ee50)
tracing opcode LOAD_FAST None pc=24 frame=19(0x748ee50)
tracing opcode CALL_METHOD None pc=26 frame=19(0x748ee50)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d324d6b840)
push tracker due to record
push tracker 3 frame 0x14d324d6b840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d324d6b840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d324d6b840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d324d6b840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d324d6b840)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d324d6b840)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d324d6b840)
load fast: 22897554688464
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d324d6b840)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d324d6b840)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d324d6b840)
load fast: 22897017414016
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d324d6b840)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_148 : [#users=0] = placeholder[target=tensor_148]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.0067, -0.3594,  0.2473,  ...,  0.0334,  0.2650, -0.8143],
         [-0.5082,  0.2298,  0.3899,  ...,  0.4999,  0.3004, -0.2755],
         [ 0.1964, -0.0764,  0.3667,  ...,  0.0392, -0.0139,  0.0408],
         ...,
         [-0.3245,  0.3289,  0.0190,  ...,  0.0953,  0.2871,  0.0167],
         [ 0.0830,  0.6790, -0.2196,  ..., -0.0907,  0.3296, -0.2068],
         [-0.0890,  0.2100, -0.1302,  ..., -0.0312,  0.2252,  0.1622]]]), modified_attrs={}, prev=None) 22897087141248 22897017414016
obj: tensor([[[ 0.0067, -0.3594,  0.2473,  ...,  0.0334,  0.2650, -0.8143],
         [-0.5082,  0.2298,  0.3899,  ...,  0.4999,  0.3004, -0.2755],
         [ 0.1964, -0.0764,  0.3667,  ...,  0.0392, -0.0139,  0.0408],
         ...,
         [-0.3245,  0.3289,  0.0190,  ...,  0.0953,  0.2871,  0.0167],
         [ 0.0830,  0.6790, -0.2196,  ..., -0.0907,  0.3296, -0.2068],
         [-0.0890,  0.2100, -0.1302,  ..., -0.0312,  0.2252,  0.1622]]]) 22897017414016
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.0067, -0.3594,  0.2473,  ...,  0.0334,  0.2650, -0.8143],
         [-0.5082,  0.2298,  0.3899,  ...,  0.4999,  0.3004, -0.2755],
         [ 0.1964, -0.0764,  0.3667,  ...,  0.0392, -0.0139,  0.0408],
         ...,
         [-0.3245,  0.3289,  0.0190,  ...,  0.0953,  0.2871,  0.0167],
         [ 0.0830,  0.6790, -0.2196,  ..., -0.0907,  0.3296, -0.2068],
         [-0.0890,  0.2100, -0.1302,  ..., -0.0312,  0.2252,  0.1622]]]), modified_attrs={}, prev=None) 22897017409600
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d324d6b840)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x748ee50)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x748ee50)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x748ee50)
tracing opcode LOAD_FAST None pc=34 frame=19(0x748ee50)
tracing opcode LOAD_FAST None pc=36 frame=19(0x748ee50)
load fast: 22897087123104
tracing opcode BINARY_ADD None pc=38 frame=19(0x748ee50)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x748ee50)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x749e020)
push tracker due to record
push tracker 2 frame 0x749e020 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x749e020)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x749e020)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x749e020 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x749e020)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x749e020)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x749e020)
load fast: 22897017415696
tracing opcode LOAD_ATTR None pc=12 frame=2(0x749e020)
tracing opcode STORE_FAST None pc=14 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x749e020)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x749e020)
tracing opcode CALL_METHOD None pc=20 frame=2(0x749e020)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x749e020)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=28 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=30 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=32 frame=2(0x749e020)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x749e020)
record function in graph <built-in method mean of Tensor object at 0x14d32096e810>
func self id: 22897017415696
tracing opcode STORE_FAST None pc=36 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x749e020)
tracing opcode LOAD_FAST None pc=40 frame=2(0x749e020)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x749e020)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=46 frame=2(0x749e020)
tracing opcode CALL_METHOD None pc=48 frame=2(0x749e020)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=52 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=54 frame=2(0x749e020)
tracing opcode LOAD_CONST None pc=56 frame=2(0x749e020)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x749e020)
record function in graph <built-in method mean of Tensor object at 0x14d324c214f0>
func self id: 22897087354096
tracing opcode STORE_FAST None pc=60 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x749e020)
tracing opcode LOAD_FAST None pc=64 frame=2(0x749e020)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x749e020)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x749e020)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x749e020)
tracing opcode LOAD_FAST None pc=72 frame=2(0x749e020)
tracing opcode LOAD_FAST None pc=74 frame=2(0x749e020)
load fast: 22897554688416
tracing opcode LOAD_ATTR None pc=76 frame=2(0x749e020)
tracing opcode BINARY_ADD None pc=78 frame=2(0x749e020)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x749e020)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x749e020)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x749e020)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x749e020)
tracing opcode LOAD_FAST None pc=90 frame=2(0x749e020)
tracing opcode CALL_METHOD None pc=92 frame=2(0x749e020)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x749e020)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x749e020)
tracing opcode LOAD_FAST None pc=100 frame=2(0x749e020)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x749e020)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x749e020)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x749e020)
tracing opcode BINARY_ADD None pc=108 frame=2(0x749e020)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x749e020)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x749e020)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x749e020)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_150 : [#users=4] = placeholder[target=tensor_150]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_150,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_150, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_150, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_150, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d32096e810>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x749e020)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x748ee50)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x748ee50)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x748ee50)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_147 : [#users=1] = placeholder[target=tensor_147]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_147,), kwargs = {})
    %tensor_149 : [#users=1] = placeholder[target=tensor_149]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_149), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x748ee50)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0xd188320)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0xd188320)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0xd188320)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0xd188320)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0xd188320)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_117 : [#users=2] = placeholder[target=tensor_117]
    %tensor_118 : [#users=1] = placeholder[target=tensor_118]
    %tensor_119 : [#users=1] = placeholder[target=tensor_119]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_117,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_119, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_128 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_128, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_118, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_117), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0xd188320)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x1014a800)
push tracker due to record
push tracker 9 frame 0x1014a800 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x1014a800)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x1014a800)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x1014a800 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x1014a800)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x1014a800)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x1014a800)
load fast: 22897554688512
tracing opcode LOAD_ATTR None pc=12 frame=9(0x1014a800)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x1014a800)
load fast: 22897017515680
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x1014a800)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x1014a800)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x1014a800)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x1014a800)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x1014a800)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x1014a800)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x1014a800)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x7496170)
push tracker due to record
push tracker 10 frame 0x7496170 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x7496170)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x7496170)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x7496170 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x7496170)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x7496170)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x7496170)
load fast: 22897554688560
tracing opcode LOAD_ATTR None pc=12 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x7496170)
load fast: 22897017515680
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x7496170)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x7496170)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x7496170)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x7496170)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x7496170)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x7496170)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x7496170)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x8ae6b30)
push tracker due to record
push tracker 11 frame 0x8ae6b30 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x8ae6b30)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x8ae6b30)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x8ae6b30 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x8ae6b30)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x8ae6b30)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x8ae6b30)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x8ae6b30)
tracing opcode IS_OP None pc=16 frame=11(0x8ae6b30)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x8ae6b30)
load fast: 22897554688608
tracing opcode LOAD_METHOD None pc=22 frame=11(0x8ae6b30)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x8ae6b30)
load fast: 22897017515680
tracing opcode CALL_METHOD None pc=26 frame=11(0x8ae6b30)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=34 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=36 frame=11(0x8ae6b30)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x8afc580)
push tracker due to record
push tracker 12 frame 0x8afc580 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x8afc580)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x8afc580)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x8afc580 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x8afc580)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x8afc580)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x8afc580)
load fast: 22897017414176
tracing opcode LOAD_METHOD None pc=12 frame=12(0x8afc580)
tracing opcode CALL_METHOD None pc=14 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=16 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=18 frame=12(0x8afc580)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x8afc580)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x8afc580)
tracing opcode LOAD_FAST None pc=24 frame=12(0x8afc580)
load fast: 22897554688608
tracing opcode LOAD_ATTR None pc=26 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=28 frame=12(0x8afc580)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x8afc580)
tracing opcode BINARY_ADD None pc=32 frame=12(0x8afc580)
tracing opcode STORE_FAST None pc=34 frame=12(0x8afc580)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x8afc580)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x8afc580)
tracing opcode LOAD_FAST None pc=40 frame=12(0x8afc580)
tracing opcode CALL_METHOD None pc=42 frame=12(0x8afc580)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x8afc580)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x8afc580)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=50 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=52 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=54 frame=12(0x8afc580)
tracing opcode LOAD_CONST None pc=56 frame=12(0x8afc580)
tracing opcode CALL_METHOD None pc=58 frame=12(0x8afc580)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x8afc580)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_158 : [#users=1] = placeholder[target=tensor_158]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_158, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x8afc580)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=40 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=42 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=44 frame=11(0x8ae6b30)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x8ae6b30)
record function in graph <built-in method chunk of Tensor object at 0x14d32094a090>
func self id: 22897017266320
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x8ae6b30)
sub_value 22897087284544 tensor([[[[ 4.1389e-01, -4.1634e-01,  2.4002e-01,  ..., -5.0692e-01,
           -4.9755e-01,  3.4132e-02],
          [-6.8566e-01,  2.3639e-01, -2.0951e-01,  ..., -5.8490e-02,
            1.0804e-02,  9.3574e-01],
          [ 2.5495e-01, -1.2417e-01,  3.5137e-01,  ...,  8.5832e-01,
           -7.6454e-02, -1.0602e+00],
          ...,
          [ 1.1724e+00,  9.8207e-01,  9.4207e-01,  ..., -2.8359e-01,
            1.7098e-01, -1.0920e-01],
          [ 8.7328e-01, -5.8941e-02, -2.6046e-01,  ..., -3.9473e-01,
            3.4144e-01, -1.2035e-01],
          [-5.5094e-01, -2.1630e-01,  5.3666e-01,  ...,  1.1102e+00,
            5.5576e-01,  8.6303e-02]],

         [[ 8.0145e-01,  9.6677e-01, -1.6785e-01,  ..., -1.1315e+00,
            2.0832e-02,  1.4905e+00],
          [ 1.2075e-01,  8.6368e-01,  1.6796e-01,  ..., -1.3303e+00,
           -3.6232e-01,  4.2228e-01],
          [-7.1795e-01,  4.4591e-01,  3.3703e-01,  ..., -4.9529e-01,
            1.5882e-01, -5.0148e-02],
          ...,
          [ 1.3905e-01,  2.7696e-04, -8.8637e-01,  ...,  6.1083e-02,
            2.9610e-01, -7.5758e-02],
          [-9.1104e-01, -2.1414e-01, -2.7232e-01,  ...,  1.3094e-01,
           -1.0436e-01, -3.0103e-01],
          [-5.9828e-02,  3.6043e-01,  2.0879e-02,  ..., -7.8465e-01,
           -1.4387e+00,  1.1334e+00]],

         [[ 2.9384e-01, -7.3347e-02,  1.6663e-01,  ...,  2.4815e-01,
            1.1596e+00, -3.0179e-01],
          [ 4.2943e-01, -2.6642e-02,  6.0638e-01,  ..., -6.2791e-02,
           -1.8262e-01,  6.7063e-01],
          [-4.3766e-01,  2.5381e-01,  3.6877e-01,  ..., -4.9034e-01,
           -4.8326e-01, -8.0081e-01],
          ...,
          [-3.0598e-02,  2.6325e-01, -4.3901e-01,  ...,  5.0684e-01,
           -2.0593e-01, -8.2606e-01],
          [-3.0908e-01, -2.0298e-01, -1.5249e-01,  ..., -1.7992e-01,
           -5.4276e-01,  1.1402e-01],
          [-4.9659e-01, -4.6748e-01, -2.0356e-01,  ...,  5.1846e-01,
            2.1263e-01, -5.1972e-02]],

         ...,

         [[-3.6801e-01,  5.2782e-01, -3.8902e-01,  ..., -5.5589e-01,
           -2.6938e-01,  2.6222e-01],
          [-1.3478e+00,  4.3735e-01, -7.6622e-02,  ...,  3.5427e-01,
            1.3593e-01,  5.9850e-01],
          [-1.2627e+00, -8.4678e-02,  9.4499e-01,  ..., -6.2107e-01,
           -1.8906e-02,  2.1657e-02],
          ...,
          [-2.7122e-01, -1.3221e-01, -1.2628e-01,  ..., -7.1646e-01,
           -1.4312e+00,  8.7088e-02],
          [-5.9233e-01, -1.9896e-01,  1.9241e-02,  ...,  5.6304e-01,
           -3.9987e-01,  3.0223e-01],
          [-9.3083e-01,  2.4686e-01,  1.0619e-01,  ..., -6.9409e-01,
            2.2515e-01,  7.0113e-02]],

         [[ 2.8010e-01, -3.0980e-02, -8.9823e-03,  ...,  1.0407e+00,
            6.8599e-02,  2.0370e-01],
          [-1.7239e-01,  6.5817e-01,  9.3607e-01,  ...,  5.3503e-01,
           -1.4332e-01,  9.3471e-02],
          [-3.8442e-01, -9.1062e-01,  5.2804e-01,  ...,  1.2051e+00,
            1.1941e+00, -7.0141e-02],
          ...,
          [ 2.9215e-03, -6.9831e-01,  9.1519e-02,  ..., -3.9093e-01,
            6.1566e-01,  2.5967e-01],
          [ 9.0594e-01, -5.9251e-02, -8.6004e-01,  ..., -4.6081e-01,
            3.5679e-01,  4.4326e-01],
          [ 3.6378e-01,  5.4716e-01,  6.1208e-01,  ...,  4.7546e-01,
            4.4345e-01,  2.5954e-01]],

         [[ 7.0769e-01, -9.1701e-01, -3.6982e-01,  ..., -4.7491e-01,
            1.7559e-01,  2.7033e-01],
          [ 1.0755e-01, -9.6929e-01,  2.5615e-01,  ..., -1.2606e+00,
            9.8111e-01,  1.2232e+00],
          [ 4.4402e-01, -8.0867e-02,  3.9733e-01,  ...,  6.7364e-01,
            2.2554e-01, -5.1747e-01],
          ...,
          [ 4.1735e-01, -1.3410e-01,  1.2375e-01,  ..., -9.6881e-01,
            4.1460e-01, -2.0461e-01],
          [-9.6393e-01,  2.2952e-01, -8.0440e-01,  ...,  5.4786e-01,
            3.9915e-01, -2.1705e-01],
          [ 1.9814e-01,  3.9893e-02,  6.5435e-01,  ..., -6.0296e-01,
            7.6344e-01, -4.3590e-01]]]])
sub_value 22897017212496 tensor([[[[ 7.2555e-01, -1.0274e+00,  6.3246e-01,  ...,  5.5590e-01,
            2.3012e-01, -3.4047e-01],
          [-3.7776e-01,  3.4820e-02,  2.4286e-01,  ..., -1.8402e-03,
           -5.0851e-01, -8.1972e-02],
          [-8.5026e-01, -1.4955e+00,  9.1323e-01,  ...,  9.1037e-01,
           -2.0382e-02,  4.7273e-01],
          ...,
          [-5.0591e-01, -8.3704e-01,  1.7833e-01,  ...,  9.9422e-01,
            8.8080e-01,  3.1824e-01],
          [-5.5006e-02,  1.8243e-02, -6.2625e-02,  ...,  3.3115e-01,
            3.0752e-01,  3.3992e-01],
          [-3.4671e-02, -4.9454e-01,  5.8961e-01,  ...,  4.3861e-01,
            3.5326e-01, -3.8029e-01]],

         [[ 2.6621e-01, -5.8593e-01, -2.1541e-02,  ...,  4.1979e-01,
            2.7643e-01, -6.4192e-02],
          [ 2.6002e-01, -8.3905e-02,  3.5513e-01,  ...,  8.9113e-01,
            1.8381e-01, -1.4764e-01],
          [-6.4154e-02, -2.6616e-01,  1.2919e+00,  ..., -5.6123e-01,
           -3.2677e-02, -8.0913e-01],
          ...,
          [-5.6328e-01,  1.1164e-01, -9.1209e-01,  ..., -2.1199e-01,
           -7.5905e-01,  1.0403e+00],
          [-3.9485e-01, -3.3360e-01,  1.1730e-01,  ...,  1.1872e+00,
           -1.7611e-01, -3.8915e-01],
          [ 6.6104e-01, -9.7953e-01,  9.1209e-01,  ..., -5.6499e-01,
            4.0714e-01, -5.2859e-01]],

         [[-1.3842e+00,  4.8350e-01,  1.1793e+00,  ...,  1.1576e+00,
            4.0950e-01, -7.0558e-01],
          [-2.4287e-01, -7.1597e-01,  7.7783e-01,  ..., -2.8050e-01,
           -8.1119e-01,  2.9100e-01],
          [ 4.8638e-02, -1.0850e-01,  8.1922e-02,  ...,  3.8042e-01,
           -3.1662e-01, -3.9460e-01],
          ...,
          [ 6.8030e-01,  3.4355e-01, -2.5551e-01,  ...,  4.0220e-01,
            4.4342e-01, -5.3472e-01],
          [ 2.6634e-01, -1.1728e+00,  8.8962e-01,  ...,  3.3658e-01,
           -1.1885e+00,  8.7268e-02],
          [-1.0363e+00, -2.7290e-01, -2.5458e-01,  ..., -2.5531e-01,
            6.1482e-02, -5.4648e-01]],

         ...,

         [[ 2.2206e-01, -2.7075e-01,  5.5271e-01,  ..., -3.0202e-01,
            1.6684e-01, -3.2267e-01],
          [ 7.5471e-01, -1.9192e-01, -4.1201e-01,  ...,  1.6037e+00,
           -8.1271e-02,  4.4962e-01],
          [-4.2673e-01,  2.1505e-01, -7.4877e-01,  ..., -1.0204e+00,
           -4.5032e-02,  8.3793e-01],
          ...,
          [-8.0943e-02,  8.0986e-01, -9.0903e-03,  ..., -9.7421e-01,
           -9.2988e-01, -2.5761e-02],
          [ 2.3896e-01,  2.1933e-01, -4.9535e-01,  ...,  9.8504e-02,
            1.6602e-01,  2.8477e-01],
          [-2.0220e-01, -6.0901e-01, -1.9207e-01,  ..., -7.5637e-01,
            3.7808e-02, -2.7177e-01]],

         [[ 1.2344e-01, -1.2277e+00, -1.0171e+00,  ..., -3.2545e-01,
            5.8779e-01,  9.2544e-01],
          [ 6.7920e-01,  2.0834e-01,  3.6065e-01,  ...,  4.1066e-01,
            3.3624e-01,  5.0610e-01],
          [ 2.4149e-02,  1.2327e-01, -1.8506e-01,  ..., -2.5487e-01,
            4.7555e-01, -2.9647e-01],
          ...,
          [ 1.5462e-01,  3.9316e-01,  1.3954e+00,  ..., -3.9197e-01,
           -1.0763e+00, -6.0339e-01],
          [ 1.2641e-01, -7.3287e-01, -1.5339e-02,  ...,  4.4439e-01,
           -5.2609e-01,  6.2686e-01],
          [-2.9622e-01,  3.7533e-01,  3.1784e-01,  ..., -6.3495e-01,
            7.6180e-01, -7.6848e-01]],

         [[-1.6980e-01, -1.7792e-01, -3.1505e-01,  ...,  8.2327e-02,
            5.1218e-01, -4.4347e-01],
          [ 3.7309e-01, -2.1524e+00,  2.6356e-01,  ..., -3.1142e-01,
           -2.8134e-01, -3.2839e-01],
          [ 1.2819e-01,  2.0678e-01,  3.7485e-01,  ...,  1.9153e-01,
            2.2013e-01,  1.7220e-01],
          ...,
          [ 8.1513e-02,  3.3768e-01, -6.8116e-01,  ..., -1.6975e-01,
           -1.4429e-01, -2.2453e-01],
          [ 2.4883e-02, -3.0509e-01,  2.2762e-01,  ...,  1.0657e+00,
            1.1554e-01,  2.9177e-01],
          [-7.8536e-01, -1.3735e+00,  3.3003e-01,  ...,  1.0709e+00,
           -3.5523e-02,  3.3556e-01]]]])
sub_value 22897017212656 tensor([[[[ 6.0547e-01, -8.6458e-02,  2.9834e-01,  ..., -1.4249e-01,
            6.6012e-01, -3.5259e-01],
          [ 1.6143e-01,  7.4806e-01,  9.7857e-01,  ...,  4.9110e-02,
           -2.8569e-01, -5.2806e-01],
          [ 1.4956e-01,  9.1325e-01,  5.2143e-01,  ...,  2.3148e-01,
           -9.6555e-01,  5.8536e-01],
          ...,
          [ 3.6312e-01,  1.8671e-01, -1.0147e-01,  ...,  4.8452e-01,
            1.7620e-01, -1.4798e+00],
          [-9.3725e-01,  8.0164e-02,  5.3817e-01,  ..., -1.8400e-01,
           -4.8382e-01,  2.2971e-01],
          [ 2.4902e-01,  5.4754e-01, -1.8738e-01,  ...,  3.2451e-01,
           -3.4966e-01,  3.8588e-01]],

         [[ 6.3881e-01,  1.6420e-01, -9.5672e-01,  ..., -1.5664e-01,
           -3.8664e-01,  8.3581e-01],
          [-8.2862e-01,  1.6200e-01, -4.1812e-01,  ...,  1.9060e-01,
           -1.3689e+00,  3.2604e-01],
          [ 6.8218e-01, -8.1357e-01, -1.3389e+00,  ..., -9.0782e-01,
           -4.1935e-01, -4.0126e-01],
          ...,
          [-4.0474e-01, -1.9385e-01, -4.4885e-01,  ..., -4.6390e-01,
            3.5157e-01,  3.8700e-01],
          [-4.9947e-01, -1.4944e-01,  9.4939e-02,  ..., -1.2944e-01,
           -1.0273e+00,  9.7767e-01],
          [ 1.3481e-01,  5.0353e-01, -2.8967e-01,  ..., -9.5652e-01,
           -9.4769e-02,  3.1393e-02]],

         [[ 2.9463e-01, -2.3078e-01, -2.9497e-01,  ..., -2.3229e-01,
            4.2951e-01, -4.3368e-01],
          [-1.1762e-01,  9.4115e-02, -1.0508e-01,  ..., -2.8278e-01,
            7.7521e-01,  3.6075e-01],
          [-3.6693e-01, -7.5594e-01, -5.0839e-01,  ...,  3.0141e-01,
            1.1572e+00, -3.8617e-01],
          ...,
          [-1.1156e+00, -1.2807e-01, -1.1684e-01,  ...,  3.7419e-01,
           -1.7722e-01, -4.4870e-02],
          [-1.5562e+00,  4.1719e-01, -3.9129e-01,  ..., -6.4078e-01,
            1.1868e+00, -5.6844e-01],
          [-1.1802e+00, -1.1227e-01,  1.1848e-03,  ..., -1.5046e-01,
            6.2333e-01, -1.2429e-01]],

         ...,

         [[-6.2424e-01, -6.7776e-01, -2.1425e-01,  ..., -2.3207e-01,
            3.3074e-01,  1.4529e+00],
          [-7.0796e-01, -1.2030e-01,  4.1856e-01,  ..., -4.5529e-01,
            6.5700e-01,  4.3722e-01],
          [ 3.8698e-01, -9.9934e-01,  7.0030e-01,  ...,  5.7609e-01,
           -2.8145e-01, -1.1500e-01],
          ...,
          [ 1.2448e-02,  4.0145e-01, -6.2095e-01,  ..., -1.5960e-01,
           -9.2817e-01,  3.0291e-01],
          [-5.3904e-01, -2.0697e-01, -4.2419e-01,  ...,  3.8474e-01,
           -3.8797e-01, -7.4233e-02],
          [ 3.9197e-01,  1.0927e-01,  3.3557e-01,  ...,  7.5140e-01,
           -1.4169e-01,  1.7379e-01]],

         [[ 1.2965e-03,  8.5593e-01, -3.5661e-02,  ..., -8.1897e-01,
            2.5857e-01, -7.7992e-01],
          [-2.3189e-01, -2.8624e-01,  2.5051e-01,  ...,  2.8922e-01,
           -5.9554e-02, -6.6567e-01],
          [ 4.0003e-01, -3.0891e-02,  8.3236e-01,  ...,  7.2960e-03,
            7.1178e-01, -9.9019e-02],
          ...,
          [-1.4990e-01, -9.7697e-02, -8.1339e-01,  ..., -4.7452e-01,
           -8.0496e-01, -1.3197e+00],
          [-4.0284e-02,  1.8258e-01,  4.0381e-01,  ...,  9.1238e-01,
            7.4385e-01,  9.3278e-01],
          [ 2.9019e-01,  2.9856e-01, -4.9122e-01,  ...,  2.9355e-01,
           -9.3090e-02,  2.7578e-01]],

         [[-2.9704e-01, -3.8776e-01,  5.3957e-02,  ..., -1.0393e+00,
           -5.5542e-01,  1.8696e-01],
          [-2.6002e-01, -1.2712e+00, -3.9765e-01,  ...,  5.8612e-01,
           -6.4457e-02, -1.2746e+00],
          [-1.4944e-01,  7.8950e-01, -1.9242e-01,  ...,  1.6408e+00,
           -1.1052e+00,  5.8369e-01],
          ...,
          [ 8.8559e-02, -2.0120e-01,  1.2497e+00,  ...,  2.8601e-01,
            6.4828e-01,  6.9682e-01],
          [-4.6636e-01,  5.1925e-01, -3.5191e-01,  ..., -8.8328e-01,
            1.2261e-01, -7.7548e-01],
          [-2.7103e-01, -1.1595e-01, -5.1114e-01,  ..., -6.3938e-01,
           -6.2952e-01,  4.3799e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x8ae6b30)
tracing opcode STORE_FAST None pc=52 frame=11(0x8ae6b30)
tracing opcode STORE_FAST None pc=54 frame=11(0x8ae6b30)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x8ae6b30)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x8ae6b30)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=232 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=234 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=236 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=238 frame=11(0x8ae6b30)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x8ae6b30)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x8ae6b30)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x8ae6b30)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x8ae6b30)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d33e40dc40)
push tracker due to record
push tracker 12 frame 0x14d33e40dc40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d33e40dc40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d33e40dc40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d33e40dc40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d33e40dc40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d33e40dc40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d33e40dc40)
load fast: 22897017212176
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d33e40dc40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d33e40dc40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d33e40dc40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d33e40dc40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d33e40dc40)
load fast: 22897554688608
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d33e40dc40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d33e40dc40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d33e40dc40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d33e40dc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d33e40dc40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d33e40dc40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d33e40dc40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d33e40dc40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d33e40dc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d33e40dc40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d33e40dc40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d33e40dc40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d33e40dc40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d33e40dc40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_159 : [#users=1] = placeholder[target=tensor_159]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_159, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d33e40dc40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x8ae6b30)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x8ae6b30)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x8ae6b30)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=262 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=264 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=266 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=268 frame=11(0x8ae6b30)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x8ae6b30)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x8ae6b30)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x8ae6b30)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x8ae6b30)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xa1ce460)
push tracker due to record
push tracker 12 frame 0xa1ce460 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xa1ce460)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xa1ce460)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0xa1ce460 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xa1ce460)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xa1ce460)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xa1ce460)
load fast: 22897087356736
tracing opcode LOAD_METHOD None pc=12 frame=12(0xa1ce460)
tracing opcode CALL_METHOD None pc=14 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=16 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=18 frame=12(0xa1ce460)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xa1ce460)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xa1ce460)
tracing opcode LOAD_FAST None pc=24 frame=12(0xa1ce460)
load fast: 22897554688608
tracing opcode LOAD_ATTR None pc=26 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=28 frame=12(0xa1ce460)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xa1ce460)
tracing opcode BINARY_ADD None pc=32 frame=12(0xa1ce460)
tracing opcode STORE_FAST None pc=34 frame=12(0xa1ce460)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xa1ce460)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xa1ce460)
tracing opcode LOAD_FAST None pc=40 frame=12(0xa1ce460)
tracing opcode CALL_METHOD None pc=42 frame=12(0xa1ce460)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xa1ce460)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xa1ce460)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=50 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=52 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=54 frame=12(0xa1ce460)
tracing opcode LOAD_CONST None pc=56 frame=12(0xa1ce460)
tracing opcode CALL_METHOD None pc=58 frame=12(0xa1ce460)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xa1ce460)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_160 : [#users=1] = placeholder[target=tensor_160]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_160, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xa1ce460)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x8ae6b30)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x8ae6b30)
tracing opcode STORE_FAST None pc=284 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x8ae6b30)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x8ae6b30)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x8ae6b30)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x8ae6b30)
tracing opcode BINARY_ADD None pc=296 frame=11(0x8ae6b30)
tracing opcode STORE_FAST None pc=298 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x8ae6b30)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=308 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=312 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=314 frame=11(0x8ae6b30)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=320 frame=11(0x8ae6b30)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x8ae6b30)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x8ae6b30)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x8ae6b30)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x8ae6b30)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=334 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=338 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=342 frame=11(0x8ae6b30)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x8ae6b30)
record function in graph <built-in method to of Tensor object at 0x14d3208b4db0>
func self id: 22897016655280
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x8ae6b30)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=354 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=356 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=360 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=362 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=364 frame=11(0x8ae6b30)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x8ae6b30)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x8ae6b30)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=382 frame=11(0x8ae6b30)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x8ae6b30)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x748cd90)
push tracker due to record
push tracker 3 frame 0x748cd90 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x748cd90)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x748cd90)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x748cd90 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x748cd90)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x748cd90)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x748cd90)
load fast: 22897554688704
tracing opcode LOAD_ATTR None pc=12 frame=3(0x748cd90)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x748cd90)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x748cd90)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x748cd90)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x748cd90)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=392 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=394 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=396 frame=11(0x8ae6b30)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=400 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=402 frame=11(0x8ae6b30)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x1015b060)
push tracker due to record
push tracker 13 frame 0x1015b060 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x1015b060)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x1015b060)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x1015b060 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x1015b060)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x1015b060)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x1015b060)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x1015b060)
tracing opcode IS_OP None pc=16 frame=13(0x1015b060)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=54 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=56 frame=13(0x1015b060)
tracing opcode COMPARE_OP None pc=58 frame=13(0x1015b060)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=84 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=86 frame=13(0x1015b060)
tracing opcode COMPARE_OP None pc=88 frame=13(0x1015b060)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=96 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=98 frame=13(0x1015b060)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x1015b060)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x1015b060)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=138 frame=13(0x1015b060)
load fast: 22897016655680
tracing opcode LOAD_METHOD None pc=140 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=142 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=144 frame=13(0x1015b060)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x1015b060)
load fast: 22897017212496
tracing opcode LOAD_METHOD None pc=148 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=150 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=152 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=156 frame=13(0x1015b060)
load fast: 22897554688608
tracing opcode LOAD_ATTR None pc=158 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x1015b060)
tracing opcode STORE_FAST None pc=162 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=168 frame=13(0x1015b060)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=172 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=176 frame=13(0x1015b060)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x1015b060)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=186 frame=13(0x1015b060)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=190 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=194 frame=13(0x1015b060)
tracing opcode BINARY_ADD None pc=196 frame=13(0x1015b060)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=200 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=202 frame=13(0x1015b060)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x1015b060)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x1015b060)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x1015b060)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x1015b060)
tracing opcode STORE_FAST None pc=220 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=224 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x1015b060)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x1015b060)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=238 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=240 frame=13(0x1015b060)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=248 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=250 frame=13(0x1015b060)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xd188590)
push tracker due to record
push tracker 12 frame 0xd188590 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xd188590)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xd188590)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0xd188590 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xd188590)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xd188590)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xd188590)
load fast: 22897016346960
tracing opcode LOAD_METHOD None pc=12 frame=12(0xd188590)
tracing opcode CALL_METHOD None pc=14 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=16 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=18 frame=12(0xd188590)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xd188590)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xd188590)
tracing opcode LOAD_FAST None pc=24 frame=12(0xd188590)
load fast: 22897554688608
tracing opcode LOAD_ATTR None pc=26 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=28 frame=12(0xd188590)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xd188590)
tracing opcode BINARY_ADD None pc=32 frame=12(0xd188590)
tracing opcode STORE_FAST None pc=34 frame=12(0xd188590)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xd188590)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xd188590)
tracing opcode LOAD_FAST None pc=40 frame=12(0xd188590)
tracing opcode CALL_METHOD None pc=42 frame=12(0xd188590)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xd188590)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xd188590)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=50 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=52 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=54 frame=12(0xd188590)
tracing opcode LOAD_CONST None pc=56 frame=12(0xd188590)
tracing opcode CALL_METHOD None pc=58 frame=12(0xd188590)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xd188590)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_165 : [#users=1] = placeholder[target=tensor_165]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_165, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xd188590)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=258 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=260 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=264 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=266 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=268 frame=13(0x1015b060)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x1015b060)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=278 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=280 frame=13(0x1015b060)
tracing opcode BINARY_ADD None pc=282 frame=13(0x1015b060)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=286 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=288 frame=13(0x1015b060)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=292 frame=13(0x1015b060)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=296 frame=13(0x1015b060)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=304 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=306 frame=13(0x1015b060)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=310 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=312 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=314 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x1015b060)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x1015f500)
push tracker due to record
push tracker 14 frame 0x1015f500 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x1015f500)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x1015f500)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x1015f500 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x1015f500)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x1015f500)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x1015f500)
load fast: 22897016652640
tracing opcode LOAD_METHOD None pc=12 frame=14(0x1015f500)
tracing opcode LOAD_FAST None pc=14 frame=14(0x1015f500)
load fast: 22897016655680
tracing opcode LOAD_METHOD None pc=16 frame=14(0x1015f500)
tracing opcode LOAD_CONST None pc=18 frame=14(0x1015f500)
tracing opcode CALL_METHOD None pc=20 frame=14(0x1015f500)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x1015f500)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x1015f500)
tracing opcode LOAD_CONST None pc=26 frame=14(0x1015f500)
tracing opcode CALL_METHOD None pc=28 frame=14(0x1015f500)
tracing opcode LOAD_FAST None pc=30 frame=14(0x1015f500)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x1015f500)
tracing opcode LOAD_CONST None pc=34 frame=14(0x1015f500)
tracing opcode CALL_METHOD None pc=36 frame=14(0x1015f500)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x1015f500)
load fast: 22897016773264
tracing opcode LOAD_METHOD None pc=40 frame=14(0x1015f500)
tracing opcode LOAD_CONST None pc=42 frame=14(0x1015f500)
tracing opcode CALL_METHOD None pc=44 frame=14(0x1015f500)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x1015f500)
tracing opcode CALL_METHOD None pc=48 frame=14(0x1015f500)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x1015f500)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_166 : [#users=1] = placeholder[target=tensor_166]
    %tensor_167 : [#users=0] = placeholder[target=tensor_167]
    %tensor_168 : [#users=0] = placeholder[target=tensor_168]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_166, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x1015f500)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x1015b060)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=326 frame=13(0x1015b060)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x1015b060)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=334 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x1015b060)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x1015b060)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=348 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=350 frame=13(0x1015b060)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=358 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=360 frame=13(0x1015b060)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xea715e0)
push tracker due to record
push tracker 12 frame 0xea715e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xea715e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xea715e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0xea715e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xea715e0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xea715e0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xea715e0)
load fast: 22897016482288
tracing opcode LOAD_METHOD None pc=12 frame=12(0xea715e0)
tracing opcode CALL_METHOD None pc=14 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=16 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=18 frame=12(0xea715e0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xea715e0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xea715e0)
tracing opcode LOAD_FAST None pc=24 frame=12(0xea715e0)
load fast: 22897554688608
tracing opcode LOAD_ATTR None pc=26 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=28 frame=12(0xea715e0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xea715e0)
tracing opcode BINARY_ADD None pc=32 frame=12(0xea715e0)
tracing opcode STORE_FAST None pc=34 frame=12(0xea715e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xea715e0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xea715e0)
tracing opcode LOAD_FAST None pc=40 frame=12(0xea715e0)
tracing opcode CALL_METHOD None pc=42 frame=12(0xea715e0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xea715e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xea715e0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=50 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=52 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=54 frame=12(0xea715e0)
tracing opcode LOAD_CONST None pc=56 frame=12(0xea715e0)
tracing opcode CALL_METHOD None pc=58 frame=12(0xea715e0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xea715e0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_169 : [#users=1] = placeholder[target=tensor_169]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_169, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xea715e0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x1015b060)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x1015b060)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=374 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=378 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=380 frame=13(0x1015b060)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=386 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x1015b060)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x1015b060)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x1015b060)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x1015b060)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x1015b060)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=404 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=406 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=408 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=412 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=414 frame=13(0x1015b060)
tracing opcode COMPARE_OP None pc=416 frame=13(0x1015b060)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x1015b060)
tracing opcode STORE_FAST None pc=452 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=458 frame=13(0x1015b060)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x1015b060)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x1015b060)
tracing opcode BINARY_ADD None pc=464 frame=13(0x1015b060)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=468 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=470 frame=13(0x1015b060)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=474 frame=13(0x1015b060)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=478 frame=13(0x1015b060)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=486 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=488 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=492 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=494 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=496 frame=13(0x1015b060)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=500 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=504 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x1015b060)
record function in graph <built-in method to of Tensor object at 0x14d3208433b0>
func self id: 22897016189872
tracing opcode CALL_METHOD None pc=508 frame=13(0x1015b060)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x1015b060)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=518 frame=13(0x1015b060)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=522 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=524 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=526 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x1015b060)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0xe826aa0)
push tracker due to record
push tracker 15 frame 0xe826aa0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0xe826aa0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0xe826aa0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0xe826aa0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0xe826aa0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0xe826aa0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0xe826aa0)
load fast: 22897016190352
tracing opcode LOAD_METHOD None pc=12 frame=15(0xe826aa0)
tracing opcode LOAD_FAST None pc=14 frame=15(0xe826aa0)
load fast: 22897016655680
tracing opcode LOAD_METHOD None pc=16 frame=15(0xe826aa0)
tracing opcode LOAD_CONST None pc=18 frame=15(0xe826aa0)
tracing opcode CALL_METHOD None pc=20 frame=15(0xe826aa0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0xe826aa0)
tracing opcode LOAD_METHOD None pc=24 frame=15(0xe826aa0)
tracing opcode LOAD_CONST None pc=26 frame=15(0xe826aa0)
tracing opcode CALL_METHOD None pc=28 frame=15(0xe826aa0)
tracing opcode LOAD_FAST None pc=30 frame=15(0xe826aa0)
load fast: 22897017212496
tracing opcode LOAD_METHOD None pc=32 frame=15(0xe826aa0)
tracing opcode LOAD_CONST None pc=34 frame=15(0xe826aa0)
tracing opcode CALL_METHOD None pc=36 frame=15(0xe826aa0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0xe826aa0)
tracing opcode LOAD_METHOD None pc=40 frame=15(0xe826aa0)
tracing opcode LOAD_CONST None pc=42 frame=15(0xe826aa0)
tracing opcode CALL_METHOD None pc=44 frame=15(0xe826aa0)
tracing opcode BUILD_LIST None pc=46 frame=15(0xe826aa0)
tracing opcode CALL_METHOD None pc=48 frame=15(0xe826aa0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0xe826aa0)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_170 : [#users=1] = placeholder[target=tensor_170]
    %tensor_171 : [#users=0] = placeholder[target=tensor_171]
    %tensor_172 : [#users=0] = placeholder[target=tensor_172]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_170, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0xe826aa0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x1015b060)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x1015b060)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=538 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x1015b060)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=548 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=550 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=552 frame=13(0x1015b060)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x1015b060)
tracing opcode LOAD_CONST None pc=556 frame=13(0x1015b060)
tracing opcode CALL_METHOD None pc=558 frame=13(0x1015b060)
tracing opcode COMPARE_OP None pc=560 frame=13(0x1015b060)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x1015b060)
tracing opcode LOAD_FAST None pc=626 frame=13(0x1015b060)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x1015b060)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x1015b060)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x1015b060)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x1015b060)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_162 : [#users=1] = placeholder[target=tensor_162]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_162, 1), kwargs = {})
    %tensor_163 : [#users=1] = placeholder[target=tensor_163]
    %tensor_164 : [#users=1] = placeholder[target=tensor_164]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_163, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_164, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x1015b060)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=408 frame=11(0x8ae6b30)
tracing opcode IS_OP None pc=410 frame=11(0x8ae6b30)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=418 frame=11(0x8ae6b30)
tracing opcode BINARY_ADD None pc=420 frame=11(0x8ae6b30)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x8ae6b30)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=470 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=472 frame=11(0x8ae6b30)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=476 frame=11(0x8ae6b30)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=484 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=486 frame=11(0x8ae6b30)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d324d6b440)
push tracker due to record
push tracker 3 frame 0x14d324d6b440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d324d6b440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d324d6b440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d324d6b440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d324d6b440)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d324d6b440)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d324d6b440)
load fast: 22897554688848
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d324d6b440)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d324d6b440)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d324d6b440)
load fast: 22897016192592
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d324d6b440)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_174 : [#users=0] = placeholder[target=tensor_174]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0034, 0.0051, 0.0040,  ..., 0.0034, 0.0035, 0.0041],
          [0.0031, 0.0039, 0.0044,  ..., 0.0051, 0.0044, 0.0036],
          [0.0035, 0.0045, 0.0033,  ..., 0.0041, 0.0047, 0.0047],
          ...,
          [0.0036, 0.0063, 0.0034,  ..., 0.0037, 0.0043, 0.0040],
          [0.0037, 0.0043, 0.0044,  ..., 0.0048, 0.0053, 0.0044],
          [0.0045, 0.0034, 0.0054,  ..., 0.0042, 0.0039, 0.0040]],

         [[0.0036, 0.0036, 0.0034,  ..., 0.0051, 0.0031, 0.0033],
          [0.0037, 0.0031, 0.0050,  ..., 0.0039, 0.0036, 0.0032],
          [0.0036, 0.0058, 0.0050,  ..., 0.0040, 0.0041, 0.0044],
          ...,
          [0.0044, 0.0043, 0.0043,  ..., 0.0058, 0.0038, 0.0029],
          [0.0045, 0.0029, 0.0032,  ..., 0.0043, 0.0039, 0.0036],
          [0.0026, 0.0042, 0.0044,  ..., 0.0038, 0.0024, 0.0035]],

         [[0.0045, 0.0032, 0.0036,  ..., 0.0061, 0.0037, 0.0028],
          [0.0031, 0.0044, 0.0035,  ..., 0.0034, 0.0036, 0.0037],
          [0.0037, 0.0056, 0.0046,  ..., 0.0040, 0.0031, 0.0037],
          ...,
          [0.0048, 0.0045, 0.0030,  ..., 0.0048, 0.0040, 0.0044],
          [0.0039, 0.0058, 0.0037,  ..., 0.0035, 0.0053, 0.0034],
          [0.0029, 0.0041, 0.0048,  ..., 0.0039, 0.0032, 0.0025]],

         ...,

         [[0.0037, 0.0038, 0.0050,  ..., 0.0035, 0.0035, 0.0041],
          [0.0040, 0.0035, 0.0045,  ..., 0.0045, 0.0037, 0.0053],
          [0.0036, 0.0033, 0.0042,  ..., 0.0044, 0.0044, 0.0049],
          ...,
          [0.0034, 0.0038, 0.0048,  ..., 0.0037, 0.0036, 0.0039],
          [0.0037, 0.0042, 0.0037,  ..., 0.0033, 0.0039, 0.0038],
          [0.0031, 0.0021, 0.0057,  ..., 0.0054, 0.0039, 0.0053]],

         [[0.0054, 0.0048, 0.0034,  ..., 0.0040, 0.0046, 0.0031],
          [0.0035, 0.0031, 0.0036,  ..., 0.0038, 0.0040, 0.0035],
          [0.0062, 0.0050, 0.0047,  ..., 0.0028, 0.0041, 0.0031],
          ...,
          [0.0040, 0.0040, 0.0044,  ..., 0.0033, 0.0034, 0.0040],
          [0.0036, 0.0046, 0.0040,  ..., 0.0033, 0.0037, 0.0027],
          [0.0043, 0.0049, 0.0043,  ..., 0.0039, 0.0034, 0.0030]],

         [[0.0047, 0.0056, 0.0036,  ..., 0.0039, 0.0048, 0.0045],
          [0.0043, 0.0049, 0.0041,  ..., 0.0036, 0.0049, 0.0034],
          [0.0032, 0.0040, 0.0042,  ..., 0.0043, 0.0043, 0.0036],
          ...,
          [0.0039, 0.0037, 0.0031,  ..., 0.0036, 0.0034, 0.0028],
          [0.0050, 0.0037, 0.0043,  ..., 0.0053, 0.0042, 0.0042],
          [0.0041, 0.0037, 0.0035,  ..., 0.0052, 0.0032, 0.0032]]]]), modified_attrs={}, prev=None) 22897016072224 22897016192592
obj: tensor([[[[0.0034, 0.0051, 0.0040,  ..., 0.0034, 0.0035, 0.0041],
          [0.0031, 0.0039, 0.0044,  ..., 0.0051, 0.0044, 0.0036],
          [0.0035, 0.0045, 0.0033,  ..., 0.0041, 0.0047, 0.0047],
          ...,
          [0.0036, 0.0063, 0.0034,  ..., 0.0037, 0.0043, 0.0040],
          [0.0037, 0.0043, 0.0044,  ..., 0.0048, 0.0053, 0.0044],
          [0.0045, 0.0034, 0.0054,  ..., 0.0042, 0.0039, 0.0040]],

         [[0.0036, 0.0036, 0.0034,  ..., 0.0051, 0.0031, 0.0033],
          [0.0037, 0.0031, 0.0050,  ..., 0.0039, 0.0036, 0.0032],
          [0.0036, 0.0058, 0.0050,  ..., 0.0040, 0.0041, 0.0044],
          ...,
          [0.0044, 0.0043, 0.0043,  ..., 0.0058, 0.0038, 0.0029],
          [0.0045, 0.0029, 0.0032,  ..., 0.0043, 0.0039, 0.0036],
          [0.0026, 0.0042, 0.0044,  ..., 0.0038, 0.0024, 0.0035]],

         [[0.0045, 0.0032, 0.0036,  ..., 0.0061, 0.0037, 0.0028],
          [0.0031, 0.0044, 0.0035,  ..., 0.0034, 0.0036, 0.0037],
          [0.0037, 0.0056, 0.0046,  ..., 0.0040, 0.0031, 0.0037],
          ...,
          [0.0048, 0.0045, 0.0030,  ..., 0.0048, 0.0040, 0.0044],
          [0.0039, 0.0058, 0.0037,  ..., 0.0035, 0.0053, 0.0034],
          [0.0029, 0.0041, 0.0048,  ..., 0.0039, 0.0032, 0.0025]],

         ...,

         [[0.0037, 0.0038, 0.0050,  ..., 0.0035, 0.0035, 0.0041],
          [0.0040, 0.0035, 0.0045,  ..., 0.0045, 0.0037, 0.0053],
          [0.0036, 0.0033, 0.0042,  ..., 0.0044, 0.0044, 0.0049],
          ...,
          [0.0034, 0.0038, 0.0048,  ..., 0.0037, 0.0036, 0.0039],
          [0.0037, 0.0042, 0.0037,  ..., 0.0033, 0.0039, 0.0038],
          [0.0031, 0.0021, 0.0057,  ..., 0.0054, 0.0039, 0.0053]],

         [[0.0054, 0.0048, 0.0034,  ..., 0.0040, 0.0046, 0.0031],
          [0.0035, 0.0031, 0.0036,  ..., 0.0038, 0.0040, 0.0035],
          [0.0062, 0.0050, 0.0047,  ..., 0.0028, 0.0041, 0.0031],
          ...,
          [0.0040, 0.0040, 0.0044,  ..., 0.0033, 0.0034, 0.0040],
          [0.0036, 0.0046, 0.0040,  ..., 0.0033, 0.0037, 0.0027],
          [0.0043, 0.0049, 0.0043,  ..., 0.0039, 0.0034, 0.0030]],

         [[0.0047, 0.0056, 0.0036,  ..., 0.0039, 0.0048, 0.0045],
          [0.0043, 0.0049, 0.0041,  ..., 0.0036, 0.0049, 0.0034],
          [0.0032, 0.0040, 0.0042,  ..., 0.0043, 0.0043, 0.0036],
          ...,
          [0.0039, 0.0037, 0.0031,  ..., 0.0036, 0.0034, 0.0028],
          [0.0050, 0.0037, 0.0043,  ..., 0.0053, 0.0042, 0.0042],
          [0.0041, 0.0037, 0.0035,  ..., 0.0052, 0.0032, 0.0032]]]]) 22897016192592
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0034, 0.0051, 0.0040,  ..., 0.0034, 0.0035, 0.0041],
          [0.0031, 0.0039, 0.0044,  ..., 0.0051, 0.0044, 0.0036],
          [0.0035, 0.0045, 0.0033,  ..., 0.0041, 0.0047, 0.0047],
          ...,
          [0.0036, 0.0063, 0.0034,  ..., 0.0037, 0.0043, 0.0040],
          [0.0037, 0.0043, 0.0044,  ..., 0.0048, 0.0053, 0.0044],
          [0.0045, 0.0034, 0.0054,  ..., 0.0042, 0.0039, 0.0040]],

         [[0.0036, 0.0036, 0.0034,  ..., 0.0051, 0.0031, 0.0033],
          [0.0037, 0.0031, 0.0050,  ..., 0.0039, 0.0036, 0.0032],
          [0.0036, 0.0058, 0.0050,  ..., 0.0040, 0.0041, 0.0044],
          ...,
          [0.0044, 0.0043, 0.0043,  ..., 0.0058, 0.0038, 0.0029],
          [0.0045, 0.0029, 0.0032,  ..., 0.0043, 0.0039, 0.0036],
          [0.0026, 0.0042, 0.0044,  ..., 0.0038, 0.0024, 0.0035]],

         [[0.0045, 0.0032, 0.0036,  ..., 0.0061, 0.0037, 0.0028],
          [0.0031, 0.0044, 0.0035,  ..., 0.0034, 0.0036, 0.0037],
          [0.0037, 0.0056, 0.0046,  ..., 0.0040, 0.0031, 0.0037],
          ...,
          [0.0048, 0.0045, 0.0030,  ..., 0.0048, 0.0040, 0.0044],
          [0.0039, 0.0058, 0.0037,  ..., 0.0035, 0.0053, 0.0034],
          [0.0029, 0.0041, 0.0048,  ..., 0.0039, 0.0032, 0.0025]],

         ...,

         [[0.0037, 0.0038, 0.0050,  ..., 0.0035, 0.0035, 0.0041],
          [0.0040, 0.0035, 0.0045,  ..., 0.0045, 0.0037, 0.0053],
          [0.0036, 0.0033, 0.0042,  ..., 0.0044, 0.0044, 0.0049],
          ...,
          [0.0034, 0.0038, 0.0048,  ..., 0.0037, 0.0036, 0.0039],
          [0.0037, 0.0042, 0.0037,  ..., 0.0033, 0.0039, 0.0038],
          [0.0031, 0.0021, 0.0057,  ..., 0.0054, 0.0039, 0.0053]],

         [[0.0054, 0.0048, 0.0034,  ..., 0.0040, 0.0046, 0.0031],
          [0.0035, 0.0031, 0.0036,  ..., 0.0038, 0.0040, 0.0035],
          [0.0062, 0.0050, 0.0047,  ..., 0.0028, 0.0041, 0.0031],
          ...,
          [0.0040, 0.0040, 0.0044,  ..., 0.0033, 0.0034, 0.0040],
          [0.0036, 0.0046, 0.0040,  ..., 0.0033, 0.0037, 0.0027],
          [0.0043, 0.0049, 0.0043,  ..., 0.0039, 0.0034, 0.0030]],

         [[0.0047, 0.0056, 0.0036,  ..., 0.0039, 0.0048, 0.0045],
          [0.0043, 0.0049, 0.0041,  ..., 0.0036, 0.0049, 0.0034],
          [0.0032, 0.0040, 0.0042,  ..., 0.0043, 0.0043, 0.0036],
          ...,
          [0.0039, 0.0037, 0.0031,  ..., 0.0036, 0.0034, 0.0028],
          [0.0050, 0.0037, 0.0043,  ..., 0.0053, 0.0042, 0.0042],
          [0.0041, 0.0037, 0.0035,  ..., 0.0052, 0.0032, 0.0032]]]]), modified_attrs={}, prev=None) 22897016197328
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d324d6b440)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x8ae6b30)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x8ae6b30)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=536 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=538 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=540 frame=11(0x8ae6b30)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=548 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=550 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=552 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=554 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=556 frame=11(0x8ae6b30)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=560 frame=11(0x8ae6b30)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=568 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=570 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=572 frame=11(0x8ae6b30)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x8ae6b30)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x8ae6b30)
tracing opcode LOAD_CONST None pc=578 frame=11(0x8ae6b30)
tracing opcode BINARY_ADD None pc=580 frame=11(0x8ae6b30)
tracing opcode STORE_FAST None pc=582 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x8ae6b30)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x8ae6b30)
tracing opcode LOAD_FAST None pc=588 frame=11(0x8ae6b30)
tracing opcode CALL_METHOD None pc=590 frame=11(0x8ae6b30)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x8ae6b30)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x8ae6b30)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x8ae6b30)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x8ae6b30)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_157 : [#users=1] = placeholder[target=tensor_157]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_157,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_161 : [#users=1] = placeholder[target=tensor_161]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_161, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_162 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_162, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_173 : [#users=1] = placeholder[target=tensor_173]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_173, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x8ae6b30)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x7496170)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x7496170)
tracing opcode LOAD_CONST None pc=46 frame=10(0x7496170)
tracing opcode IS_OP None pc=48 frame=10(0x7496170)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x7496170)
tracing opcode STORE_FAST None pc=54 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x7496170)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x7496170)
tracing opcode LOAD_FAST None pc=60 frame=10(0x7496170)
tracing opcode LOAD_FAST None pc=62 frame=10(0x7496170)
tracing opcode CALL_METHOD None pc=64 frame=10(0x7496170)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x10149920)
push tracker due to record
push tracker 16 frame 0x10149920 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x10149920)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x10149920)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x10149920 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x10149920)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x10149920)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x10149920)
load fast: 22897554688896
tracing opcode LOAD_METHOD None pc=12 frame=16(0x10149920)
tracing opcode LOAD_FAST None pc=14 frame=16(0x10149920)
load fast: 22897016187376
tracing opcode CALL_METHOD None pc=16 frame=16(0x10149920)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x10149920)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x10149920)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x10149920)
tracing opcode LOAD_FAST None pc=24 frame=16(0x10149920)
tracing opcode CALL_METHOD None pc=26 frame=16(0x10149920)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x8afe700)
push tracker due to record
push tracker 3 frame 0x8afe700 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x8afe700)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x8afe700)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x8afe700 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x8afe700)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x8afe700)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x8afe700)
load fast: 22897554689040
tracing opcode LOAD_ATTR None pc=12 frame=3(0x8afe700)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x8afe700)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x8afe700)
load fast: 22897016265040
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x8afe700)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_176 : [#users=0] = placeholder[target=tensor_176]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.0716, -0.0852, -0.0033,  ...,  0.0240, -0.0178,  0.0181],
         [-0.0763, -0.0820, -0.0004,  ...,  0.0184, -0.0222,  0.0173],
         [-0.0752, -0.0829, -0.0069,  ...,  0.0275, -0.0188,  0.0262],
         ...,
         [-0.0712, -0.0796, -0.0114,  ...,  0.0241, -0.0157,  0.0207],
         [-0.0701, -0.0806, -0.0054,  ...,  0.0268, -0.0147,  0.0225],
         [-0.0736, -0.0782, -0.0102,  ...,  0.0266, -0.0172,  0.0185]]]), modified_attrs={}, prev=None) 22897015837456 22897016265040
obj: tensor([[[-0.0716, -0.0852, -0.0033,  ...,  0.0240, -0.0178,  0.0181],
         [-0.0763, -0.0820, -0.0004,  ...,  0.0184, -0.0222,  0.0173],
         [-0.0752, -0.0829, -0.0069,  ...,  0.0275, -0.0188,  0.0262],
         ...,
         [-0.0712, -0.0796, -0.0114,  ...,  0.0241, -0.0157,  0.0207],
         [-0.0701, -0.0806, -0.0054,  ...,  0.0268, -0.0147,  0.0225],
         [-0.0736, -0.0782, -0.0102,  ...,  0.0266, -0.0172,  0.0185]]]) 22897016265040
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.0716, -0.0852, -0.0033,  ...,  0.0240, -0.0178,  0.0181],
         [-0.0763, -0.0820, -0.0004,  ...,  0.0184, -0.0222,  0.0173],
         [-0.0752, -0.0829, -0.0069,  ...,  0.0275, -0.0188,  0.0262],
         ...,
         [-0.0712, -0.0796, -0.0114,  ...,  0.0241, -0.0157,  0.0207],
         [-0.0701, -0.0806, -0.0054,  ...,  0.0268, -0.0147,  0.0225],
         [-0.0736, -0.0782, -0.0102,  ...,  0.0266, -0.0172,  0.0185]]]), modified_attrs={}, prev=None) 22897015869840
tracing opcode RETURN_VALUE None pc=74 frame=3(0x8afe700)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x10149920)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x10149920)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x10149920)
tracing opcode LOAD_FAST None pc=34 frame=16(0x10149920)
tracing opcode LOAD_FAST None pc=36 frame=16(0x10149920)
load fast: 22897017515680
tracing opcode BINARY_ADD None pc=38 frame=16(0x10149920)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x10149920)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d320965840)
push tracker due to record
push tracker 2 frame 0x14d320965840 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d320965840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d320965840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d320965840 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d320965840)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d320965840)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d320965840)
load fast: 22897015842672
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d320965840)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d320965840)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d320965840)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d320965840)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d320965840)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d320965840)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d320965840)
record function in graph <built-in method mean of Tensor object at 0x14d3207ee770>
func self id: 22897015842672
tracing opcode STORE_FAST None pc=36 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d320965840)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d320965840)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d320965840)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d320965840)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d320965840)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d320965840)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d320965840)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d320965840)
record function in graph <built-in method mean of Tensor object at 0x14d320802180>
func self id: 22897015923072
tracing opcode STORE_FAST None pc=60 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d320965840)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d320965840)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d320965840)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d320965840)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d320965840)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d320965840)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d320965840)
load fast: 22897554688992
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d320965840)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d320965840)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d320965840)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d320965840)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d320965840)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d320965840)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d320965840)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d320965840)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d320965840)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d320965840)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d320965840)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d320965840)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d320965840)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d320965840)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d320965840)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d320965840)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d320965840)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d320965840)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_178 : [#users=4] = placeholder[target=tensor_178]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_178,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_178, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_178, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_178, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d3207ee770>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d320965840)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x10149920)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x10149920)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x10149920)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_175 : [#users=1] = placeholder[target=tensor_175]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_175,), kwargs = {})
    %tensor_177 : [#users=1] = placeholder[target=tensor_177]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_177), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x10149920)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x7496170)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x7496170)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x7496170)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x7496170)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_154 : [#users=2] = placeholder[target=tensor_154]
    %tensor_155 : [#users=1] = placeholder[target=tensor_155]
    %tensor_156 : [#users=1] = placeholder[target=tensor_156]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_154,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_156, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_162 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_162, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_155, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_154), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x7496170)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x1014a800)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x1014a800)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x1014a800)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x1014a800)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x1014a800)
tracing opcode LOAD_FAST None pc=48 frame=9(0x1014a800)
tracing opcode CALL_METHOD None pc=50 frame=9(0x1014a800)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d320965040)
push tracker due to record
push tracker 17 frame 0x14d320965040 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d320965040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d320965040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d320965040 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d320965040)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d320965040)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d320965040)
load fast: 22897554689088
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d320965040)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d320965040)
load fast: 22897015925792
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d320965040)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d320965040)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d320965040)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d320965040)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d320965040)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d320965040)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x10148960)
push tracker due to record
push tracker 18 frame 0x10148960 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x10148960)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x10148960)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x10148960 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x10148960)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x10148960)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x10148960)
load fast: 22897554689184
tracing opcode LOAD_METHOD None pc=12 frame=18(0x10148960)
tracing opcode LOAD_FAST None pc=14 frame=18(0x10148960)
load fast: 22896946105296
tracing opcode CALL_METHOD None pc=16 frame=18(0x10148960)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x10148960)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_180 : [#users=1] = placeholder[target=tensor_180]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_180,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x10148960)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d320965040)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d320965040)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d320965040)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_179 : [#users=1] = placeholder[target=tensor_179]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_179,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d320965040)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x1014a800)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x1014a800)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x1014a800)
tracing opcode LOAD_FAST None pc=58 frame=9(0x1014a800)
tracing opcode LOAD_FAST None pc=60 frame=9(0x1014a800)
tracing opcode CALL_METHOD None pc=62 frame=9(0x1014a800)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x6d325f0)
push tracker due to record
push tracker 19 frame 0x6d325f0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x6d325f0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x6d325f0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x6d325f0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x6d325f0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x6d325f0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x6d325f0)
load fast: 22897554689232
tracing opcode LOAD_METHOD None pc=12 frame=19(0x6d325f0)
tracing opcode LOAD_FAST None pc=14 frame=19(0x6d325f0)
load fast: 22896946103776
tracing opcode CALL_METHOD None pc=16 frame=19(0x6d325f0)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x6d325f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x6d325f0)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x6d325f0)
tracing opcode LOAD_FAST None pc=24 frame=19(0x6d325f0)
tracing opcode CALL_METHOD None pc=26 frame=19(0x6d325f0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d320965240)
push tracker due to record
push tracker 3 frame 0x14d320965240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d320965240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d320965240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d320965240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d320965240)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d320965240)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d320965240)
load fast: 22897554689376
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d320965240)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d320965240)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d320965240)
load fast: 22896946171552
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d320965240)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_182 : [#users=0] = placeholder[target=tensor_182]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.1798,  0.5987,  0.2174,  ...,  0.5277,  0.2390, -0.1528],
         [-0.5917,  0.2588, -0.1167,  ..., -0.0206,  0.0720, -0.6584],
         [ 0.3023,  0.7132, -0.5861,  ...,  0.5001,  0.2298, -0.2647],
         ...,
         [-0.5229,  0.7106, -0.1178,  ...,  0.2258,  0.5543, -0.0690],
         [-0.4016, -0.0095,  0.0263,  ..., -0.0107,  0.2846, -0.0084],
         [-0.0300,  0.2401, -0.6881,  ...,  0.0661,  0.1472,  0.1452]]]), modified_attrs={}, prev=None) 22896946113024 22896946171552
obj: tensor([[[-0.1798,  0.5987,  0.2174,  ...,  0.5277,  0.2390, -0.1528],
         [-0.5917,  0.2588, -0.1167,  ..., -0.0206,  0.0720, -0.6584],
         [ 0.3023,  0.7132, -0.5861,  ...,  0.5001,  0.2298, -0.2647],
         ...,
         [-0.5229,  0.7106, -0.1178,  ...,  0.2258,  0.5543, -0.0690],
         [-0.4016, -0.0095,  0.0263,  ..., -0.0107,  0.2846, -0.0084],
         [-0.0300,  0.2401, -0.6881,  ...,  0.0661,  0.1472,  0.1452]]]) 22896946171552
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.1798,  0.5987,  0.2174,  ...,  0.5277,  0.2390, -0.1528],
         [-0.5917,  0.2588, -0.1167,  ..., -0.0206,  0.0720, -0.6584],
         [ 0.3023,  0.7132, -0.5861,  ...,  0.5001,  0.2298, -0.2647],
         ...,
         [-0.5229,  0.7106, -0.1178,  ...,  0.2258,  0.5543, -0.0690],
         [-0.4016, -0.0095,  0.0263,  ..., -0.0107,  0.2846, -0.0084],
         [-0.0300,  0.2401, -0.6881,  ...,  0.0661,  0.1472,  0.1452]]]), modified_attrs={}, prev=None) 22896946205360
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d320965240)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x6d325f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x6d325f0)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x6d325f0)
tracing opcode LOAD_FAST None pc=34 frame=19(0x6d325f0)
tracing opcode LOAD_FAST None pc=36 frame=19(0x6d325f0)
load fast: 22897015925792
tracing opcode BINARY_ADD None pc=38 frame=19(0x6d325f0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x6d325f0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0xea87d90)
push tracker due to record
push tracker 2 frame 0xea87d90 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0xea87d90)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0xea87d90)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0xea87d90 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0xea87d90)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0xea87d90)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0xea87d90)
load fast: 22896946255888
tracing opcode LOAD_ATTR None pc=12 frame=2(0xea87d90)
tracing opcode STORE_FAST None pc=14 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0xea87d90)
tracing opcode LOAD_METHOD None pc=18 frame=2(0xea87d90)
tracing opcode CALL_METHOD None pc=20 frame=2(0xea87d90)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0xea87d90)
tracing opcode LOAD_ATTR None pc=26 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=28 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=30 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=32 frame=2(0xea87d90)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0xea87d90)
record function in graph <built-in method mean of Tensor object at 0x14d31c591810>
func self id: 22896946255888
tracing opcode STORE_FAST None pc=36 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0xea87d90)
tracing opcode LOAD_FAST None pc=40 frame=2(0xea87d90)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0xea87d90)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=46 frame=2(0xea87d90)
tracing opcode CALL_METHOD None pc=48 frame=2(0xea87d90)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=52 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=54 frame=2(0xea87d90)
tracing opcode LOAD_CONST None pc=56 frame=2(0xea87d90)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0xea87d90)
record function in graph <built-in method mean of Tensor object at 0x14d31c5917c0>
func self id: 22896946255808
tracing opcode STORE_FAST None pc=60 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0xea87d90)
tracing opcode LOAD_FAST None pc=64 frame=2(0xea87d90)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0xea87d90)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0xea87d90)
tracing opcode LOAD_METHOD None pc=70 frame=2(0xea87d90)
tracing opcode LOAD_FAST None pc=72 frame=2(0xea87d90)
tracing opcode LOAD_FAST None pc=74 frame=2(0xea87d90)
load fast: 22897554689328
tracing opcode LOAD_ATTR None pc=76 frame=2(0xea87d90)
tracing opcode BINARY_ADD None pc=78 frame=2(0xea87d90)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0xea87d90)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0xea87d90)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0xea87d90)
tracing opcode LOAD_METHOD None pc=88 frame=2(0xea87d90)
tracing opcode LOAD_FAST None pc=90 frame=2(0xea87d90)
tracing opcode CALL_METHOD None pc=92 frame=2(0xea87d90)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0xea87d90)
tracing opcode LOAD_ATTR None pc=98 frame=2(0xea87d90)
tracing opcode LOAD_FAST None pc=100 frame=2(0xea87d90)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0xea87d90)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0xea87d90)
tracing opcode LOAD_ATTR None pc=106 frame=2(0xea87d90)
tracing opcode BINARY_ADD None pc=108 frame=2(0xea87d90)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0xea87d90)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0xea87d90)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0xea87d90)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_184 : [#users=4] = placeholder[target=tensor_184]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_184,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_184, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_184, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_184, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d31c591810>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0xea87d90)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x6d325f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x6d325f0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x6d325f0)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_181 : [#users=1] = placeholder[target=tensor_181]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_181,), kwargs = {})
    %tensor_183 : [#users=1] = placeholder[target=tensor_183]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_183), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x6d325f0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x1014a800)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x1014a800)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x1014a800)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x1014a800)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x1014a800)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_151 : [#users=2] = placeholder[target=tensor_151]
    %tensor_152 : [#users=1] = placeholder[target=tensor_152]
    %tensor_153 : [#users=1] = placeholder[target=tensor_153]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_151,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_153, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_162 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_162, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_152, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_151), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x1014a800)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x11a4d1d0)
push tracker due to record
push tracker 9 frame 0x11a4d1d0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x11a4d1d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x11a4d1d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x11a4d1d0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x11a4d1d0)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x11a4d1d0)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x11a4d1d0)
load fast: 22897554689424
tracing opcode LOAD_ATTR None pc=12 frame=9(0x11a4d1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x11a4d1d0)
load fast: 22896946321904
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x11a4d1d0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x11a4d1d0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x11a4d1d0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x11a4d1d0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x11a4d1d0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x11a4d1d0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x11a4d1d0)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x1312a8d0)
push tracker due to record
push tracker 10 frame 0x1312a8d0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x1312a8d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x1312a8d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x1312a8d0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x1312a8d0)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x1312a8d0)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x1312a8d0)
load fast: 22897554689472
tracing opcode LOAD_ATTR None pc=12 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x1312a8d0)
load fast: 22896946321904
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x1312a8d0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x1312a8d0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x1312a8d0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x1312a8d0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x1312a8d0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x1312a8d0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x1312a8d0)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x1311fa60)
push tracker due to record
push tracker 11 frame 0x1311fa60 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x1311fa60)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x1311fa60)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x1311fa60 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x1311fa60)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x1311fa60)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x1311fa60)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x1311fa60)
tracing opcode IS_OP None pc=16 frame=11(0x1311fa60)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x1311fa60)
load fast: 22897554689520
tracing opcode LOAD_METHOD None pc=22 frame=11(0x1311fa60)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x1311fa60)
load fast: 22896946321904
tracing opcode CALL_METHOD None pc=26 frame=11(0x1311fa60)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=34 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=36 frame=11(0x1311fa60)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x11a38280)
push tracker due to record
push tracker 12 frame 0x11a38280 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x11a38280)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x11a38280)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x11a38280 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x11a38280)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x11a38280)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x11a38280)
load fast: 22896945645584
tracing opcode LOAD_METHOD None pc=12 frame=12(0x11a38280)
tracing opcode CALL_METHOD None pc=14 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=16 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=18 frame=12(0x11a38280)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x11a38280)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x11a38280)
tracing opcode LOAD_FAST None pc=24 frame=12(0x11a38280)
load fast: 22897554689520
tracing opcode LOAD_ATTR None pc=26 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=28 frame=12(0x11a38280)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x11a38280)
tracing opcode BINARY_ADD None pc=32 frame=12(0x11a38280)
tracing opcode STORE_FAST None pc=34 frame=12(0x11a38280)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x11a38280)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x11a38280)
tracing opcode LOAD_FAST None pc=40 frame=12(0x11a38280)
tracing opcode CALL_METHOD None pc=42 frame=12(0x11a38280)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x11a38280)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x11a38280)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=50 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=52 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=54 frame=12(0x11a38280)
tracing opcode LOAD_CONST None pc=56 frame=12(0x11a38280)
tracing opcode CALL_METHOD None pc=58 frame=12(0x11a38280)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x11a38280)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_192 : [#users=1] = placeholder[target=tensor_192]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_192, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x11a38280)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=40 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=42 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=44 frame=11(0x1311fa60)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x1311fa60)
record function in graph <built-in method chunk of Tensor object at 0x14d31c4fccc0>
func self id: 22896945646784
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x1311fa60)
sub_value 22896946170592 tensor([[[[-2.5266e-01,  6.6611e-01, -1.3883e+00,  ...,  9.2372e-02,
           -1.3699e-01,  9.0926e-02],
          [-1.5627e-01,  7.0715e-01, -1.2021e+00,  ..., -4.8878e-01,
            2.2230e-01,  3.8121e-01],
          [-4.0787e-01,  8.9788e-02, -2.9894e-01,  ..., -1.6196e-01,
            1.1367e-01,  1.5716e-01],
          ...,
          [ 2.4157e-01,  3.8380e-01,  2.7047e-01,  ..., -4.6432e-01,
            2.6238e-01,  1.8379e-01],
          [ 1.4572e-02,  9.6981e-01, -1.7278e-01,  ..., -1.9158e-01,
            1.7525e-01,  1.6259e-01],
          [ 1.7393e-01, -4.2849e-01, -5.2677e-01,  ...,  1.1476e+00,
            4.6601e-01, -5.8935e-02]],

         [[ 6.9594e-01,  5.4804e-01, -1.3515e-01,  ...,  4.6546e-01,
           -1.1976e-01, -6.8329e-01],
          [-1.7139e-01,  3.2139e-03,  8.6918e-01,  ..., -1.2108e-01,
           -1.6914e-01, -3.4162e-02],
          [ 9.4198e-01,  2.6783e-01, -1.0602e-01,  ...,  1.3484e+00,
           -1.2750e-01,  7.3778e-01],
          ...,
          [ 1.7171e-01,  1.1331e+00, -4.2699e-01,  ...,  1.4773e-02,
           -6.9954e-01,  3.6637e-01],
          [-1.2091e+00,  2.6948e-01, -8.8796e-01,  ...,  8.7777e-01,
           -5.7597e-01, -2.9116e-01],
          [-1.5824e-01, -4.5956e-01,  3.5199e-01,  ...,  1.6380e-03,
           -2.3155e-01,  1.3205e-01]],

         [[-1.8220e-01,  1.9906e-01,  9.4558e-02,  ...,  8.8764e-02,
           -3.8594e-01,  7.0595e-01],
          [ 5.4460e-01,  8.9781e-01,  1.0099e+00,  ...,  9.8242e-01,
            2.2169e-01, -3.1720e-02],
          [-8.2214e-01, -7.9416e-02, -1.0896e+00,  ...,  5.4093e-02,
           -2.9568e-01, -2.7769e-01],
          ...,
          [-1.0773e+00, -2.3825e-01,  4.7157e-01,  ...,  3.9057e-01,
           -9.0465e-02, -2.0596e-01],
          [-1.3638e-01, -1.0270e-01,  1.1890e+00,  ..., -4.7190e-01,
            2.6807e-01, -1.0100e-01],
          [-5.3846e-01, -5.1985e-01, -8.4420e-01,  ..., -2.4022e-01,
            1.4581e-01,  8.0403e-01]],

         ...,

         [[ 6.4688e-01,  5.8913e-01, -9.1490e-01,  ..., -2.4220e-01,
           -4.9605e-01,  6.3582e-01],
          [-2.6433e-01,  7.2001e-02, -7.9693e-01,  ..., -4.6346e-01,
            1.8827e-01,  5.5820e-01],
          [-2.2504e-01,  5.8668e-02, -8.2872e-01,  ..., -2.8006e-01,
           -2.4408e-01,  1.3992e-02],
          ...,
          [ 2.8771e-02,  6.2695e-01, -9.9906e-02,  ..., -2.8140e-02,
           -3.5850e-01,  1.4187e-01],
          [-1.5013e-01,  1.1872e+00, -1.7042e+00,  ...,  5.9781e-01,
           -3.1305e-01, -3.1555e-01],
          [ 6.7161e-04, -6.5482e-01, -1.2164e+00,  ..., -1.1603e+00,
            6.1110e-01, -1.3576e+00]],

         [[-1.3660e-01, -7.1304e-02,  2.0556e-01,  ...,  1.0018e+00,
           -6.5113e-01,  3.6678e-02],
          [ 8.0078e-02, -6.2701e-01, -6.8675e-01,  ...,  8.7620e-01,
            4.9610e-01,  3.0320e-01],
          [ 5.7285e-01,  6.3946e-02,  3.9829e-01,  ..., -4.1407e-01,
           -3.6619e-01, -1.8420e-01],
          ...,
          [ 1.9012e-01, -2.0236e-01,  2.1442e-01,  ...,  7.9239e-01,
           -1.1422e-01,  2.1167e-01],
          [ 9.8069e-03,  1.6807e-01, -2.2696e-01,  ...,  6.7589e-01,
           -1.5052e-01, -1.3964e-01],
          [ 8.7234e-01, -5.3611e-01, -7.4601e-01,  ..., -5.4311e-01,
           -4.9110e-01,  1.1744e+00]],

         [[ 1.6787e-01, -5.1471e-02, -6.4449e-01,  ..., -1.6654e-01,
           -2.2657e-01,  6.4171e-01],
          [ 3.5323e-01,  9.7545e-02,  1.8153e-01,  ...,  2.7846e-01,
           -2.6358e-01,  3.7133e-01],
          [-4.9641e-01, -1.6320e-01, -8.7410e-01,  ...,  4.9510e-01,
            3.3677e-01, -2.4264e-01],
          ...,
          [-5.4774e-01, -9.5482e-01, -1.3679e+00,  ...,  1.3252e-01,
           -4.7339e-01, -1.0562e+00],
          [ 4.2623e-01, -2.4451e-02,  1.7932e-01,  ..., -5.8400e-01,
           -6.2463e-01,  1.4253e-01],
          [ 4.5297e-02,  8.5229e-01, -7.3077e-01,  ..., -4.9176e-01,
           -2.9238e-01, -1.1128e+00]]]])
sub_value 22896945646864 tensor([[[[ 3.1802e-01,  4.8653e-01,  4.8768e-01,  ..., -4.0926e-01,
           -6.8413e-01,  9.5601e-02],
          [ 1.3217e-01, -1.3222e+00, -8.8891e-02,  ...,  6.8229e-03,
           -7.2425e-02, -8.2512e-01],
          [-3.2394e-01,  3.1152e-01, -5.2567e-01,  ..., -5.7139e-01,
           -9.6128e-01, -2.3278e-01],
          ...,
          [-1.2946e-01,  1.1768e+00, -2.4466e-01,  ...,  2.1736e-01,
           -3.6737e-01, -3.1031e-01],
          [-7.0649e-01,  1.9464e-01, -4.3454e-01,  ..., -6.1886e-01,
            2.3720e-01,  3.0613e-01],
          [ 1.2816e+00,  1.0391e+00, -7.7812e-01,  ..., -1.3199e-01,
           -2.2556e-02,  6.9808e-01]],

         [[ 9.9418e-02, -2.7936e-01,  4.2763e-01,  ..., -1.1530e+00,
            6.8644e-01, -1.3045e-01],
          [ 1.2355e+00, -7.3889e-01, -5.9602e-01,  ...,  4.0674e-01,
           -1.3917e-01,  7.3347e-01],
          [ 3.3526e-03, -5.5169e-01,  5.4125e-01,  ...,  3.1660e-01,
           -8.8595e-01,  1.0597e+00],
          ...,
          [ 4.0813e-01,  9.2859e-01,  5.2940e-01,  ..., -7.0676e-01,
           -4.6081e-01,  6.6986e-01],
          [-3.0975e-01,  1.2570e-01, -2.7069e-02,  ..., -2.8751e-01,
           -2.9065e-02, -6.9543e-02],
          [-3.5628e-01,  4.0675e-01,  1.0460e+00,  ..., -2.5930e-01,
            1.6780e-01,  9.2045e-01]],

         [[ 7.6457e-01, -6.2341e-01, -5.0513e-01,  ..., -5.4626e-01,
            4.0290e-01, -1.0393e+00],
          [ 8.0681e-01, -2.3076e-01, -5.5491e-01,  ...,  2.1565e-01,
           -1.7031e-01,  2.5575e-02],
          [ 5.2669e-01,  5.6690e-01, -5.0592e-01,  ...,  3.3473e-01,
            4.0136e-01,  5.7217e-01],
          ...,
          [-3.9896e-01,  9.7766e-02, -8.7267e-01,  ...,  2.8361e-01,
            9.4584e-01, -2.8957e-01],
          [-4.6269e-02,  7.8661e-01, -1.8586e-01,  ...,  3.9121e-01,
           -2.2617e-01, -9.7978e-02],
          [ 2.7716e-01, -1.9753e-02,  3.2305e-01,  ...,  3.5877e-01,
            5.8856e-01, -8.2743e-02]],

         ...,

         [[-4.3443e-03, -6.8420e-01, -8.7144e-01,  ..., -5.3662e-01,
            1.7886e-01,  2.0958e-01],
          [-5.5294e-01,  4.2917e-01,  5.5285e-01,  ...,  3.1871e-01,
            4.4983e-01,  4.2967e-01],
          [ 1.1118e-01,  7.1284e-01, -3.3766e-01,  ..., -8.7118e-02,
            2.1815e-02, -1.5628e-01],
          ...,
          [-3.7849e-01,  8.8381e-02, -1.3738e+00,  ..., -4.8551e-01,
            1.8477e-01,  2.9896e-02],
          [-4.4963e-01,  1.1120e+00,  1.0580e-01,  ...,  2.3706e-01,
            1.1170e-01, -1.3393e-01],
          [-9.4867e-02,  8.3567e-01,  2.9556e-01,  ...,  7.2096e-01,
           -8.2521e-02, -1.0400e-01]],

         [[ 4.7631e-01, -1.9580e-01,  7.3982e-01,  ...,  6.4273e-02,
            3.7702e-01,  1.6914e-01],
          [ 2.0680e-01,  6.1136e-01,  3.6041e-01,  ...,  4.5112e-02,
            2.9380e-01,  2.2280e-01],
          [-3.9389e-01, -2.1142e-01,  1.7557e-01,  ..., -7.5952e-02,
           -2.7579e-02, -3.4424e-01],
          ...,
          [-4.5314e-01, -2.0781e-01, -5.0618e-02,  ...,  1.4247e-02,
           -2.4585e-01,  9.5009e-01],
          [-2.6246e-01, -3.4187e-01, -2.1363e-01,  ...,  3.9186e-01,
            5.9675e-01,  5.6142e-01],
          [ 1.1468e-01,  2.2018e-01,  1.9834e-01,  ...,  3.0818e-01,
            7.1799e-02,  5.3330e-01]],

         [[ 1.3375e-01,  7.4721e-01, -8.7098e-01,  ..., -3.7930e-01,
           -6.7093e-01, -2.7336e-03],
          [-1.0023e-01,  4.2028e-01, -4.7259e-01,  ..., -9.3359e-01,
           -6.0907e-04, -6.8805e-01],
          [ 3.1388e-01,  4.1634e-02, -2.9653e-01,  ...,  5.5365e-01,
            5.9270e-01, -8.9894e-01],
          ...,
          [-1.0437e-01, -6.6979e-01,  2.6523e-01,  ...,  7.7466e-01,
           -1.1274e+00, -2.3935e-01],
          [-4.1219e-01, -7.0787e-01,  4.5930e-01,  ..., -6.0431e-01,
            2.5197e-01,  8.9707e-02],
          [-1.8753e-01,  2.9831e-01,  4.1846e-01,  ...,  1.2841e-01,
            1.3188e+00, -7.0646e-01]]]])
sub_value 22896945645824 tensor([[[[-5.6535e-01, -1.0991e-01, -2.7256e-01,  ..., -1.8256e-01,
            1.6078e-01,  8.7676e-01],
          [-9.7882e-01,  1.0312e+00,  1.0520e+00,  ..., -5.9357e-01,
           -7.1024e-01, -3.1834e-01],
          [-6.0983e-01,  4.6960e-01, -4.7225e-01,  ...,  2.7877e-01,
           -2.0612e-01,  4.4692e-01],
          ...,
          [ 4.2648e-01,  2.5000e-01,  1.6897e-01,  ...,  4.0080e-02,
            1.8668e+00, -4.6179e-01],
          [ 6.5226e-02,  4.7496e-02,  4.9446e-01,  ..., -9.8230e-01,
           -4.5047e-01, -1.7621e-01],
          [ 3.8486e-01,  5.9496e-01,  4.4732e-01,  ...,  2.5045e-01,
           -2.0026e-01, -2.8082e-01]],

         [[-2.4705e-02,  4.8981e-01,  2.6327e-01,  ...,  1.2962e+00,
            3.3389e-01,  9.9550e-01],
          [-4.4141e-01,  5.9503e-01,  7.6768e-02,  ..., -2.2026e-01,
            1.7612e-02,  7.0223e-01],
          [-4.7968e-02,  2.5193e-01, -2.6226e-01,  ...,  1.9926e-01,
           -5.0451e-01, -1.0526e-01],
          ...,
          [-8.9498e-02,  5.7124e-01, -5.6305e-01,  ...,  9.8619e-02,
           -9.6927e-01,  4.0123e-01],
          [-8.6811e-01,  4.6698e-02, -8.2612e-01,  ...,  2.3412e-01,
            4.3379e-01, -7.7013e-01],
          [-8.0636e-01,  1.5898e-01,  6.9965e-01,  ...,  3.2747e-01,
           -4.1801e-01,  9.0857e-01]],

         [[-4.8029e-01,  6.7304e-01,  1.9404e-01,  ...,  1.3636e-01,
           -4.9480e-01, -7.8406e-02],
          [-9.9298e-01,  7.6593e-01,  5.6176e-01,  ...,  5.5686e-01,
           -8.2113e-02, -3.1278e-01],
          [-1.5970e+00,  3.8329e-01,  1.8094e-01,  ...,  3.6677e-01,
           -3.1326e-01, -8.5678e-01],
          ...,
          [-1.8911e-01,  1.4932e-01, -6.1425e-01,  ..., -1.0171e-01,
           -6.0912e-01,  2.5710e-02],
          [-4.1780e-01,  5.4607e-01, -1.1765e+00,  ..., -2.8282e-01,
           -6.6145e-01, -7.7007e-01],
          [-2.9034e-01, -8.5052e-01, -3.1873e-01,  ...,  1.0371e-01,
            2.1747e-01, -3.6511e-01]],

         ...,

         [[ 6.0520e-01, -2.7254e-01, -4.5016e-01,  ..., -2.4567e-01,
            4.3151e-01, -2.1943e-01],
          [ 3.9766e-01, -2.3759e-01, -1.7234e-01,  ..., -2.5536e-01,
           -1.2346e-01,  4.3034e-01],
          [ 4.3234e-01,  6.1812e-02, -1.0663e-01,  ..., -4.1694e-01,
            4.7908e-01, -4.5182e-01],
          ...,
          [ 1.2721e-01, -3.2313e-03, -3.3606e-01,  ..., -4.7113e-02,
           -4.3630e-01,  8.1281e-01],
          [ 4.7386e-01,  2.4115e-01, -4.0083e-01,  ..., -6.2815e-01,
            9.1575e-01, -3.8619e-01],
          [-4.8257e-01,  3.4408e-01,  1.4619e-03,  ..., -2.0652e-01,
            3.8370e-01,  5.2775e-01]],

         [[ 6.6839e-01, -5.1233e-01, -5.4719e-01,  ..., -3.8259e-02,
           -9.1604e-01, -3.6586e-02],
          [-4.2877e-01,  2.9228e-01,  1.8124e-01,  ...,  2.4702e-02,
           -1.2287e+00, -4.9700e-02],
          [ 4.0891e-01, -7.4518e-01, -1.6077e+00,  ...,  4.8104e-01,
            4.2289e-01, -1.4316e-01],
          ...,
          [ 1.4007e-01, -7.0955e-01, -1.0793e+00,  ..., -2.5759e-01,
            2.3319e-01,  9.5356e-01],
          [ 1.0776e+00,  5.6700e-01, -1.2603e+00,  ...,  8.4824e-01,
           -9.5450e-01,  5.0704e-01],
          [ 2.6061e-01,  4.5205e-01, -2.0966e-01,  ...,  3.0469e-01,
            4.0375e-01,  7.5183e-02]],

         [[ 1.9995e-01, -9.2038e-01, -4.7047e-01,  ..., -1.1911e-01,
           -3.6448e-01,  3.1236e-02],
          [ 1.1327e+00, -1.4185e+00,  6.5946e-02,  ...,  6.3859e-01,
           -2.9510e-01, -5.6354e-01],
          [-1.2971e-02,  3.8717e-01, -1.0191e+00,  ...,  1.1397e+00,
           -6.8061e-01, -3.2673e-01],
          ...,
          [-6.5898e-01, -3.9077e-02, -2.4837e-01,  ..., -8.7628e-01,
            6.0968e-01,  1.1880e+00],
          [ 3.1079e-01, -3.9322e-01, -1.3722e-01,  ...,  5.5898e-01,
            3.4671e-01, -7.3004e-01],
          [-1.4592e-01, -4.9370e-01, -3.0632e-01,  ...,  5.4210e-01,
           -5.5909e-01, -4.4770e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x1311fa60)
tracing opcode STORE_FAST None pc=52 frame=11(0x1311fa60)
tracing opcode STORE_FAST None pc=54 frame=11(0x1311fa60)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x1311fa60)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x1311fa60)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=232 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=234 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=236 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=238 frame=11(0x1311fa60)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x1311fa60)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x1311fa60)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x1311fa60)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x1311fa60)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1312af80)
push tracker due to record
push tracker 12 frame 0x1312af80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1312af80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1312af80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1312af80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1312af80)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1312af80)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1312af80)
load fast: 22896946170992
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1312af80)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1312af80)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1312af80)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1312af80)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1312af80)
load fast: 22897554689520
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1312af80)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1312af80)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1312af80)
tracing opcode STORE_FAST None pc=34 frame=12(0x1312af80)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1312af80)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1312af80)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1312af80)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1312af80)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1312af80)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1312af80)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1312af80)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1312af80)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1312af80)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1312af80)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_193 : [#users=1] = placeholder[target=tensor_193]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_193, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1312af80)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x1311fa60)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x1311fa60)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x1311fa60)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=262 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=264 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=266 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=268 frame=11(0x1311fa60)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x1311fa60)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x1311fa60)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x1311fa60)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x1311fa60)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x8892750)
push tracker due to record
push tracker 12 frame 0x8892750 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x8892750)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x8892750)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x8892750 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x8892750)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x8892750)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x8892750)
load fast: 22896946046512
tracing opcode LOAD_METHOD None pc=12 frame=12(0x8892750)
tracing opcode CALL_METHOD None pc=14 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=16 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=18 frame=12(0x8892750)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x8892750)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x8892750)
tracing opcode LOAD_FAST None pc=24 frame=12(0x8892750)
load fast: 22897554689520
tracing opcode LOAD_ATTR None pc=26 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=28 frame=12(0x8892750)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x8892750)
tracing opcode BINARY_ADD None pc=32 frame=12(0x8892750)
tracing opcode STORE_FAST None pc=34 frame=12(0x8892750)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x8892750)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x8892750)
tracing opcode LOAD_FAST None pc=40 frame=12(0x8892750)
tracing opcode CALL_METHOD None pc=42 frame=12(0x8892750)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x8892750)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x8892750)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=50 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=52 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=54 frame=12(0x8892750)
tracing opcode LOAD_CONST None pc=56 frame=12(0x8892750)
tracing opcode CALL_METHOD None pc=58 frame=12(0x8892750)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x8892750)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_194 : [#users=1] = placeholder[target=tensor_194]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_194, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x8892750)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x1311fa60)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x1311fa60)
tracing opcode STORE_FAST None pc=284 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x1311fa60)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x1311fa60)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x1311fa60)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x1311fa60)
tracing opcode BINARY_ADD None pc=296 frame=11(0x1311fa60)
tracing opcode STORE_FAST None pc=298 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x1311fa60)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=308 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=312 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=314 frame=11(0x1311fa60)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=320 frame=11(0x1311fa60)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x1311fa60)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x1311fa60)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x1311fa60)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x1311fa60)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=334 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=338 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=342 frame=11(0x1311fa60)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x1311fa60)
record function in graph <built-in method to of Tensor object at 0x14d31c4c4db0>
func self id: 22896945417648
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x1311fa60)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=354 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=356 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=360 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=362 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=364 frame=11(0x1311fa60)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x1311fa60)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x1311fa60)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=382 frame=11(0x1311fa60)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x1311fa60)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x11a3c060)
push tracker due to record
push tracker 3 frame 0x11a3c060 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x11a3c060)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x11a3c060)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x11a3c060 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x11a3c060)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x11a3c060)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x11a3c060)
load fast: 22897554689616
tracing opcode LOAD_ATTR None pc=12 frame=3(0x11a3c060)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x11a3c060)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x11a3c060)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x11a3c060)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x11a3c060)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=392 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=394 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=396 frame=11(0x1311fa60)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=400 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=402 frame=11(0x1311fa60)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x14a07a60)
push tracker due to record
push tracker 13 frame 0x14a07a60 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x14a07a60)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x14a07a60)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x14a07a60 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x14a07a60)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x14a07a60)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x14a07a60)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x14a07a60)
tracing opcode IS_OP None pc=16 frame=13(0x14a07a60)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=54 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=56 frame=13(0x14a07a60)
tracing opcode COMPARE_OP None pc=58 frame=13(0x14a07a60)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=84 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=86 frame=13(0x14a07a60)
tracing opcode COMPARE_OP None pc=88 frame=13(0x14a07a60)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=96 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=98 frame=13(0x14a07a60)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x14a07a60)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x14a07a60)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=138 frame=13(0x14a07a60)
load fast: 22896945418048
tracing opcode LOAD_METHOD None pc=140 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=142 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=144 frame=13(0x14a07a60)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x14a07a60)
load fast: 22896945646864
tracing opcode LOAD_METHOD None pc=148 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=150 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=152 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=156 frame=13(0x14a07a60)
load fast: 22897554689520
tracing opcode LOAD_ATTR None pc=158 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x14a07a60)
tracing opcode STORE_FAST None pc=162 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=168 frame=13(0x14a07a60)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=172 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=176 frame=13(0x14a07a60)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x14a07a60)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=186 frame=13(0x14a07a60)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=190 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=194 frame=13(0x14a07a60)
tracing opcode BINARY_ADD None pc=196 frame=13(0x14a07a60)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=200 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=202 frame=13(0x14a07a60)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x14a07a60)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x14a07a60)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x14a07a60)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x14a07a60)
tracing opcode STORE_FAST None pc=220 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=224 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x14a07a60)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x14a07a60)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=238 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=240 frame=13(0x14a07a60)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=248 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=250 frame=13(0x14a07a60)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xea82810)
push tracker due to record
push tracker 12 frame 0xea82810 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xea82810)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xea82810)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0xea82810 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xea82810)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xea82810)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xea82810)
load fast: 22896945215904
tracing opcode LOAD_METHOD None pc=12 frame=12(0xea82810)
tracing opcode CALL_METHOD None pc=14 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=16 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=18 frame=12(0xea82810)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xea82810)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xea82810)
tracing opcode LOAD_FAST None pc=24 frame=12(0xea82810)
load fast: 22897554689520
tracing opcode LOAD_ATTR None pc=26 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=28 frame=12(0xea82810)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xea82810)
tracing opcode BINARY_ADD None pc=32 frame=12(0xea82810)
tracing opcode STORE_FAST None pc=34 frame=12(0xea82810)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xea82810)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xea82810)
tracing opcode LOAD_FAST None pc=40 frame=12(0xea82810)
tracing opcode CALL_METHOD None pc=42 frame=12(0xea82810)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xea82810)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xea82810)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=50 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=52 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=54 frame=12(0xea82810)
tracing opcode LOAD_CONST None pc=56 frame=12(0xea82810)
tracing opcode CALL_METHOD None pc=58 frame=12(0xea82810)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xea82810)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_199 : [#users=1] = placeholder[target=tensor_199]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_199, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xea82810)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=258 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=260 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=264 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=266 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=268 frame=13(0x14a07a60)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x14a07a60)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=278 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=280 frame=13(0x14a07a60)
tracing opcode BINARY_ADD None pc=282 frame=13(0x14a07a60)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=286 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=288 frame=13(0x14a07a60)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=292 frame=13(0x14a07a60)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=296 frame=13(0x14a07a60)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=304 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=306 frame=13(0x14a07a60)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=310 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=312 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=314 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x14a07a60)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x13110740)
push tracker due to record
push tracker 14 frame 0x13110740 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x13110740)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x13110740)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x13110740 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x13110740)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x13110740)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x13110740)
load fast: 22896945970528
tracing opcode LOAD_METHOD None pc=12 frame=14(0x13110740)
tracing opcode LOAD_FAST None pc=14 frame=14(0x13110740)
load fast: 22896945418048
tracing opcode LOAD_METHOD None pc=16 frame=14(0x13110740)
tracing opcode LOAD_CONST None pc=18 frame=14(0x13110740)
tracing opcode CALL_METHOD None pc=20 frame=14(0x13110740)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x13110740)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x13110740)
tracing opcode LOAD_CONST None pc=26 frame=14(0x13110740)
tracing opcode CALL_METHOD None pc=28 frame=14(0x13110740)
tracing opcode LOAD_FAST None pc=30 frame=14(0x13110740)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x13110740)
tracing opcode LOAD_CONST None pc=34 frame=14(0x13110740)
tracing opcode CALL_METHOD None pc=36 frame=14(0x13110740)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x13110740)
load fast: 22896945453792
tracing opcode LOAD_METHOD None pc=40 frame=14(0x13110740)
tracing opcode LOAD_CONST None pc=42 frame=14(0x13110740)
tracing opcode CALL_METHOD None pc=44 frame=14(0x13110740)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x13110740)
tracing opcode CALL_METHOD None pc=48 frame=14(0x13110740)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x13110740)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_200 : [#users=1] = placeholder[target=tensor_200]
    %tensor_201 : [#users=0] = placeholder[target=tensor_201]
    %tensor_202 : [#users=0] = placeholder[target=tensor_202]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_200, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x13110740)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x14a07a60)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=326 frame=13(0x14a07a60)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x14a07a60)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=334 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x14a07a60)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x14a07a60)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=348 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=350 frame=13(0x14a07a60)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=358 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=360 frame=13(0x14a07a60)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x13110a90)
push tracker due to record
push tracker 12 frame 0x13110a90 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x13110a90)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x13110a90)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x13110a90 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x13110a90)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x13110a90)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x13110a90)
load fast: 22896944974400
tracing opcode LOAD_METHOD None pc=12 frame=12(0x13110a90)
tracing opcode CALL_METHOD None pc=14 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=16 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=18 frame=12(0x13110a90)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x13110a90)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x13110a90)
tracing opcode LOAD_FAST None pc=24 frame=12(0x13110a90)
load fast: 22897554689520
tracing opcode LOAD_ATTR None pc=26 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=28 frame=12(0x13110a90)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x13110a90)
tracing opcode BINARY_ADD None pc=32 frame=12(0x13110a90)
tracing opcode STORE_FAST None pc=34 frame=12(0x13110a90)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x13110a90)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x13110a90)
tracing opcode LOAD_FAST None pc=40 frame=12(0x13110a90)
tracing opcode CALL_METHOD None pc=42 frame=12(0x13110a90)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x13110a90)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x13110a90)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=50 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=52 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=54 frame=12(0x13110a90)
tracing opcode LOAD_CONST None pc=56 frame=12(0x13110a90)
tracing opcode CALL_METHOD None pc=58 frame=12(0x13110a90)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x13110a90)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_203 : [#users=1] = placeholder[target=tensor_203]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_203, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x13110a90)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x14a07a60)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x14a07a60)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=374 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=378 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=380 frame=13(0x14a07a60)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=386 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x14a07a60)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x14a07a60)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x14a07a60)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x14a07a60)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x14a07a60)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=404 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=406 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=408 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=412 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=414 frame=13(0x14a07a60)
tracing opcode COMPARE_OP None pc=416 frame=13(0x14a07a60)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x14a07a60)
tracing opcode STORE_FAST None pc=452 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=458 frame=13(0x14a07a60)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x14a07a60)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x14a07a60)
tracing opcode BINARY_ADD None pc=464 frame=13(0x14a07a60)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=468 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=470 frame=13(0x14a07a60)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=474 frame=13(0x14a07a60)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=478 frame=13(0x14a07a60)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=486 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=488 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=492 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=494 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=496 frame=13(0x14a07a60)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=500 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=504 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x14a07a60)
record function in graph <built-in method to of Tensor object at 0x14d31c45e450>
func self id: 22896944997456
tracing opcode CALL_METHOD None pc=508 frame=13(0x14a07a60)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x14a07a60)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=518 frame=13(0x14a07a60)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=522 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=524 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=526 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x14a07a60)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x117e95a0)
push tracker due to record
push tracker 15 frame 0x117e95a0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x117e95a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x117e95a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x117e95a0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x117e95a0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x117e95a0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x117e95a0)
load fast: 22896944997936
tracing opcode LOAD_METHOD None pc=12 frame=15(0x117e95a0)
tracing opcode LOAD_FAST None pc=14 frame=15(0x117e95a0)
load fast: 22896945418048
tracing opcode LOAD_METHOD None pc=16 frame=15(0x117e95a0)
tracing opcode LOAD_CONST None pc=18 frame=15(0x117e95a0)
tracing opcode CALL_METHOD None pc=20 frame=15(0x117e95a0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x117e95a0)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x117e95a0)
tracing opcode LOAD_CONST None pc=26 frame=15(0x117e95a0)
tracing opcode CALL_METHOD None pc=28 frame=15(0x117e95a0)
tracing opcode LOAD_FAST None pc=30 frame=15(0x117e95a0)
load fast: 22896945646864
tracing opcode LOAD_METHOD None pc=32 frame=15(0x117e95a0)
tracing opcode LOAD_CONST None pc=34 frame=15(0x117e95a0)
tracing opcode CALL_METHOD None pc=36 frame=15(0x117e95a0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x117e95a0)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x117e95a0)
tracing opcode LOAD_CONST None pc=42 frame=15(0x117e95a0)
tracing opcode CALL_METHOD None pc=44 frame=15(0x117e95a0)
tracing opcode BUILD_LIST None pc=46 frame=15(0x117e95a0)
tracing opcode CALL_METHOD None pc=48 frame=15(0x117e95a0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x117e95a0)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_204 : [#users=1] = placeholder[target=tensor_204]
    %tensor_205 : [#users=0] = placeholder[target=tensor_205]
    %tensor_206 : [#users=0] = placeholder[target=tensor_206]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_204, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x117e95a0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x14a07a60)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x14a07a60)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=538 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x14a07a60)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=548 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=550 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=552 frame=13(0x14a07a60)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x14a07a60)
tracing opcode LOAD_CONST None pc=556 frame=13(0x14a07a60)
tracing opcode CALL_METHOD None pc=558 frame=13(0x14a07a60)
tracing opcode COMPARE_OP None pc=560 frame=13(0x14a07a60)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x14a07a60)
tracing opcode LOAD_FAST None pc=626 frame=13(0x14a07a60)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x14a07a60)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x14a07a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x14a07a60)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x14a07a60)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_196 : [#users=1] = placeholder[target=tensor_196]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_196, 1), kwargs = {})
    %tensor_197 : [#users=1] = placeholder[target=tensor_197]
    %tensor_198 : [#users=1] = placeholder[target=tensor_198]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_197, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_198, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x14a07a60)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=408 frame=11(0x1311fa60)
tracing opcode IS_OP None pc=410 frame=11(0x1311fa60)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=418 frame=11(0x1311fa60)
tracing opcode BINARY_ADD None pc=420 frame=11(0x1311fa60)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x1311fa60)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=470 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=472 frame=11(0x1311fa60)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=476 frame=11(0x1311fa60)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=484 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=486 frame=11(0x1311fa60)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x6d157e0)
push tracker due to record
push tracker 3 frame 0x6d157e0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x6d157e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x6d157e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x6d157e0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x6d157e0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x6d157e0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x6d157e0)
load fast: 22897554689760
tracing opcode LOAD_ATTR None pc=12 frame=3(0x6d157e0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x6d157e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x6d157e0)
load fast: 22896944812576
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x6d157e0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_208 : [#users=0] = placeholder[target=tensor_208]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0024, 0.0043, 0.0054,  ..., 0.0034, 0.0034, 0.0049],
          [0.0034, 0.0034, 0.0041,  ..., 0.0031, 0.0053, 0.0050],
          [0.0029, 0.0052, 0.0044,  ..., 0.0050, 0.0039, 0.0037],
          ...,
          [0.0039, 0.0039, 0.0037,  ..., 0.0035, 0.0033, 0.0030],
          [0.0050, 0.0036, 0.0038,  ..., 0.0045, 0.0043, 0.0049],
          [0.0034, 0.0041, 0.0043,  ..., 0.0034, 0.0042, 0.0027]],

         [[0.0033, 0.0037, 0.0050,  ..., 0.0034, 0.0041, 0.0036],
          [0.0037, 0.0035, 0.0035,  ..., 0.0038, 0.0035, 0.0037],
          [0.0043, 0.0052, 0.0031,  ..., 0.0035, 0.0037, 0.0027],
          ...,
          [0.0033, 0.0045, 0.0046,  ..., 0.0051, 0.0056, 0.0037],
          [0.0031, 0.0035, 0.0049,  ..., 0.0034, 0.0041, 0.0039],
          [0.0059, 0.0039, 0.0042,  ..., 0.0038, 0.0028, 0.0034]],

         [[0.0034, 0.0037, 0.0039,  ..., 0.0045, 0.0031, 0.0036],
          [0.0035, 0.0040, 0.0048,  ..., 0.0045, 0.0039, 0.0039],
          [0.0029, 0.0040, 0.0031,  ..., 0.0044, 0.0049, 0.0040],
          ...,
          [0.0033, 0.0033, 0.0025,  ..., 0.0035, 0.0043, 0.0034],
          [0.0040, 0.0043, 0.0036,  ..., 0.0046, 0.0035, 0.0038],
          [0.0046, 0.0049, 0.0038,  ..., 0.0044, 0.0033, 0.0040]],

         ...,

         [[0.0032, 0.0032, 0.0037,  ..., 0.0032, 0.0034, 0.0041],
          [0.0046, 0.0039, 0.0034,  ..., 0.0050, 0.0037, 0.0031],
          [0.0027, 0.0039, 0.0039,  ..., 0.0036, 0.0030, 0.0046],
          ...,
          [0.0033, 0.0031, 0.0034,  ..., 0.0036, 0.0038, 0.0042],
          [0.0042, 0.0040, 0.0030,  ..., 0.0040, 0.0044, 0.0042],
          [0.0050, 0.0036, 0.0036,  ..., 0.0036, 0.0036, 0.0036]],

         [[0.0042, 0.0037, 0.0032,  ..., 0.0033, 0.0035, 0.0037],
          [0.0039, 0.0036, 0.0037,  ..., 0.0036, 0.0041, 0.0031],
          [0.0043, 0.0046, 0.0045,  ..., 0.0034, 0.0028, 0.0032],
          ...,
          [0.0043, 0.0040, 0.0041,  ..., 0.0049, 0.0044, 0.0040],
          [0.0034, 0.0043, 0.0038,  ..., 0.0038, 0.0041, 0.0041],
          [0.0034, 0.0041, 0.0037,  ..., 0.0042, 0.0053, 0.0039]],

         [[0.0043, 0.0027, 0.0025,  ..., 0.0035, 0.0036, 0.0034],
          [0.0030, 0.0030, 0.0035,  ..., 0.0031, 0.0038, 0.0046],
          [0.0032, 0.0045, 0.0044,  ..., 0.0035, 0.0035, 0.0040],
          ...,
          [0.0040, 0.0031, 0.0046,  ..., 0.0037, 0.0034, 0.0029],
          [0.0033, 0.0039, 0.0027,  ..., 0.0042, 0.0030, 0.0040],
          [0.0037, 0.0049, 0.0032,  ..., 0.0028, 0.0039, 0.0048]]]]), modified_attrs={}, prev=None) 22896944903360 22896944812576
obj: tensor([[[[0.0024, 0.0043, 0.0054,  ..., 0.0034, 0.0034, 0.0049],
          [0.0034, 0.0034, 0.0041,  ..., 0.0031, 0.0053, 0.0050],
          [0.0029, 0.0052, 0.0044,  ..., 0.0050, 0.0039, 0.0037],
          ...,
          [0.0039, 0.0039, 0.0037,  ..., 0.0035, 0.0033, 0.0030],
          [0.0050, 0.0036, 0.0038,  ..., 0.0045, 0.0043, 0.0049],
          [0.0034, 0.0041, 0.0043,  ..., 0.0034, 0.0042, 0.0027]],

         [[0.0033, 0.0037, 0.0050,  ..., 0.0034, 0.0041, 0.0036],
          [0.0037, 0.0035, 0.0035,  ..., 0.0038, 0.0035, 0.0037],
          [0.0043, 0.0052, 0.0031,  ..., 0.0035, 0.0037, 0.0027],
          ...,
          [0.0033, 0.0045, 0.0046,  ..., 0.0051, 0.0056, 0.0037],
          [0.0031, 0.0035, 0.0049,  ..., 0.0034, 0.0041, 0.0039],
          [0.0059, 0.0039, 0.0042,  ..., 0.0038, 0.0028, 0.0034]],

         [[0.0034, 0.0037, 0.0039,  ..., 0.0045, 0.0031, 0.0036],
          [0.0035, 0.0040, 0.0048,  ..., 0.0045, 0.0039, 0.0039],
          [0.0029, 0.0040, 0.0031,  ..., 0.0044, 0.0049, 0.0040],
          ...,
          [0.0033, 0.0033, 0.0025,  ..., 0.0035, 0.0043, 0.0034],
          [0.0040, 0.0043, 0.0036,  ..., 0.0046, 0.0035, 0.0038],
          [0.0046, 0.0049, 0.0038,  ..., 0.0044, 0.0033, 0.0040]],

         ...,

         [[0.0032, 0.0032, 0.0037,  ..., 0.0032, 0.0034, 0.0041],
          [0.0046, 0.0039, 0.0034,  ..., 0.0050, 0.0037, 0.0031],
          [0.0027, 0.0039, 0.0039,  ..., 0.0036, 0.0030, 0.0046],
          ...,
          [0.0033, 0.0031, 0.0034,  ..., 0.0036, 0.0038, 0.0042],
          [0.0042, 0.0040, 0.0030,  ..., 0.0040, 0.0044, 0.0042],
          [0.0050, 0.0036, 0.0036,  ..., 0.0036, 0.0036, 0.0036]],

         [[0.0042, 0.0037, 0.0032,  ..., 0.0033, 0.0035, 0.0037],
          [0.0039, 0.0036, 0.0037,  ..., 0.0036, 0.0041, 0.0031],
          [0.0043, 0.0046, 0.0045,  ..., 0.0034, 0.0028, 0.0032],
          ...,
          [0.0043, 0.0040, 0.0041,  ..., 0.0049, 0.0044, 0.0040],
          [0.0034, 0.0043, 0.0038,  ..., 0.0038, 0.0041, 0.0041],
          [0.0034, 0.0041, 0.0037,  ..., 0.0042, 0.0053, 0.0039]],

         [[0.0043, 0.0027, 0.0025,  ..., 0.0035, 0.0036, 0.0034],
          [0.0030, 0.0030, 0.0035,  ..., 0.0031, 0.0038, 0.0046],
          [0.0032, 0.0045, 0.0044,  ..., 0.0035, 0.0035, 0.0040],
          ...,
          [0.0040, 0.0031, 0.0046,  ..., 0.0037, 0.0034, 0.0029],
          [0.0033, 0.0039, 0.0027,  ..., 0.0042, 0.0030, 0.0040],
          [0.0037, 0.0049, 0.0032,  ..., 0.0028, 0.0039, 0.0048]]]]) 22896944812576
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0024, 0.0043, 0.0054,  ..., 0.0034, 0.0034, 0.0049],
          [0.0034, 0.0034, 0.0041,  ..., 0.0031, 0.0053, 0.0050],
          [0.0029, 0.0052, 0.0044,  ..., 0.0050, 0.0039, 0.0037],
          ...,
          [0.0039, 0.0039, 0.0037,  ..., 0.0035, 0.0033, 0.0030],
          [0.0050, 0.0036, 0.0038,  ..., 0.0045, 0.0043, 0.0049],
          [0.0034, 0.0041, 0.0043,  ..., 0.0034, 0.0042, 0.0027]],

         [[0.0033, 0.0037, 0.0050,  ..., 0.0034, 0.0041, 0.0036],
          [0.0037, 0.0035, 0.0035,  ..., 0.0038, 0.0035, 0.0037],
          [0.0043, 0.0052, 0.0031,  ..., 0.0035, 0.0037, 0.0027],
          ...,
          [0.0033, 0.0045, 0.0046,  ..., 0.0051, 0.0056, 0.0037],
          [0.0031, 0.0035, 0.0049,  ..., 0.0034, 0.0041, 0.0039],
          [0.0059, 0.0039, 0.0042,  ..., 0.0038, 0.0028, 0.0034]],

         [[0.0034, 0.0037, 0.0039,  ..., 0.0045, 0.0031, 0.0036],
          [0.0035, 0.0040, 0.0048,  ..., 0.0045, 0.0039, 0.0039],
          [0.0029, 0.0040, 0.0031,  ..., 0.0044, 0.0049, 0.0040],
          ...,
          [0.0033, 0.0033, 0.0025,  ..., 0.0035, 0.0043, 0.0034],
          [0.0040, 0.0043, 0.0036,  ..., 0.0046, 0.0035, 0.0038],
          [0.0046, 0.0049, 0.0038,  ..., 0.0044, 0.0033, 0.0040]],

         ...,

         [[0.0032, 0.0032, 0.0037,  ..., 0.0032, 0.0034, 0.0041],
          [0.0046, 0.0039, 0.0034,  ..., 0.0050, 0.0037, 0.0031],
          [0.0027, 0.0039, 0.0039,  ..., 0.0036, 0.0030, 0.0046],
          ...,
          [0.0033, 0.0031, 0.0034,  ..., 0.0036, 0.0038, 0.0042],
          [0.0042, 0.0040, 0.0030,  ..., 0.0040, 0.0044, 0.0042],
          [0.0050, 0.0036, 0.0036,  ..., 0.0036, 0.0036, 0.0036]],

         [[0.0042, 0.0037, 0.0032,  ..., 0.0033, 0.0035, 0.0037],
          [0.0039, 0.0036, 0.0037,  ..., 0.0036, 0.0041, 0.0031],
          [0.0043, 0.0046, 0.0045,  ..., 0.0034, 0.0028, 0.0032],
          ...,
          [0.0043, 0.0040, 0.0041,  ..., 0.0049, 0.0044, 0.0040],
          [0.0034, 0.0043, 0.0038,  ..., 0.0038, 0.0041, 0.0041],
          [0.0034, 0.0041, 0.0037,  ..., 0.0042, 0.0053, 0.0039]],

         [[0.0043, 0.0027, 0.0025,  ..., 0.0035, 0.0036, 0.0034],
          [0.0030, 0.0030, 0.0035,  ..., 0.0031, 0.0038, 0.0046],
          [0.0032, 0.0045, 0.0044,  ..., 0.0035, 0.0035, 0.0040],
          ...,
          [0.0040, 0.0031, 0.0046,  ..., 0.0037, 0.0034, 0.0029],
          [0.0033, 0.0039, 0.0027,  ..., 0.0042, 0.0030, 0.0040],
          [0.0037, 0.0049, 0.0032,  ..., 0.0028, 0.0039, 0.0048]]]]), modified_attrs={}, prev=None) 22896944869632
tracing opcode RETURN_VALUE None pc=74 frame=3(0x6d157e0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x1311fa60)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x1311fa60)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=536 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=538 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=540 frame=11(0x1311fa60)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=548 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=550 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=552 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=554 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=556 frame=11(0x1311fa60)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=560 frame=11(0x1311fa60)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=568 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=570 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=572 frame=11(0x1311fa60)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x1311fa60)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x1311fa60)
tracing opcode LOAD_CONST None pc=578 frame=11(0x1311fa60)
tracing opcode BINARY_ADD None pc=580 frame=11(0x1311fa60)
tracing opcode STORE_FAST None pc=582 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x1311fa60)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x1311fa60)
tracing opcode LOAD_FAST None pc=588 frame=11(0x1311fa60)
tracing opcode CALL_METHOD None pc=590 frame=11(0x1311fa60)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x1311fa60)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x1311fa60)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x1311fa60)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x1311fa60)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_191 : [#users=1] = placeholder[target=tensor_191]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_191,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_195 : [#users=1] = placeholder[target=tensor_195]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_195, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_196 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_196, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_207 : [#users=1] = placeholder[target=tensor_207]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_207, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x1311fa60)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x1312a8d0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x1312a8d0)
tracing opcode LOAD_CONST None pc=46 frame=10(0x1312a8d0)
tracing opcode IS_OP None pc=48 frame=10(0x1312a8d0)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x1312a8d0)
tracing opcode STORE_FAST None pc=54 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x1312a8d0)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x1312a8d0)
tracing opcode LOAD_FAST None pc=60 frame=10(0x1312a8d0)
tracing opcode LOAD_FAST None pc=62 frame=10(0x1312a8d0)
tracing opcode CALL_METHOD None pc=64 frame=10(0x1312a8d0)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x74aa850)
push tracker due to record
push tracker 16 frame 0x74aa850 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x74aa850)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x74aa850)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x74aa850 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x74aa850)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x74aa850)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x74aa850)
load fast: 22897554689808
tracing opcode LOAD_METHOD None pc=12 frame=16(0x74aa850)
tracing opcode LOAD_FAST None pc=14 frame=16(0x74aa850)
load fast: 22896944970384
tracing opcode CALL_METHOD None pc=16 frame=16(0x74aa850)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x74aa850)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x74aa850)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x74aa850)
tracing opcode LOAD_FAST None pc=24 frame=16(0x74aa850)
tracing opcode CALL_METHOD None pc=26 frame=16(0x74aa850)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0xa1c4aa0)
push tracker due to record
push tracker 3 frame 0xa1c4aa0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0xa1c4aa0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0xa1c4aa0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0xa1c4aa0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0xa1c4aa0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0xa1c4aa0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0xa1c4aa0)
load fast: 22897554689952
tracing opcode LOAD_ATTR None pc=12 frame=3(0xa1c4aa0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0xa1c4aa0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0xa1c4aa0)
load fast: 22896944577008
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0xa1c4aa0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_210 : [#users=0] = placeholder[target=tensor_210]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.1585,  0.1238, -0.0354,  ...,  0.0414,  0.0804,  0.2182],
         [ 0.1550,  0.1192, -0.0336,  ...,  0.0418,  0.0831,  0.2172],
         [ 0.1528,  0.1192, -0.0281,  ...,  0.0344,  0.0817,  0.2106],
         ...,
         [ 0.1593,  0.1230, -0.0250,  ...,  0.0317,  0.0829,  0.2198],
         [ 0.1560,  0.1281, -0.0294,  ...,  0.0383,  0.0820,  0.2180],
         [ 0.1598,  0.1213, -0.0314,  ...,  0.0311,  0.0807,  0.2114]]]), modified_attrs={}, prev=None) 22896944499008 22896944577008
obj: tensor([[[ 0.1585,  0.1238, -0.0354,  ...,  0.0414,  0.0804,  0.2182],
         [ 0.1550,  0.1192, -0.0336,  ...,  0.0418,  0.0831,  0.2172],
         [ 0.1528,  0.1192, -0.0281,  ...,  0.0344,  0.0817,  0.2106],
         ...,
         [ 0.1593,  0.1230, -0.0250,  ...,  0.0317,  0.0829,  0.2198],
         [ 0.1560,  0.1281, -0.0294,  ...,  0.0383,  0.0820,  0.2180],
         [ 0.1598,  0.1213, -0.0314,  ...,  0.0311,  0.0807,  0.2114]]]) 22896944577008
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.1585,  0.1238, -0.0354,  ...,  0.0414,  0.0804,  0.2182],
         [ 0.1550,  0.1192, -0.0336,  ...,  0.0418,  0.0831,  0.2172],
         [ 0.1528,  0.1192, -0.0281,  ...,  0.0344,  0.0817,  0.2106],
         ...,
         [ 0.1593,  0.1230, -0.0250,  ...,  0.0317,  0.0829,  0.2198],
         [ 0.1560,  0.1281, -0.0294,  ...,  0.0383,  0.0820,  0.2180],
         [ 0.1598,  0.1213, -0.0314,  ...,  0.0311,  0.0807,  0.2114]]]), modified_attrs={}, prev=None) 22896944536160
tracing opcode RETURN_VALUE None pc=74 frame=3(0xa1c4aa0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x74aa850)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x74aa850)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x74aa850)
tracing opcode LOAD_FAST None pc=34 frame=16(0x74aa850)
tracing opcode LOAD_FAST None pc=36 frame=16(0x74aa850)
load fast: 22896946321904
tracing opcode BINARY_ADD None pc=38 frame=16(0x74aa850)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x74aa850)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d32080ec40)
push tracker due to record
push tracker 2 frame 0x14d32080ec40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d32080ec40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d32080ec40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d32080ec40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d32080ec40)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d32080ec40)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d32080ec40)
load fast: 22896944519184
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d32080ec40)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d32080ec40)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d32080ec40)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d32080ec40)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d32080ec40)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d32080ec40)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d32080ec40)
record function in graph <built-in method mean of Tensor object at 0x14d31c3e9810>
func self id: 22896944519184
tracing opcode STORE_FAST None pc=36 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d32080ec40)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d32080ec40)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d32080ec40)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d32080ec40)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d32080ec40)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d32080ec40)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d32080ec40)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d32080ec40)
record function in graph <built-in method mean of Tensor object at 0x14d31c41e220>
func self id: 22896944734752
tracing opcode STORE_FAST None pc=60 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d32080ec40)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d32080ec40)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d32080ec40)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d32080ec40)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d32080ec40)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d32080ec40)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d32080ec40)
load fast: 22897554689904
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d32080ec40)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d32080ec40)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d32080ec40)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d32080ec40)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d32080ec40)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d32080ec40)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d32080ec40)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d32080ec40)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d32080ec40)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d32080ec40)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d32080ec40)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d32080ec40)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d32080ec40)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d32080ec40)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d32080ec40)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d32080ec40)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d32080ec40)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d32080ec40)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_212 : [#users=4] = placeholder[target=tensor_212]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_212,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_212, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_212, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_212, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d31c3e9810>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d32080ec40)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x74aa850)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x74aa850)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x74aa850)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_209 : [#users=1] = placeholder[target=tensor_209]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_209,), kwargs = {})
    %tensor_211 : [#users=1] = placeholder[target=tensor_211]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_211), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x74aa850)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x1312a8d0)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x1312a8d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x1312a8d0)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x1312a8d0)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_188 : [#users=2] = placeholder[target=tensor_188]
    %tensor_189 : [#users=1] = placeholder[target=tensor_189]
    %tensor_190 : [#users=1] = placeholder[target=tensor_190]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_188,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_190, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_196 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_196, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_189, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_188), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x1312a8d0)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x11a4d1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x11a4d1d0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x11a4d1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x11a4d1d0)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x11a4d1d0)
tracing opcode LOAD_FAST None pc=48 frame=9(0x11a4d1d0)
tracing opcode CALL_METHOD None pc=50 frame=9(0x11a4d1d0)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d32080ea40)
push tracker due to record
push tracker 17 frame 0x14d32080ea40 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d32080ea40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d32080ea40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d32080ea40 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d32080ea40)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d32080ea40)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d32080ea40)
load fast: 22897554690000
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d32080ea40)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d32080ea40)
load fast: 22896944737472
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d32080ea40)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d32080ea40)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d32080ea40)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d32080ea40)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d32080ea40)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d32080ea40)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x11a39960)
push tracker due to record
push tracker 18 frame 0x11a39960 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x11a39960)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x11a39960)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x11a39960 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x11a39960)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x11a39960)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x11a39960)
load fast: 22897554161776
tracing opcode LOAD_METHOD None pc=12 frame=18(0x11a39960)
tracing opcode LOAD_FAST None pc=14 frame=18(0x11a39960)
load fast: 22896874903968
tracing opcode CALL_METHOD None pc=16 frame=18(0x11a39960)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x11a39960)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_214 : [#users=1] = placeholder[target=tensor_214]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_214,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x11a39960)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d32080ea40)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d32080ea40)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d32080ea40)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_213 : [#users=1] = placeholder[target=tensor_213]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_213,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d32080ea40)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x11a4d1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x11a4d1d0)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x11a4d1d0)
tracing opcode LOAD_FAST None pc=58 frame=9(0x11a4d1d0)
tracing opcode LOAD_FAST None pc=60 frame=9(0x11a4d1d0)
tracing opcode CALL_METHOD None pc=62 frame=9(0x11a4d1d0)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x13113580)
push tracker due to record
push tracker 19 frame 0x13113580 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x13113580)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x13113580)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x13113580 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x13113580)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x13113580)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x13113580)
load fast: 22897554161824
tracing opcode LOAD_METHOD None pc=12 frame=19(0x13113580)
tracing opcode LOAD_FAST None pc=14 frame=19(0x13113580)
load fast: 22896874904688
tracing opcode CALL_METHOD None pc=16 frame=19(0x13113580)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x13113580)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x13113580)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x13113580)
tracing opcode LOAD_FAST None pc=24 frame=19(0x13113580)
tracing opcode CALL_METHOD None pc=26 frame=19(0x13113580)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d32d3fb440)
push tracker due to record
push tracker 3 frame 0x14d32d3fb440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d32d3fb440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d32d3fb440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d32d3fb440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d32d3fb440)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d32d3fb440)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d32d3fb440)
load fast: 22897554161968
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d32d3fb440)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d32d3fb440)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d32d3fb440)
load fast: 22896874958096
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d32d3fb440)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_216 : [#users=0] = placeholder[target=tensor_216]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.2924,  0.7573, -0.1619,  ...,  0.3898,  0.0538,  0.5703],
         [-0.0705, -0.0760, -0.3501,  ..., -0.0270, -0.1315,  0.5486],
         [-0.0157, -0.0014, -0.1880,  ..., -0.1093, -0.0781,  0.1874],
         ...,
         [-0.5833,  0.2479, -0.3292,  ...,  0.1116, -0.2215,  0.1286],
         [-0.3345, -0.4124, -0.0789,  ...,  0.6361, -0.7405, -0.1500],
         [-0.2666,  0.0665, -0.0939,  ..., -0.3824,  0.2284, -0.2710]]]), modified_attrs={}, prev=None) 22896874985888 22896874958096
obj: tensor([[[-0.2924,  0.7573, -0.1619,  ...,  0.3898,  0.0538,  0.5703],
         [-0.0705, -0.0760, -0.3501,  ..., -0.0270, -0.1315,  0.5486],
         [-0.0157, -0.0014, -0.1880,  ..., -0.1093, -0.0781,  0.1874],
         ...,
         [-0.5833,  0.2479, -0.3292,  ...,  0.1116, -0.2215,  0.1286],
         [-0.3345, -0.4124, -0.0789,  ...,  0.6361, -0.7405, -0.1500],
         [-0.2666,  0.0665, -0.0939,  ..., -0.3824,  0.2284, -0.2710]]]) 22896874958096
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.2924,  0.7573, -0.1619,  ...,  0.3898,  0.0538,  0.5703],
         [-0.0705, -0.0760, -0.3501,  ..., -0.0270, -0.1315,  0.5486],
         [-0.0157, -0.0014, -0.1880,  ..., -0.1093, -0.0781,  0.1874],
         ...,
         [-0.5833,  0.2479, -0.3292,  ...,  0.1116, -0.2215,  0.1286],
         [-0.3345, -0.4124, -0.0789,  ...,  0.6361, -0.7405, -0.1500],
         [-0.2666,  0.0665, -0.0939,  ..., -0.3824,  0.2284, -0.2710]]]), modified_attrs={}, prev=None) 22896874983968
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d32d3fb440)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x13113580)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x13113580)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x13113580)
tracing opcode LOAD_FAST None pc=34 frame=19(0x13113580)
tracing opcode LOAD_FAST None pc=36 frame=19(0x13113580)
load fast: 22896944737472
tracing opcode BINARY_ADD None pc=38 frame=19(0x13113580)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x13113580)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14a02a60)
push tracker due to record
push tracker 2 frame 0x14a02a60 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14a02a60)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14a02a60)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14a02a60 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14a02a60)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14a02a60)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14a02a60)
load fast: 22896874521680
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14a02a60)
tracing opcode STORE_FAST None pc=14 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14a02a60)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14a02a60)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14a02a60)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14a02a60)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14a02a60)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14a02a60)
record function in graph <built-in method mean of Tensor object at 0x14d318128450>
func self id: 22896874521680
tracing opcode STORE_FAST None pc=36 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14a02a60)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14a02a60)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14a02a60)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14a02a60)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14a02a60)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14a02a60)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14a02a60)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14a02a60)
record function in graph <built-in method mean of Tensor object at 0x14d318128900>
func self id: 22896874522880
tracing opcode STORE_FAST None pc=60 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14a02a60)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14a02a60)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14a02a60)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14a02a60)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14a02a60)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14a02a60)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14a02a60)
load fast: 22897554161920
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14a02a60)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14a02a60)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14a02a60)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14a02a60)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14a02a60)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14a02a60)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14a02a60)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14a02a60)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14a02a60)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14a02a60)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14a02a60)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14a02a60)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14a02a60)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14a02a60)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14a02a60)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14a02a60)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14a02a60)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14a02a60)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_218 : [#users=4] = placeholder[target=tensor_218]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_218,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_218, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_218, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_218, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d318128450>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14a02a60)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x13113580)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x13113580)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x13113580)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_215 : [#users=1] = placeholder[target=tensor_215]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_215,), kwargs = {})
    %tensor_217 : [#users=1] = placeholder[target=tensor_217]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_217), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x13113580)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x11a4d1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x11a4d1d0)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x11a4d1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x11a4d1d0)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x11a4d1d0)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_185 : [#users=2] = placeholder[target=tensor_185]
    %tensor_186 : [#users=1] = placeholder[target=tensor_186]
    %tensor_187 : [#users=1] = placeholder[target=tensor_187]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_185,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_187, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_196 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_196, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_186, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_185), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x11a4d1d0)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x149ff1a0)
push tracker due to record
push tracker 9 frame 0x149ff1a0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x149ff1a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x149ff1a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x149ff1a0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x149ff1a0)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x149ff1a0)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x149ff1a0)
load fast: 22897554162016
tracing opcode LOAD_ATTR None pc=12 frame=9(0x149ff1a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x149ff1a0)
load fast: 22896874597088
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x149ff1a0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x149ff1a0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x149ff1a0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x149ff1a0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x149ff1a0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x149ff1a0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x149ff1a0)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0xea70cd0)
push tracker due to record
push tracker 10 frame 0xea70cd0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0xea70cd0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0xea70cd0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0xea70cd0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0xea70cd0)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0xea70cd0)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0xea70cd0)
load fast: 22897554162064
tracing opcode LOAD_ATTR None pc=12 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0xea70cd0)
load fast: 22896874597088
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0xea70cd0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0xea70cd0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0xea70cd0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0xea70cd0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0xea70cd0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0xea70cd0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0xea70cd0)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0xd1821c0)
push tracker due to record
push tracker 11 frame 0xd1821c0 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0xd1821c0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0xd1821c0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0xd1821c0 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0xd1821c0)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0xd1821c0)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0xd1821c0)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0xd1821c0)
tracing opcode IS_OP None pc=16 frame=11(0xd1821c0)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0xd1821c0)
load fast: 22897554162112
tracing opcode LOAD_METHOD None pc=22 frame=11(0xd1821c0)
tracing opcode LOAD_DEREF None pc=24 frame=11(0xd1821c0)
load fast: 22896874597088
tracing opcode CALL_METHOD None pc=26 frame=11(0xd1821c0)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=32 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=34 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=36 frame=11(0xd1821c0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x160d9e50)
push tracker due to record
push tracker 12 frame 0x160d9e50 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x160d9e50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x160d9e50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x160d9e50 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x160d9e50)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x160d9e50)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x160d9e50)
load fast: 22896874164608
tracing opcode LOAD_METHOD None pc=12 frame=12(0x160d9e50)
tracing opcode CALL_METHOD None pc=14 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=16 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=18 frame=12(0x160d9e50)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x160d9e50)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x160d9e50)
tracing opcode LOAD_FAST None pc=24 frame=12(0x160d9e50)
load fast: 22897554162112
tracing opcode LOAD_ATTR None pc=26 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=28 frame=12(0x160d9e50)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x160d9e50)
tracing opcode BINARY_ADD None pc=32 frame=12(0x160d9e50)
tracing opcode STORE_FAST None pc=34 frame=12(0x160d9e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x160d9e50)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x160d9e50)
tracing opcode LOAD_FAST None pc=40 frame=12(0x160d9e50)
tracing opcode CALL_METHOD None pc=42 frame=12(0x160d9e50)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x160d9e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x160d9e50)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=50 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=52 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=54 frame=12(0x160d9e50)
tracing opcode LOAD_CONST None pc=56 frame=12(0x160d9e50)
tracing opcode CALL_METHOD None pc=58 frame=12(0x160d9e50)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x160d9e50)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_226 : [#users=1] = placeholder[target=tensor_226]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_226, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x160d9e50)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=40 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=42 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=44 frame=11(0xd1821c0)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0xd1821c0)
record function in graph <built-in method chunk of Tensor object at 0x14d3180de040>
func self id: 22896874217536
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0xd1821c0)
sub_value 22896874165248 tensor([[[[-0.0894,  0.8865,  0.3516,  ...,  0.0276,  0.6458, -0.5450],
          [-0.1143, -0.6041,  0.2436,  ..., -0.8939, -0.6130, -0.2884],
          [-0.6191, -0.1366,  0.4659,  ..., -0.4882,  0.5378, -0.1084],
          ...,
          [ 0.2193, -0.1798,  0.8218,  ...,  0.3849, -0.0905,  0.3276],
          [-1.3385, -0.4024,  0.3911,  ..., -0.5082, -0.2647,  1.0006],
          [ 0.5529,  0.0306,  0.0045,  ...,  0.2105,  0.1124, -0.4207]],

         [[ 0.0990,  0.0308, -0.1957,  ...,  0.1993,  0.3811, -0.7369],
          [ 0.5710, -0.1376, -0.3818,  ...,  0.9881, -0.4257,  0.9946],
          [ 0.3060,  0.5888,  0.4182,  ...,  1.0008,  0.7877, -0.6934],
          ...,
          [ 0.6231, -0.1473,  0.3839,  ...,  0.3123, -0.2605, -0.8654],
          [ 0.6153,  0.6995, -0.6319,  ...,  1.3168, -0.4072,  0.0520],
          [-0.2085,  0.2037,  0.7252,  ..., -0.7889, -0.2903, -0.5596]],

         [[ 0.2466, -0.8062,  0.8388,  ..., -1.1733,  0.9404,  0.3978],
          [ 0.2644, -0.1789, -0.2512,  ...,  0.1824,  0.6215, -0.8880],
          [-0.2557,  0.1731,  0.6915,  ..., -0.1888,  0.8671,  0.3716],
          ...,
          [-0.2179,  0.5654, -0.3342,  ..., -0.1709,  0.4033, -0.1560],
          [-0.6010, -0.3937, -0.5244,  ...,  0.7357,  0.0517,  0.3217],
          [-0.6131, -0.1084, -0.0602,  ...,  0.4778,  0.0752,  0.1042]],

         ...,

         [[-0.3185, -0.8209,  0.9937,  ..., -0.3743,  0.1440,  0.1702],
          [-0.1853,  0.7761, -0.6303,  ...,  0.8845, -0.2396,  0.2907],
          [-0.1539,  0.4627, -0.0455,  ...,  0.9428,  1.0341, -0.2668],
          ...,
          [ 0.5685, -0.3814,  0.4104,  ...,  1.1338,  0.1498, -0.4849],
          [-0.6356,  0.4566, -0.1857,  ...,  0.1974, -0.8280,  1.0995],
          [-0.2755,  0.3292,  0.2284,  ...,  0.1294,  0.0564, -0.1043]],

         [[-0.8335,  0.4858,  1.1560,  ...,  1.3428, -0.0812,  0.0360],
          [ 0.7262, -0.1057,  0.0052,  ...,  0.4149, -0.4995,  0.6510],
          [-0.6356,  0.0790,  0.2647,  ..., -1.3968, -0.0812, -0.9795],
          ...,
          [-0.4357, -0.2083, -0.0306,  ...,  0.0253,  0.9151,  0.7483],
          [ 0.7021,  0.0118,  0.5228,  ..., -0.1197, -0.0654,  0.3093],
          [ 0.5784, -1.0267, -0.6300,  ..., -0.6303,  0.3335,  0.4692]],

         [[-0.1470, -0.3708, -0.4311,  ..., -0.1307,  0.0362,  0.8234],
          [-0.1655, -0.6670,  0.4311,  ...,  0.1882,  0.6017, -0.4543],
          [-0.0159, -0.8277,  0.2882,  ...,  0.6937, -0.1475,  0.0189],
          ...,
          [-0.6561,  0.6114, -0.3222,  ...,  0.2896,  0.7621, -0.2236],
          [-0.5718, -0.5732,  0.3935,  ..., -0.4053, -0.3617, -1.0787],
          [-0.3889, -0.5252,  0.3357,  ...,  0.1057,  0.2037, -0.1945]]]])
sub_value 22896874168208 tensor([[[[ 6.3479e-01, -1.3445e+00, -2.6783e-01,  ..., -2.0488e-01,
           -3.1905e-01,  2.3318e-01],
          [-7.7069e-01,  1.3992e-01, -7.3186e-01,  ...,  1.3571e+00,
            3.9760e-02, -6.1846e-01],
          [-3.0606e-01,  4.5444e-02,  9.8481e-01,  ...,  1.3765e-01,
           -8.7179e-02,  6.3588e-03],
          ...,
          [-1.7600e-01, -5.8973e-02, -1.4374e+00,  ..., -2.8708e-01,
            2.9355e-01,  1.0832e-01],
          [ 7.2358e-02,  3.0963e-01, -1.8576e-01,  ..., -2.5889e-01,
           -2.4737e-01, -5.2232e-01],
          [-9.1710e-01, -7.7253e-01,  1.5450e+00,  ..., -1.0816e-01,
            8.7242e-01, -1.4420e+00]],

         [[ 2.5324e-02, -1.3133e+00, -7.9691e-01,  ...,  2.6933e-01,
           -5.5562e-01, -5.0052e-01],
          [ 3.8945e-01, -7.0309e-01,  5.2027e-01,  ..., -7.6909e-02,
            1.0617e-01, -5.9641e-01],
          [ 4.0116e-02,  3.4033e-01, -1.0941e+00,  ..., -2.0629e-02,
           -1.2294e+00, -6.7795e-01],
          ...,
          [-1.5044e-01, -6.3801e-01,  1.1970e-01,  ..., -4.1928e-02,
            4.1450e-01, -6.6680e-01],
          [ 4.8185e-01,  9.0699e-02,  4.9409e-01,  ...,  4.3439e-01,
           -6.0136e-01, -8.6895e-01],
          [ 6.8508e-01, -6.6360e-01,  6.6287e-01,  ...,  9.1449e-01,
           -9.2140e-01, -3.7933e-01]],

         [[ 3.7701e-01,  2.8359e-01, -4.4149e-01,  ..., -2.3296e-01,
            8.6685e-01, -6.2901e-01],
          [ 3.3019e-01, -9.3517e-01, -4.8944e-01,  ...,  1.8885e-01,
            1.6653e+00, -2.4829e-01],
          [ 1.6419e-01, -7.4312e-03,  3.5807e-01,  ...,  3.1467e-01,
           -2.1736e-01, -9.6780e-01],
          ...,
          [-1.2510e-01, -7.8632e-01,  5.3131e-01,  ...,  6.0191e-01,
            2.5849e-02, -5.8141e-01],
          [ 7.3190e-01, -2.2319e-01, -8.0772e-01,  ...,  2.4359e-01,
            6.5323e-01, -4.3691e-01],
          [ 9.9027e-01,  1.6863e-02,  1.6368e+00,  ..., -6.7569e-01,
           -1.4458e-03,  1.2871e-01]],

         ...,

         [[ 2.5485e-02, -2.5539e-01,  1.4954e-01,  ...,  7.8438e-01,
            6.3478e-01,  1.2875e-01],
          [ 4.7174e-02,  1.3435e-01,  2.4072e-01,  ..., -1.5753e+00,
           -4.7117e-01, -1.7340e+00],
          [ 7.9746e-01,  5.1201e-01,  3.1704e-01,  ...,  7.1936e-02,
           -1.2849e+00,  7.6361e-01],
          ...,
          [ 8.9123e-01, -6.0310e-01,  4.0019e-02,  ...,  9.5552e-02,
           -3.2191e-01,  2.5163e-01],
          [ 8.3610e-01,  1.9932e-01,  9.2570e-01,  ..., -1.7607e-01,
           -6.2716e-01, -1.8497e-01],
          [ 1.1362e+00, -3.8470e-01, -2.0378e-01,  ...,  2.3173e-01,
           -1.5113e-01,  5.6392e-01]],

         [[-1.6492e-01, -4.2555e-01, -7.4909e-01,  ...,  8.0452e-02,
           -2.1040e-01, -4.5700e-01],
          [ 1.4608e-01,  2.5584e-01,  6.4374e-01,  ..., -1.7661e-01,
            9.4609e-01,  3.3838e-01],
          [ 3.5187e-02,  5.1934e-01,  3.6665e-01,  ...,  6.5330e-01,
            1.7763e-01, -1.1532e+00],
          ...,
          [-1.7670e-01,  5.5596e-01,  1.2935e+00,  ...,  8.7357e-01,
            7.6128e-01, -4.0965e-01],
          [ 2.4082e-01,  3.0108e-01, -4.5032e-01,  ...,  1.3646e-01,
           -6.0316e-01,  5.7521e-01],
          [ 5.3766e-01,  5.8463e-01,  2.1114e-01,  ..., -4.2714e-01,
           -4.1815e-01, -5.5799e-01]],

         [[ 6.2320e-02, -1.4924e-01,  1.5181e-01,  ..., -1.5345e-01,
           -3.9555e-01, -7.9880e-02],
          [-4.7234e-01,  5.4253e-01, -7.7181e-02,  ..., -8.0639e-01,
           -2.9512e-01,  4.1727e-01],
          [-3.1365e-01, -6.7459e-01, -3.5257e-01,  ...,  6.6984e-01,
           -7.2818e-01, -1.4207e-01],
          ...,
          [-1.8887e-01,  2.4848e-01, -2.0245e-01,  ...,  1.4975e-01,
           -1.3237e+00, -1.4381e-01],
          [ 1.8621e-01,  3.2164e-01, -4.4113e-01,  ..., -6.5423e-01,
           -1.2101e+00,  5.7925e-01],
          [-2.2843e-01, -1.0135e-01, -1.3738e-01,  ...,  4.7045e-01,
           -1.0761e+00,  1.9734e-01]]]])
sub_value 22896874167168 tensor([[[[ 1.4009,  0.8886, -0.3890,  ...,  0.2997,  0.8492, -0.2030],
          [-0.4890,  0.8026,  0.1665,  ...,  0.2671,  0.2089, -0.1024],
          [ 0.0780,  0.2047, -0.7690,  ...,  0.2207, -0.8574,  0.4524],
          ...,
          [ 0.2325,  0.1919,  0.3734,  ...,  0.2846, -0.1505,  0.6785],
          [ 0.0704,  0.0386, -0.1628,  ...,  0.1816, -0.0073,  0.0670],
          [ 0.4743, -0.0171,  0.4006,  ..., -0.7865, -0.4620,  0.0853]],

         [[-0.1280,  0.6714,  0.6126,  ...,  0.3495,  0.5579,  0.0405],
          [-0.4224, -0.2304, -0.5040,  ...,  0.7177,  0.3357,  0.1386],
          [-0.6660, -0.5800,  0.3214,  ..., -0.4226,  0.1132,  0.3361],
          ...,
          [-0.4327,  0.3495,  0.2940,  ...,  0.6193,  0.3973, -0.3993],
          [ 0.5401, -0.4156,  0.6153,  ...,  0.6372,  0.2716, -0.6823],
          [ 0.1372, -0.7679, -0.0394,  ..., -0.2127,  0.3440, -0.0395]],

         [[-0.1816,  0.7357,  0.3770,  ..., -0.2912,  0.2839, -0.2633],
          [-0.3902, -0.3742, -0.3632,  ..., -0.1725,  0.0330, -0.3814],
          [-0.8300,  0.3758, -0.1596,  ...,  0.9613,  0.2529,  0.5140],
          ...,
          [-0.8254,  0.3849,  0.9033,  ..., -0.0334, -0.6518, -0.7532],
          [-0.4869,  0.3048,  0.8429,  ..., -0.4275,  0.3951,  0.5348],
          [-0.3631, -1.3378,  0.3468,  ..., -0.3653, -0.3857,  0.3051]],

         ...,

         [[ 0.2921, -0.7699,  0.8050,  ...,  0.2834,  0.2731, -0.7115],
          [ 0.5891,  0.3261,  0.6670,  ..., -0.3163, -0.3323, -1.6900],
          [-0.5411, -0.3576, -0.1050,  ...,  0.7106, -0.5751,  1.3689],
          ...,
          [-0.7689, -0.2378, -0.9946,  ...,  0.8930,  1.1580, -0.5014],
          [-1.1408, -0.6247, -0.2601,  ...,  0.4042, -0.1387,  0.1633],
          [-0.6048, -0.0821, -0.7362,  ...,  1.6956, -0.3709, -0.0375]],

         [[ 0.5392,  1.1387, -0.2829,  ...,  0.6088, -0.1956,  0.2808],
          [-0.8023,  0.3748,  0.7702,  ...,  0.2076, -0.4893, -0.4558],
          [ 0.6242,  0.2780,  0.4812,  ...,  0.4631, -0.2259,  0.4359],
          ...,
          [ 0.2245,  1.0668,  0.0575,  ..., -0.1441,  0.2229, -0.4966],
          [-0.1316,  1.1812,  0.1181,  ..., -0.1075,  0.2617, -0.2602],
          [-0.3249,  0.7436, -1.1191,  ..., -0.7235,  1.1071, -0.2346]],

         [[ 0.1420, -0.3734,  0.0033,  ..., -0.2857, -0.4629, -0.3932],
          [ 1.1428,  0.4415,  0.3096,  ...,  0.5290,  0.3200,  1.2116],
          [ 0.5296,  0.1707,  0.1973,  ...,  0.9560, -0.3532, -0.1367],
          ...,
          [ 0.7342, -1.2632,  1.2621,  ...,  0.7017,  0.6148, -0.3154],
          [ 0.4714, -0.7606,  0.0484,  ...,  1.4902,  0.7064,  0.6419],
          [ 0.3191,  0.3871, -0.3013,  ...,  0.0685,  0.2748,  0.3269]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0xd1821c0)
tracing opcode STORE_FAST None pc=52 frame=11(0xd1821c0)
tracing opcode STORE_FAST None pc=54 frame=11(0xd1821c0)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0xd1821c0)
tracing opcode LOAD_DEREF None pc=224 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=226 frame=11(0xd1821c0)
tracing opcode LOAD_DEREF None pc=228 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=230 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=232 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=234 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=236 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=238 frame=11(0xd1821c0)
tracing opcode BUILD_SLICE None pc=240 frame=11(0xd1821c0)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0xd1821c0)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0xd1821c0)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0xd1821c0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d31c4dac40)
push tracker due to record
push tracker 12 frame 0x14d31c4dac40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d31c4dac40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d31c4dac40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d31c4dac40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d31c4dac40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d31c4dac40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d31c4dac40)
load fast: 22896874218176
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d31c4dac40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d31c4dac40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d31c4dac40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d31c4dac40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d31c4dac40)
load fast: 22897554162112
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d31c4dac40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d31c4dac40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d31c4dac40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d31c4dac40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d31c4dac40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d31c4dac40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d31c4dac40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d31c4dac40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d31c4dac40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d31c4dac40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d31c4dac40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d31c4dac40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d31c4dac40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d31c4dac40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_227 : [#users=1] = placeholder[target=tensor_227]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_227, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d31c4dac40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0xd1821c0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0xd1821c0)
tracing opcode LOAD_DEREF None pc=254 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=256 frame=11(0xd1821c0)
tracing opcode LOAD_DEREF None pc=258 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=260 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=262 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=264 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=266 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=268 frame=11(0xd1821c0)
tracing opcode BUILD_SLICE None pc=270 frame=11(0xd1821c0)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0xd1821c0)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0xd1821c0)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0xd1821c0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xe826870)
push tracker due to record
push tracker 12 frame 0xe826870 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xe826870)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xe826870)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0xe826870 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xe826870)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xe826870)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xe826870)
load fast: 22896874219936
tracing opcode LOAD_METHOD None pc=12 frame=12(0xe826870)
tracing opcode CALL_METHOD None pc=14 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=16 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=18 frame=12(0xe826870)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xe826870)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xe826870)
tracing opcode LOAD_FAST None pc=24 frame=12(0xe826870)
load fast: 22897554162112
tracing opcode LOAD_ATTR None pc=26 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=28 frame=12(0xe826870)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xe826870)
tracing opcode BINARY_ADD None pc=32 frame=12(0xe826870)
tracing opcode STORE_FAST None pc=34 frame=12(0xe826870)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xe826870)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xe826870)
tracing opcode LOAD_FAST None pc=40 frame=12(0xe826870)
tracing opcode CALL_METHOD None pc=42 frame=12(0xe826870)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xe826870)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xe826870)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=50 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=52 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=54 frame=12(0xe826870)
tracing opcode LOAD_CONST None pc=56 frame=12(0xe826870)
tracing opcode CALL_METHOD None pc=58 frame=12(0xe826870)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xe826870)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_228 : [#users=1] = placeholder[target=tensor_228]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_228, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xe826870)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0xd1821c0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0xd1821c0)
tracing opcode STORE_FAST None pc=284 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0xd1821c0)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0xd1821c0)
tracing opcode LOAD_DEREF None pc=290 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=292 frame=11(0xd1821c0)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0xd1821c0)
tracing opcode BINARY_ADD None pc=296 frame=11(0xd1821c0)
tracing opcode STORE_FAST None pc=298 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=302 frame=11(0xd1821c0)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=306 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=308 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=310 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=312 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=314 frame=11(0xd1821c0)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=318 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=320 frame=11(0xd1821c0)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0xd1821c0)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0xd1821c0)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0xd1821c0)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0xd1821c0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=334 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=336 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=338 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=340 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=342 frame=11(0xd1821c0)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0xd1821c0)
record function in graph <built-in method to of Tensor object at 0x14d318110ea0>
func self id: 22896874426016
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0xd1821c0)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=352 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=354 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=356 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=358 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=360 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=362 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=364 frame=11(0xd1821c0)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0xd1821c0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=372 frame=11(0xd1821c0)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=380 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=382 frame=11(0xd1821c0)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0xd1821c0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d31c4da840)
push tracker due to record
push tracker 3 frame 0x14d31c4da840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d31c4da840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d31c4da840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d31c4da840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d31c4da840)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d31c4da840)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d31c4da840)
load fast: 22897554162208
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d31c4da840)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d31c4da840)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d31c4da840)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d31c4da840)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d31c4da840)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=390 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=392 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=394 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=396 frame=11(0xd1821c0)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=400 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=402 frame=11(0xd1821c0)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x160db430)
push tracker due to record
push tracker 13 frame 0x160db430 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x160db430)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x160db430)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x160db430 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x160db430)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x160db430)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x160db430)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x160db430)
tracing opcode IS_OP None pc=16 frame=13(0x160db430)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=54 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=56 frame=13(0x160db430)
tracing opcode COMPARE_OP None pc=58 frame=13(0x160db430)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=84 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=86 frame=13(0x160db430)
tracing opcode COMPARE_OP None pc=88 frame=13(0x160db430)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=96 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=98 frame=13(0x160db430)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x160db430)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x160db430)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=138 frame=13(0x160db430)
load fast: 22896874425536
tracing opcode LOAD_METHOD None pc=140 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=142 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=144 frame=13(0x160db430)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x160db430)
load fast: 22896874168208
tracing opcode LOAD_METHOD None pc=148 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=150 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=152 frame=13(0x160db430)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=156 frame=13(0x160db430)
load fast: 22897554162112
tracing opcode LOAD_ATTR None pc=158 frame=13(0x160db430)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x160db430)
tracing opcode STORE_FAST None pc=162 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=168 frame=13(0x160db430)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=172 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=176 frame=13(0x160db430)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x160db430)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=186 frame=13(0x160db430)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=190 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=194 frame=13(0x160db430)
tracing opcode BINARY_ADD None pc=196 frame=13(0x160db430)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=200 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=202 frame=13(0x160db430)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x160db430)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x160db430)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x160db430)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x160db430)
tracing opcode STORE_FAST None pc=220 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=224 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x160db430)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x160db430)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=238 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=240 frame=13(0x160db430)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=248 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=250 frame=13(0x160db430)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x147b0bc0)
push tracker due to record
push tracker 12 frame 0x147b0bc0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x147b0bc0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x147b0bc0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x147b0bc0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x147b0bc0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x147b0bc0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x147b0bc0)
load fast: 22896873482576
tracing opcode LOAD_METHOD None pc=12 frame=12(0x147b0bc0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x147b0bc0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x147b0bc0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x147b0bc0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x147b0bc0)
load fast: 22897554162112
tracing opcode LOAD_ATTR None pc=26 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x147b0bc0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x147b0bc0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x147b0bc0)
tracing opcode STORE_FAST None pc=34 frame=12(0x147b0bc0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x147b0bc0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x147b0bc0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x147b0bc0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x147b0bc0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x147b0bc0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x147b0bc0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x147b0bc0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x147b0bc0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x147b0bc0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x147b0bc0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_233 : [#users=1] = placeholder[target=tensor_233]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_233, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x147b0bc0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=258 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=260 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=264 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=266 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=268 frame=13(0x160db430)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x160db430)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=278 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=280 frame=13(0x160db430)
tracing opcode BINARY_ADD None pc=282 frame=13(0x160db430)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=286 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=288 frame=13(0x160db430)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=292 frame=13(0x160db430)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=296 frame=13(0x160db430)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=304 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=306 frame=13(0x160db430)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=310 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=312 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=314 frame=13(0x160db430)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x160db430)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x160df310)
push tracker due to record
push tracker 14 frame 0x160df310 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x160df310)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x160df310)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x160df310 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x160df310)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x160df310)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x160df310)
load fast: 22896874219776
tracing opcode LOAD_METHOD None pc=12 frame=14(0x160df310)
tracing opcode LOAD_FAST None pc=14 frame=14(0x160df310)
load fast: 22896874425536
tracing opcode LOAD_METHOD None pc=16 frame=14(0x160df310)
tracing opcode LOAD_CONST None pc=18 frame=14(0x160df310)
tracing opcode CALL_METHOD None pc=20 frame=14(0x160df310)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x160df310)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x160df310)
tracing opcode LOAD_CONST None pc=26 frame=14(0x160df310)
tracing opcode CALL_METHOD None pc=28 frame=14(0x160df310)
tracing opcode LOAD_FAST None pc=30 frame=14(0x160df310)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x160df310)
tracing opcode LOAD_CONST None pc=34 frame=14(0x160df310)
tracing opcode CALL_METHOD None pc=36 frame=14(0x160df310)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x160df310)
load fast: 22896873724560
tracing opcode LOAD_METHOD None pc=40 frame=14(0x160df310)
tracing opcode LOAD_CONST None pc=42 frame=14(0x160df310)
tracing opcode CALL_METHOD None pc=44 frame=14(0x160df310)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x160df310)
tracing opcode CALL_METHOD None pc=48 frame=14(0x160df310)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x160df310)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_234 : [#users=1] = placeholder[target=tensor_234]
    %tensor_235 : [#users=0] = placeholder[target=tensor_235]
    %tensor_236 : [#users=0] = placeholder[target=tensor_236]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_234, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x160df310)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x160db430)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x160db430)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=326 frame=13(0x160db430)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x160db430)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=334 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x160db430)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x160db430)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=348 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=350 frame=13(0x160db430)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=358 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=360 frame=13(0x160db430)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14a07660)
push tracker due to record
push tracker 12 frame 0x14a07660 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14a07660)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14a07660)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14a07660 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14a07660)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14a07660)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14a07660)
load fast: 22896873560560
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14a07660)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14a07660)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14a07660)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14a07660)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14a07660)
load fast: 22897554162112
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14a07660)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14a07660)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14a07660)
tracing opcode STORE_FAST None pc=34 frame=12(0x14a07660)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14a07660)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14a07660)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14a07660)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14a07660)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14a07660)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14a07660)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14a07660)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14a07660)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14a07660)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14a07660)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_237 : [#users=1] = placeholder[target=tensor_237]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_237, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14a07660)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x160db430)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x160db430)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=374 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=378 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=380 frame=13(0x160db430)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=386 frame=13(0x160db430)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x160db430)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x160db430)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x160db430)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x160db430)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x160db430)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=404 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=406 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=408 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=412 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=414 frame=13(0x160db430)
tracing opcode COMPARE_OP None pc=416 frame=13(0x160db430)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x160db430)
tracing opcode STORE_FAST None pc=452 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=458 frame=13(0x160db430)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x160db430)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x160db430)
tracing opcode BINARY_ADD None pc=464 frame=13(0x160db430)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=468 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=470 frame=13(0x160db430)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=474 frame=13(0x160db430)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=478 frame=13(0x160db430)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=486 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=488 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=492 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=494 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=496 frame=13(0x160db430)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=500 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=504 frame=13(0x160db430)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x160db430)
record function in graph <built-in method to of Tensor object at 0x14d318047400>
func self id: 22896873600000
tracing opcode CALL_METHOD None pc=508 frame=13(0x160db430)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x160db430)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=518 frame=13(0x160db430)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=522 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=524 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=526 frame=13(0x160db430)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x160db430)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0xe8263c0)
push tracker due to record
push tracker 15 frame 0xe8263c0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0xe8263c0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0xe8263c0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0xe8263c0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0xe8263c0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0xe8263c0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0xe8263c0)
load fast: 22896873600480
tracing opcode LOAD_METHOD None pc=12 frame=15(0xe8263c0)
tracing opcode LOAD_FAST None pc=14 frame=15(0xe8263c0)
load fast: 22896874425536
tracing opcode LOAD_METHOD None pc=16 frame=15(0xe8263c0)
tracing opcode LOAD_CONST None pc=18 frame=15(0xe8263c0)
tracing opcode CALL_METHOD None pc=20 frame=15(0xe8263c0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0xe8263c0)
tracing opcode LOAD_METHOD None pc=24 frame=15(0xe8263c0)
tracing opcode LOAD_CONST None pc=26 frame=15(0xe8263c0)
tracing opcode CALL_METHOD None pc=28 frame=15(0xe8263c0)
tracing opcode LOAD_FAST None pc=30 frame=15(0xe8263c0)
load fast: 22896874168208
tracing opcode LOAD_METHOD None pc=32 frame=15(0xe8263c0)
tracing opcode LOAD_CONST None pc=34 frame=15(0xe8263c0)
tracing opcode CALL_METHOD None pc=36 frame=15(0xe8263c0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0xe8263c0)
tracing opcode LOAD_METHOD None pc=40 frame=15(0xe8263c0)
tracing opcode LOAD_CONST None pc=42 frame=15(0xe8263c0)
tracing opcode CALL_METHOD None pc=44 frame=15(0xe8263c0)
tracing opcode BUILD_LIST None pc=46 frame=15(0xe8263c0)
tracing opcode CALL_METHOD None pc=48 frame=15(0xe8263c0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0xe8263c0)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_238 : [#users=1] = placeholder[target=tensor_238]
    %tensor_239 : [#users=0] = placeholder[target=tensor_239]
    %tensor_240 : [#users=0] = placeholder[target=tensor_240]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_238, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0xe8263c0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x160db430)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x160db430)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=538 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x160db430)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=548 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=550 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=552 frame=13(0x160db430)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x160db430)
tracing opcode LOAD_CONST None pc=556 frame=13(0x160db430)
tracing opcode CALL_METHOD None pc=558 frame=13(0x160db430)
tracing opcode COMPARE_OP None pc=560 frame=13(0x160db430)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x160db430)
tracing opcode LOAD_FAST None pc=626 frame=13(0x160db430)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x160db430)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x160db430)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x160db430)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x160db430)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_230 : [#users=1] = placeholder[target=tensor_230]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_230, 1), kwargs = {})
    %tensor_231 : [#users=1] = placeholder[target=tensor_231]
    %tensor_232 : [#users=1] = placeholder[target=tensor_232]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_231, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_232, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x160db430)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=408 frame=11(0xd1821c0)
tracing opcode IS_OP None pc=410 frame=11(0xd1821c0)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=418 frame=11(0xd1821c0)
tracing opcode BINARY_ADD None pc=420 frame=11(0xd1821c0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=426 frame=11(0xd1821c0)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=468 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=470 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=472 frame=11(0xd1821c0)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=476 frame=11(0xd1821c0)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=482 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=484 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=486 frame=11(0xd1821c0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x131188f0)
push tracker due to record
push tracker 3 frame 0x131188f0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x131188f0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x131188f0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x131188f0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x131188f0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x131188f0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x131188f0)
load fast: 22897554162352
tracing opcode LOAD_ATTR None pc=12 frame=3(0x131188f0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x131188f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x131188f0)
load fast: 22896873602720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x131188f0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_242 : [#users=0] = placeholder[target=tensor_242]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0030, 0.0061, 0.0033,  ..., 0.0042, 0.0041, 0.0038],
          [0.0042, 0.0043, 0.0046,  ..., 0.0039, 0.0035, 0.0029],
          [0.0033, 0.0038, 0.0037,  ..., 0.0034, 0.0043, 0.0053],
          ...,
          [0.0034, 0.0033, 0.0047,  ..., 0.0031, 0.0040, 0.0040],
          [0.0034, 0.0037, 0.0036,  ..., 0.0028, 0.0025, 0.0035],
          [0.0037, 0.0049, 0.0040,  ..., 0.0041, 0.0040, 0.0042]],

         [[0.0052, 0.0048, 0.0046,  ..., 0.0040, 0.0033, 0.0041],
          [0.0037, 0.0036, 0.0039,  ..., 0.0035, 0.0042, 0.0043],
          [0.0043, 0.0034, 0.0039,  ..., 0.0041, 0.0045, 0.0037],
          ...,
          [0.0038, 0.0038, 0.0031,  ..., 0.0034, 0.0045, 0.0051],
          [0.0037, 0.0044, 0.0042,  ..., 0.0031, 0.0041, 0.0046],
          [0.0033, 0.0041, 0.0041,  ..., 0.0044, 0.0037, 0.0051]],

         [[0.0036, 0.0054, 0.0036,  ..., 0.0036, 0.0047, 0.0045],
          [0.0038, 0.0032, 0.0055,  ..., 0.0040, 0.0042, 0.0051],
          [0.0041, 0.0040, 0.0038,  ..., 0.0037, 0.0039, 0.0041],
          ...,
          [0.0038, 0.0029, 0.0039,  ..., 0.0036, 0.0031, 0.0043],
          [0.0039, 0.0035, 0.0035,  ..., 0.0037, 0.0042, 0.0028],
          [0.0048, 0.0041, 0.0036,  ..., 0.0036, 0.0035, 0.0037]],

         ...,

         [[0.0031, 0.0032, 0.0026,  ..., 0.0042, 0.0042, 0.0044],
          [0.0045, 0.0034, 0.0035,  ..., 0.0054, 0.0041, 0.0043],
          [0.0047, 0.0027, 0.0032,  ..., 0.0051, 0.0040, 0.0035],
          ...,
          [0.0039, 0.0038, 0.0041,  ..., 0.0027, 0.0039, 0.0054],
          [0.0032, 0.0028, 0.0051,  ..., 0.0047, 0.0036, 0.0031],
          [0.0039, 0.0046, 0.0032,  ..., 0.0036, 0.0045, 0.0039]],

         [[0.0035, 0.0044, 0.0051,  ..., 0.0054, 0.0040, 0.0043],
          [0.0049, 0.0045, 0.0034,  ..., 0.0036, 0.0040, 0.0042],
          [0.0026, 0.0037, 0.0036,  ..., 0.0030, 0.0040, 0.0043],
          ...,
          [0.0035, 0.0042, 0.0036,  ..., 0.0037, 0.0040, 0.0039],
          [0.0049, 0.0043, 0.0048,  ..., 0.0033, 0.0062, 0.0046],
          [0.0034, 0.0031, 0.0033,  ..., 0.0039, 0.0041, 0.0036]],

         [[0.0033, 0.0038, 0.0032,  ..., 0.0042, 0.0036, 0.0036],
          [0.0044, 0.0037, 0.0042,  ..., 0.0035, 0.0036, 0.0037],
          [0.0030, 0.0044, 0.0032,  ..., 0.0055, 0.0042, 0.0039],
          ...,
          [0.0033, 0.0040, 0.0026,  ..., 0.0033, 0.0035, 0.0038],
          [0.0042, 0.0038, 0.0035,  ..., 0.0037, 0.0040, 0.0039],
          [0.0038, 0.0048, 0.0040,  ..., 0.0052, 0.0041, 0.0042]]]]), modified_attrs={}, prev=None) 22896873235360 22896873602720
obj: tensor([[[[0.0030, 0.0061, 0.0033,  ..., 0.0042, 0.0041, 0.0038],
          [0.0042, 0.0043, 0.0046,  ..., 0.0039, 0.0035, 0.0029],
          [0.0033, 0.0038, 0.0037,  ..., 0.0034, 0.0043, 0.0053],
          ...,
          [0.0034, 0.0033, 0.0047,  ..., 0.0031, 0.0040, 0.0040],
          [0.0034, 0.0037, 0.0036,  ..., 0.0028, 0.0025, 0.0035],
          [0.0037, 0.0049, 0.0040,  ..., 0.0041, 0.0040, 0.0042]],

         [[0.0052, 0.0048, 0.0046,  ..., 0.0040, 0.0033, 0.0041],
          [0.0037, 0.0036, 0.0039,  ..., 0.0035, 0.0042, 0.0043],
          [0.0043, 0.0034, 0.0039,  ..., 0.0041, 0.0045, 0.0037],
          ...,
          [0.0038, 0.0038, 0.0031,  ..., 0.0034, 0.0045, 0.0051],
          [0.0037, 0.0044, 0.0042,  ..., 0.0031, 0.0041, 0.0046],
          [0.0033, 0.0041, 0.0041,  ..., 0.0044, 0.0037, 0.0051]],

         [[0.0036, 0.0054, 0.0036,  ..., 0.0036, 0.0047, 0.0045],
          [0.0038, 0.0032, 0.0055,  ..., 0.0040, 0.0042, 0.0051],
          [0.0041, 0.0040, 0.0038,  ..., 0.0037, 0.0039, 0.0041],
          ...,
          [0.0038, 0.0029, 0.0039,  ..., 0.0036, 0.0031, 0.0043],
          [0.0039, 0.0035, 0.0035,  ..., 0.0037, 0.0042, 0.0028],
          [0.0048, 0.0041, 0.0036,  ..., 0.0036, 0.0035, 0.0037]],

         ...,

         [[0.0031, 0.0032, 0.0026,  ..., 0.0042, 0.0042, 0.0044],
          [0.0045, 0.0034, 0.0035,  ..., 0.0054, 0.0041, 0.0043],
          [0.0047, 0.0027, 0.0032,  ..., 0.0051, 0.0040, 0.0035],
          ...,
          [0.0039, 0.0038, 0.0041,  ..., 0.0027, 0.0039, 0.0054],
          [0.0032, 0.0028, 0.0051,  ..., 0.0047, 0.0036, 0.0031],
          [0.0039, 0.0046, 0.0032,  ..., 0.0036, 0.0045, 0.0039]],

         [[0.0035, 0.0044, 0.0051,  ..., 0.0054, 0.0040, 0.0043],
          [0.0049, 0.0045, 0.0034,  ..., 0.0036, 0.0040, 0.0042],
          [0.0026, 0.0037, 0.0036,  ..., 0.0030, 0.0040, 0.0043],
          ...,
          [0.0035, 0.0042, 0.0036,  ..., 0.0037, 0.0040, 0.0039],
          [0.0049, 0.0043, 0.0048,  ..., 0.0033, 0.0062, 0.0046],
          [0.0034, 0.0031, 0.0033,  ..., 0.0039, 0.0041, 0.0036]],

         [[0.0033, 0.0038, 0.0032,  ..., 0.0042, 0.0036, 0.0036],
          [0.0044, 0.0037, 0.0042,  ..., 0.0035, 0.0036, 0.0037],
          [0.0030, 0.0044, 0.0032,  ..., 0.0055, 0.0042, 0.0039],
          ...,
          [0.0033, 0.0040, 0.0026,  ..., 0.0033, 0.0035, 0.0038],
          [0.0042, 0.0038, 0.0035,  ..., 0.0037, 0.0040, 0.0039],
          [0.0038, 0.0048, 0.0040,  ..., 0.0052, 0.0041, 0.0042]]]]) 22896873602720
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0030, 0.0061, 0.0033,  ..., 0.0042, 0.0041, 0.0038],
          [0.0042, 0.0043, 0.0046,  ..., 0.0039, 0.0035, 0.0029],
          [0.0033, 0.0038, 0.0037,  ..., 0.0034, 0.0043, 0.0053],
          ...,
          [0.0034, 0.0033, 0.0047,  ..., 0.0031, 0.0040, 0.0040],
          [0.0034, 0.0037, 0.0036,  ..., 0.0028, 0.0025, 0.0035],
          [0.0037, 0.0049, 0.0040,  ..., 0.0041, 0.0040, 0.0042]],

         [[0.0052, 0.0048, 0.0046,  ..., 0.0040, 0.0033, 0.0041],
          [0.0037, 0.0036, 0.0039,  ..., 0.0035, 0.0042, 0.0043],
          [0.0043, 0.0034, 0.0039,  ..., 0.0041, 0.0045, 0.0037],
          ...,
          [0.0038, 0.0038, 0.0031,  ..., 0.0034, 0.0045, 0.0051],
          [0.0037, 0.0044, 0.0042,  ..., 0.0031, 0.0041, 0.0046],
          [0.0033, 0.0041, 0.0041,  ..., 0.0044, 0.0037, 0.0051]],

         [[0.0036, 0.0054, 0.0036,  ..., 0.0036, 0.0047, 0.0045],
          [0.0038, 0.0032, 0.0055,  ..., 0.0040, 0.0042, 0.0051],
          [0.0041, 0.0040, 0.0038,  ..., 0.0037, 0.0039, 0.0041],
          ...,
          [0.0038, 0.0029, 0.0039,  ..., 0.0036, 0.0031, 0.0043],
          [0.0039, 0.0035, 0.0035,  ..., 0.0037, 0.0042, 0.0028],
          [0.0048, 0.0041, 0.0036,  ..., 0.0036, 0.0035, 0.0037]],

         ...,

         [[0.0031, 0.0032, 0.0026,  ..., 0.0042, 0.0042, 0.0044],
          [0.0045, 0.0034, 0.0035,  ..., 0.0054, 0.0041, 0.0043],
          [0.0047, 0.0027, 0.0032,  ..., 0.0051, 0.0040, 0.0035],
          ...,
          [0.0039, 0.0038, 0.0041,  ..., 0.0027, 0.0039, 0.0054],
          [0.0032, 0.0028, 0.0051,  ..., 0.0047, 0.0036, 0.0031],
          [0.0039, 0.0046, 0.0032,  ..., 0.0036, 0.0045, 0.0039]],

         [[0.0035, 0.0044, 0.0051,  ..., 0.0054, 0.0040, 0.0043],
          [0.0049, 0.0045, 0.0034,  ..., 0.0036, 0.0040, 0.0042],
          [0.0026, 0.0037, 0.0036,  ..., 0.0030, 0.0040, 0.0043],
          ...,
          [0.0035, 0.0042, 0.0036,  ..., 0.0037, 0.0040, 0.0039],
          [0.0049, 0.0043, 0.0048,  ..., 0.0033, 0.0062, 0.0046],
          [0.0034, 0.0031, 0.0033,  ..., 0.0039, 0.0041, 0.0036]],

         [[0.0033, 0.0038, 0.0032,  ..., 0.0042, 0.0036, 0.0036],
          [0.0044, 0.0037, 0.0042,  ..., 0.0035, 0.0036, 0.0037],
          [0.0030, 0.0044, 0.0032,  ..., 0.0055, 0.0042, 0.0039],
          ...,
          [0.0033, 0.0040, 0.0026,  ..., 0.0033, 0.0035, 0.0038],
          [0.0042, 0.0038, 0.0035,  ..., 0.0037, 0.0040, 0.0039],
          [0.0038, 0.0048, 0.0040,  ..., 0.0052, 0.0041, 0.0042]]]]), modified_attrs={}, prev=None) 22896873667552
tracing opcode RETURN_VALUE None pc=74 frame=3(0x131188f0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0xd1821c0)
tracing opcode LOAD_ATTR None pc=492 frame=11(0xd1821c0)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=534 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=536 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=538 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=540 frame=11(0xd1821c0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=546 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=548 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=550 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=552 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=554 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=556 frame=11(0xd1821c0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=560 frame=11(0xd1821c0)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=566 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=568 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=570 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=572 frame=11(0xd1821c0)
tracing opcode BUILD_SLICE None pc=574 frame=11(0xd1821c0)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0xd1821c0)
tracing opcode LOAD_CONST None pc=578 frame=11(0xd1821c0)
tracing opcode BINARY_ADD None pc=580 frame=11(0xd1821c0)
tracing opcode STORE_FAST None pc=582 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0xd1821c0)
tracing opcode LOAD_METHOD None pc=586 frame=11(0xd1821c0)
tracing opcode LOAD_FAST None pc=588 frame=11(0xd1821c0)
tracing opcode CALL_METHOD None pc=590 frame=11(0xd1821c0)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0xd1821c0)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0xd1821c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0xd1821c0)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0xd1821c0)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_225 : [#users=1] = placeholder[target=tensor_225]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_225,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_229 : [#users=1] = placeholder[target=tensor_229]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_229, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_230 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_230, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_241 : [#users=1] = placeholder[target=tensor_241]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_241, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0xd1821c0)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0xea70cd0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0xea70cd0)
tracing opcode LOAD_CONST None pc=46 frame=10(0xea70cd0)
tracing opcode IS_OP None pc=48 frame=10(0xea70cd0)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0xea70cd0)
tracing opcode STORE_FAST None pc=54 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0xea70cd0)
tracing opcode LOAD_METHOD None pc=58 frame=10(0xea70cd0)
tracing opcode LOAD_FAST None pc=60 frame=10(0xea70cd0)
tracing opcode LOAD_FAST None pc=62 frame=10(0xea70cd0)
tracing opcode CALL_METHOD None pc=64 frame=10(0xea70cd0)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x160f3120)
push tracker due to record
push tracker 16 frame 0x160f3120 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x160f3120)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x160f3120)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x160f3120 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x160f3120)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x160f3120)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x160f3120)
load fast: 22897554162400
tracing opcode LOAD_METHOD None pc=12 frame=16(0x160f3120)
tracing opcode LOAD_FAST None pc=14 frame=16(0x160f3120)
load fast: 22896873249184
tracing opcode CALL_METHOD None pc=16 frame=16(0x160f3120)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x160f3120)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x160f3120)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x160f3120)
tracing opcode LOAD_FAST None pc=24 frame=16(0x160f3120)
tracing opcode CALL_METHOD None pc=26 frame=16(0x160f3120)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x13113330)
push tracker due to record
push tracker 3 frame 0x13113330 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x13113330)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x13113330)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x13113330 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x13113330)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x13113330)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x13113330)
load fast: 22897554162544
tracing opcode LOAD_ATTR None pc=12 frame=3(0x13113330)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x13113330)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x13113330)
load fast: 22896873223968
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x13113330)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_244 : [#users=0] = placeholder[target=tensor_244]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.0630,  0.1014, -0.0702,  ..., -0.0720, -0.0783,  0.1646],
         [-0.0572,  0.0937, -0.0667,  ..., -0.0724, -0.0823,  0.1663],
         [-0.0586,  0.0946, -0.0725,  ..., -0.0710, -0.0677,  0.1640],
         ...,
         [-0.0569,  0.0996, -0.0701,  ..., -0.0701, -0.0820,  0.1698],
         [-0.0598,  0.0994, -0.0676,  ..., -0.0680, -0.0770,  0.1663],
         [-0.0623,  0.0956, -0.0750,  ..., -0.0770, -0.0706,  0.1702]]]), modified_attrs={}, prev=None) 22896873330528 22896873223968
obj: tensor([[[-0.0630,  0.1014, -0.0702,  ..., -0.0720, -0.0783,  0.1646],
         [-0.0572,  0.0937, -0.0667,  ..., -0.0724, -0.0823,  0.1663],
         [-0.0586,  0.0946, -0.0725,  ..., -0.0710, -0.0677,  0.1640],
         ...,
         [-0.0569,  0.0996, -0.0701,  ..., -0.0701, -0.0820,  0.1698],
         [-0.0598,  0.0994, -0.0676,  ..., -0.0680, -0.0770,  0.1663],
         [-0.0623,  0.0956, -0.0750,  ..., -0.0770, -0.0706,  0.1702]]]) 22896873223968
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.0630,  0.1014, -0.0702,  ..., -0.0720, -0.0783,  0.1646],
         [-0.0572,  0.0937, -0.0667,  ..., -0.0724, -0.0823,  0.1663],
         [-0.0586,  0.0946, -0.0725,  ..., -0.0710, -0.0677,  0.1640],
         ...,
         [-0.0569,  0.0996, -0.0701,  ..., -0.0701, -0.0820,  0.1698],
         [-0.0598,  0.0994, -0.0676,  ..., -0.0680, -0.0770,  0.1663],
         [-0.0623,  0.0956, -0.0750,  ..., -0.0770, -0.0706,  0.1702]]]), modified_attrs={}, prev=None) 22896873355776
tracing opcode RETURN_VALUE None pc=74 frame=3(0x13113330)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x160f3120)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x160f3120)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x160f3120)
tracing opcode LOAD_FAST None pc=34 frame=16(0x160f3120)
tracing opcode LOAD_FAST None pc=36 frame=16(0x160f3120)
load fast: 22896874597088
tracing opcode BINARY_ADD None pc=38 frame=16(0x160f3120)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x160f3120)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d31810cc40)
push tracker due to record
push tracker 2 frame 0x14d31810cc40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d31810cc40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d31810cc40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d31810cc40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d31810cc40)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d31810cc40)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d31810cc40)
load fast: 22896873346848
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d31810cc40)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d31810cc40)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d31810cc40)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d31810cc40)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d31810cc40)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d31810cc40)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d31810cc40)
record function in graph <built-in method mean of Tensor object at 0x14d318009720>
func self id: 22896873346848
tracing opcode STORE_FAST None pc=36 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d31810cc40)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d31810cc40)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d31810cc40)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d31810cc40)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d31810cc40)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d31810cc40)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d31810cc40)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d31810cc40)
record function in graph <built-in method mean of Tensor object at 0x14d313d6e180>
func self id: 22896803504512
tracing opcode STORE_FAST None pc=60 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d31810cc40)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d31810cc40)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d31810cc40)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d31810cc40)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d31810cc40)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d31810cc40)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d31810cc40)
load fast: 22897554162496
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d31810cc40)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d31810cc40)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d31810cc40)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d31810cc40)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d31810cc40)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d31810cc40)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d31810cc40)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d31810cc40)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d31810cc40)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d31810cc40)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d31810cc40)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d31810cc40)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d31810cc40)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d31810cc40)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d31810cc40)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d31810cc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d31810cc40)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d31810cc40)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_246 : [#users=4] = placeholder[target=tensor_246]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_246,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_246, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_246, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_246, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d318009720>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d31810cc40)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x160f3120)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x160f3120)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x160f3120)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_243 : [#users=1] = placeholder[target=tensor_243]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_243,), kwargs = {})
    %tensor_245 : [#users=1] = placeholder[target=tensor_245]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_245), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x160f3120)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0xea70cd0)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0xea70cd0)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0xea70cd0)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0xea70cd0)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_222 : [#users=2] = placeholder[target=tensor_222]
    %tensor_223 : [#users=1] = placeholder[target=tensor_223]
    %tensor_224 : [#users=1] = placeholder[target=tensor_224]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_222,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_224, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_230 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_230, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_223, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_222), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0xea70cd0)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x149ff1a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x149ff1a0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x149ff1a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x149ff1a0)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x149ff1a0)
tracing opcode LOAD_FAST None pc=48 frame=9(0x149ff1a0)
tracing opcode CALL_METHOD None pc=50 frame=9(0x149ff1a0)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d31810ca40)
push tracker due to record
push tracker 17 frame 0x14d31810ca40 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d31810ca40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d31810ca40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d31810ca40 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d31810ca40)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d31810ca40)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d31810ca40)
load fast: 22897554162592
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d31810ca40)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d31810ca40)
load fast: 22896803507232
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d31810ca40)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d31810ca40)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d31810ca40)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d31810ca40)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d31810ca40)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d31810ca40)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x160e04d0)
push tracker due to record
push tracker 18 frame 0x160e04d0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x160e04d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x160e04d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x160e04d0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x160e04d0)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x160e04d0)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x160e04d0)
load fast: 22897554162688
tracing opcode LOAD_METHOD None pc=12 frame=18(0x160e04d0)
tracing opcode LOAD_FAST None pc=14 frame=18(0x160e04d0)
load fast: 22896803675088
tracing opcode CALL_METHOD None pc=16 frame=18(0x160e04d0)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x160e04d0)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_248 : [#users=1] = placeholder[target=tensor_248]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_248,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x160e04d0)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d31810ca40)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d31810ca40)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d31810ca40)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_247 : [#users=1] = placeholder[target=tensor_247]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_247,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d31810ca40)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x149ff1a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x149ff1a0)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x149ff1a0)
tracing opcode LOAD_FAST None pc=58 frame=9(0x149ff1a0)
tracing opcode LOAD_FAST None pc=60 frame=9(0x149ff1a0)
tracing opcode CALL_METHOD None pc=62 frame=9(0x149ff1a0)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x13115b80)
push tracker due to record
push tracker 19 frame 0x13115b80 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x13115b80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x13115b80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x13115b80 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x13115b80)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x13115b80)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x13115b80)
load fast: 22897554162736
tracing opcode LOAD_METHOD None pc=12 frame=19(0x13115b80)
tracing opcode LOAD_FAST None pc=14 frame=19(0x13115b80)
load fast: 22896803673088
tracing opcode CALL_METHOD None pc=16 frame=19(0x13115b80)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x13115b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x13115b80)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x13115b80)
tracing opcode LOAD_FAST None pc=24 frame=19(0x13115b80)
tracing opcode CALL_METHOD None pc=26 frame=19(0x13115b80)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d31810c640)
push tracker due to record
push tracker 3 frame 0x14d31810c640 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d31810c640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d31810c640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d31810c640 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d31810c640)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d31810c640)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d31810c640)
load fast: 22897554162880
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d31810c640)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d31810c640)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d31810c640)
load fast: 22896803200832
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d31810c640)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_250 : [#users=0] = placeholder[target=tensor_250]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.3172,  0.0650,  0.0581,  ...,  0.6605, -0.1297,  0.1334],
         [-0.0956,  0.0296,  0.4345,  ..., -0.1545,  0.4249, -0.1705],
         [-1.0623,  0.4722, -0.2632,  ..., -0.2385,  0.5057,  0.1060],
         ...,
         [ 0.0680,  0.3033, -0.2492,  ..., -0.0377, -0.2474,  0.0849],
         [ 0.2197, -0.0428,  0.0675,  ..., -0.0667,  0.0996,  0.3005],
         [-0.1835,  0.4373,  0.4160,  ...,  0.4557, -0.0080, -1.0544]]]), modified_attrs={}, prev=None) 22896803219728 22896803200832
obj: tensor([[[ 0.3172,  0.0650,  0.0581,  ...,  0.6605, -0.1297,  0.1334],
         [-0.0956,  0.0296,  0.4345,  ..., -0.1545,  0.4249, -0.1705],
         [-1.0623,  0.4722, -0.2632,  ..., -0.2385,  0.5057,  0.1060],
         ...,
         [ 0.0680,  0.3033, -0.2492,  ..., -0.0377, -0.2474,  0.0849],
         [ 0.2197, -0.0428,  0.0675,  ..., -0.0667,  0.0996,  0.3005],
         [-0.1835,  0.4373,  0.4160,  ...,  0.4557, -0.0080, -1.0544]]]) 22896803200832
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.3172,  0.0650,  0.0581,  ...,  0.6605, -0.1297,  0.1334],
         [-0.0956,  0.0296,  0.4345,  ..., -0.1545,  0.4249, -0.1705],
         [-1.0623,  0.4722, -0.2632,  ..., -0.2385,  0.5057,  0.1060],
         ...,
         [ 0.0680,  0.3033, -0.2492,  ..., -0.0377, -0.2474,  0.0849],
         [ 0.2197, -0.0428,  0.0675,  ..., -0.0667,  0.0996,  0.3005],
         [-0.1835,  0.4373,  0.4160,  ...,  0.4557, -0.0080, -1.0544]]]), modified_attrs={}, prev=None) 22896803259056
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d31810c640)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x13115b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x13115b80)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x13115b80)
tracing opcode LOAD_FAST None pc=34 frame=19(0x13115b80)
tracing opcode LOAD_FAST None pc=36 frame=19(0x13115b80)
load fast: 22896803507232
tracing opcode BINARY_ADD None pc=38 frame=19(0x13115b80)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x13115b80)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x147afa90)
push tracker due to record
push tracker 2 frame 0x147afa90 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x147afa90)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x147afa90)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x147afa90 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x147afa90)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x147afa90)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x147afa90)
load fast: 22896873222768
tracing opcode LOAD_ATTR None pc=12 frame=2(0x147afa90)
tracing opcode STORE_FAST None pc=14 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x147afa90)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x147afa90)
tracing opcode CALL_METHOD None pc=20 frame=2(0x147afa90)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x147afa90)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=28 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=30 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=32 frame=2(0x147afa90)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x147afa90)
record function in graph <built-in method mean of Tensor object at 0x14d317feb270>
func self id: 22896873222768
tracing opcode STORE_FAST None pc=36 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x147afa90)
tracing opcode LOAD_FAST None pc=40 frame=2(0x147afa90)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x147afa90)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=46 frame=2(0x147afa90)
tracing opcode CALL_METHOD None pc=48 frame=2(0x147afa90)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=52 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=54 frame=2(0x147afa90)
tracing opcode LOAD_CONST None pc=56 frame=2(0x147afa90)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x147afa90)
record function in graph <built-in method mean of Tensor object at 0x14d313d97360>
func self id: 22896803672928
tracing opcode STORE_FAST None pc=60 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x147afa90)
tracing opcode LOAD_FAST None pc=64 frame=2(0x147afa90)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x147afa90)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x147afa90)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x147afa90)
tracing opcode LOAD_FAST None pc=72 frame=2(0x147afa90)
tracing opcode LOAD_FAST None pc=74 frame=2(0x147afa90)
load fast: 22897554162832
tracing opcode LOAD_ATTR None pc=76 frame=2(0x147afa90)
tracing opcode BINARY_ADD None pc=78 frame=2(0x147afa90)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x147afa90)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x147afa90)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x147afa90)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x147afa90)
tracing opcode LOAD_FAST None pc=90 frame=2(0x147afa90)
tracing opcode CALL_METHOD None pc=92 frame=2(0x147afa90)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x147afa90)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x147afa90)
tracing opcode LOAD_FAST None pc=100 frame=2(0x147afa90)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x147afa90)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x147afa90)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x147afa90)
tracing opcode BINARY_ADD None pc=108 frame=2(0x147afa90)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x147afa90)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x147afa90)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x147afa90)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_252 : [#users=4] = placeholder[target=tensor_252]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_252,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_252, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_252, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_252, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d317feb270>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x147afa90)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x13115b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x13115b80)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x13115b80)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_249 : [#users=1] = placeholder[target=tensor_249]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_249,), kwargs = {})
    %tensor_251 : [#users=1] = placeholder[target=tensor_251]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_251), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x13115b80)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x149ff1a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x149ff1a0)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x149ff1a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x149ff1a0)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x149ff1a0)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_219 : [#users=2] = placeholder[target=tensor_219]
    %tensor_220 : [#users=1] = placeholder[target=tensor_220]
    %tensor_221 : [#users=1] = placeholder[target=tensor_221]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_219,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_221, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_230 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_230, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_220, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_219), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x149ff1a0)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x190a64f0)
push tracker due to record
push tracker 9 frame 0x190a64f0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x190a64f0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x190a64f0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x190a64f0 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x190a64f0)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x190a64f0)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x190a64f0)
load fast: 22897554162928
tracing opcode LOAD_ATTR None pc=12 frame=9(0x190a64f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x190a64f0)
load fast: 22896803361552
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x190a64f0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x190a64f0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x190a64f0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x190a64f0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x190a64f0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x190a64f0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x190a64f0)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x14a15de0)
push tracker due to record
push tracker 10 frame 0x14a15de0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x14a15de0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x14a15de0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x14a15de0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x14a15de0)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x14a15de0)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x14a15de0)
load fast: 22897554162976
tracing opcode LOAD_ATTR None pc=12 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x14a15de0)
load fast: 22896803361552
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x14a15de0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x14a15de0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x14a15de0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x14a15de0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x14a15de0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x14a15de0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x14a15de0)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x190b4580)
push tracker due to record
push tracker 11 frame 0x190b4580 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x190b4580)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x190b4580)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x190b4580 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x190b4580)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x190b4580)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x190b4580)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x190b4580)
tracing opcode IS_OP None pc=16 frame=11(0x190b4580)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x190b4580)
load fast: 22897554163024
tracing opcode LOAD_METHOD None pc=22 frame=11(0x190b4580)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x190b4580)
load fast: 22896803361552
tracing opcode CALL_METHOD None pc=26 frame=11(0x190b4580)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=34 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=36 frame=11(0x190b4580)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xd18e7d0)
push tracker due to record
push tracker 12 frame 0xd18e7d0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xd18e7d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xd18e7d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0xd18e7d0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xd18e7d0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xd18e7d0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xd18e7d0)
load fast: 22896803072336
tracing opcode LOAD_METHOD None pc=12 frame=12(0xd18e7d0)
tracing opcode CALL_METHOD None pc=14 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=16 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=18 frame=12(0xd18e7d0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xd18e7d0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xd18e7d0)
tracing opcode LOAD_FAST None pc=24 frame=12(0xd18e7d0)
load fast: 22897554163024
tracing opcode LOAD_ATTR None pc=26 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=28 frame=12(0xd18e7d0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xd18e7d0)
tracing opcode BINARY_ADD None pc=32 frame=12(0xd18e7d0)
tracing opcode STORE_FAST None pc=34 frame=12(0xd18e7d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xd18e7d0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xd18e7d0)
tracing opcode LOAD_FAST None pc=40 frame=12(0xd18e7d0)
tracing opcode CALL_METHOD None pc=42 frame=12(0xd18e7d0)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xd18e7d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xd18e7d0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=50 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=52 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=54 frame=12(0xd18e7d0)
tracing opcode LOAD_CONST None pc=56 frame=12(0xd18e7d0)
tracing opcode CALL_METHOD None pc=58 frame=12(0xd18e7d0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xd18e7d0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_260 : [#users=1] = placeholder[target=tensor_260]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_260, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xd18e7d0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=40 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=42 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=44 frame=11(0x190b4580)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x190b4580)
record function in graph <built-in method chunk of Tensor object at 0x14d313c7b7c0>
func self id: 22896802510784
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x190b4580)
sub_value 22896803072816 tensor([[[[-0.5847, -0.5512, -0.3710,  ...,  0.4411,  0.2675,  0.0706],
          [-1.1545, -0.1377,  0.2714,  ...,  0.2201, -0.0547,  0.4768],
          [-0.7313, -0.0321,  0.3688,  ..., -0.0943,  0.4218,  0.0262],
          ...,
          [ 0.2190, -0.1867, -0.0084,  ..., -0.3406,  0.4055, -1.5423],
          [-1.4648, -0.4409,  0.3590,  ...,  0.1332, -0.1036, -0.3833],
          [-0.8278, -0.8758, -0.0995,  ...,  0.2849,  0.1012, -0.2847]],

         [[ 0.1495, -0.0186, -0.4673,  ..., -0.2728,  0.2419, -0.1791],
          [-0.2836,  0.0377,  0.6629,  ...,  0.5489,  0.2729,  0.1501],
          [ 0.9232, -0.8110,  1.0620,  ...,  0.5670,  0.0410, -0.2783],
          ...,
          [ 0.2280,  0.6142, -0.7941,  ...,  0.5891,  0.4338, -0.6175],
          [ 0.0163,  0.0712, -1.1342,  ..., -0.1663, -0.0726, -0.1282],
          [ 0.8320,  0.3012, -0.7142,  ...,  0.0912,  0.5486,  0.2281]],

         [[-0.1332, -0.9747,  0.2131,  ...,  1.3331,  0.2198, -0.0071],
          [-0.3091, -0.5458, -0.8741,  ...,  0.6270, -0.5569, -0.2167],
          [-0.3596, -0.4744, -0.2368,  ..., -0.4113, -0.3629,  0.9394],
          ...,
          [-0.3811, -0.0045, -1.6337,  ...,  0.3089, -0.0414,  0.2662],
          [-0.2987, -0.6075, -0.1229,  ..., -0.2761, -0.4347,  0.5195],
          [ 0.4949, -0.3960,  0.0560,  ...,  1.3173, -0.3292,  0.9327]],

         ...,

         [[-0.3704,  0.5371,  0.8142,  ...,  0.8699,  0.1072,  0.3465],
          [-0.4430,  0.3025,  1.1354,  ..., -0.5280,  0.2325,  1.2704],
          [-0.8688,  0.5431, -0.8895,  ..., -0.0188, -0.3315,  0.1835],
          ...,
          [-0.2608,  0.3247,  0.0639,  ..., -0.0955, -0.7717,  0.1100],
          [ 0.1411, -0.0720,  0.5529,  ..., -0.4058, -0.4735,  0.2052],
          [-0.5560, -0.3003, -0.5638,  ..., -0.6331, -0.9322,  0.7441]],

         [[ 0.3223, -0.5190,  0.6825,  ...,  0.1946, -0.0670,  0.4104],
          [-0.8256, -0.2420,  0.4735,  ..., -0.0347, -0.0757,  0.2945],
          [ 0.3580,  0.1328, -1.0928,  ..., -1.1747, -0.8902,  0.1913],
          ...,
          [ 0.4498,  0.2976, -0.1435,  ...,  0.4527, -0.0378, -0.3665],
          [ 0.3993,  0.1736,  0.3548,  ..., -0.1514, -0.5654, -0.5072],
          [ 0.5582,  0.6852,  0.4034,  ..., -1.3601, -1.1932,  0.4091]],

         [[-0.7089,  0.0125,  0.0042,  ..., -0.4384, -1.1763, -0.7353],
          [ 0.5046,  0.5310,  0.3703,  ...,  0.3642, -0.8016,  0.2350],
          [-0.5855,  0.7081, -0.5320,  ..., -0.4616,  0.4622, -0.0362],
          ...,
          [-0.4750,  0.5366, -0.5405,  ..., -0.4323, -0.5876, -0.0461],
          [-0.5955,  0.2475,  0.7579,  ..., -0.0913, -0.0150,  0.2329],
          [ 0.0405,  0.4677, -0.4519,  ..., -0.4380,  0.8623,  0.0070]]]])
sub_value 22896802510864 tensor([[[[-1.2950e-01,  2.9920e-01,  3.0628e-01,  ...,  4.9831e-01,
           -1.0696e-01, -3.7343e-02],
          [-5.2250e-01, -1.4430e-01,  3.8315e-02,  ..., -2.6202e-01,
            2.4650e-01, -3.2720e-01],
          [-1.1484e+00,  5.4067e-01,  5.2626e-01,  ..., -2.1260e-01,
           -1.7592e-01, -8.0547e-01],
          ...,
          [ 4.2207e-02,  6.8417e-02,  1.4601e+00,  ..., -3.7867e-01,
            9.2189e-01,  1.4314e-01],
          [-8.2955e-02, -3.7952e-01,  1.0432e+00,  ...,  1.5023e+00,
           -7.1499e-01,  5.1231e-01],
          [-3.2612e-02,  2.0961e-01, -2.7574e-01,  ..., -1.6558e-01,
           -1.1756e-01,  4.8167e-01]],

         [[-8.2297e-01, -2.6528e-01, -3.6384e-01,  ...,  1.8836e-01,
           -6.6065e-01,  8.8615e-01],
          [ 1.3026e+00,  8.9439e-01, -7.7575e-01,  ..., -2.1956e-01,
           -9.4155e-01,  3.4565e-01],
          [ 2.8515e-01,  4.9611e-01, -2.3953e-02,  ..., -9.2385e-02,
           -1.9705e-01,  2.9068e-01],
          ...,
          [-6.4014e-01, -7.6100e-02, -1.5782e-01,  ..., -3.0219e-01,
           -2.2102e-01, -4.9554e-01],
          [ 4.0382e-01, -5.2829e-01,  9.0501e-01,  ...,  2.0342e-01,
           -2.4226e-01,  4.1859e-01],
          [ 2.5880e-01,  4.4397e-01,  2.6636e-01,  ...,  3.2925e-01,
            1.7548e-01,  9.9097e-01]],

         [[ 6.9938e-01,  4.1443e-01, -3.8184e-01,  ..., -7.4549e-02,
           -3.8238e-01, -2.2172e-01],
          [-5.1191e-01, -7.7451e-03, -5.0301e-01,  ...,  4.6801e-01,
            1.4857e-01, -2.2568e-01],
          [ 5.5356e-04, -1.0127e-01,  9.1897e-01,  ..., -7.6671e-02,
            6.6820e-01,  1.2331e+00],
          ...,
          [-4.5335e-01, -5.6166e-02, -3.5164e-01,  ...,  3.4778e-01,
           -1.2242e-02, -6.4293e-01],
          [ 4.7283e-02,  5.8820e-01, -4.5298e-02,  ..., -1.3972e-01,
           -9.7524e-02, -6.7713e-01],
          [-5.6318e-02, -1.9671e-01,  7.1595e-01,  ..., -6.6240e-01,
           -7.6624e-02, -1.3446e-01]],

         ...,

         [[ 9.9431e-01, -1.8819e-01, -2.9378e-01,  ..., -1.6100e-01,
           -3.8185e-02,  3.9044e-01],
          [-4.5618e-01, -2.2374e-01,  8.8422e-02,  ..., -9.2611e-01,
           -5.0120e-01,  5.8501e-01],
          [ 6.2434e-02, -6.8106e-01, -2.8178e-01,  ..., -9.6503e-01,
           -2.0485e-01,  1.5870e-01],
          ...,
          [ 3.5889e-01,  6.1221e-02, -9.1337e-01,  ...,  6.5049e-01,
           -3.3219e-01,  2.6671e-01],
          [ 9.2395e-01, -7.1548e-01, -1.0724e+00,  ...,  1.7916e-01,
            7.7802e-01,  5.2186e-01],
          [-1.5638e-01, -9.5067e-01, -9.3039e-01,  ...,  1.0549e-01,
            6.2908e-02,  4.8872e-01]],

         [[-1.0149e+00,  4.5172e-01, -9.5288e-01,  ...,  3.9316e-01,
            1.9936e-01,  4.7407e-01],
          [-9.6802e-01,  6.5911e-01, -1.4936e-01,  ...,  1.1288e-01,
            4.8413e-01, -7.5956e-01],
          [ 3.2183e-01,  1.0780e+00,  6.3960e-02,  ..., -1.2142e-01,
            2.3183e-01, -5.5051e-01],
          ...,
          [ 5.0991e-01,  3.8647e-01, -7.8808e-01,  ..., -3.4074e-02,
            1.4343e+00,  8.1354e-01],
          [-5.7695e-01,  4.9966e-01, -3.9439e-01,  ...,  4.7220e-01,
            8.2070e-01,  8.9428e-01],
          [-4.7307e-01,  9.2288e-01, -1.3063e-01,  ...,  9.2936e-02,
            4.2123e-01, -8.1505e-02]],

         [[ 8.2906e-01,  3.1041e-01, -4.9834e-01,  ...,  4.4972e-01,
           -7.9821e-01,  1.5766e-01],
          [ 7.1106e-01,  1.2777e+00, -7.5753e-01,  ...,  1.7448e-01,
           -4.9878e-01,  5.7237e-03],
          [-4.2120e-01,  5.0549e-01, -3.6502e-01,  ..., -7.1897e-01,
           -4.4133e-01, -9.5304e-01],
          ...,
          [-6.4883e-01,  7.2463e-01,  4.0206e-01,  ..., -1.0773e+00,
           -4.3400e-01, -4.3324e-01],
          [ 1.0909e+00,  8.3828e-01, -3.1002e-01,  ...,  1.1580e-01,
            5.3226e-02, -1.1672e+00],
          [-3.9872e-01,  1.2267e+00,  2.1376e-01,  ..., -8.8894e-01,
            3.5773e-01, -1.0433e-01]]]])
sub_value 22896802509744 tensor([[[[-8.1564e-01, -7.9951e-01,  1.1212e-01,  ..., -8.3103e-02,
            2.1881e-01, -2.4460e-01],
          [-4.4379e-01, -7.7139e-01, -3.5831e-01,  ..., -3.1766e-01,
            2.3433e-01, -1.9547e-01],
          [-1.2898e-01, -6.0570e-01,  6.6430e-02,  ..., -4.3659e-01,
           -9.1516e-01, -2.2966e-01],
          ...,
          [ 8.2397e-01,  2.3233e-01,  4.6670e-01,  ..., -4.4957e-01,
            7.2863e-01,  5.2480e-02],
          [ 5.1450e-01,  1.0938e-01,  7.3916e-01,  ...,  3.3892e-01,
           -1.1129e-01,  2.5359e-01],
          [-1.3559e-01,  5.5210e-01, -1.3238e-01,  ..., -1.0517e+00,
            7.1106e-01, -1.4000e-01]],

         [[ 1.0154e+00,  1.0728e+00, -4.5730e-01,  ..., -6.6170e-01,
           -2.5177e-01, -6.2353e-01],
          [-7.4152e-01, -7.7540e-01,  2.9132e-01,  ...,  1.0889e+00,
            4.0609e-01, -6.1948e-01],
          [-1.4224e+00, -7.4118e-02,  4.2743e-02,  ..., -1.9923e-01,
            4.8614e-02, -8.9994e-01],
          ...,
          [ 9.8068e-01,  8.6818e-02, -7.0807e-01,  ..., -3.9883e-01,
           -3.0300e-01, -4.7642e-01],
          [ 8.1257e-02, -8.0896e-01,  3.3073e-01,  ...,  3.3718e-01,
           -5.6919e-01, -1.1688e+00],
          [-1.1476e-01,  6.6255e-01,  4.6934e-01,  ..., -4.6521e-01,
            3.4442e-01,  8.8624e-02]],

         [[-8.5561e-01,  5.2342e-01,  1.3274e-01,  ...,  1.6229e-01,
           -3.0636e-01, -1.8842e-01],
          [ 2.8762e-01, -1.0105e-01, -7.4484e-02,  ..., -3.8179e-01,
           -4.6302e-01,  2.1484e-02],
          [ 6.5455e-02,  7.0767e-01,  5.3213e-01,  ...,  3.1118e-01,
            4.3385e-01, -1.1899e-01],
          ...,
          [-1.2671e-01,  1.4641e-01, -9.0273e-01,  ...,  2.5206e-01,
           -5.0992e-01,  4.1454e-01],
          [ 8.1991e-02,  3.1500e-01,  8.3128e-02,  ...,  3.0063e-01,
            4.8034e-01, -3.4856e-01],
          [ 5.2738e-04,  1.5614e+00, -4.0390e-01,  ...,  3.0190e-01,
           -4.5266e-01,  4.4693e-01]],

         ...,

         [[-5.8374e-01,  1.3777e-01,  2.5201e-02,  ..., -1.2025e-01,
            1.3090e+00, -3.3751e-01],
          [-4.3587e-01,  4.1682e-01,  3.1635e-01,  ..., -3.6249e-01,
           -1.6030e-01, -8.4679e-01],
          [ 4.9260e-01, -8.6395e-02,  3.1724e-01,  ..., -1.5198e-01,
           -3.6551e-01,  8.3521e-01],
          ...,
          [-2.7059e-01, -8.4738e-01,  2.2992e-01,  ...,  6.7500e-01,
           -4.2177e-01,  4.6758e-01],
          [ 4.2585e-01,  7.5226e-01,  2.9979e-01,  ...,  2.5539e-01,
           -8.1863e-01,  6.5921e-02],
          [ 7.4985e-02,  9.2023e-01,  3.0503e-02,  ..., -3.0996e-01,
           -4.8992e-01, -1.3047e-01]],

         [[-1.6238e-01,  6.3562e-02,  1.9206e-01,  ..., -3.2037e-01,
            2.9423e-01,  9.1578e-01],
          [-5.6491e-02, -8.6792e-01, -5.2396e-01,  ...,  5.6248e-01,
           -2.2871e-01, -1.0471e+00],
          [ 4.2594e-01, -5.2331e-01,  8.9497e-01,  ..., -1.7567e-01,
            5.6414e-01, -7.4692e-01],
          ...,
          [ 5.7100e-01, -7.3671e-01,  5.8231e-01,  ...,  4.8147e-01,
           -9.9810e-01, -1.8289e-01],
          [-4.6080e-04,  2.4611e-01, -5.2653e-01,  ...,  2.5141e-01,
           -1.0006e-01, -7.1459e-01],
          [-4.5245e-01,  3.5101e-01, -1.2998e-01,  ...,  9.0120e-02,
            1.2838e+00,  1.4839e-02]],

         [[ 1.1174e+00, -9.7961e-01,  1.2341e+00,  ..., -8.7378e-01,
           -2.4535e-01, -6.1408e-01],
          [ 3.0972e-01, -1.4296e-01,  1.0034e-01,  ...,  1.1301e+00,
            2.8405e-01, -1.0145e+00],
          [-6.1124e-01, -4.1187e-01,  3.8245e-01,  ..., -1.0661e+00,
           -3.3629e-01, -9.9997e-01],
          ...,
          [ 1.0862e+00,  2.7898e-01, -7.0166e-01,  ..., -1.2427e+00,
           -4.8787e-01, -6.9779e-02],
          [ 1.6512e+00,  6.7129e-01,  1.3421e-01,  ...,  4.0838e-01,
            8.7209e-01, -1.0842e+00],
          [ 5.3297e-01, -4.0048e-01, -9.6445e-01,  ...,  2.5447e-01,
           -4.2061e-01, -4.0338e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x190b4580)
tracing opcode STORE_FAST None pc=52 frame=11(0x190b4580)
tracing opcode STORE_FAST None pc=54 frame=11(0x190b4580)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x190b4580)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x190b4580)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=232 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=234 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=236 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=238 frame=11(0x190b4580)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x190b4580)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x190b4580)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x190b4580)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x190b4580)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d32d3fba40)
push tracker due to record
push tracker 12 frame 0x14d32d3fba40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d32d3fba40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d32d3fba40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d32d3fba40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d32d3fba40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d32d3fba40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d32d3fba40)
load fast: 22896802511344
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d32d3fba40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d32d3fba40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d32d3fba40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d32d3fba40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d32d3fba40)
load fast: 22897554163024
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d32d3fba40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d32d3fba40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d32d3fba40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d32d3fba40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d32d3fba40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d32d3fba40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d32d3fba40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d32d3fba40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d32d3fba40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d32d3fba40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d32d3fba40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d32d3fba40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d32d3fba40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d32d3fba40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_261 : [#users=1] = placeholder[target=tensor_261]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_261, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d32d3fba40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x190b4580)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x190b4580)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x190b4580)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=262 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=264 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=266 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=268 frame=11(0x190b4580)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x190b4580)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x190b4580)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x190b4580)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x190b4580)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xea70980)
push tracker due to record
push tracker 12 frame 0xea70980 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xea70980)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xea70980)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0xea70980 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xea70980)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xea70980)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xea70980)
load fast: 22896802605872
tracing opcode LOAD_METHOD None pc=12 frame=12(0xea70980)
tracing opcode CALL_METHOD None pc=14 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=16 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=18 frame=12(0xea70980)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xea70980)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xea70980)
tracing opcode LOAD_FAST None pc=24 frame=12(0xea70980)
load fast: 22897554163024
tracing opcode LOAD_ATTR None pc=26 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=28 frame=12(0xea70980)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xea70980)
tracing opcode BINARY_ADD None pc=32 frame=12(0xea70980)
tracing opcode STORE_FAST None pc=34 frame=12(0xea70980)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xea70980)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xea70980)
tracing opcode LOAD_FAST None pc=40 frame=12(0xea70980)
tracing opcode CALL_METHOD None pc=42 frame=12(0xea70980)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xea70980)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xea70980)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=50 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=52 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=54 frame=12(0xea70980)
tracing opcode LOAD_CONST None pc=56 frame=12(0xea70980)
tracing opcode CALL_METHOD None pc=58 frame=12(0xea70980)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xea70980)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_262 : [#users=1] = placeholder[target=tensor_262]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_262, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xea70980)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x190b4580)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x190b4580)
tracing opcode STORE_FAST None pc=284 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x190b4580)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x190b4580)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x190b4580)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x190b4580)
tracing opcode BINARY_ADD None pc=296 frame=11(0x190b4580)
tracing opcode STORE_FAST None pc=298 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x190b4580)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=308 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=312 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=314 frame=11(0x190b4580)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=320 frame=11(0x190b4580)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x190b4580)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x190b4580)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x190b4580)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x190b4580)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=334 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=338 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=342 frame=11(0x190b4580)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x190b4580)
record function in graph <built-in method to of Tensor object at 0x14d313c68900>
func self id: 22896802433280
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x190b4580)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=354 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=356 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=360 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=362 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=364 frame=11(0x190b4580)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x190b4580)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x190b4580)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=382 frame=11(0x190b4580)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x190b4580)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x147afcc0)
push tracker due to record
push tracker 3 frame 0x147afcc0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x147afcc0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x147afcc0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x147afcc0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x147afcc0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x147afcc0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x147afcc0)
load fast: 22897554163120
tracing opcode LOAD_ATTR None pc=12 frame=3(0x147afcc0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x147afcc0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x147afcc0)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x147afcc0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x147afcc0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=392 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=394 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=396 frame=11(0x190b4580)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=400 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=402 frame=11(0x190b4580)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x179e0990)
push tracker due to record
push tracker 13 frame 0x179e0990 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x179e0990)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x179e0990)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x179e0990 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x179e0990)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x179e0990)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x179e0990)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x179e0990)
tracing opcode IS_OP None pc=16 frame=13(0x179e0990)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=54 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=56 frame=13(0x179e0990)
tracing opcode COMPARE_OP None pc=58 frame=13(0x179e0990)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=84 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=86 frame=13(0x179e0990)
tracing opcode COMPARE_OP None pc=88 frame=13(0x179e0990)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=96 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=98 frame=13(0x179e0990)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x179e0990)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x179e0990)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=138 frame=13(0x179e0990)
load fast: 22896802433680
tracing opcode LOAD_METHOD None pc=140 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=142 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=144 frame=13(0x179e0990)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x179e0990)
load fast: 22896802510864
tracing opcode LOAD_METHOD None pc=148 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=150 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=152 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=156 frame=13(0x179e0990)
load fast: 22897554163024
tracing opcode LOAD_ATTR None pc=158 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x179e0990)
tracing opcode STORE_FAST None pc=162 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=168 frame=13(0x179e0990)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=172 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=176 frame=13(0x179e0990)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x179e0990)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=186 frame=13(0x179e0990)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=190 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=194 frame=13(0x179e0990)
tracing opcode BINARY_ADD None pc=196 frame=13(0x179e0990)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=200 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=202 frame=13(0x179e0990)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x179e0990)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x179e0990)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x179e0990)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x179e0990)
tracing opcode STORE_FAST None pc=220 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=224 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x179e0990)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x179e0990)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=238 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=240 frame=13(0x179e0990)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=248 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=250 frame=13(0x179e0990)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x160e4f50)
push tracker due to record
push tracker 12 frame 0x160e4f50 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x160e4f50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x160e4f50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x160e4f50 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x160e4f50)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x160e4f50)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x160e4f50)
load fast: 22896802263424
tracing opcode LOAD_METHOD None pc=12 frame=12(0x160e4f50)
tracing opcode CALL_METHOD None pc=14 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=16 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=18 frame=12(0x160e4f50)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x160e4f50)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x160e4f50)
tracing opcode LOAD_FAST None pc=24 frame=12(0x160e4f50)
load fast: 22897554163024
tracing opcode LOAD_ATTR None pc=26 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=28 frame=12(0x160e4f50)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x160e4f50)
tracing opcode BINARY_ADD None pc=32 frame=12(0x160e4f50)
tracing opcode STORE_FAST None pc=34 frame=12(0x160e4f50)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x160e4f50)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x160e4f50)
tracing opcode LOAD_FAST None pc=40 frame=12(0x160e4f50)
tracing opcode CALL_METHOD None pc=42 frame=12(0x160e4f50)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x160e4f50)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x160e4f50)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=50 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=52 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=54 frame=12(0x160e4f50)
tracing opcode LOAD_CONST None pc=56 frame=12(0x160e4f50)
tracing opcode CALL_METHOD None pc=58 frame=12(0x160e4f50)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x160e4f50)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_267 : [#users=1] = placeholder[target=tensor_267]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_267, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x160e4f50)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=258 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=260 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=264 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=266 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=268 frame=13(0x179e0990)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x179e0990)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=278 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=280 frame=13(0x179e0990)
tracing opcode BINARY_ADD None pc=282 frame=13(0x179e0990)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=286 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=288 frame=13(0x179e0990)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=292 frame=13(0x179e0990)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=296 frame=13(0x179e0990)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=304 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=306 frame=13(0x179e0990)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=310 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=312 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=314 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x179e0990)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x149fd020)
push tracker due to record
push tracker 14 frame 0x149fd020 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x149fd020)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x149fd020)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x149fd020 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x149fd020)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x149fd020)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x149fd020)
load fast: 22896802509584
tracing opcode LOAD_METHOD None pc=12 frame=14(0x149fd020)
tracing opcode LOAD_FAST None pc=14 frame=14(0x149fd020)
load fast: 22896802433680
tracing opcode LOAD_METHOD None pc=16 frame=14(0x149fd020)
tracing opcode LOAD_CONST None pc=18 frame=14(0x149fd020)
tracing opcode CALL_METHOD None pc=20 frame=14(0x149fd020)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x149fd020)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x149fd020)
tracing opcode LOAD_CONST None pc=26 frame=14(0x149fd020)
tracing opcode CALL_METHOD None pc=28 frame=14(0x149fd020)
tracing opcode LOAD_FAST None pc=30 frame=14(0x149fd020)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x149fd020)
tracing opcode LOAD_CONST None pc=34 frame=14(0x149fd020)
tracing opcode CALL_METHOD None pc=36 frame=14(0x149fd020)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x149fd020)
load fast: 22896802288400
tracing opcode LOAD_METHOD None pc=40 frame=14(0x149fd020)
tracing opcode LOAD_CONST None pc=42 frame=14(0x149fd020)
tracing opcode CALL_METHOD None pc=44 frame=14(0x149fd020)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x149fd020)
tracing opcode CALL_METHOD None pc=48 frame=14(0x149fd020)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x149fd020)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_268 : [#users=1] = placeholder[target=tensor_268]
    %tensor_269 : [#users=0] = placeholder[target=tensor_269]
    %tensor_270 : [#users=0] = placeholder[target=tensor_270]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_268, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x149fd020)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x179e0990)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=326 frame=13(0x179e0990)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x179e0990)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=334 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x179e0990)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x179e0990)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=348 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=350 frame=13(0x179e0990)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=358 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=360 frame=13(0x179e0990)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x179cf3e0)
push tracker due to record
push tracker 12 frame 0x179cf3e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x179cf3e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x179cf3e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x179cf3e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x179cf3e0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x179cf3e0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x179cf3e0)
load fast: 22896802017824
tracing opcode LOAD_METHOD None pc=12 frame=12(0x179cf3e0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x179cf3e0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x179cf3e0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x179cf3e0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x179cf3e0)
load fast: 22897554163024
tracing opcode LOAD_ATTR None pc=26 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x179cf3e0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x179cf3e0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x179cf3e0)
tracing opcode STORE_FAST None pc=34 frame=12(0x179cf3e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x179cf3e0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x179cf3e0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x179cf3e0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x179cf3e0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x179cf3e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x179cf3e0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x179cf3e0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x179cf3e0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x179cf3e0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x179cf3e0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_271 : [#users=1] = placeholder[target=tensor_271]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_271, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x179cf3e0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x179e0990)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x179e0990)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=374 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=378 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=380 frame=13(0x179e0990)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=386 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x179e0990)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x179e0990)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x179e0990)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x179e0990)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x179e0990)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=404 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=406 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=408 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=412 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=414 frame=13(0x179e0990)
tracing opcode COMPARE_OP None pc=416 frame=13(0x179e0990)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x179e0990)
tracing opcode STORE_FAST None pc=452 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=458 frame=13(0x179e0990)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x179e0990)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x179e0990)
tracing opcode BINARY_ADD None pc=464 frame=13(0x179e0990)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=468 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=470 frame=13(0x179e0990)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=474 frame=13(0x179e0990)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=478 frame=13(0x179e0990)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=486 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=488 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=492 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=494 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=496 frame=13(0x179e0990)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=500 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=504 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x179e0990)
record function in graph <built-in method to of Tensor object at 0x14d313c03bd0>
func self id: 22896802020304
tracing opcode CALL_METHOD None pc=508 frame=13(0x179e0990)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x179e0990)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=518 frame=13(0x179e0990)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=522 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=524 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=526 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x179e0990)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x10157950)
push tracker due to record
push tracker 15 frame 0x10157950 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x10157950)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x10157950)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x10157950 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x10157950)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x10157950)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x10157950)
load fast: 22896802020784
tracing opcode LOAD_METHOD None pc=12 frame=15(0x10157950)
tracing opcode LOAD_FAST None pc=14 frame=15(0x10157950)
load fast: 22896802433680
tracing opcode LOAD_METHOD None pc=16 frame=15(0x10157950)
tracing opcode LOAD_CONST None pc=18 frame=15(0x10157950)
tracing opcode CALL_METHOD None pc=20 frame=15(0x10157950)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x10157950)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x10157950)
tracing opcode LOAD_CONST None pc=26 frame=15(0x10157950)
tracing opcode CALL_METHOD None pc=28 frame=15(0x10157950)
tracing opcode LOAD_FAST None pc=30 frame=15(0x10157950)
load fast: 22896802510864
tracing opcode LOAD_METHOD None pc=32 frame=15(0x10157950)
tracing opcode LOAD_CONST None pc=34 frame=15(0x10157950)
tracing opcode CALL_METHOD None pc=36 frame=15(0x10157950)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x10157950)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x10157950)
tracing opcode LOAD_CONST None pc=42 frame=15(0x10157950)
tracing opcode CALL_METHOD None pc=44 frame=15(0x10157950)
tracing opcode BUILD_LIST None pc=46 frame=15(0x10157950)
tracing opcode CALL_METHOD None pc=48 frame=15(0x10157950)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x10157950)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_272 : [#users=1] = placeholder[target=tensor_272]
    %tensor_273 : [#users=0] = placeholder[target=tensor_273]
    %tensor_274 : [#users=0] = placeholder[target=tensor_274]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_272, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x10157950)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x179e0990)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x179e0990)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=538 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x179e0990)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=548 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=550 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=552 frame=13(0x179e0990)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x179e0990)
tracing opcode LOAD_CONST None pc=556 frame=13(0x179e0990)
tracing opcode CALL_METHOD None pc=558 frame=13(0x179e0990)
tracing opcode COMPARE_OP None pc=560 frame=13(0x179e0990)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x179e0990)
tracing opcode LOAD_FAST None pc=626 frame=13(0x179e0990)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x179e0990)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x179e0990)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x179e0990)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x179e0990)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_264 : [#users=1] = placeholder[target=tensor_264]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_264, 1), kwargs = {})
    %tensor_265 : [#users=1] = placeholder[target=tensor_265]
    %tensor_266 : [#users=1] = placeholder[target=tensor_266]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_265, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_266, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x179e0990)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=408 frame=11(0x190b4580)
tracing opcode IS_OP None pc=410 frame=11(0x190b4580)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=418 frame=11(0x190b4580)
tracing opcode BINARY_ADD None pc=420 frame=11(0x190b4580)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x190b4580)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=470 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=472 frame=11(0x190b4580)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=476 frame=11(0x190b4580)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=484 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=486 frame=11(0x190b4580)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14a0f420)
push tracker due to record
push tracker 3 frame 0x14a0f420 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14a0f420)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14a0f420)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14a0f420 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14a0f420)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14a0f420)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14a0f420)
load fast: 22897554163264
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14a0f420)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14a0f420)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14a0f420)
load fast: 22896802083280
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14a0f420)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_276 : [#users=0] = placeholder[target=tensor_276]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0032, 0.0042, 0.0032,  ..., 0.0036, 0.0040, 0.0036],
          [0.0031, 0.0031, 0.0040,  ..., 0.0046, 0.0058, 0.0035],
          [0.0044, 0.0043, 0.0038,  ..., 0.0040, 0.0048, 0.0031],
          ...,
          [0.0057, 0.0041, 0.0040,  ..., 0.0041, 0.0038, 0.0053],
          [0.0035, 0.0049, 0.0041,  ..., 0.0038, 0.0039, 0.0035],
          [0.0035, 0.0039, 0.0033,  ..., 0.0035, 0.0042, 0.0031]],

         [[0.0038, 0.0055, 0.0032,  ..., 0.0043, 0.0035, 0.0031],
          [0.0027, 0.0034, 0.0030,  ..., 0.0034, 0.0040, 0.0036],
          [0.0035, 0.0045, 0.0035,  ..., 0.0037, 0.0045, 0.0038],
          ...,
          [0.0030, 0.0044, 0.0035,  ..., 0.0040, 0.0041, 0.0035],
          [0.0033, 0.0041, 0.0031,  ..., 0.0030, 0.0026, 0.0033],
          [0.0033, 0.0048, 0.0041,  ..., 0.0044, 0.0034, 0.0044]],

         [[0.0043, 0.0038, 0.0042,  ..., 0.0047, 0.0037, 0.0036],
          [0.0034, 0.0046, 0.0032,  ..., 0.0039, 0.0040, 0.0030],
          [0.0035, 0.0038, 0.0046,  ..., 0.0041, 0.0038, 0.0042],
          ...,
          [0.0036, 0.0028, 0.0041,  ..., 0.0037, 0.0035, 0.0041],
          [0.0027, 0.0037, 0.0048,  ..., 0.0039, 0.0036, 0.0028],
          [0.0037, 0.0044, 0.0046,  ..., 0.0040, 0.0040, 0.0039]],

         ...,

         [[0.0038, 0.0036, 0.0033,  ..., 0.0042, 0.0029, 0.0038],
          [0.0044, 0.0036, 0.0035,  ..., 0.0042, 0.0035, 0.0023],
          [0.0036, 0.0045, 0.0031,  ..., 0.0037, 0.0043, 0.0055],
          ...,
          [0.0034, 0.0031, 0.0033,  ..., 0.0045, 0.0039, 0.0042],
          [0.0038, 0.0046, 0.0034,  ..., 0.0034, 0.0042, 0.0036],
          [0.0034, 0.0047, 0.0046,  ..., 0.0036, 0.0038, 0.0049]],

         [[0.0040, 0.0040, 0.0033,  ..., 0.0031, 0.0038, 0.0038],
          [0.0034, 0.0034, 0.0036,  ..., 0.0038, 0.0039, 0.0043],
          [0.0032, 0.0049, 0.0040,  ..., 0.0040, 0.0039, 0.0053],
          ...,
          [0.0031, 0.0044, 0.0048,  ..., 0.0036, 0.0041, 0.0040],
          [0.0033, 0.0030, 0.0041,  ..., 0.0029, 0.0031, 0.0043],
          [0.0051, 0.0037, 0.0031,  ..., 0.0029, 0.0032, 0.0037]],

         [[0.0039, 0.0043, 0.0036,  ..., 0.0044, 0.0044, 0.0037],
          [0.0074, 0.0043, 0.0040,  ..., 0.0036, 0.0038, 0.0028],
          [0.0031, 0.0044, 0.0037,  ..., 0.0042, 0.0051, 0.0048],
          ...,
          [0.0035, 0.0048, 0.0031,  ..., 0.0037, 0.0039, 0.0041],
          [0.0041, 0.0048, 0.0037,  ..., 0.0037, 0.0045, 0.0046],
          [0.0030, 0.0036, 0.0042,  ..., 0.0037, 0.0047, 0.0047]]]]), modified_attrs={}, prev=None) 22896802075984 22896802083280
obj: tensor([[[[0.0032, 0.0042, 0.0032,  ..., 0.0036, 0.0040, 0.0036],
          [0.0031, 0.0031, 0.0040,  ..., 0.0046, 0.0058, 0.0035],
          [0.0044, 0.0043, 0.0038,  ..., 0.0040, 0.0048, 0.0031],
          ...,
          [0.0057, 0.0041, 0.0040,  ..., 0.0041, 0.0038, 0.0053],
          [0.0035, 0.0049, 0.0041,  ..., 0.0038, 0.0039, 0.0035],
          [0.0035, 0.0039, 0.0033,  ..., 0.0035, 0.0042, 0.0031]],

         [[0.0038, 0.0055, 0.0032,  ..., 0.0043, 0.0035, 0.0031],
          [0.0027, 0.0034, 0.0030,  ..., 0.0034, 0.0040, 0.0036],
          [0.0035, 0.0045, 0.0035,  ..., 0.0037, 0.0045, 0.0038],
          ...,
          [0.0030, 0.0044, 0.0035,  ..., 0.0040, 0.0041, 0.0035],
          [0.0033, 0.0041, 0.0031,  ..., 0.0030, 0.0026, 0.0033],
          [0.0033, 0.0048, 0.0041,  ..., 0.0044, 0.0034, 0.0044]],

         [[0.0043, 0.0038, 0.0042,  ..., 0.0047, 0.0037, 0.0036],
          [0.0034, 0.0046, 0.0032,  ..., 0.0039, 0.0040, 0.0030],
          [0.0035, 0.0038, 0.0046,  ..., 0.0041, 0.0038, 0.0042],
          ...,
          [0.0036, 0.0028, 0.0041,  ..., 0.0037, 0.0035, 0.0041],
          [0.0027, 0.0037, 0.0048,  ..., 0.0039, 0.0036, 0.0028],
          [0.0037, 0.0044, 0.0046,  ..., 0.0040, 0.0040, 0.0039]],

         ...,

         [[0.0038, 0.0036, 0.0033,  ..., 0.0042, 0.0029, 0.0038],
          [0.0044, 0.0036, 0.0035,  ..., 0.0042, 0.0035, 0.0023],
          [0.0036, 0.0045, 0.0031,  ..., 0.0037, 0.0043, 0.0055],
          ...,
          [0.0034, 0.0031, 0.0033,  ..., 0.0045, 0.0039, 0.0042],
          [0.0038, 0.0046, 0.0034,  ..., 0.0034, 0.0042, 0.0036],
          [0.0034, 0.0047, 0.0046,  ..., 0.0036, 0.0038, 0.0049]],

         [[0.0040, 0.0040, 0.0033,  ..., 0.0031, 0.0038, 0.0038],
          [0.0034, 0.0034, 0.0036,  ..., 0.0038, 0.0039, 0.0043],
          [0.0032, 0.0049, 0.0040,  ..., 0.0040, 0.0039, 0.0053],
          ...,
          [0.0031, 0.0044, 0.0048,  ..., 0.0036, 0.0041, 0.0040],
          [0.0033, 0.0030, 0.0041,  ..., 0.0029, 0.0031, 0.0043],
          [0.0051, 0.0037, 0.0031,  ..., 0.0029, 0.0032, 0.0037]],

         [[0.0039, 0.0043, 0.0036,  ..., 0.0044, 0.0044, 0.0037],
          [0.0074, 0.0043, 0.0040,  ..., 0.0036, 0.0038, 0.0028],
          [0.0031, 0.0044, 0.0037,  ..., 0.0042, 0.0051, 0.0048],
          ...,
          [0.0035, 0.0048, 0.0031,  ..., 0.0037, 0.0039, 0.0041],
          [0.0041, 0.0048, 0.0037,  ..., 0.0037, 0.0045, 0.0046],
          [0.0030, 0.0036, 0.0042,  ..., 0.0037, 0.0047, 0.0047]]]]) 22896802083280
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0032, 0.0042, 0.0032,  ..., 0.0036, 0.0040, 0.0036],
          [0.0031, 0.0031, 0.0040,  ..., 0.0046, 0.0058, 0.0035],
          [0.0044, 0.0043, 0.0038,  ..., 0.0040, 0.0048, 0.0031],
          ...,
          [0.0057, 0.0041, 0.0040,  ..., 0.0041, 0.0038, 0.0053],
          [0.0035, 0.0049, 0.0041,  ..., 0.0038, 0.0039, 0.0035],
          [0.0035, 0.0039, 0.0033,  ..., 0.0035, 0.0042, 0.0031]],

         [[0.0038, 0.0055, 0.0032,  ..., 0.0043, 0.0035, 0.0031],
          [0.0027, 0.0034, 0.0030,  ..., 0.0034, 0.0040, 0.0036],
          [0.0035, 0.0045, 0.0035,  ..., 0.0037, 0.0045, 0.0038],
          ...,
          [0.0030, 0.0044, 0.0035,  ..., 0.0040, 0.0041, 0.0035],
          [0.0033, 0.0041, 0.0031,  ..., 0.0030, 0.0026, 0.0033],
          [0.0033, 0.0048, 0.0041,  ..., 0.0044, 0.0034, 0.0044]],

         [[0.0043, 0.0038, 0.0042,  ..., 0.0047, 0.0037, 0.0036],
          [0.0034, 0.0046, 0.0032,  ..., 0.0039, 0.0040, 0.0030],
          [0.0035, 0.0038, 0.0046,  ..., 0.0041, 0.0038, 0.0042],
          ...,
          [0.0036, 0.0028, 0.0041,  ..., 0.0037, 0.0035, 0.0041],
          [0.0027, 0.0037, 0.0048,  ..., 0.0039, 0.0036, 0.0028],
          [0.0037, 0.0044, 0.0046,  ..., 0.0040, 0.0040, 0.0039]],

         ...,

         [[0.0038, 0.0036, 0.0033,  ..., 0.0042, 0.0029, 0.0038],
          [0.0044, 0.0036, 0.0035,  ..., 0.0042, 0.0035, 0.0023],
          [0.0036, 0.0045, 0.0031,  ..., 0.0037, 0.0043, 0.0055],
          ...,
          [0.0034, 0.0031, 0.0033,  ..., 0.0045, 0.0039, 0.0042],
          [0.0038, 0.0046, 0.0034,  ..., 0.0034, 0.0042, 0.0036],
          [0.0034, 0.0047, 0.0046,  ..., 0.0036, 0.0038, 0.0049]],

         [[0.0040, 0.0040, 0.0033,  ..., 0.0031, 0.0038, 0.0038],
          [0.0034, 0.0034, 0.0036,  ..., 0.0038, 0.0039, 0.0043],
          [0.0032, 0.0049, 0.0040,  ..., 0.0040, 0.0039, 0.0053],
          ...,
          [0.0031, 0.0044, 0.0048,  ..., 0.0036, 0.0041, 0.0040],
          [0.0033, 0.0030, 0.0041,  ..., 0.0029, 0.0031, 0.0043],
          [0.0051, 0.0037, 0.0031,  ..., 0.0029, 0.0032, 0.0037]],

         [[0.0039, 0.0043, 0.0036,  ..., 0.0044, 0.0044, 0.0037],
          [0.0074, 0.0043, 0.0040,  ..., 0.0036, 0.0038, 0.0028],
          [0.0031, 0.0044, 0.0037,  ..., 0.0042, 0.0051, 0.0048],
          ...,
          [0.0035, 0.0048, 0.0031,  ..., 0.0037, 0.0039, 0.0041],
          [0.0041, 0.0048, 0.0037,  ..., 0.0037, 0.0045, 0.0046],
          [0.0030, 0.0036, 0.0042,  ..., 0.0037, 0.0047, 0.0047]]]]), modified_attrs={}, prev=None) 22896801867424
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14a0f420)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x190b4580)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x190b4580)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=536 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=538 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=540 frame=11(0x190b4580)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=548 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=550 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=552 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=554 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=556 frame=11(0x190b4580)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=560 frame=11(0x190b4580)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=568 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=570 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=572 frame=11(0x190b4580)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x190b4580)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x190b4580)
tracing opcode LOAD_CONST None pc=578 frame=11(0x190b4580)
tracing opcode BINARY_ADD None pc=580 frame=11(0x190b4580)
tracing opcode STORE_FAST None pc=582 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x190b4580)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x190b4580)
tracing opcode LOAD_FAST None pc=588 frame=11(0x190b4580)
tracing opcode CALL_METHOD None pc=590 frame=11(0x190b4580)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x190b4580)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x190b4580)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x190b4580)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x190b4580)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_259 : [#users=1] = placeholder[target=tensor_259]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_259,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_263 : [#users=1] = placeholder[target=tensor_263]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_263, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_264 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_264, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_275 : [#users=1] = placeholder[target=tensor_275]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_275, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x190b4580)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x14a15de0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x14a15de0)
tracing opcode LOAD_CONST None pc=46 frame=10(0x14a15de0)
tracing opcode IS_OP None pc=48 frame=10(0x14a15de0)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x14a15de0)
tracing opcode STORE_FAST None pc=54 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x14a15de0)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x14a15de0)
tracing opcode LOAD_FAST None pc=60 frame=10(0x14a15de0)
tracing opcode LOAD_FAST None pc=62 frame=10(0x14a15de0)
tracing opcode CALL_METHOD None pc=64 frame=10(0x14a15de0)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x160ef330)
push tracker due to record
push tracker 16 frame 0x160ef330 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x160ef330)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x160ef330)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x160ef330 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x160ef330)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x160ef330)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x160ef330)
load fast: 22897554163312
tracing opcode LOAD_METHOD None pc=12 frame=16(0x160ef330)
tracing opcode LOAD_FAST None pc=14 frame=16(0x160ef330)
load fast: 22896801936224
tracing opcode CALL_METHOD None pc=16 frame=16(0x160ef330)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x160ef330)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x160ef330)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x160ef330)
tracing opcode LOAD_FAST None pc=24 frame=16(0x160ef330)
tracing opcode CALL_METHOD None pc=26 frame=16(0x160ef330)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x13115500)
push tracker due to record
push tracker 3 frame 0x13115500 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x13115500)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x13115500)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x13115500 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x13115500)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x13115500)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x13115500)
load fast: 22897554163456
tracing opcode LOAD_ATTR None pc=12 frame=3(0x13115500)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x13115500)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x13115500)
load fast: 22896801925936
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x13115500)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_278 : [#users=0] = placeholder[target=tensor_278]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.1573, -0.0905, -0.0753,  ..., -0.0698,  0.0533,  0.0284],
         [ 0.1592, -0.0927, -0.0756,  ..., -0.0613,  0.0507,  0.0300],
         [ 0.1554, -0.0877, -0.0726,  ..., -0.0688,  0.0482,  0.0279],
         ...,
         [ 0.1565, -0.0943, -0.0732,  ..., -0.0620,  0.0536,  0.0254],
         [ 0.1582, -0.0828, -0.0771,  ..., -0.0678,  0.0457,  0.0300],
         [ 0.1532, -0.0885, -0.0678,  ..., -0.0671,  0.0524,  0.0376]]]), modified_attrs={}, prev=None) 22896732127584 22896801925936
obj: tensor([[[ 0.1573, -0.0905, -0.0753,  ..., -0.0698,  0.0533,  0.0284],
         [ 0.1592, -0.0927, -0.0756,  ..., -0.0613,  0.0507,  0.0300],
         [ 0.1554, -0.0877, -0.0726,  ..., -0.0688,  0.0482,  0.0279],
         ...,
         [ 0.1565, -0.0943, -0.0732,  ..., -0.0620,  0.0536,  0.0254],
         [ 0.1582, -0.0828, -0.0771,  ..., -0.0678,  0.0457,  0.0300],
         [ 0.1532, -0.0885, -0.0678,  ..., -0.0671,  0.0524,  0.0376]]]) 22896801925936
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.1573, -0.0905, -0.0753,  ..., -0.0698,  0.0533,  0.0284],
         [ 0.1592, -0.0927, -0.0756,  ..., -0.0613,  0.0507,  0.0300],
         [ 0.1554, -0.0877, -0.0726,  ..., -0.0688,  0.0482,  0.0279],
         ...,
         [ 0.1565, -0.0943, -0.0732,  ..., -0.0620,  0.0536,  0.0254],
         [ 0.1582, -0.0828, -0.0771,  ..., -0.0678,  0.0457,  0.0300],
         [ 0.1532, -0.0885, -0.0678,  ..., -0.0671,  0.0524,  0.0376]]]), modified_attrs={}, prev=None) 22896732199472
tracing opcode RETURN_VALUE None pc=74 frame=3(0x13115500)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x160ef330)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x160ef330)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x160ef330)
tracing opcode LOAD_FAST None pc=34 frame=16(0x160ef330)
tracing opcode LOAD_FAST None pc=36 frame=16(0x160ef330)
load fast: 22896803361552
tracing opcode BINARY_ADD None pc=38 frame=16(0x160ef330)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x160ef330)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d313d2b040)
push tracker due to record
push tracker 2 frame 0x14d313d2b040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d313d2b040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d313d2b040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d313d2b040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d313d2b040)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d313d2b040)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d313d2b040)
load fast: 22896801926736
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d313d2b040)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d313d2b040)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d313d2b040)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d313d2b040)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d313d2b040)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d313d2b040)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d313d2b040)
record function in graph <built-in method mean of Tensor object at 0x14d313bece50>
func self id: 22896801926736
tracing opcode STORE_FAST None pc=36 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d313d2b040)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d313d2b040)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d313d2b040)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d313d2b040)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d313d2b040)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d313d2b040)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d313d2b040)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d313d2b040)
record function in graph <built-in method mean of Tensor object at 0x14d30f962900>
func self id: 22896732154112
tracing opcode STORE_FAST None pc=60 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d313d2b040)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d313d2b040)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d313d2b040)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d313d2b040)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d313d2b040)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d313d2b040)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d313d2b040)
load fast: 22897554163408
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d313d2b040)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d313d2b040)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d313d2b040)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d313d2b040)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d313d2b040)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d313d2b040)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d313d2b040)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d313d2b040)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d313d2b040)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d313d2b040)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d313d2b040)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d313d2b040)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d313d2b040)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d313d2b040)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d313d2b040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d313d2b040)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d313d2b040)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d313d2b040)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_280 : [#users=4] = placeholder[target=tensor_280]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_280,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_280, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_280, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_280, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d313bece50>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d313d2b040)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x160ef330)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x160ef330)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x160ef330)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_277 : [#users=1] = placeholder[target=tensor_277]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_277,), kwargs = {})
    %tensor_279 : [#users=1] = placeholder[target=tensor_279]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_279), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x160ef330)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x14a15de0)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x14a15de0)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x14a15de0)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x14a15de0)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_256 : [#users=2] = placeholder[target=tensor_256]
    %tensor_257 : [#users=1] = placeholder[target=tensor_257]
    %tensor_258 : [#users=1] = placeholder[target=tensor_258]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_256,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_258, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_264 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_264, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_257, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_256), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x14a15de0)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x190a64f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x190a64f0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x190a64f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x190a64f0)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x190a64f0)
tracing opcode LOAD_FAST None pc=48 frame=9(0x190a64f0)
tracing opcode CALL_METHOD None pc=50 frame=9(0x190a64f0)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d313d2b440)
push tracker due to record
push tracker 17 frame 0x14d313d2b440 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d313d2b440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d313d2b440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d313d2b440 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d313d2b440)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d313d2b440)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d313d2b440)
load fast: 22897554163504
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d313d2b440)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d313d2b440)
load fast: 22896732341488
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d313d2b440)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d313d2b440)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d313d2b440)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d313d2b440)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d313d2b440)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d313d2b440)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x179c89b0)
push tracker due to record
push tracker 18 frame 0x179c89b0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x179c89b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x179c89b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x179c89b0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x179c89b0)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x179c89b0)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x179c89b0)
load fast: 22897554163600
tracing opcode LOAD_METHOD None pc=12 frame=18(0x179c89b0)
tracing opcode LOAD_FAST None pc=14 frame=18(0x179c89b0)
load fast: 22896731956384
tracing opcode CALL_METHOD None pc=16 frame=18(0x179c89b0)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x179c89b0)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_282 : [#users=1] = placeholder[target=tensor_282]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_282,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x179c89b0)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d313d2b440)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d313d2b440)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d313d2b440)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_281 : [#users=1] = placeholder[target=tensor_281]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_281,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d313d2b440)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x190a64f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x190a64f0)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x190a64f0)
tracing opcode LOAD_FAST None pc=58 frame=9(0x190a64f0)
tracing opcode LOAD_FAST None pc=60 frame=9(0x190a64f0)
tracing opcode CALL_METHOD None pc=62 frame=9(0x190a64f0)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x163f7a80)
push tracker due to record
push tracker 19 frame 0x163f7a80 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x163f7a80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x163f7a80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x163f7a80 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x163f7a80)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x163f7a80)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x163f7a80)
load fast: 22897554163648
tracing opcode LOAD_METHOD None pc=12 frame=19(0x163f7a80)
tracing opcode LOAD_FAST None pc=14 frame=19(0x163f7a80)
load fast: 22896731956864
tracing opcode CALL_METHOD None pc=16 frame=19(0x163f7a80)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x163f7a80)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x163f7a80)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x163f7a80)
tracing opcode LOAD_FAST None pc=24 frame=19(0x163f7a80)
tracing opcode CALL_METHOD None pc=26 frame=19(0x163f7a80)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d313c99440)
push tracker due to record
push tracker 3 frame 0x14d313c99440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d313c99440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d313c99440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d313c99440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d313c99440)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d313c99440)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d313c99440)
load fast: 22897554163792
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d313c99440)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d313c99440)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d313c99440)
load fast: 22896732035088
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d313c99440)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_284 : [#users=0] = placeholder[target=tensor_284]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.4061, -0.4852,  0.9924,  ..., -0.3093,  0.6489, -0.0651],
         [-0.2316, -0.0139,  0.5957,  ..., -0.2747,  0.0190, -0.6335],
         [ 0.1300,  0.1616, -0.1054,  ...,  0.0847,  0.0303, -0.4759],
         ...,
         [-0.1150,  0.4119,  0.9867,  ...,  0.4153, -0.0124, -0.2116],
         [-0.3954, -0.5880,  0.7801,  ...,  0.6276, -0.2084, -0.3202],
         [-0.2476, -0.3169,  0.3568,  ...,  0.2323, -0.3181,  0.0745]]]), modified_attrs={}, prev=None) 22896732027008 22896732035088
obj: tensor([[[-0.4061, -0.4852,  0.9924,  ..., -0.3093,  0.6489, -0.0651],
         [-0.2316, -0.0139,  0.5957,  ..., -0.2747,  0.0190, -0.6335],
         [ 0.1300,  0.1616, -0.1054,  ...,  0.0847,  0.0303, -0.4759],
         ...,
         [-0.1150,  0.4119,  0.9867,  ...,  0.4153, -0.0124, -0.2116],
         [-0.3954, -0.5880,  0.7801,  ...,  0.6276, -0.2084, -0.3202],
         [-0.2476, -0.3169,  0.3568,  ...,  0.2323, -0.3181,  0.0745]]]) 22896732035088
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.4061, -0.4852,  0.9924,  ..., -0.3093,  0.6489, -0.0651],
         [-0.2316, -0.0139,  0.5957,  ..., -0.2747,  0.0190, -0.6335],
         [ 0.1300,  0.1616, -0.1054,  ...,  0.0847,  0.0303, -0.4759],
         ...,
         [-0.1150,  0.4119,  0.9867,  ...,  0.4153, -0.0124, -0.2116],
         [-0.3954, -0.5880,  0.7801,  ...,  0.6276, -0.2084, -0.3202],
         [-0.2476, -0.3169,  0.3568,  ...,  0.2323, -0.3181,  0.0745]]]), modified_attrs={}, prev=None) 22896732050528
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d313c99440)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x163f7a80)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x163f7a80)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x163f7a80)
tracing opcode LOAD_FAST None pc=34 frame=19(0x163f7a80)
tracing opcode LOAD_FAST None pc=36 frame=19(0x163f7a80)
load fast: 22896732341488
tracing opcode BINARY_ADD None pc=38 frame=19(0x163f7a80)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x163f7a80)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14a02560)
push tracker due to record
push tracker 2 frame 0x14a02560 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14a02560)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14a02560)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14a02560 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14a02560)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14a02560)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14a02560)
load fast: 22896732111232
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14a02560)
tracing opcode STORE_FAST None pc=14 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14a02560)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14a02560)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14a02560)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14a02560)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14a02560)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14a02560)
record function in graph <built-in method mean of Tensor object at 0x14d30f958180>
func self id: 22896732111232
tracing opcode STORE_FAST None pc=36 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14a02560)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14a02560)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14a02560)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14a02560)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14a02560)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14a02560)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14a02560)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14a02560)
record function in graph <built-in method mean of Tensor object at 0x14d30f945ef0>
func self id: 22896732036848
tracing opcode STORE_FAST None pc=60 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14a02560)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14a02560)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14a02560)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14a02560)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14a02560)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14a02560)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14a02560)
load fast: 22897554163744
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14a02560)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14a02560)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14a02560)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14a02560)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14a02560)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14a02560)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14a02560)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14a02560)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14a02560)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14a02560)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14a02560)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14a02560)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14a02560)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14a02560)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14a02560)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14a02560)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14a02560)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14a02560)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_286 : [#users=4] = placeholder[target=tensor_286]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_286,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_286, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_286, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_286, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d30f958180>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14a02560)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x163f7a80)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x163f7a80)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x163f7a80)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_283 : [#users=1] = placeholder[target=tensor_283]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_283,), kwargs = {})
    %tensor_285 : [#users=1] = placeholder[target=tensor_285]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_285), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x163f7a80)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x190a64f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x190a64f0)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x190a64f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x190a64f0)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x190a64f0)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_253 : [#users=2] = placeholder[target=tensor_253]
    %tensor_254 : [#users=1] = placeholder[target=tensor_254]
    %tensor_255 : [#users=1] = placeholder[target=tensor_255]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_253,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_255, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_264 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_264, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_254, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_253), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x190a64f0)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x8ae3400)
push tracker due to record
push tracker 9 frame 0x8ae3400 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x8ae3400)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x8ae3400)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x8ae3400 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x8ae3400)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x8ae3400)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x8ae3400)
load fast: 22897554163840
tracing opcode LOAD_ATTR None pc=12 frame=9(0x8ae3400)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x8ae3400)
load fast: 22896731674080
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x8ae3400)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x8ae3400)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x8ae3400)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x8ae3400)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x8ae3400)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x8ae3400)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x8ae3400)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x13119e50)
push tracker due to record
push tracker 10 frame 0x13119e50 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x13119e50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x13119e50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x13119e50 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x13119e50)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x13119e50)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x13119e50)
load fast: 22897554163888
tracing opcode LOAD_ATTR None pc=12 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x13119e50)
load fast: 22896731674080
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x13119e50)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x13119e50)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x13119e50)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x13119e50)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x13119e50)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x13119e50)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x13119e50)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x8afb040)
push tracker due to record
push tracker 11 frame 0x8afb040 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x8afb040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x8afb040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x8afb040 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x8afb040)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x8afb040)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x8afb040)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x8afb040)
tracing opcode IS_OP None pc=16 frame=11(0x8afb040)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x8afb040)
load fast: 22897554163936
tracing opcode LOAD_METHOD None pc=22 frame=11(0x8afb040)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x8afb040)
load fast: 22896731674080
tracing opcode CALL_METHOD None pc=26 frame=11(0x8afb040)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=34 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=36 frame=11(0x8afb040)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1a99db80)
push tracker due to record
push tracker 12 frame 0x1a99db80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1a99db80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1a99db80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1a99db80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1a99db80)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1a99db80)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1a99db80)
load fast: 22897087165680
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1a99db80)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1a99db80)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1a99db80)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1a99db80)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1a99db80)
load fast: 22897554163936
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1a99db80)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1a99db80)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1a99db80)
tracing opcode STORE_FAST None pc=34 frame=12(0x1a99db80)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1a99db80)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1a99db80)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1a99db80)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1a99db80)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1a99db80)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1a99db80)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1a99db80)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1a99db80)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1a99db80)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1a99db80)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_294 : [#users=1] = placeholder[target=tensor_294]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_294, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1a99db80)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=40 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=42 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=44 frame=11(0x8afb040)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x8afb040)
record function in graph <built-in method chunk of Tensor object at 0x14d313befcc0>
func self id: 22896801938624
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x8afb040)
sub_value 22897158450928 tensor([[[[ 0.5170,  0.3058,  0.0274,  ..., -0.9006, -0.1287,  0.1179],
          [-0.4151,  0.2017,  0.0596,  ...,  0.4637, -0.1438,  0.3700],
          [ 1.0677, -0.1231, -0.4979,  ...,  0.1897,  0.5527, -0.0326],
          ...,
          [ 0.8829,  0.5786,  0.1147,  ...,  0.4816,  0.1903,  0.1563],
          [-0.2188,  0.1310, -0.6056,  ...,  0.0283,  1.0515, -0.4892],
          [ 1.2190,  0.4327,  0.5504,  ..., -0.2012,  0.3478, -0.2312]],

         [[ 0.4742, -1.0666,  0.3851,  ..., -0.3366,  0.6444, -0.3403],
          [-0.2279, -0.7934, -0.8024,  ..., -0.2648,  0.4168,  0.3029],
          [-0.3237, -0.0913, -0.3143,  ...,  0.5772,  0.1101, -0.5412],
          ...,
          [ 0.8016, -1.5962,  0.4368,  ...,  0.5821, -1.2102, -1.4242],
          [ 0.4963, -0.3834,  0.1438,  ...,  0.5440,  0.3156, -0.6057],
          [ 0.0889, -0.6596,  0.0422,  ..., -0.7768,  0.6617, -0.3908]],

         [[-0.3915,  0.6366,  0.1906,  ..., -0.0366, -1.4709,  0.1382],
          [-0.9535,  0.5484, -0.4585,  ..., -0.3592, -0.2258, -0.1998],
          [-0.2804, -0.5669, -0.8133,  ...,  0.2497,  0.2787, -0.0288],
          ...,
          [ 0.2028,  0.3941, -0.3160,  ...,  0.6178,  0.2741, -0.2016],
          [ 0.2708,  0.1448, -0.0253,  ...,  1.1006, -0.3542, -0.1193],
          [ 0.9630,  0.2853, -0.2565,  ..., -0.1549,  0.2256, -0.3459]],

         ...,

         [[-0.1022, -0.0821,  0.6508,  ..., -0.7357, -0.1549,  0.8421],
          [-0.1899, -0.1608, -0.7882,  ...,  0.7737, -0.6598,  0.2396],
          [-0.9476, -0.3974,  0.3877,  ...,  0.8086,  0.4827,  0.8782],
          ...,
          [ 0.2237,  0.5250,  0.5325,  ..., -0.2636,  0.0031,  0.8605],
          [-0.5275, -0.4721,  0.4381,  ...,  0.6747, -0.8586,  0.4415],
          [-0.5867, -0.4612, -0.0742,  ...,  0.2253,  0.1556,  0.5154]],

         [[ 0.8135,  0.4695,  0.2667,  ...,  0.5816,  0.0459,  0.7523],
          [ 0.2172,  0.0940, -0.8466,  ...,  0.0836, -0.9181, -0.2134],
          [-0.5587,  0.2545, -0.6899,  ..., -0.2130, -0.0478,  1.0478],
          ...,
          [ 0.1311,  0.3226,  0.3392,  ...,  0.3501, -0.1319,  1.0200],
          [-0.4088,  0.2081, -0.3866,  ..., -0.4126,  0.0707, -0.6570],
          [ 0.0765,  0.4327, -0.4460,  ...,  0.8202,  0.2402,  0.3540]],

         [[ 0.1125, -0.5763,  0.0910,  ..., -0.1507, -0.0193,  0.3823],
          [-0.0309, -0.4349,  0.1767,  ..., -0.6079,  0.7820,  0.3696],
          [ 0.0637,  0.7048, -0.4632,  ...,  0.2689, -0.2551,  0.5550],
          ...,
          [ 0.0995, -0.6761, -0.0850,  ..., -0.6323, -0.1561, -0.7167],
          [-0.1358,  0.2740,  0.0961,  ...,  0.6278,  0.4563,  0.8208],
          [-0.4260, -0.5043, -0.1401,  ...,  0.0347, -1.5688, -0.1028]]]])
sub_value 22896802126000 tensor([[[[-8.6343e-02,  7.1838e-01,  4.7624e-01,  ..., -3.3892e-02,
           -5.2709e-01,  5.7487e-01],
          [ 8.8152e-01,  9.5532e-01, -4.9189e-01,  ..., -5.2923e-01,
           -4.8087e-01,  5.8489e-01],
          [ 4.7757e-02,  2.7561e-01,  8.7335e-01,  ..., -5.7418e-02,
            1.3772e+00,  4.5329e-01],
          ...,
          [ 5.4123e-01,  6.8588e-01,  3.9450e-01,  ...,  4.4940e-01,
            7.1083e-01, -3.4417e-01],
          [ 7.5126e-01,  1.3307e-01, -4.6767e-01,  ..., -3.6067e-01,
            2.9569e-01,  5.3494e-01],
          [-2.8426e-01, -4.6544e-01, -4.5224e-01,  ...,  4.6896e-01,
            8.3249e-01, -9.0104e-01]],

         [[ 3.8617e-01,  5.3447e-01, -7.8445e-01,  ...,  6.5424e-01,
            5.1862e-01,  2.9407e-01],
          [ 8.0555e-01,  5.6097e-01,  1.0597e+00,  ...,  1.3797e-01,
           -5.2213e-01,  2.6689e-01],
          [ 7.8635e-01,  6.0991e-01, -8.0335e-01,  ...,  1.0313e+00,
            5.8790e-01,  8.4669e-01],
          ...,
          [-4.4539e-02,  1.0130e+00, -8.0291e-02,  ...,  1.0317e+00,
           -7.8767e-01,  1.3180e+00],
          [-3.5862e-01, -6.6742e-02,  1.4647e-02,  ..., -3.8282e-01,
            4.3044e-01, -2.2523e-01],
          [ 1.3991e+00, -2.6324e-01, -1.8087e-02,  ...,  2.6396e-01,
           -1.9723e-01, -2.5508e-01]],

         [[ 1.0725e+00,  7.9392e-01,  1.0686e+00,  ..., -1.4673e-01,
            1.7139e-01,  6.1288e-01],
          [-1.5294e-03,  1.0987e+00, -4.5398e-01,  ..., -1.3841e+00,
           -3.7760e-01,  5.9262e-01],
          [ 1.1351e+00,  4.0654e-01,  1.1716e-01,  ...,  3.2063e-01,
           -5.2645e-01,  4.9341e-01],
          ...,
          [ 2.4202e-02,  9.7386e-01,  4.2401e-01,  ..., -3.3607e-01,
           -3.0765e-01,  8.7563e-01],
          [ 6.2469e-01,  7.9710e-01, -4.0394e-01,  ..., -1.0220e+00,
           -3.4822e-01, -4.2141e-01],
          [ 1.4187e+00,  7.0443e-01, -5.0898e-01,  ...,  2.5859e-01,
            5.5150e-01,  8.3024e-01]],

         ...,

         [[-1.3633e+00, -3.2880e-01,  1.2663e+00,  ...,  2.8937e-01,
            9.3963e-01,  5.8085e-01],
          [-1.9244e-01, -2.0091e-01,  4.0206e-01,  ..., -2.5279e-01,
            5.8375e-03, -2.1381e-02],
          [-2.4372e-01, -1.0516e+00,  8.4509e-01,  ..., -7.1232e-01,
            5.6851e-01, -2.0177e-01],
          ...,
          [-3.0897e-01,  1.2358e-02, -1.2948e+00,  ..., -8.2255e-01,
            6.9683e-02, -5.1396e-01],
          [-1.0034e+00, -6.6614e-01,  4.7132e-01,  ..., -1.2329e+00,
            2.7631e-01,  2.7211e-01],
          [-1.3762e+00,  9.3090e-03,  9.8344e-01,  ..., -9.8082e-01,
           -1.0414e-01, -2.8416e-02]],

         [[-2.1752e-01, -5.6554e-02,  7.9312e-01,  ..., -7.1331e-02,
           -8.8175e-02, -4.3393e-01],
          [-7.6605e-01, -1.2088e-01, -1.0652e+00,  ...,  3.1973e-01,
           -9.9475e-01, -4.9068e-01],
          [ 1.3366e-01, -4.5614e-01,  1.0827e-01,  ..., -3.8166e-01,
           -4.4612e-01, -1.0478e+00],
          ...,
          [ 1.2495e-01,  1.5329e-01,  1.0778e+00,  ...,  6.1276e-01,
           -1.0030e+00, -4.7118e-01],
          [ 2.9469e-02, -8.7788e-01, -3.7115e-02,  ..., -8.9632e-02,
           -1.1886e+00,  1.2175e-01],
          [-8.9835e-01,  1.7039e-01, -6.7480e-01,  ...,  3.6761e-01,
           -5.7134e-01,  8.7328e-02]],

         [[ 2.0985e-01, -5.7488e-01,  5.8907e-01,  ..., -7.2389e-01,
           -5.4498e-01, -2.7051e-01],
          [ 3.2216e-01, -2.3092e-01,  9.8374e-01,  ...,  1.2313e+00,
            4.7510e-01, -5.4020e-01],
          [-2.3360e-01, -2.5927e-01,  8.1807e-01,  ..., -2.3880e-01,
           -1.6183e-02, -1.0391e+00],
          ...,
          [ 3.4926e-01, -2.0222e-01, -1.8739e-01,  ..., -1.2228e-01,
            3.9905e-01, -8.9195e-01],
          [ 1.2567e+00,  9.3281e-01,  5.1735e-01,  ...,  3.2442e-01,
           -3.2531e-02, -1.7645e+00],
          [-3.8252e-01,  1.7400e-03, -5.3579e-01,  ..., -4.4826e-02,
           -2.6541e-01, -6.5689e-01]]]])
sub_value 22896802126640 tensor([[[[ 0.4649, -0.4676, -0.0286,  ...,  0.2601, -0.5679,  0.7501],
          [ 0.3674,  0.2314, -0.6200,  ...,  0.7602,  0.3770,  0.0243],
          [ 0.6172, -0.2633, -0.1375,  ..., -0.0062, -0.6921, -0.0446],
          ...,
          [ 0.2968,  0.2019,  0.2473,  ..., -0.1801,  0.2264,  0.4409],
          [-0.0800, -0.4764, -0.0421,  ..., -0.0561,  0.3076,  0.4216],
          [ 0.4719, -0.2977, -0.8638,  ..., -0.8551,  0.3400, -0.2780]],

         [[-0.8058, -0.7100, -0.2953,  ..., -0.3879,  0.6215,  0.1571],
          [-0.2796, -0.5463,  0.0748,  ..., -0.0630,  0.0712,  0.8319],
          [ 0.3697, -0.5054,  0.0242,  ...,  0.1053, -0.1323, -0.3900],
          ...,
          [-0.6183,  0.9610, -0.9473,  ...,  0.4930,  0.1133,  0.4405],
          [ 1.3212, -0.1281, -0.2956,  ...,  0.5479, -0.0911, -0.0910],
          [ 0.2292, -0.1949,  0.1287,  ...,  0.0361,  0.1519, -0.3350]],

         [[-0.0379, -0.4091,  0.2047,  ...,  0.2273, -0.2192, -0.0309],
          [-0.2062, -1.9350, -0.4917,  ...,  0.7328,  0.0182,  0.9045],
          [ 0.2569,  0.7232,  0.1270,  ..., -0.0925,  0.8296,  0.4757],
          ...,
          [-0.9487, -0.5985,  1.1067,  ...,  0.4927,  1.4325, -0.4202],
          [-0.4040,  0.1022, -0.2499,  ...,  0.8001,  0.5749,  0.6352],
          [-0.1008, -0.6197, -0.2892,  ...,  0.9673, -0.7910,  0.3332]],

         ...,

         [[-0.0719,  1.5365, -0.6395,  ..., -0.7199, -0.0414,  0.4034],
          [-0.2173, -0.6457,  0.1598,  ..., -0.6022,  0.8477, -0.3222],
          [ 0.4497,  0.2358, -0.0795,  ..., -0.5448, -0.1453,  0.5049],
          ...,
          [-0.5781,  0.2264,  0.1572,  ..., -0.6687, -0.1054,  0.1484],
          [-0.1614, -0.0173, -0.3648,  ..., -0.1050,  0.8565,  0.1872],
          [-0.1134,  0.2859,  0.1516,  ..., -0.2528, -0.4270, -0.3950]],

         [[ 0.0234, -0.5454,  0.3320,  ...,  0.0238, -0.2846,  0.0625],
          [-0.6363,  1.1576, -0.3162,  ..., -0.8987, -0.3559,  0.1038],
          [-0.1209,  0.0988, -0.1138,  ..., -0.2538,  0.2999,  0.0229],
          ...,
          [-0.3660,  0.2833,  0.3256,  ...,  0.0813, -0.3353,  0.3586],
          [-0.0520, -0.2582,  0.2699,  ...,  0.4087, -0.3267, -0.6370],
          [-0.7632,  1.0253,  1.0062,  ..., -0.6721,  1.0914, -0.1168]],

         [[ 0.3837,  0.4383, -0.3723,  ..., -1.1572, -0.6199, -0.7880],
          [ 0.7417,  0.3861, -0.0406,  ..., -0.0160, -0.1992, -0.7067],
          [-0.1847, -0.1427, -0.8214,  ..., -0.1082, -0.6720,  0.3168],
          ...,
          [ 0.5365, -1.7016,  0.6067,  ..., -1.0166, -0.6815,  0.1451],
          [ 0.8546, -0.7312,  0.1463,  ..., -0.9115, -1.0749, -0.2444],
          [ 0.3769,  0.7961,  0.3085,  ..., -0.6408, -0.9438,  0.2696]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x8afb040)
tracing opcode STORE_FAST None pc=52 frame=11(0x8afb040)
tracing opcode STORE_FAST None pc=54 frame=11(0x8afb040)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x8afb040)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x8afb040)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=232 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=234 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=236 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=238 frame=11(0x8afb040)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x8afb040)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x8afb040)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x8afb040)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x8afb040)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d30f957040)
push tracker due to record
push tracker 12 frame 0x14d30f957040 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d30f957040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d30f957040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d30f957040 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d30f957040)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d30f957040)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d30f957040)
load fast: 22896801935584
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d30f957040)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d30f957040)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d30f957040)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d30f957040)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d30f957040)
load fast: 22897554163936
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d30f957040)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d30f957040)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d30f957040)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d30f957040)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d30f957040)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d30f957040)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d30f957040)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d30f957040)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d30f957040)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d30f957040)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d30f957040)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d30f957040)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d30f957040)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d30f957040)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_295 : [#users=1] = placeholder[target=tensor_295]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_295, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d30f957040)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x8afb040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x8afb040)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x8afb040)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=262 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=264 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=266 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=268 frame=11(0x8afb040)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x8afb040)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x8afb040)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x8afb040)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x8afb040)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1015be60)
push tracker due to record
push tracker 12 frame 0x1015be60 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1015be60)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1015be60)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1015be60 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1015be60)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1015be60)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1015be60)
load fast: 22896803676048
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1015be60)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1015be60)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1015be60)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1015be60)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1015be60)
load fast: 22897554163936
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1015be60)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1015be60)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1015be60)
tracing opcode STORE_FAST None pc=34 frame=12(0x1015be60)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1015be60)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1015be60)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1015be60)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1015be60)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1015be60)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1015be60)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1015be60)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1015be60)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1015be60)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1015be60)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_296 : [#users=1] = placeholder[target=tensor_296]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_296, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1015be60)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x8afb040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x8afb040)
tracing opcode STORE_FAST None pc=284 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x8afb040)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x8afb040)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x8afb040)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x8afb040)
tracing opcode BINARY_ADD None pc=296 frame=11(0x8afb040)
tracing opcode STORE_FAST None pc=298 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x8afb040)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=308 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=312 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=314 frame=11(0x8afb040)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=320 frame=11(0x8afb040)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x8afb040)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x8afb040)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x8afb040)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x8afb040)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=334 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=338 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=342 frame=11(0x8afb040)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x8afb040)
record function in graph <built-in method to of Tensor object at 0x14d31c41ef90>
func self id: 22896944738192
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x8afb040)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=354 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=356 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=360 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=362 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=364 frame=11(0x8afb040)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x8afb040)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x8afb040)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=382 frame=11(0x8afb040)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x8afb040)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d313d2bc40)
push tracker due to record
push tracker 3 frame 0x14d313d2bc40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d313d2bc40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d313d2bc40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d313d2bc40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d313d2bc40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d313d2bc40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d313d2bc40)
load fast: 22897554164032
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d313d2bc40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d313d2bc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d313d2bc40)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d313d2bc40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d313d2bc40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=392 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=394 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=396 frame=11(0x8afb040)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=400 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=402 frame=11(0x8afb040)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x1a9a8b20)
push tracker due to record
push tracker 13 frame 0x1a9a8b20 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x1a9a8b20)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x1a9a8b20)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x1a9a8b20 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x1a9a8b20)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x1a9a8b20)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x1a9a8b20)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x1a9a8b20)
tracing opcode IS_OP None pc=16 frame=13(0x1a9a8b20)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=54 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=56 frame=13(0x1a9a8b20)
tracing opcode COMPARE_OP None pc=58 frame=13(0x1a9a8b20)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=84 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=86 frame=13(0x1a9a8b20)
tracing opcode COMPARE_OP None pc=88 frame=13(0x1a9a8b20)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=96 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=98 frame=13(0x1a9a8b20)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x1a9a8b20)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x1a9a8b20)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=138 frame=13(0x1a9a8b20)
load fast: 22896944970784
tracing opcode LOAD_METHOD None pc=140 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=142 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=144 frame=13(0x1a9a8b20)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x1a9a8b20)
load fast: 22896802126000
tracing opcode LOAD_METHOD None pc=148 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=150 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=152 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=156 frame=13(0x1a9a8b20)
load fast: 22897554163936
tracing opcode LOAD_ATTR None pc=158 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x1a9a8b20)
tracing opcode STORE_FAST None pc=162 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=168 frame=13(0x1a9a8b20)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=172 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=176 frame=13(0x1a9a8b20)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x1a9a8b20)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=186 frame=13(0x1a9a8b20)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=190 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=194 frame=13(0x1a9a8b20)
tracing opcode BINARY_ADD None pc=196 frame=13(0x1a9a8b20)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=200 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=202 frame=13(0x1a9a8b20)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x1a9a8b20)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x1a9a8b20)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x1a9a8b20)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x1a9a8b20)
tracing opcode STORE_FAST None pc=220 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=224 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x1a9a8b20)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x1a9a8b20)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=238 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=240 frame=13(0x1a9a8b20)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=248 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=250 frame=13(0x1a9a8b20)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1014cf80)
push tracker due to record
push tracker 12 frame 0x1014cf80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1014cf80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1014cf80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1014cf80 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1014cf80)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1014cf80)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1014cf80)
load fast: 22896731958224
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1014cf80)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1014cf80)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1014cf80)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1014cf80)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1014cf80)
load fast: 22897554163936
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1014cf80)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1014cf80)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1014cf80)
tracing opcode STORE_FAST None pc=34 frame=12(0x1014cf80)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1014cf80)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1014cf80)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1014cf80)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1014cf80)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1014cf80)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1014cf80)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1014cf80)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1014cf80)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1014cf80)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1014cf80)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_301 : [#users=1] = placeholder[target=tensor_301]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_301, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1014cf80)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=258 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=260 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=264 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=266 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=268 frame=13(0x1a9a8b20)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x1a9a8b20)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=278 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=280 frame=13(0x1a9a8b20)
tracing opcode BINARY_ADD None pc=282 frame=13(0x1a9a8b20)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=286 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=288 frame=13(0x1a9a8b20)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=292 frame=13(0x1a9a8b20)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=296 frame=13(0x1a9a8b20)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=304 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=306 frame=13(0x1a9a8b20)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=310 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=312 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=314 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x1a9a8b20)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x1a9ae330)
push tracker due to record
push tracker 14 frame 0x1a9ae330 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x1a9ae330)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x1a9ae330)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x1a9ae330 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x1a9ae330)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x1a9ae330)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x1a9ae330)
load fast: 22896873225328
tracing opcode LOAD_METHOD None pc=12 frame=14(0x1a9ae330)
tracing opcode LOAD_FAST None pc=14 frame=14(0x1a9ae330)
load fast: 22896944970784
tracing opcode LOAD_METHOD None pc=16 frame=14(0x1a9ae330)
tracing opcode LOAD_CONST None pc=18 frame=14(0x1a9ae330)
tracing opcode CALL_METHOD None pc=20 frame=14(0x1a9ae330)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x1a9ae330)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x1a9ae330)
tracing opcode LOAD_CONST None pc=26 frame=14(0x1a9ae330)
tracing opcode CALL_METHOD None pc=28 frame=14(0x1a9ae330)
tracing opcode LOAD_FAST None pc=30 frame=14(0x1a9ae330)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x1a9ae330)
tracing opcode LOAD_CONST None pc=34 frame=14(0x1a9ae330)
tracing opcode CALL_METHOD None pc=36 frame=14(0x1a9ae330)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x1a9ae330)
load fast: 22897552959024
tracing opcode LOAD_METHOD None pc=40 frame=14(0x1a9ae330)
tracing opcode LOAD_CONST None pc=42 frame=14(0x1a9ae330)
tracing opcode CALL_METHOD None pc=44 frame=14(0x1a9ae330)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x1a9ae330)
tracing opcode CALL_METHOD None pc=48 frame=14(0x1a9ae330)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x1a9ae330)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_302 : [#users=1] = placeholder[target=tensor_302]
    %tensor_303 : [#users=0] = placeholder[target=tensor_303]
    %tensor_304 : [#users=0] = placeholder[target=tensor_304]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_302, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x1a9ae330)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x1a9a8b20)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=326 frame=13(0x1a9a8b20)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x1a9a8b20)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=334 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x1a9a8b20)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x1a9a8b20)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=348 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=350 frame=13(0x1a9a8b20)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=358 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=360 frame=13(0x1a9a8b20)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x147b30f0)
push tracker due to record
push tracker 12 frame 0x147b30f0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x147b30f0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x147b30f0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x147b30f0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x147b30f0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x147b30f0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x147b30f0)
load fast: 22897087620896
tracing opcode LOAD_METHOD None pc=12 frame=12(0x147b30f0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x147b30f0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x147b30f0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x147b30f0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x147b30f0)
load fast: 22897554163936
tracing opcode LOAD_ATTR None pc=26 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x147b30f0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x147b30f0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x147b30f0)
tracing opcode STORE_FAST None pc=34 frame=12(0x147b30f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x147b30f0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x147b30f0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x147b30f0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x147b30f0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x147b30f0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x147b30f0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x147b30f0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x147b30f0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x147b30f0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x147b30f0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_305 : [#users=1] = placeholder[target=tensor_305]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_305, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x147b30f0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x1a9a8b20)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x1a9a8b20)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=374 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=378 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=380 frame=13(0x1a9a8b20)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=386 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x1a9a8b20)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x1a9a8b20)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x1a9a8b20)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x1a9a8b20)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x1a9a8b20)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=404 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=406 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=408 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=412 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=414 frame=13(0x1a9a8b20)
tracing opcode COMPARE_OP None pc=416 frame=13(0x1a9a8b20)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x1a9a8b20)
tracing opcode STORE_FAST None pc=452 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=458 frame=13(0x1a9a8b20)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x1a9a8b20)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x1a9a8b20)
tracing opcode BINARY_ADD None pc=464 frame=13(0x1a9a8b20)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=468 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=470 frame=13(0x1a9a8b20)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=474 frame=13(0x1a9a8b20)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=478 frame=13(0x1a9a8b20)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=486 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=488 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=492 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=494 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=496 frame=13(0x1a9a8b20)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=500 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=504 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x1a9a8b20)
record function in graph <built-in method to of Tensor object at 0x14d324d48040>
func self id: 22897088561216
tracing opcode CALL_METHOD None pc=508 frame=13(0x1a9a8b20)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x1a9a8b20)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=518 frame=13(0x1a9a8b20)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=522 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=524 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=526 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x1a9a8b20)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0xbab2600)
push tracker due to record
push tracker 15 frame 0xbab2600 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0xbab2600)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0xbab2600)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0xbab2600 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0xbab2600)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0xbab2600)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0xbab2600)
load fast: 22897017578176
tracing opcode LOAD_METHOD None pc=12 frame=15(0xbab2600)
tracing opcode LOAD_FAST None pc=14 frame=15(0xbab2600)
load fast: 22896944970784
tracing opcode LOAD_METHOD None pc=16 frame=15(0xbab2600)
tracing opcode LOAD_CONST None pc=18 frame=15(0xbab2600)
tracing opcode CALL_METHOD None pc=20 frame=15(0xbab2600)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0xbab2600)
tracing opcode LOAD_METHOD None pc=24 frame=15(0xbab2600)
tracing opcode LOAD_CONST None pc=26 frame=15(0xbab2600)
tracing opcode CALL_METHOD None pc=28 frame=15(0xbab2600)
tracing opcode LOAD_FAST None pc=30 frame=15(0xbab2600)
load fast: 22896802126000
tracing opcode LOAD_METHOD None pc=32 frame=15(0xbab2600)
tracing opcode LOAD_CONST None pc=34 frame=15(0xbab2600)
tracing opcode CALL_METHOD None pc=36 frame=15(0xbab2600)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0xbab2600)
tracing opcode LOAD_METHOD None pc=40 frame=15(0xbab2600)
tracing opcode LOAD_CONST None pc=42 frame=15(0xbab2600)
tracing opcode CALL_METHOD None pc=44 frame=15(0xbab2600)
tracing opcode BUILD_LIST None pc=46 frame=15(0xbab2600)
tracing opcode CALL_METHOD None pc=48 frame=15(0xbab2600)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0xbab2600)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_306 : [#users=1] = placeholder[target=tensor_306]
    %tensor_307 : [#users=0] = placeholder[target=tensor_307]
    %tensor_308 : [#users=0] = placeholder[target=tensor_308]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_306, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0xbab2600)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x1a9a8b20)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x1a9a8b20)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=538 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x1a9a8b20)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=548 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=550 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=552 frame=13(0x1a9a8b20)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x1a9a8b20)
tracing opcode LOAD_CONST None pc=556 frame=13(0x1a9a8b20)
tracing opcode CALL_METHOD None pc=558 frame=13(0x1a9a8b20)
tracing opcode COMPARE_OP None pc=560 frame=13(0x1a9a8b20)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x1a9a8b20)
tracing opcode LOAD_FAST None pc=626 frame=13(0x1a9a8b20)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x1a9a8b20)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x1a9a8b20)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x1a9a8b20)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x1a9a8b20)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_298 : [#users=1] = placeholder[target=tensor_298]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_298, 1), kwargs = {})
    %tensor_299 : [#users=1] = placeholder[target=tensor_299]
    %tensor_300 : [#users=1] = placeholder[target=tensor_300]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_299, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_300, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x1a9a8b20)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=408 frame=11(0x8afb040)
tracing opcode IS_OP None pc=410 frame=11(0x8afb040)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=418 frame=11(0x8afb040)
tracing opcode BINARY_ADD None pc=420 frame=11(0x8afb040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x8afb040)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=470 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=472 frame=11(0x8afb040)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=476 frame=11(0x8afb040)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=484 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=486 frame=11(0x8afb040)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d32080e240)
push tracker due to record
push tracker 3 frame 0x14d32080e240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d32080e240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d32080e240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d32080e240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d32080e240)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d32080e240)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d32080e240)
load fast: 22897554164176
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d32080e240)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d32080e240)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d32080e240)
load fast: 22897159148624
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d32080e240)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_310 : [#users=0] = placeholder[target=tensor_310]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0052, 0.0038, 0.0043,  ..., 0.0032, 0.0051, 0.0031],
          [0.0054, 0.0040, 0.0032,  ..., 0.0029, 0.0035, 0.0032],
          [0.0039, 0.0041, 0.0039,  ..., 0.0045, 0.0043, 0.0036],
          ...,
          [0.0027, 0.0042, 0.0032,  ..., 0.0036, 0.0040, 0.0043],
          [0.0023, 0.0036, 0.0029,  ..., 0.0054, 0.0032, 0.0046],
          [0.0043, 0.0043, 0.0038,  ..., 0.0039, 0.0039, 0.0039]],

         [[0.0029, 0.0040, 0.0034,  ..., 0.0039, 0.0033, 0.0037],
          [0.0034, 0.0030, 0.0037,  ..., 0.0036, 0.0029, 0.0038],
          [0.0045, 0.0040, 0.0042,  ..., 0.0039, 0.0040, 0.0041],
          ...,
          [0.0040, 0.0040, 0.0029,  ..., 0.0033, 0.0032, 0.0042],
          [0.0035, 0.0031, 0.0037,  ..., 0.0044, 0.0023, 0.0042],
          [0.0036, 0.0047, 0.0035,  ..., 0.0026, 0.0036, 0.0042]],

         [[0.0040, 0.0045, 0.0042,  ..., 0.0042, 0.0034, 0.0042],
          [0.0035, 0.0056, 0.0035,  ..., 0.0036, 0.0046, 0.0040],
          [0.0039, 0.0038, 0.0038,  ..., 0.0055, 0.0032, 0.0035],
          ...,
          [0.0036, 0.0035, 0.0043,  ..., 0.0046, 0.0038, 0.0042],
          [0.0034, 0.0038, 0.0036,  ..., 0.0035, 0.0028, 0.0045],
          [0.0038, 0.0047, 0.0041,  ..., 0.0036, 0.0052, 0.0044]],

         ...,

         [[0.0045, 0.0037, 0.0048,  ..., 0.0028, 0.0034, 0.0043],
          [0.0041, 0.0028, 0.0036,  ..., 0.0040, 0.0036, 0.0040],
          [0.0047, 0.0039, 0.0035,  ..., 0.0030, 0.0032, 0.0042],
          ...,
          [0.0049, 0.0039, 0.0034,  ..., 0.0029, 0.0035, 0.0038],
          [0.0041, 0.0030, 0.0038,  ..., 0.0037, 0.0041, 0.0039],
          [0.0040, 0.0050, 0.0036,  ..., 0.0034, 0.0044, 0.0037]],

         [[0.0035, 0.0036, 0.0047,  ..., 0.0039, 0.0035, 0.0042],
          [0.0023, 0.0036, 0.0039,  ..., 0.0039, 0.0042, 0.0044],
          [0.0029, 0.0042, 0.0043,  ..., 0.0031, 0.0036, 0.0059],
          ...,
          [0.0037, 0.0038, 0.0034,  ..., 0.0030, 0.0046, 0.0042],
          [0.0032, 0.0043, 0.0035,  ..., 0.0033, 0.0044, 0.0032],
          [0.0039, 0.0041, 0.0047,  ..., 0.0035, 0.0042, 0.0039]],

         [[0.0036, 0.0042, 0.0035,  ..., 0.0039, 0.0031, 0.0054],
          [0.0037, 0.0033, 0.0053,  ..., 0.0039, 0.0036, 0.0033],
          [0.0034, 0.0038, 0.0034,  ..., 0.0036, 0.0031, 0.0046],
          ...,
          [0.0044, 0.0040, 0.0034,  ..., 0.0042, 0.0033, 0.0036],
          [0.0033, 0.0045, 0.0038,  ..., 0.0034, 0.0035, 0.0043],
          [0.0037, 0.0047, 0.0042,  ..., 0.0031, 0.0031, 0.0052]]]]), modified_attrs={}, prev=None) 22897159637408 22897159148624
obj: tensor([[[[0.0052, 0.0038, 0.0043,  ..., 0.0032, 0.0051, 0.0031],
          [0.0054, 0.0040, 0.0032,  ..., 0.0029, 0.0035, 0.0032],
          [0.0039, 0.0041, 0.0039,  ..., 0.0045, 0.0043, 0.0036],
          ...,
          [0.0027, 0.0042, 0.0032,  ..., 0.0036, 0.0040, 0.0043],
          [0.0023, 0.0036, 0.0029,  ..., 0.0054, 0.0032, 0.0046],
          [0.0043, 0.0043, 0.0038,  ..., 0.0039, 0.0039, 0.0039]],

         [[0.0029, 0.0040, 0.0034,  ..., 0.0039, 0.0033, 0.0037],
          [0.0034, 0.0030, 0.0037,  ..., 0.0036, 0.0029, 0.0038],
          [0.0045, 0.0040, 0.0042,  ..., 0.0039, 0.0040, 0.0041],
          ...,
          [0.0040, 0.0040, 0.0029,  ..., 0.0033, 0.0032, 0.0042],
          [0.0035, 0.0031, 0.0037,  ..., 0.0044, 0.0023, 0.0042],
          [0.0036, 0.0047, 0.0035,  ..., 0.0026, 0.0036, 0.0042]],

         [[0.0040, 0.0045, 0.0042,  ..., 0.0042, 0.0034, 0.0042],
          [0.0035, 0.0056, 0.0035,  ..., 0.0036, 0.0046, 0.0040],
          [0.0039, 0.0038, 0.0038,  ..., 0.0055, 0.0032, 0.0035],
          ...,
          [0.0036, 0.0035, 0.0043,  ..., 0.0046, 0.0038, 0.0042],
          [0.0034, 0.0038, 0.0036,  ..., 0.0035, 0.0028, 0.0045],
          [0.0038, 0.0047, 0.0041,  ..., 0.0036, 0.0052, 0.0044]],

         ...,

         [[0.0045, 0.0037, 0.0048,  ..., 0.0028, 0.0034, 0.0043],
          [0.0041, 0.0028, 0.0036,  ..., 0.0040, 0.0036, 0.0040],
          [0.0047, 0.0039, 0.0035,  ..., 0.0030, 0.0032, 0.0042],
          ...,
          [0.0049, 0.0039, 0.0034,  ..., 0.0029, 0.0035, 0.0038],
          [0.0041, 0.0030, 0.0038,  ..., 0.0037, 0.0041, 0.0039],
          [0.0040, 0.0050, 0.0036,  ..., 0.0034, 0.0044, 0.0037]],

         [[0.0035, 0.0036, 0.0047,  ..., 0.0039, 0.0035, 0.0042],
          [0.0023, 0.0036, 0.0039,  ..., 0.0039, 0.0042, 0.0044],
          [0.0029, 0.0042, 0.0043,  ..., 0.0031, 0.0036, 0.0059],
          ...,
          [0.0037, 0.0038, 0.0034,  ..., 0.0030, 0.0046, 0.0042],
          [0.0032, 0.0043, 0.0035,  ..., 0.0033, 0.0044, 0.0032],
          [0.0039, 0.0041, 0.0047,  ..., 0.0035, 0.0042, 0.0039]],

         [[0.0036, 0.0042, 0.0035,  ..., 0.0039, 0.0031, 0.0054],
          [0.0037, 0.0033, 0.0053,  ..., 0.0039, 0.0036, 0.0033],
          [0.0034, 0.0038, 0.0034,  ..., 0.0036, 0.0031, 0.0046],
          ...,
          [0.0044, 0.0040, 0.0034,  ..., 0.0042, 0.0033, 0.0036],
          [0.0033, 0.0045, 0.0038,  ..., 0.0034, 0.0035, 0.0043],
          [0.0037, 0.0047, 0.0042,  ..., 0.0031, 0.0031, 0.0052]]]]) 22897159148624
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0052, 0.0038, 0.0043,  ..., 0.0032, 0.0051, 0.0031],
          [0.0054, 0.0040, 0.0032,  ..., 0.0029, 0.0035, 0.0032],
          [0.0039, 0.0041, 0.0039,  ..., 0.0045, 0.0043, 0.0036],
          ...,
          [0.0027, 0.0042, 0.0032,  ..., 0.0036, 0.0040, 0.0043],
          [0.0023, 0.0036, 0.0029,  ..., 0.0054, 0.0032, 0.0046],
          [0.0043, 0.0043, 0.0038,  ..., 0.0039, 0.0039, 0.0039]],

         [[0.0029, 0.0040, 0.0034,  ..., 0.0039, 0.0033, 0.0037],
          [0.0034, 0.0030, 0.0037,  ..., 0.0036, 0.0029, 0.0038],
          [0.0045, 0.0040, 0.0042,  ..., 0.0039, 0.0040, 0.0041],
          ...,
          [0.0040, 0.0040, 0.0029,  ..., 0.0033, 0.0032, 0.0042],
          [0.0035, 0.0031, 0.0037,  ..., 0.0044, 0.0023, 0.0042],
          [0.0036, 0.0047, 0.0035,  ..., 0.0026, 0.0036, 0.0042]],

         [[0.0040, 0.0045, 0.0042,  ..., 0.0042, 0.0034, 0.0042],
          [0.0035, 0.0056, 0.0035,  ..., 0.0036, 0.0046, 0.0040],
          [0.0039, 0.0038, 0.0038,  ..., 0.0055, 0.0032, 0.0035],
          ...,
          [0.0036, 0.0035, 0.0043,  ..., 0.0046, 0.0038, 0.0042],
          [0.0034, 0.0038, 0.0036,  ..., 0.0035, 0.0028, 0.0045],
          [0.0038, 0.0047, 0.0041,  ..., 0.0036, 0.0052, 0.0044]],

         ...,

         [[0.0045, 0.0037, 0.0048,  ..., 0.0028, 0.0034, 0.0043],
          [0.0041, 0.0028, 0.0036,  ..., 0.0040, 0.0036, 0.0040],
          [0.0047, 0.0039, 0.0035,  ..., 0.0030, 0.0032, 0.0042],
          ...,
          [0.0049, 0.0039, 0.0034,  ..., 0.0029, 0.0035, 0.0038],
          [0.0041, 0.0030, 0.0038,  ..., 0.0037, 0.0041, 0.0039],
          [0.0040, 0.0050, 0.0036,  ..., 0.0034, 0.0044, 0.0037]],

         [[0.0035, 0.0036, 0.0047,  ..., 0.0039, 0.0035, 0.0042],
          [0.0023, 0.0036, 0.0039,  ..., 0.0039, 0.0042, 0.0044],
          [0.0029, 0.0042, 0.0043,  ..., 0.0031, 0.0036, 0.0059],
          ...,
          [0.0037, 0.0038, 0.0034,  ..., 0.0030, 0.0046, 0.0042],
          [0.0032, 0.0043, 0.0035,  ..., 0.0033, 0.0044, 0.0032],
          [0.0039, 0.0041, 0.0047,  ..., 0.0035, 0.0042, 0.0039]],

         [[0.0036, 0.0042, 0.0035,  ..., 0.0039, 0.0031, 0.0054],
          [0.0037, 0.0033, 0.0053,  ..., 0.0039, 0.0036, 0.0033],
          [0.0034, 0.0038, 0.0034,  ..., 0.0036, 0.0031, 0.0046],
          ...,
          [0.0044, 0.0040, 0.0034,  ..., 0.0042, 0.0033, 0.0036],
          [0.0033, 0.0045, 0.0038,  ..., 0.0034, 0.0035, 0.0043],
          [0.0037, 0.0047, 0.0042,  ..., 0.0031, 0.0031, 0.0052]]]]), modified_attrs={}, prev=None) 22897088513408
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d32080e240)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x8afb040)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x8afb040)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=536 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=538 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=540 frame=11(0x8afb040)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=548 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=550 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=552 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=554 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=556 frame=11(0x8afb040)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=560 frame=11(0x8afb040)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=568 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=570 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=572 frame=11(0x8afb040)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x8afb040)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x8afb040)
tracing opcode LOAD_CONST None pc=578 frame=11(0x8afb040)
tracing opcode BINARY_ADD None pc=580 frame=11(0x8afb040)
tracing opcode STORE_FAST None pc=582 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x8afb040)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x8afb040)
tracing opcode LOAD_FAST None pc=588 frame=11(0x8afb040)
tracing opcode CALL_METHOD None pc=590 frame=11(0x8afb040)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x8afb040)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x8afb040)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x8afb040)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x8afb040)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_293 : [#users=1] = placeholder[target=tensor_293]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_293,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_297 : [#users=1] = placeholder[target=tensor_297]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_297, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_298 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_298, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_309 : [#users=1] = placeholder[target=tensor_309]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_309, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x8afb040)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x13119e50)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x13119e50)
tracing opcode LOAD_CONST None pc=46 frame=10(0x13119e50)
tracing opcode IS_OP None pc=48 frame=10(0x13119e50)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x13119e50)
tracing opcode STORE_FAST None pc=54 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x13119e50)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x13119e50)
tracing opcode LOAD_FAST None pc=60 frame=10(0x13119e50)
tracing opcode LOAD_FAST None pc=62 frame=10(0x13119e50)
tracing opcode CALL_METHOD None pc=64 frame=10(0x13119e50)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x160d7bc0)
push tracker due to record
push tracker 16 frame 0x160d7bc0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x160d7bc0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x160d7bc0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x160d7bc0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x160d7bc0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x160d7bc0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x160d7bc0)
load fast: 22897554164224
tracing opcode LOAD_METHOD None pc=12 frame=16(0x160d7bc0)
tracing opcode LOAD_FAST None pc=14 frame=16(0x160d7bc0)
load fast: 22897229979536
tracing opcode CALL_METHOD None pc=16 frame=16(0x160d7bc0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x160d7bc0)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x160d7bc0)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x160d7bc0)
tracing opcode LOAD_FAST None pc=24 frame=16(0x160d7bc0)
tracing opcode CALL_METHOD None pc=26 frame=16(0x160d7bc0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x7499b90)
push tracker due to record
push tracker 3 frame 0x7499b90 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x7499b90)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x7499b90)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x7499b90 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x7499b90)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x7499b90)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x7499b90)
load fast: 22897554164368
tracing opcode LOAD_ATTR None pc=12 frame=3(0x7499b90)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x7499b90)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x7499b90)
load fast: 22896873723920
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x7499b90)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_312 : [#users=0] = placeholder[target=tensor_312]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.0105, -0.0194, -0.1040,  ..., -0.0030, -0.0876, -0.0223],
         [ 0.0065, -0.0182, -0.1041,  ..., -0.0036, -0.0867, -0.0290],
         [ 0.0082, -0.0309, -0.1003,  ...,  0.0011, -0.0924, -0.0349],
         ...,
         [ 0.0088, -0.0213, -0.1081,  ...,  0.0032, -0.0906, -0.0252],
         [ 0.0102, -0.0171, -0.1076,  ..., -0.0066, -0.0824, -0.0378],
         [ 0.0133, -0.0277, -0.1010,  ...,  0.0006, -0.0955, -0.0274]]]), modified_attrs={}, prev=None) 22897515381088 22896873723920
obj: tensor([[[ 0.0105, -0.0194, -0.1040,  ..., -0.0030, -0.0876, -0.0223],
         [ 0.0065, -0.0182, -0.1041,  ..., -0.0036, -0.0867, -0.0290],
         [ 0.0082, -0.0309, -0.1003,  ...,  0.0011, -0.0924, -0.0349],
         ...,
         [ 0.0088, -0.0213, -0.1081,  ...,  0.0032, -0.0906, -0.0252],
         [ 0.0102, -0.0171, -0.1076,  ..., -0.0066, -0.0824, -0.0378],
         [ 0.0133, -0.0277, -0.1010,  ...,  0.0006, -0.0955, -0.0274]]]) 22896873723920
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.0105, -0.0194, -0.1040,  ..., -0.0030, -0.0876, -0.0223],
         [ 0.0065, -0.0182, -0.1041,  ..., -0.0036, -0.0867, -0.0290],
         [ 0.0082, -0.0309, -0.1003,  ...,  0.0011, -0.0924, -0.0349],
         ...,
         [ 0.0088, -0.0213, -0.1081,  ...,  0.0032, -0.0906, -0.0252],
         [ 0.0102, -0.0171, -0.1076,  ..., -0.0066, -0.0824, -0.0378],
         [ 0.0133, -0.0277, -0.1010,  ...,  0.0006, -0.0955, -0.0274]]]), modified_attrs={}, prev=None) 22897158999296
tracing opcode RETURN_VALUE None pc=74 frame=3(0x7499b90)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x160d7bc0)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x160d7bc0)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x160d7bc0)
tracing opcode LOAD_FAST None pc=34 frame=16(0x160d7bc0)
tracing opcode LOAD_FAST None pc=36 frame=16(0x160d7bc0)
load fast: 22896731674080
tracing opcode BINARY_ADD None pc=38 frame=16(0x160d7bc0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x160d7bc0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d30f957840)
push tracker due to record
push tracker 2 frame 0x14d30f957840 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d30f957840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d30f957840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d30f957840 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d30f957840)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d30f957840)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d30f957840)
load fast: 22896945213904
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d30f957840)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d30f957840)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d30f957840)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d30f957840)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d30f957840)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d30f957840)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d30f957840)
record function in graph <built-in method mean of Tensor object at 0x14d31c4931d0>
func self id: 22896945213904
tracing opcode STORE_FAST None pc=36 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d30f957840)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d30f957840)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d30f957840)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d30f957840)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d30f957840)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d30f957840)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d30f957840)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d30f957840)
record function in graph <built-in method mean of Tensor object at 0x14d3180f8810>
func self id: 22896874326032
tracing opcode STORE_FAST None pc=60 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d30f957840)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d30f957840)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d30f957840)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d30f957840)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d30f957840)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d30f957840)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d30f957840)
load fast: 22897554164320
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d30f957840)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d30f957840)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d30f957840)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d30f957840)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d30f957840)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d30f957840)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d30f957840)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d30f957840)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d30f957840)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d30f957840)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d30f957840)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d30f957840)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d30f957840)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d30f957840)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d30f957840)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d30f957840)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d30f957840)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d30f957840)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_314 : [#users=4] = placeholder[target=tensor_314]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_314,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_314, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_314, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_314, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d31c4931d0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d30f957840)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x160d7bc0)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x160d7bc0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x160d7bc0)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_311 : [#users=1] = placeholder[target=tensor_311]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_311,), kwargs = {})
    %tensor_313 : [#users=1] = placeholder[target=tensor_313]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_313), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x160d7bc0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x13119e50)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x13119e50)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x13119e50)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x13119e50)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_290 : [#users=2] = placeholder[target=tensor_290]
    %tensor_291 : [#users=1] = placeholder[target=tensor_291]
    %tensor_292 : [#users=1] = placeholder[target=tensor_292]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_290,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_292, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_298 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_298, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_291, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_290), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x13119e50)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x8ae3400)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x8ae3400)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x8ae3400)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x8ae3400)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x8ae3400)
tracing opcode LOAD_FAST None pc=48 frame=9(0x8ae3400)
tracing opcode CALL_METHOD None pc=50 frame=9(0x8ae3400)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d31810c840)
push tracker due to record
push tracker 17 frame 0x14d31810c840 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d31810c840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d31810c840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d31810c840 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d31810c840)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d31810c840)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d31810c840)
load fast: 22897554164416
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d31810c840)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d31810c840)
load fast: 22896945452352
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d31810c840)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d31810c840)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d31810c840)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d31810c840)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d31810c840)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d31810c840)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x190a9330)
push tracker due to record
push tracker 18 frame 0x190a9330 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x190a9330)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x190a9330)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x190a9330 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x190a9330)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x190a9330)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x190a9330)
load fast: 22897554164512
tracing opcode LOAD_METHOD None pc=12 frame=18(0x190a9330)
tracing opcode LOAD_FAST None pc=14 frame=18(0x190a9330)
load fast: 22897158558400
tracing opcode CALL_METHOD None pc=16 frame=18(0x190a9330)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x190a9330)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_316 : [#users=1] = placeholder[target=tensor_316]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_316,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x190a9330)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d31810c840)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d31810c840)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d31810c840)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_315 : [#users=1] = placeholder[target=tensor_315]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_315,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d31810c840)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x8ae3400)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x8ae3400)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x8ae3400)
tracing opcode LOAD_FAST None pc=58 frame=9(0x8ae3400)
tracing opcode LOAD_FAST None pc=60 frame=9(0x8ae3400)
tracing opcode CALL_METHOD None pc=62 frame=9(0x8ae3400)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x14d313c99640)
push tracker due to record
push tracker 19 frame 0x14d313c99640 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x14d313c99640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x14d313c99640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x14d313c99640 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x14d313c99640)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x14d313c99640)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x14d313c99640)
load fast: 22897554164560
tracing opcode LOAD_METHOD None pc=12 frame=19(0x14d313c99640)
tracing opcode LOAD_FAST None pc=14 frame=19(0x14d313c99640)
load fast: 22897088553264
tracing opcode CALL_METHOD None pc=16 frame=19(0x14d313c99640)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x14d313c99640)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x14d313c99640)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x14d313c99640)
tracing opcode LOAD_FAST None pc=24 frame=19(0x14d313c99640)
tracing opcode CALL_METHOD None pc=26 frame=19(0x14d313c99640)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d313c99240)
push tracker due to record
push tracker 3 frame 0x14d313c99240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d313c99240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d313c99240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d313c99240 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d313c99240)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d313c99240)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d313c99240)
load fast: 22897554164704
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d313c99240)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d313c99240)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d313c99240)
load fast: 22897160165152
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d313c99240)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_318 : [#users=0] = placeholder[target=tensor_318]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.0056,  0.4522, -0.1036,  ..., -0.3138,  0.2841, -0.3050],
         [-0.2046,  0.3703, -0.4363,  ...,  0.0426,  1.2943,  0.2046],
         [ 0.1944,  0.2482, -0.4853,  ...,  0.2835,  0.3885,  0.0833],
         ...,
         [-0.5599,  0.2646, -0.5234,  ...,  0.2583, -0.0512, -0.0058],
         [-0.2438,  0.2737,  0.0555,  ..., -0.0103,  1.0218,  0.0350],
         [-0.0077, -0.0386, -0.4113,  ...,  0.5094,  0.1452, -0.4714]]]), modified_attrs={}, prev=None) 22896731007680 22897160165152
obj: tensor([[[-0.0056,  0.4522, -0.1036,  ..., -0.3138,  0.2841, -0.3050],
         [-0.2046,  0.3703, -0.4363,  ...,  0.0426,  1.2943,  0.2046],
         [ 0.1944,  0.2482, -0.4853,  ...,  0.2835,  0.3885,  0.0833],
         ...,
         [-0.5599,  0.2646, -0.5234,  ...,  0.2583, -0.0512, -0.0058],
         [-0.2438,  0.2737,  0.0555,  ..., -0.0103,  1.0218,  0.0350],
         [-0.0077, -0.0386, -0.4113,  ...,  0.5094,  0.1452, -0.4714]]]) 22897160165152
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.0056,  0.4522, -0.1036,  ..., -0.3138,  0.2841, -0.3050],
         [-0.2046,  0.3703, -0.4363,  ...,  0.0426,  1.2943,  0.2046],
         [ 0.1944,  0.2482, -0.4853,  ...,  0.2835,  0.3885,  0.0833],
         ...,
         [-0.5599,  0.2646, -0.5234,  ...,  0.2583, -0.0512, -0.0058],
         [-0.2438,  0.2737,  0.0555,  ..., -0.0103,  1.0218,  0.0350],
         [-0.0077, -0.0386, -0.4113,  ...,  0.5094,  0.1452, -0.4714]]]), modified_attrs={}, prev=None) 22896731005376
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d313c99240)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x14d313c99640)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x14d313c99640)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x14d313c99640)
tracing opcode LOAD_FAST None pc=34 frame=19(0x14d313c99640)
tracing opcode LOAD_FAST None pc=36 frame=19(0x14d313c99640)
load fast: 22896945452352
tracing opcode BINARY_ADD None pc=38 frame=19(0x14d313c99640)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x14d313c99640)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0xd49d0a0)
push tracker due to record
push tracker 2 frame 0xd49d0a0 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0xd49d0a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0xd49d0a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0xd49d0a0 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0xd49d0a0)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0xd49d0a0)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0xd49d0a0)
load fast: 22897230581824
tracing opcode LOAD_ATTR None pc=12 frame=2(0xd49d0a0)
tracing opcode STORE_FAST None pc=14 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0xd49d0a0)
tracing opcode LOAD_METHOD None pc=18 frame=2(0xd49d0a0)
tracing opcode CALL_METHOD None pc=20 frame=2(0xd49d0a0)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0xd49d0a0)
tracing opcode LOAD_ATTR None pc=26 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=28 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=30 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=32 frame=2(0xd49d0a0)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0xd49d0a0)
record function in graph <built-in method mean of Tensor object at 0x14d32d4b9040>
func self id: 22897230581824
tracing opcode STORE_FAST None pc=36 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0xd49d0a0)
tracing opcode LOAD_FAST None pc=40 frame=2(0xd49d0a0)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0xd49d0a0)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=46 frame=2(0xd49d0a0)
tracing opcode CALL_METHOD None pc=48 frame=2(0xd49d0a0)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=52 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=54 frame=2(0xd49d0a0)
tracing opcode LOAD_CONST None pc=56 frame=2(0xd49d0a0)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0xd49d0a0)
record function in graph <built-in method mean of Tensor object at 0x14d32919a3b0>
func self id: 22897160201136
tracing opcode STORE_FAST None pc=60 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0xd49d0a0)
tracing opcode LOAD_FAST None pc=64 frame=2(0xd49d0a0)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0xd49d0a0)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0xd49d0a0)
tracing opcode LOAD_METHOD None pc=70 frame=2(0xd49d0a0)
tracing opcode LOAD_FAST None pc=72 frame=2(0xd49d0a0)
tracing opcode LOAD_FAST None pc=74 frame=2(0xd49d0a0)
load fast: 22897554164656
tracing opcode LOAD_ATTR None pc=76 frame=2(0xd49d0a0)
tracing opcode BINARY_ADD None pc=78 frame=2(0xd49d0a0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0xd49d0a0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0xd49d0a0)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0xd49d0a0)
tracing opcode LOAD_METHOD None pc=88 frame=2(0xd49d0a0)
tracing opcode LOAD_FAST None pc=90 frame=2(0xd49d0a0)
tracing opcode CALL_METHOD None pc=92 frame=2(0xd49d0a0)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0xd49d0a0)
tracing opcode LOAD_ATTR None pc=98 frame=2(0xd49d0a0)
tracing opcode LOAD_FAST None pc=100 frame=2(0xd49d0a0)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0xd49d0a0)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0xd49d0a0)
tracing opcode LOAD_ATTR None pc=106 frame=2(0xd49d0a0)
tracing opcode BINARY_ADD None pc=108 frame=2(0xd49d0a0)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0xd49d0a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0xd49d0a0)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0xd49d0a0)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_320 : [#users=4] = placeholder[target=tensor_320]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_320,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_320, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_320, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_320, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d32d4b9040>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0xd49d0a0)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x14d313c99640)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x14d313c99640)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x14d313c99640)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_317 : [#users=1] = placeholder[target=tensor_317]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_317,), kwargs = {})
    %tensor_319 : [#users=1] = placeholder[target=tensor_319]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_319), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x14d313c99640)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x8ae3400)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x8ae3400)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x8ae3400)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x8ae3400)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x8ae3400)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_287 : [#users=2] = placeholder[target=tensor_287]
    %tensor_288 : [#users=1] = placeholder[target=tensor_288]
    %tensor_289 : [#users=1] = placeholder[target=tensor_289]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_287,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_289, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_298 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_298, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_288, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_287), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x8ae3400)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x1c075b50)
push tracker due to record
push tracker 9 frame 0x1c075b50 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x1c075b50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x1c075b50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x1c075b50 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x1c075b50)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x1c075b50)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x1c075b50)
load fast: 22897554164752
tracing opcode LOAD_ATTR None pc=12 frame=9(0x1c075b50)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x1c075b50)
load fast: 22897231241440
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x1c075b50)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x1c075b50)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x1c075b50)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x1c075b50)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x1c075b50)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x1c075b50)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x1c075b50)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0xea85850)
push tracker due to record
push tracker 10 frame 0xea85850 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0xea85850)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0xea85850)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0xea85850 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0xea85850)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0xea85850)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0xea85850)
load fast: 22897554164800
tracing opcode LOAD_ATTR None pc=12 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0xea85850)
load fast: 22897231241440
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0xea85850)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0xea85850)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0xea85850)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0xea85850)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0xea85850)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0xea85850)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0xea85850)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x1a9a8780)
push tracker due to record
push tracker 11 frame 0x1a9a8780 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x1a9a8780)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x1a9a8780)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x1a9a8780 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x1a9a8780)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x1a9a8780)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x1a9a8780)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x1a9a8780)
tracing opcode IS_OP None pc=16 frame=11(0x1a9a8780)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x1a9a8780)
load fast: 22897554164848
tracing opcode LOAD_METHOD None pc=22 frame=11(0x1a9a8780)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x1a9a8780)
load fast: 22897231241440
tracing opcode CALL_METHOD None pc=26 frame=11(0x1a9a8780)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=34 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=36 frame=11(0x1a9a8780)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1a759d20)
push tracker due to record
push tracker 12 frame 0x1a759d20 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1a759d20)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1a759d20)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1a759d20 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1a759d20)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1a759d20)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1a759d20)
load fast: 22896660837856
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1a759d20)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1a759d20)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1a759d20)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1a759d20)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1a759d20)
load fast: 22897554164848
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1a759d20)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1a759d20)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1a759d20)
tracing opcode STORE_FAST None pc=34 frame=12(0x1a759d20)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1a759d20)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1a759d20)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1a759d20)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1a759d20)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1a759d20)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1a759d20)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1a759d20)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1a759d20)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1a759d20)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1a759d20)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_328 : [#users=1] = placeholder[target=tensor_328]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_328, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1a759d20)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=40 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=42 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=44 frame=11(0x1a9a8780)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x1a9a8780)
record function in graph <built-in method chunk of Tensor object at 0x14d30b53b450>
func self id: 22896660690000
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x1a9a8780)
sub_value 22896660838336 tensor([[[[-0.5201,  0.2269, -0.3101,  ...,  0.2110,  0.1971,  0.1125],
          [-0.9218,  0.0673,  0.6613,  ..., -0.2643, -0.2678, -0.2192],
          [-1.3317,  0.5161,  0.4238,  ...,  0.5139, -0.5158,  0.9701],
          ...,
          [ 0.1984, -0.1475,  0.1410,  ...,  0.7055, -0.3929,  0.2195],
          [-0.3293,  0.5913,  0.8832,  ...,  0.6043, -0.3132, -0.4539],
          [-1.9396,  0.1021,  0.5792,  ...,  0.6962, -0.0638, -0.0956]],

         [[-0.5786, -0.8725,  1.2315,  ..., -0.7835, -0.6215,  0.0320],
          [ 1.0395,  0.6209, -0.2898,  ...,  0.1743,  0.0384,  0.3749],
          [-0.2720, -0.2647,  0.8937,  ...,  0.0675,  0.0300, -0.4250],
          ...,
          [ 0.4284, -0.6503,  1.1400,  ...,  0.4690, -0.5255,  0.1240],
          [ 1.1489, -0.6605, -0.1382,  ...,  0.2055,  0.0124, -0.1142],
          [-0.7877,  0.9007, -0.0363,  ...,  0.2011,  0.1597,  0.4538]],

         [[-0.4940,  1.1336, -0.1334,  ..., -0.7309,  0.0762,  0.3583],
          [-0.1868,  0.6187, -0.3200,  ..., -0.2965, -0.6161, -1.0184],
          [-0.3623,  0.1511,  0.3482,  ..., -0.4932, -0.2860,  0.1244],
          ...,
          [ 0.6341, -0.4978,  0.0530,  ..., -0.9527,  0.3841, -0.1265],
          [-0.2467,  0.6054,  0.0557,  ..., -0.1124, -0.1565, -0.4446],
          [ 0.2906, -0.0899,  0.8569,  ..., -0.9872,  0.6507, -0.6315]],

         ...,

         [[ 0.1190, -0.7396,  0.4905,  ...,  0.0215, -0.5565,  0.4252],
          [-0.8752,  0.2698,  0.2883,  ...,  0.1529,  0.4728, -0.0667],
          [ 0.1623,  0.5835, -0.9536,  ..., -0.3291, -0.3029, -0.1280],
          ...,
          [ 0.1441, -0.2461, -0.3120,  ...,  0.4956, -0.6592,  0.7187],
          [-0.2038,  0.0221, -0.2303,  ...,  0.4523, -0.0924, -0.2656],
          [ 0.3506, -1.2686, -0.9262,  ..., -0.6243, -1.7854, -1.7392]],

         [[ 0.3411, -0.2478,  0.6385,  ..., -0.1222,  0.6213, -0.4452],
          [-0.0996, -0.4923, -0.2654,  ...,  0.2254, -0.7663, -0.3052],
          [ 0.3092, -0.2579, -1.1049,  ...,  1.0234, -0.4769,  0.2642],
          ...,
          [-0.7839,  0.3906,  0.3925,  ...,  0.2459, -0.7620, -0.9717],
          [ 0.2597,  0.1562,  0.0350,  ...,  0.0654, -0.4778,  0.9016],
          [ 0.7329,  0.5881, -0.9875,  ..., -0.2306, -0.0324, -0.0523]],

         [[ 0.3604, -0.2190,  0.0158,  ..., -0.4125,  0.1793, -0.2142],
          [ 0.1701, -0.6117,  0.1492,  ..., -0.6717,  0.1334,  0.7568],
          [-0.6382, -0.7805, -0.0333,  ...,  0.0929,  0.5549, -0.4492],
          ...,
          [-0.1449, -0.7008, -0.3751,  ...,  0.5257, -0.6357,  0.0474],
          [-0.1101, -0.7273,  0.0365,  ..., -0.7454,  0.3593, -0.6848],
          [ 0.5824, -0.5899,  0.4646,  ...,  1.1747, -0.2433,  0.1832]]]])
sub_value 22896660690080 tensor([[[[ 0.1276,  0.1438, -0.4759,  ...,  0.5851, -0.2373,  0.3974],
          [ 0.2806,  0.3799, -1.0618,  ..., -0.6803, -1.0494,  0.6528],
          [ 0.2525,  0.1430, -0.6279,  ...,  0.7394, -0.8522, -0.1415],
          ...,
          [-0.6748, -0.7410, -0.6649,  ...,  0.5084,  0.5296,  0.5537],
          [-0.2780,  0.8064, -0.6486,  ...,  0.3818, -0.2075,  1.3964],
          [ 0.3314,  0.5545,  0.3687,  ...,  0.3684,  0.1206,  1.2324]],

         [[ 0.7273, -0.0318, -1.1693,  ...,  0.6830,  0.1885, -0.1198],
          [-0.0533, -0.1494, -0.0514,  ...,  0.1921,  0.0077, -0.7238],
          [-0.6517, -0.5056, -0.7324,  ..., -0.2528, -0.0919,  0.5022],
          ...,
          [ 0.0707,  0.0644, -0.0225,  ..., -0.0337,  0.1089, -0.3470],
          [ 0.1932,  0.9032, -0.0953,  ...,  0.0967,  0.0544,  0.4712],
          [-0.0097,  1.4379,  0.1116,  ..., -0.3902,  0.1665,  0.7521]],

         [[-0.2406, -0.0199, -0.1380,  ...,  0.2397,  0.0550, -0.5218],
          [ 0.1226, -0.5747, -0.5367,  ...,  0.4442, -0.0888,  0.5180],
          [-0.1663,  0.0647, -0.3542,  ...,  0.0533,  1.2564,  0.6233],
          ...,
          [ 0.2053, -0.0170, -0.0910,  ...,  0.4580,  0.5639,  0.2058],
          [-0.2178,  0.4048, -0.1162,  ...,  0.3146,  1.1547,  0.2571],
          [ 0.6767,  0.1890,  0.2670,  ..., -0.0323,  0.8363,  0.1773]],

         ...,

         [[-0.1003, -0.0072, -0.6497,  ..., -0.0604,  0.0927, -0.0632],
          [ 0.5493, -0.4785,  0.0298,  ..., -1.5334,  0.2533,  0.3413],
          [-0.0738, -0.7772, -0.1466,  ..., -0.3631,  0.4256,  0.0322],
          ...,
          [ 0.1866, -1.2605,  0.0060,  ...,  0.9672,  0.0765,  0.6240],
          [-0.5121, -0.2886,  0.0068,  ..., -0.2363, -0.5055, -0.0741],
          [ 0.7046, -1.3419,  0.1177,  ..., -0.6873,  0.8636, -0.1014]],

         [[-0.9075, -1.1643,  0.4058,  ...,  0.8606, -0.4088, -0.4730],
          [-0.1925, -0.0711, -0.3246,  ...,  0.6314,  0.2161, -0.6142],
          [-0.3947, -0.2570,  0.6842,  ..., -0.4139, -0.0530,  0.1325],
          ...,
          [-0.2041,  1.0484, -0.2687,  ..., -0.1679,  1.1322, -0.7274],
          [ 0.7043,  0.2835,  0.5908,  ..., -0.3392,  0.0788,  0.0286],
          [-0.6195, -0.2870,  0.1136,  ..., -0.2727,  0.6094,  0.0412]],

         [[-0.1174,  0.5810, -0.8081,  ..., -0.3272,  0.5010,  0.2711],
          [-0.1508,  0.1379, -0.4339,  ...,  0.1309, -0.5473,  0.0948],
          [-0.0263, -0.7591, -0.4795,  ...,  0.5016, -0.5508,  0.3932],
          ...,
          [-0.4773,  0.2651, -0.0071,  ...,  0.1603, -0.9127, -0.2517],
          [ 0.0891,  0.3313,  0.0392,  ...,  0.0788, -0.5452, -0.4186],
          [-0.0568, -0.8674,  0.7040,  ...,  0.8928,  0.0050,  0.5767]]]])
sub_value 22896660688960 tensor([[[[-2.7628e-01,  1.1047e+00,  3.1905e-02,  ...,  7.6032e-01,
            4.5098e-01, -2.0778e-01],
          [ 4.3135e-01, -5.8112e-02,  1.2085e-01,  ...,  5.6963e-01,
           -1.7175e-01,  3.7648e-01],
          [ 2.3514e-01, -2.6829e-01, -5.7596e-02,  ...,  3.6834e-01,
           -2.7683e-01, -2.7360e-01],
          ...,
          [ 7.9231e-02,  6.9660e-01, -1.2493e-01,  ...,  3.8151e-01,
           -2.6931e-01,  3.4941e-01],
          [ 5.1278e-01, -5.6176e-02,  5.2332e-01,  ...,  6.0163e-01,
            1.0364e+00, -5.6537e-01],
          [-6.4673e-01,  2.7080e-01, -5.6691e-01,  ...,  1.0982e+00,
            5.4054e-01, -5.5219e-02]],

         [[-2.9046e-01,  5.5859e-02,  2.8284e-01,  ...,  4.6620e-01,
            2.7207e-01, -4.8755e-02],
          [ 2.4778e-01,  9.1979e-02, -2.0883e-01,  ..., -5.3369e-01,
            3.6859e-01,  4.4200e-01],
          [ 5.7262e-01, -3.1846e-01,  2.5075e-01,  ...,  8.4401e-01,
            3.7938e-01,  6.4326e-01],
          ...,
          [-1.2262e-01,  5.9610e-01,  4.2599e-01,  ...,  7.7176e-02,
            2.4976e-01,  4.3783e-02],
          [ 1.3588e+00,  1.1744e+00,  2.0803e-01,  ...,  6.2777e-01,
            6.0570e-01,  7.9702e-01],
          [-7.3300e-02,  8.1379e-01, -3.0458e-01,  ...,  8.7705e-01,
            5.4409e-01,  3.2570e-02]],

         [[ 2.4585e-01,  8.0456e-01,  1.0568e-03,  ..., -8.5985e-01,
            1.3993e-01,  3.4186e-01],
          [ 5.6332e-01, -8.8545e-02, -1.1050e+00,  ...,  1.4737e-01,
            9.8876e-01,  2.4605e-01],
          [-4.1066e-01,  1.1258e-01, -1.1958e-01,  ..., -1.2980e-01,
           -1.0910e+00,  3.1641e-01],
          ...,
          [ 4.2148e-01,  4.5597e-01, -1.3199e-01,  ...,  9.9944e-01,
            6.1174e-01, -3.1780e-01],
          [ 3.0245e-01,  1.5213e-01, -6.0332e-01,  ...,  3.9683e-01,
           -6.8057e-02, -5.8804e-01],
          [-4.2683e-01,  2.7061e-01,  5.9828e-01,  ...,  6.1547e-01,
           -4.1372e-01, -3.3504e-01]],

         ...,

         [[ 7.6183e-01,  6.1702e-02,  4.5482e-01,  ...,  5.8466e-01,
            1.0405e-01, -2.2545e-01],
          [-9.3759e-02,  2.3508e-01, -4.8990e-01,  ...,  6.1694e-01,
            2.9830e-01,  4.3270e-02],
          [ 9.9496e-01,  6.1493e-01,  3.5697e-01,  ...,  4.4360e-01,
            4.3530e-01, -2.5366e-01],
          ...,
          [ 9.8583e-01, -3.0628e-02,  5.9574e-01,  ...,  5.6554e-01,
            4.1636e-01, -4.9819e-01],
          [ 5.1776e-01,  1.1090e+00, -6.7539e-01,  ..., -5.2701e-01,
            8.1393e-01,  2.4687e-01],
          [ 9.1669e-01, -6.5877e-01,  7.1743e-02,  ..., -1.6853e-01,
            8.2062e-02, -8.2646e-01]],

         [[ 6.5558e-01, -4.0459e-01,  7.0086e-02,  ...,  1.8348e-01,
           -1.6004e-01,  9.6865e-02],
          [-6.2799e-02,  5.5594e-01,  2.2183e-01,  ..., -1.2097e-01,
           -5.2767e-03, -9.1706e-01],
          [ 1.0954e+00,  1.4078e+00,  1.3498e-01,  ...,  1.6516e-01,
           -7.3940e-01, -7.5255e-01],
          ...,
          [ 5.8841e-01, -7.9688e-02, -9.8201e-03,  ..., -4.9952e-02,
           -4.6801e-01,  3.3870e-01],
          [-9.1276e-02,  3.6053e-01,  3.1871e-01,  ..., -4.9692e-01,
           -5.2699e-02,  4.6511e-01],
          [ 2.1560e-01, -7.0958e-02,  5.7286e-01,  ..., -3.9308e-01,
            1.1000e-01, -1.7738e-01]],

         [[-7.6925e-02, -1.8303e-01, -9.5659e-03,  ..., -3.5750e-01,
           -3.3869e-02, -2.4570e-01],
          [-2.3180e-01, -1.7257e+00,  1.4202e+00,  ..., -4.8862e-01,
            7.0380e-01,  2.5188e-01],
          [ 2.4134e-01, -4.5387e-01, -3.7443e-01,  ..., -9.6439e-01,
            1.1774e-01, -2.9641e-01],
          ...,
          [ 6.7888e-01, -7.0714e-01,  8.5270e-01,  ...,  2.2994e-01,
           -5.1163e-01,  2.2172e-01],
          [-4.3499e-01, -4.2981e-01,  8.5085e-01,  ..., -2.5853e-01,
            1.3406e-01,  4.4835e-01],
          [ 5.3570e-01, -4.1826e-01, -4.2429e-02,  ...,  1.2160e-01,
           -2.4288e-01, -8.2359e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x1a9a8780)
tracing opcode STORE_FAST None pc=52 frame=11(0x1a9a8780)
tracing opcode STORE_FAST None pc=54 frame=11(0x1a9a8780)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x1a9a8780)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x1a9a8780)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=232 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=234 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=236 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=238 frame=11(0x1a9a8780)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x1a9a8780)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x1a9a8780)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x1a9a8780)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x1a9a8780)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d313d2ba40)
push tracker due to record
push tracker 12 frame 0x14d313d2ba40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d313d2ba40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d313d2ba40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d313d2ba40 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d313d2ba40)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d313d2ba40)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d313d2ba40)
load fast: 22896730696736
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d313d2ba40)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d313d2ba40)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d313d2ba40)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d313d2ba40)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d313d2ba40)
load fast: 22897554164848
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d313d2ba40)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d313d2ba40)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d313d2ba40)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d313d2ba40)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d313d2ba40)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d313d2ba40)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d313d2ba40)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d313d2ba40)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d313d2ba40)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d313d2ba40)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d313d2ba40)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d313d2ba40)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d313d2ba40)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d313d2ba40)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_329 : [#users=1] = placeholder[target=tensor_329]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_329, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d313d2ba40)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x1a9a8780)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x1a9a8780)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x1a9a8780)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=262 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=264 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=266 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=268 frame=11(0x1a9a8780)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x1a9a8780)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x1a9a8780)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x1a9a8780)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x1a9a8780)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1310ff50)
push tracker due to record
push tracker 12 frame 0x1310ff50 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1310ff50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1310ff50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1310ff50 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1310ff50)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1310ff50)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1310ff50)
load fast: 22896660580288
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1310ff50)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1310ff50)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1310ff50)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1310ff50)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1310ff50)
load fast: 22897554164848
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1310ff50)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1310ff50)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1310ff50)
tracing opcode STORE_FAST None pc=34 frame=12(0x1310ff50)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1310ff50)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1310ff50)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1310ff50)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1310ff50)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1310ff50)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1310ff50)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1310ff50)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1310ff50)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1310ff50)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1310ff50)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_330 : [#users=1] = placeholder[target=tensor_330]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_330, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1310ff50)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x1a9a8780)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x1a9a8780)
tracing opcode STORE_FAST None pc=284 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x1a9a8780)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x1a9a8780)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x1a9a8780)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x1a9a8780)
tracing opcode BINARY_ADD None pc=296 frame=11(0x1a9a8780)
tracing opcode STORE_FAST None pc=298 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x1a9a8780)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=308 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=312 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=314 frame=11(0x1a9a8780)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=320 frame=11(0x1a9a8780)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x1a9a8780)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x1a9a8780)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x1a9a8780)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x1a9a8780)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=334 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=338 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=342 frame=11(0x1a9a8780)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x1a9a8780)
record function in graph <built-in method to of Tensor object at 0x14d30b552860>
func self id: 22896660785248
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x1a9a8780)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=354 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=356 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=360 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=362 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=364 frame=11(0x1a9a8780)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x1a9a8780)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x1a9a8780)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=382 frame=11(0x1a9a8780)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x1a9a8780)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x1a99f6a0)
push tracker due to record
push tracker 3 frame 0x1a99f6a0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x1a99f6a0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x1a99f6a0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x1a99f6a0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x1a99f6a0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x1a99f6a0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x1a99f6a0)
load fast: 22897554164944
tracing opcode LOAD_ATTR None pc=12 frame=3(0x1a99f6a0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x1a99f6a0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x1a99f6a0)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x1a99f6a0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x1a99f6a0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=392 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=394 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=396 frame=11(0x1a9a8780)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=400 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=402 frame=11(0x1a9a8780)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x101647c0)
push tracker due to record
push tracker 13 frame 0x101647c0 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x101647c0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x101647c0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x101647c0 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x101647c0)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x101647c0)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x101647c0)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x101647c0)
tracing opcode IS_OP None pc=16 frame=13(0x101647c0)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=54 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=56 frame=13(0x101647c0)
tracing opcode COMPARE_OP None pc=58 frame=13(0x101647c0)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=84 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=86 frame=13(0x101647c0)
tracing opcode COMPARE_OP None pc=88 frame=13(0x101647c0)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=96 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=98 frame=13(0x101647c0)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x101647c0)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x101647c0)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=138 frame=13(0x101647c0)
load fast: 22896660785648
tracing opcode LOAD_METHOD None pc=140 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=142 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=144 frame=13(0x101647c0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x101647c0)
load fast: 22896660690080
tracing opcode LOAD_METHOD None pc=148 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=150 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=152 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=156 frame=13(0x101647c0)
load fast: 22897554164848
tracing opcode LOAD_ATTR None pc=158 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x101647c0)
tracing opcode STORE_FAST None pc=162 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=168 frame=13(0x101647c0)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=172 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=176 frame=13(0x101647c0)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x101647c0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=186 frame=13(0x101647c0)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=190 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=194 frame=13(0x101647c0)
tracing opcode BINARY_ADD None pc=196 frame=13(0x101647c0)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=200 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=202 frame=13(0x101647c0)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x101647c0)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x101647c0)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x101647c0)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x101647c0)
tracing opcode STORE_FAST None pc=220 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=224 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x101647c0)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x101647c0)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=238 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=240 frame=13(0x101647c0)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=248 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=250 frame=13(0x101647c0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1a759310)
push tracker due to record
push tracker 12 frame 0x1a759310 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1a759310)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1a759310)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1a759310 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1a759310)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1a759310)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1a759310)
load fast: 22896660509056
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1a759310)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1a759310)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1a759310)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1a759310)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1a759310)
load fast: 22897554164848
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1a759310)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1a759310)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1a759310)
tracing opcode STORE_FAST None pc=34 frame=12(0x1a759310)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1a759310)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1a759310)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1a759310)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1a759310)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1a759310)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1a759310)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1a759310)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1a759310)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1a759310)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1a759310)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_335 : [#users=1] = placeholder[target=tensor_335]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_335, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1a759310)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=258 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=260 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=264 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=266 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=268 frame=13(0x101647c0)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x101647c0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=278 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=280 frame=13(0x101647c0)
tracing opcode BINARY_ADD None pc=282 frame=13(0x101647c0)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=286 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=288 frame=13(0x101647c0)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=292 frame=13(0x101647c0)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=296 frame=13(0x101647c0)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=304 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=306 frame=13(0x101647c0)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=310 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=312 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=314 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x101647c0)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0xd191950)
push tracker due to record
push tracker 14 frame 0xd191950 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0xd191950)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0xd191950)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0xd191950 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0xd191950)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0xd191950)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0xd191950)
load fast: 22896660690800
tracing opcode LOAD_METHOD None pc=12 frame=14(0xd191950)
tracing opcode LOAD_FAST None pc=14 frame=14(0xd191950)
load fast: 22896660785648
tracing opcode LOAD_METHOD None pc=16 frame=14(0xd191950)
tracing opcode LOAD_CONST None pc=18 frame=14(0xd191950)
tracing opcode CALL_METHOD None pc=20 frame=14(0xd191950)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0xd191950)
tracing opcode LOAD_METHOD None pc=24 frame=14(0xd191950)
tracing opcode LOAD_CONST None pc=26 frame=14(0xd191950)
tracing opcode CALL_METHOD None pc=28 frame=14(0xd191950)
tracing opcode LOAD_FAST None pc=30 frame=14(0xd191950)
tracing opcode LOAD_METHOD None pc=32 frame=14(0xd191950)
tracing opcode LOAD_CONST None pc=34 frame=14(0xd191950)
tracing opcode CALL_METHOD None pc=36 frame=14(0xd191950)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0xd191950)
load fast: 22896660505280
tracing opcode LOAD_METHOD None pc=40 frame=14(0xd191950)
tracing opcode LOAD_CONST None pc=42 frame=14(0xd191950)
tracing opcode CALL_METHOD None pc=44 frame=14(0xd191950)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0xd191950)
tracing opcode CALL_METHOD None pc=48 frame=14(0xd191950)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0xd191950)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_336 : [#users=1] = placeholder[target=tensor_336]
    %tensor_337 : [#users=0] = placeholder[target=tensor_337]
    %tensor_338 : [#users=0] = placeholder[target=tensor_338]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_336, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0xd191950)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x101647c0)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=326 frame=13(0x101647c0)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x101647c0)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=334 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x101647c0)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x101647c0)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=348 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=350 frame=13(0x101647c0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=358 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=360 frame=13(0x101647c0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1a99c1d0)
push tracker due to record
push tracker 12 frame 0x1a99c1d0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1a99c1d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1a99c1d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1a99c1d0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1a99c1d0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1a99c1d0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1a99c1d0)
load fast: 22896660210208
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1a99c1d0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1a99c1d0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1a99c1d0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1a99c1d0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1a99c1d0)
load fast: 22897554164848
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1a99c1d0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1a99c1d0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1a99c1d0)
tracing opcode STORE_FAST None pc=34 frame=12(0x1a99c1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1a99c1d0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1a99c1d0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1a99c1d0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1a99c1d0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1a99c1d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1a99c1d0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1a99c1d0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1a99c1d0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1a99c1d0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1a99c1d0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_339 : [#users=1] = placeholder[target=tensor_339]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_339, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1a99c1d0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x101647c0)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x101647c0)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=374 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=378 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=380 frame=13(0x101647c0)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=386 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x101647c0)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x101647c0)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x101647c0)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x101647c0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x101647c0)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=404 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=406 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=408 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=412 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=414 frame=13(0x101647c0)
tracing opcode COMPARE_OP None pc=416 frame=13(0x101647c0)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x101647c0)
tracing opcode STORE_FAST None pc=452 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=458 frame=13(0x101647c0)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x101647c0)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x101647c0)
tracing opcode BINARY_ADD None pc=464 frame=13(0x101647c0)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=468 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=470 frame=13(0x101647c0)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=474 frame=13(0x101647c0)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=478 frame=13(0x101647c0)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=486 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=488 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=492 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=494 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=496 frame=13(0x101647c0)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=500 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=504 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x101647c0)
record function in graph <built-in method to of Tensor object at 0x14d30b4c6bd0>
func self id: 22896660212688
tracing opcode CALL_METHOD None pc=508 frame=13(0x101647c0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x101647c0)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=518 frame=13(0x101647c0)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=522 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=524 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=526 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x101647c0)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x163f7410)
push tracker due to record
push tracker 15 frame 0x163f7410 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x163f7410)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x163f7410)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x163f7410 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x163f7410)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x163f7410)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x163f7410)
load fast: 22896660213168
tracing opcode LOAD_METHOD None pc=12 frame=15(0x163f7410)
tracing opcode LOAD_FAST None pc=14 frame=15(0x163f7410)
load fast: 22896660785648
tracing opcode LOAD_METHOD None pc=16 frame=15(0x163f7410)
tracing opcode LOAD_CONST None pc=18 frame=15(0x163f7410)
tracing opcode CALL_METHOD None pc=20 frame=15(0x163f7410)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x163f7410)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x163f7410)
tracing opcode LOAD_CONST None pc=26 frame=15(0x163f7410)
tracing opcode CALL_METHOD None pc=28 frame=15(0x163f7410)
tracing opcode LOAD_FAST None pc=30 frame=15(0x163f7410)
load fast: 22896660690080
tracing opcode LOAD_METHOD None pc=32 frame=15(0x163f7410)
tracing opcode LOAD_CONST None pc=34 frame=15(0x163f7410)
tracing opcode CALL_METHOD None pc=36 frame=15(0x163f7410)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x163f7410)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x163f7410)
tracing opcode LOAD_CONST None pc=42 frame=15(0x163f7410)
tracing opcode CALL_METHOD None pc=44 frame=15(0x163f7410)
tracing opcode BUILD_LIST None pc=46 frame=15(0x163f7410)
tracing opcode CALL_METHOD None pc=48 frame=15(0x163f7410)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x163f7410)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_340 : [#users=1] = placeholder[target=tensor_340]
    %tensor_341 : [#users=0] = placeholder[target=tensor_341]
    %tensor_342 : [#users=0] = placeholder[target=tensor_342]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_340, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x163f7410)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x101647c0)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x101647c0)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=538 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x101647c0)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=548 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=550 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=552 frame=13(0x101647c0)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x101647c0)
tracing opcode LOAD_CONST None pc=556 frame=13(0x101647c0)
tracing opcode CALL_METHOD None pc=558 frame=13(0x101647c0)
tracing opcode COMPARE_OP None pc=560 frame=13(0x101647c0)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x101647c0)
tracing opcode LOAD_FAST None pc=626 frame=13(0x101647c0)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x101647c0)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x101647c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x101647c0)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x101647c0)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_332 : [#users=1] = placeholder[target=tensor_332]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_332, 1), kwargs = {})
    %tensor_333 : [#users=1] = placeholder[target=tensor_333]
    %tensor_334 : [#users=1] = placeholder[target=tensor_334]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_333, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_334, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x101647c0)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=408 frame=11(0x1a9a8780)
tracing opcode IS_OP None pc=410 frame=11(0x1a9a8780)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=418 frame=11(0x1a9a8780)
tracing opcode BINARY_ADD None pc=420 frame=11(0x1a9a8780)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x1a9a8780)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=470 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=472 frame=11(0x1a9a8780)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=476 frame=11(0x1a9a8780)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=484 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=486 frame=11(0x1a9a8780)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d324d6bc40)
push tracker due to record
push tracker 3 frame 0x14d324d6bc40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d324d6bc40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d324d6bc40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d324d6bc40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d324d6bc40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d324d6bc40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d324d6bc40)
load fast: 22897554165088
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d324d6bc40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d324d6bc40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d324d6bc40)
load fast: 22896660120656
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d324d6bc40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_344 : [#users=0] = placeholder[target=tensor_344]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0048, 0.0033, 0.0033,  ..., 0.0038, 0.0045, 0.0027],
          [0.0030, 0.0043, 0.0033,  ..., 0.0028, 0.0032, 0.0032],
          [0.0047, 0.0029, 0.0032,  ..., 0.0045, 0.0043, 0.0049],
          ...,
          [0.0037, 0.0034, 0.0044,  ..., 0.0039, 0.0037, 0.0043],
          [0.0055, 0.0032, 0.0041,  ..., 0.0033, 0.0040, 0.0048],
          [0.0040, 0.0028, 0.0043,  ..., 0.0052, 0.0038, 0.0037]],

         [[0.0039, 0.0035, 0.0040,  ..., 0.0038, 0.0046, 0.0048],
          [0.0033, 0.0032, 0.0029,  ..., 0.0038, 0.0049, 0.0041],
          [0.0031, 0.0037, 0.0027,  ..., 0.0044, 0.0044, 0.0036],
          ...,
          [0.0030, 0.0034, 0.0024,  ..., 0.0037, 0.0052, 0.0043],
          [0.0032, 0.0030, 0.0039,  ..., 0.0035, 0.0055, 0.0035],
          [0.0032, 0.0033, 0.0036,  ..., 0.0037, 0.0045, 0.0042]],

         [[0.0040, 0.0038, 0.0038,  ..., 0.0033, 0.0038, 0.0039],
          [0.0035, 0.0024, 0.0043,  ..., 0.0039, 0.0042, 0.0034],
          [0.0031, 0.0041, 0.0034,  ..., 0.0033, 0.0037, 0.0035],
          ...,
          [0.0032, 0.0039, 0.0042,  ..., 0.0036, 0.0042, 0.0044],
          [0.0042, 0.0038, 0.0036,  ..., 0.0031, 0.0052, 0.0040],
          [0.0047, 0.0036, 0.0034,  ..., 0.0033, 0.0033, 0.0035]],

         ...,

         [[0.0031, 0.0038, 0.0037,  ..., 0.0041, 0.0046, 0.0031],
          [0.0038, 0.0035, 0.0043,  ..., 0.0045, 0.0042, 0.0041],
          [0.0050, 0.0042, 0.0033,  ..., 0.0036, 0.0033, 0.0028],
          ...,
          [0.0058, 0.0033, 0.0030,  ..., 0.0052, 0.0055, 0.0041],
          [0.0040, 0.0047, 0.0037,  ..., 0.0033, 0.0037, 0.0038],
          [0.0037, 0.0044, 0.0040,  ..., 0.0036, 0.0033, 0.0036]],

         [[0.0041, 0.0037, 0.0038,  ..., 0.0039, 0.0064, 0.0034],
          [0.0040, 0.0045, 0.0042,  ..., 0.0030, 0.0035, 0.0035],
          [0.0045, 0.0029, 0.0042,  ..., 0.0041, 0.0036, 0.0036],
          ...,
          [0.0038, 0.0037, 0.0039,  ..., 0.0049, 0.0044, 0.0041],
          [0.0037, 0.0041, 0.0037,  ..., 0.0037, 0.0050, 0.0034],
          [0.0036, 0.0037, 0.0043,  ..., 0.0040, 0.0039, 0.0039]],

         [[0.0033, 0.0033, 0.0043,  ..., 0.0048, 0.0053, 0.0038],
          [0.0045, 0.0026, 0.0038,  ..., 0.0032, 0.0042, 0.0048],
          [0.0045, 0.0031, 0.0042,  ..., 0.0040, 0.0029, 0.0028],
          ...,
          [0.0033, 0.0036, 0.0037,  ..., 0.0045, 0.0040, 0.0047],
          [0.0043, 0.0041, 0.0038,  ..., 0.0031, 0.0054, 0.0035],
          [0.0034, 0.0037, 0.0044,  ..., 0.0030, 0.0039, 0.0031]]]]), modified_attrs={}, prev=None) 22896660029648 22896660120656
obj: tensor([[[[0.0048, 0.0033, 0.0033,  ..., 0.0038, 0.0045, 0.0027],
          [0.0030, 0.0043, 0.0033,  ..., 0.0028, 0.0032, 0.0032],
          [0.0047, 0.0029, 0.0032,  ..., 0.0045, 0.0043, 0.0049],
          ...,
          [0.0037, 0.0034, 0.0044,  ..., 0.0039, 0.0037, 0.0043],
          [0.0055, 0.0032, 0.0041,  ..., 0.0033, 0.0040, 0.0048],
          [0.0040, 0.0028, 0.0043,  ..., 0.0052, 0.0038, 0.0037]],

         [[0.0039, 0.0035, 0.0040,  ..., 0.0038, 0.0046, 0.0048],
          [0.0033, 0.0032, 0.0029,  ..., 0.0038, 0.0049, 0.0041],
          [0.0031, 0.0037, 0.0027,  ..., 0.0044, 0.0044, 0.0036],
          ...,
          [0.0030, 0.0034, 0.0024,  ..., 0.0037, 0.0052, 0.0043],
          [0.0032, 0.0030, 0.0039,  ..., 0.0035, 0.0055, 0.0035],
          [0.0032, 0.0033, 0.0036,  ..., 0.0037, 0.0045, 0.0042]],

         [[0.0040, 0.0038, 0.0038,  ..., 0.0033, 0.0038, 0.0039],
          [0.0035, 0.0024, 0.0043,  ..., 0.0039, 0.0042, 0.0034],
          [0.0031, 0.0041, 0.0034,  ..., 0.0033, 0.0037, 0.0035],
          ...,
          [0.0032, 0.0039, 0.0042,  ..., 0.0036, 0.0042, 0.0044],
          [0.0042, 0.0038, 0.0036,  ..., 0.0031, 0.0052, 0.0040],
          [0.0047, 0.0036, 0.0034,  ..., 0.0033, 0.0033, 0.0035]],

         ...,

         [[0.0031, 0.0038, 0.0037,  ..., 0.0041, 0.0046, 0.0031],
          [0.0038, 0.0035, 0.0043,  ..., 0.0045, 0.0042, 0.0041],
          [0.0050, 0.0042, 0.0033,  ..., 0.0036, 0.0033, 0.0028],
          ...,
          [0.0058, 0.0033, 0.0030,  ..., 0.0052, 0.0055, 0.0041],
          [0.0040, 0.0047, 0.0037,  ..., 0.0033, 0.0037, 0.0038],
          [0.0037, 0.0044, 0.0040,  ..., 0.0036, 0.0033, 0.0036]],

         [[0.0041, 0.0037, 0.0038,  ..., 0.0039, 0.0064, 0.0034],
          [0.0040, 0.0045, 0.0042,  ..., 0.0030, 0.0035, 0.0035],
          [0.0045, 0.0029, 0.0042,  ..., 0.0041, 0.0036, 0.0036],
          ...,
          [0.0038, 0.0037, 0.0039,  ..., 0.0049, 0.0044, 0.0041],
          [0.0037, 0.0041, 0.0037,  ..., 0.0037, 0.0050, 0.0034],
          [0.0036, 0.0037, 0.0043,  ..., 0.0040, 0.0039, 0.0039]],

         [[0.0033, 0.0033, 0.0043,  ..., 0.0048, 0.0053, 0.0038],
          [0.0045, 0.0026, 0.0038,  ..., 0.0032, 0.0042, 0.0048],
          [0.0045, 0.0031, 0.0042,  ..., 0.0040, 0.0029, 0.0028],
          ...,
          [0.0033, 0.0036, 0.0037,  ..., 0.0045, 0.0040, 0.0047],
          [0.0043, 0.0041, 0.0038,  ..., 0.0031, 0.0054, 0.0035],
          [0.0034, 0.0037, 0.0044,  ..., 0.0030, 0.0039, 0.0031]]]]) 22896660120656
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0048, 0.0033, 0.0033,  ..., 0.0038, 0.0045, 0.0027],
          [0.0030, 0.0043, 0.0033,  ..., 0.0028, 0.0032, 0.0032],
          [0.0047, 0.0029, 0.0032,  ..., 0.0045, 0.0043, 0.0049],
          ...,
          [0.0037, 0.0034, 0.0044,  ..., 0.0039, 0.0037, 0.0043],
          [0.0055, 0.0032, 0.0041,  ..., 0.0033, 0.0040, 0.0048],
          [0.0040, 0.0028, 0.0043,  ..., 0.0052, 0.0038, 0.0037]],

         [[0.0039, 0.0035, 0.0040,  ..., 0.0038, 0.0046, 0.0048],
          [0.0033, 0.0032, 0.0029,  ..., 0.0038, 0.0049, 0.0041],
          [0.0031, 0.0037, 0.0027,  ..., 0.0044, 0.0044, 0.0036],
          ...,
          [0.0030, 0.0034, 0.0024,  ..., 0.0037, 0.0052, 0.0043],
          [0.0032, 0.0030, 0.0039,  ..., 0.0035, 0.0055, 0.0035],
          [0.0032, 0.0033, 0.0036,  ..., 0.0037, 0.0045, 0.0042]],

         [[0.0040, 0.0038, 0.0038,  ..., 0.0033, 0.0038, 0.0039],
          [0.0035, 0.0024, 0.0043,  ..., 0.0039, 0.0042, 0.0034],
          [0.0031, 0.0041, 0.0034,  ..., 0.0033, 0.0037, 0.0035],
          ...,
          [0.0032, 0.0039, 0.0042,  ..., 0.0036, 0.0042, 0.0044],
          [0.0042, 0.0038, 0.0036,  ..., 0.0031, 0.0052, 0.0040],
          [0.0047, 0.0036, 0.0034,  ..., 0.0033, 0.0033, 0.0035]],

         ...,

         [[0.0031, 0.0038, 0.0037,  ..., 0.0041, 0.0046, 0.0031],
          [0.0038, 0.0035, 0.0043,  ..., 0.0045, 0.0042, 0.0041],
          [0.0050, 0.0042, 0.0033,  ..., 0.0036, 0.0033, 0.0028],
          ...,
          [0.0058, 0.0033, 0.0030,  ..., 0.0052, 0.0055, 0.0041],
          [0.0040, 0.0047, 0.0037,  ..., 0.0033, 0.0037, 0.0038],
          [0.0037, 0.0044, 0.0040,  ..., 0.0036, 0.0033, 0.0036]],

         [[0.0041, 0.0037, 0.0038,  ..., 0.0039, 0.0064, 0.0034],
          [0.0040, 0.0045, 0.0042,  ..., 0.0030, 0.0035, 0.0035],
          [0.0045, 0.0029, 0.0042,  ..., 0.0041, 0.0036, 0.0036],
          ...,
          [0.0038, 0.0037, 0.0039,  ..., 0.0049, 0.0044, 0.0041],
          [0.0037, 0.0041, 0.0037,  ..., 0.0037, 0.0050, 0.0034],
          [0.0036, 0.0037, 0.0043,  ..., 0.0040, 0.0039, 0.0039]],

         [[0.0033, 0.0033, 0.0043,  ..., 0.0048, 0.0053, 0.0038],
          [0.0045, 0.0026, 0.0038,  ..., 0.0032, 0.0042, 0.0048],
          [0.0045, 0.0031, 0.0042,  ..., 0.0040, 0.0029, 0.0028],
          ...,
          [0.0033, 0.0036, 0.0037,  ..., 0.0045, 0.0040, 0.0047],
          [0.0043, 0.0041, 0.0038,  ..., 0.0031, 0.0054, 0.0035],
          [0.0034, 0.0037, 0.0044,  ..., 0.0030, 0.0039, 0.0031]]]]), modified_attrs={}, prev=None) 22896660163408
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d324d6bc40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x1a9a8780)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x1a9a8780)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=536 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=538 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=540 frame=11(0x1a9a8780)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=548 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=550 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=552 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=554 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=556 frame=11(0x1a9a8780)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=560 frame=11(0x1a9a8780)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=568 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=570 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=572 frame=11(0x1a9a8780)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x1a9a8780)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x1a9a8780)
tracing opcode LOAD_CONST None pc=578 frame=11(0x1a9a8780)
tracing opcode BINARY_ADD None pc=580 frame=11(0x1a9a8780)
tracing opcode STORE_FAST None pc=582 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x1a9a8780)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x1a9a8780)
tracing opcode LOAD_FAST None pc=588 frame=11(0x1a9a8780)
tracing opcode CALL_METHOD None pc=590 frame=11(0x1a9a8780)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x1a9a8780)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x1a9a8780)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x1a9a8780)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x1a9a8780)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_327 : [#users=1] = placeholder[target=tensor_327]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_327,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_331 : [#users=1] = placeholder[target=tensor_331]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_331, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_332 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_332, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_343 : [#users=1] = placeholder[target=tensor_343]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_343, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x1a9a8780)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0xea85850)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0xea85850)
tracing opcode LOAD_CONST None pc=46 frame=10(0xea85850)
tracing opcode IS_OP None pc=48 frame=10(0xea85850)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0xea85850)
tracing opcode STORE_FAST None pc=54 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0xea85850)
tracing opcode LOAD_METHOD None pc=58 frame=10(0xea85850)
tracing opcode LOAD_FAST None pc=60 frame=10(0xea85850)
tracing opcode LOAD_FAST None pc=62 frame=10(0xea85850)
tracing opcode CALL_METHOD None pc=64 frame=10(0xea85850)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x193c2030)
push tracker due to record
push tracker 16 frame 0x193c2030 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x193c2030)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x193c2030)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x193c2030 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x193c2030)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x193c2030)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x193c2030)
load fast: 22897554165136
tracing opcode LOAD_METHOD None pc=12 frame=16(0x193c2030)
tracing opcode LOAD_FAST None pc=14 frame=16(0x193c2030)
load fast: 22896659858432
tracing opcode CALL_METHOD None pc=16 frame=16(0x193c2030)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x193c2030)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x193c2030)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x193c2030)
tracing opcode LOAD_FAST None pc=24 frame=16(0x193c2030)
tracing opcode CALL_METHOD None pc=26 frame=16(0x193c2030)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x190a9560)
push tracker due to record
push tracker 3 frame 0x190a9560 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x190a9560)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x190a9560)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x190a9560 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x190a9560)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x190a9560)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x190a9560)
load fast: 22897554165280
tracing opcode LOAD_ATTR None pc=12 frame=3(0x190a9560)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x190a9560)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x190a9560)
load fast: 22896659848464
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x190a9560)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_346 : [#users=0] = placeholder[target=tensor_346]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.2744, -0.0488,  0.0591,  ...,  0.0513, -0.0205, -0.0085],
         [ 0.2714, -0.0528,  0.0391,  ...,  0.0534, -0.0221, -0.0078],
         [ 0.2769, -0.0536,  0.0528,  ...,  0.0527, -0.0213, -0.0075],
         ...,
         [ 0.2723, -0.0546,  0.0474,  ...,  0.0472, -0.0238, -0.0109],
         [ 0.2765, -0.0542,  0.0458,  ...,  0.0552, -0.0184, -0.0126],
         [ 0.2751, -0.0536,  0.0443,  ...,  0.0502, -0.0181, -0.0141]]]), modified_attrs={}, prev=None) 22896659923200 22896659848464
obj: tensor([[[ 0.2744, -0.0488,  0.0591,  ...,  0.0513, -0.0205, -0.0085],
         [ 0.2714, -0.0528,  0.0391,  ...,  0.0534, -0.0221, -0.0078],
         [ 0.2769, -0.0536,  0.0528,  ...,  0.0527, -0.0213, -0.0075],
         ...,
         [ 0.2723, -0.0546,  0.0474,  ...,  0.0472, -0.0238, -0.0109],
         [ 0.2765, -0.0542,  0.0458,  ...,  0.0552, -0.0184, -0.0126],
         [ 0.2751, -0.0536,  0.0443,  ...,  0.0502, -0.0181, -0.0141]]]) 22896659848464
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.2744, -0.0488,  0.0591,  ...,  0.0513, -0.0205, -0.0085],
         [ 0.2714, -0.0528,  0.0391,  ...,  0.0534, -0.0221, -0.0078],
         [ 0.2769, -0.0536,  0.0528,  ...,  0.0527, -0.0213, -0.0075],
         ...,
         [ 0.2723, -0.0546,  0.0474,  ...,  0.0472, -0.0238, -0.0109],
         [ 0.2765, -0.0542,  0.0458,  ...,  0.0552, -0.0184, -0.0126],
         [ 0.2751, -0.0536,  0.0443,  ...,  0.0502, -0.0181, -0.0141]]]), modified_attrs={}, prev=None) 22896659827296
tracing opcode RETURN_VALUE None pc=74 frame=3(0x190a9560)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x193c2030)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x193c2030)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x193c2030)
tracing opcode LOAD_FAST None pc=34 frame=16(0x193c2030)
tracing opcode LOAD_FAST None pc=36 frame=16(0x193c2030)
load fast: 22897231241440
tracing opcode BINARY_ADD None pc=38 frame=16(0x193c2030)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x193c2030)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d30b4c0040)
push tracker due to record
push tracker 2 frame 0x14d30b4c0040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d30b4c0040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d30b4c0040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d30b4c0040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d30b4c0040)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d30b4c0040)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d30b4c0040)
load fast: 22896659848784
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d30b4c0040)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d30b4c0040)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d30b4c0040)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d30b4c0040)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d30b4c0040)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d30b4c0040)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d30b4c0040)
record function in graph <built-in method mean of Tensor object at 0x14d30b46de50>
func self id: 22896659848784
tracing opcode STORE_FAST None pc=36 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d30b4c0040)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d30b4c0040)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d30b4c0040)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d30b4c0040)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d30b4c0040)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d30b4c0040)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d30b4c0040)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d30b4c0040)
record function in graph <built-in method mean of Tensor object at 0x14d30b483900>
func self id: 22896659937536
tracing opcode STORE_FAST None pc=60 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d30b4c0040)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d30b4c0040)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d30b4c0040)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d30b4c0040)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d30b4c0040)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d30b4c0040)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d30b4c0040)
load fast: 22897554165232
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d30b4c0040)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d30b4c0040)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d30b4c0040)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d30b4c0040)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d30b4c0040)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d30b4c0040)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d30b4c0040)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d30b4c0040)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d30b4c0040)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d30b4c0040)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d30b4c0040)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d30b4c0040)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d30b4c0040)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d30b4c0040)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d30b4c0040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d30b4c0040)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d30b4c0040)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d30b4c0040)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_348 : [#users=4] = placeholder[target=tensor_348]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_348,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_348, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_348, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_348, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d30b46de50>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d30b4c0040)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x193c2030)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x193c2030)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x193c2030)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_345 : [#users=1] = placeholder[target=tensor_345]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_345,), kwargs = {})
    %tensor_347 : [#users=1] = placeholder[target=tensor_347]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_347), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x193c2030)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0xea85850)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0xea85850)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0xea85850)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0xea85850)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_324 : [#users=2] = placeholder[target=tensor_324]
    %tensor_325 : [#users=1] = placeholder[target=tensor_325]
    %tensor_326 : [#users=1] = placeholder[target=tensor_326]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_324,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_326, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_332 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_332, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_325, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_324), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0xea85850)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x1c075b50)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x1c075b50)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x1c075b50)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x1c075b50)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x1c075b50)
tracing opcode LOAD_FAST None pc=48 frame=9(0x1c075b50)
tracing opcode CALL_METHOD None pc=50 frame=9(0x1c075b50)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d3290e9640)
push tracker due to record
push tracker 17 frame 0x14d3290e9640 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d3290e9640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d3290e9640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d3290e9640 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d3290e9640)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d3290e9640)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d3290e9640)
load fast: 22897554165328
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d3290e9640)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d3290e9640)
load fast: 22896660018416
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d3290e9640)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d3290e9640)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d3290e9640)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d3290e9640)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d3290e9640)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d3290e9640)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x1c08ae10)
push tracker due to record
push tracker 18 frame 0x1c08ae10 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x1c08ae10)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x1c08ae10)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x1c08ae10 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x1c08ae10)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x1c08ae10)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x1c08ae10)
load fast: 22897554165424
tracing opcode LOAD_METHOD None pc=12 frame=18(0x1c08ae10)
tracing opcode LOAD_FAST None pc=14 frame=18(0x1c08ae10)
load fast: 22896659674272
tracing opcode CALL_METHOD None pc=16 frame=18(0x1c08ae10)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x1c08ae10)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_350 : [#users=1] = placeholder[target=tensor_350]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_350,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x1c08ae10)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d3290e9640)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d3290e9640)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d3290e9640)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_349 : [#users=1] = placeholder[target=tensor_349]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_349,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d3290e9640)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x1c075b50)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x1c075b50)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x1c075b50)
tracing opcode LOAD_FAST None pc=58 frame=9(0x1c075b50)
tracing opcode LOAD_FAST None pc=60 frame=9(0x1c075b50)
tracing opcode CALL_METHOD None pc=62 frame=9(0x1c075b50)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x1c076f70)
push tracker due to record
push tracker 19 frame 0x1c076f70 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x1c076f70)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x1c076f70)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x1c076f70 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x1c076f70)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x1c076f70)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x1c076f70)
load fast: 22897554165472
tracing opcode LOAD_METHOD None pc=12 frame=19(0x1c076f70)
tracing opcode LOAD_FAST None pc=14 frame=19(0x1c076f70)
load fast: 22896659610096
tracing opcode CALL_METHOD None pc=16 frame=19(0x1c076f70)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x1c076f70)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x1c076f70)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x1c076f70)
tracing opcode LOAD_FAST None pc=24 frame=19(0x1c076f70)
tracing opcode CALL_METHOD None pc=26 frame=19(0x1c076f70)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d31810c040)
push tracker due to record
push tracker 3 frame 0x14d31810c040 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d31810c040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d31810c040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d31810c040 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d31810c040)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d31810c040)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d31810c040)
load fast: 22897554165616
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d31810c040)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d31810c040)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d31810c040)
load fast: 22896659732496
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d31810c040)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_352 : [#users=0] = placeholder[target=tensor_352]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.2770, -0.3068,  0.4755,  ...,  0.6370,  0.8075,  0.2429],
         [-0.0971,  0.3166,  0.0255,  ..., -0.0914, -0.1042,  0.0077],
         [ 0.2168, -0.3940,  0.4351,  ...,  0.1372,  0.2212,  0.2840],
         ...,
         [-0.0537, -0.0027,  0.1592,  ...,  0.5992,  0.0922,  0.1777],
         [-0.4116,  0.7524, -0.6762,  ...,  0.2347, -0.0351,  0.3472],
         [-0.3796,  0.0548,  0.0301,  ...,  0.6387,  0.2908,  0.4073]]]), modified_attrs={}, prev=None) 22896659714000 22896659732496
obj: tensor([[[-0.2770, -0.3068,  0.4755,  ...,  0.6370,  0.8075,  0.2429],
         [-0.0971,  0.3166,  0.0255,  ..., -0.0914, -0.1042,  0.0077],
         [ 0.2168, -0.3940,  0.4351,  ...,  0.1372,  0.2212,  0.2840],
         ...,
         [-0.0537, -0.0027,  0.1592,  ...,  0.5992,  0.0922,  0.1777],
         [-0.4116,  0.7524, -0.6762,  ...,  0.2347, -0.0351,  0.3472],
         [-0.3796,  0.0548,  0.0301,  ...,  0.6387,  0.2908,  0.4073]]]) 22896659732496
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.2770, -0.3068,  0.4755,  ...,  0.6370,  0.8075,  0.2429],
         [-0.0971,  0.3166,  0.0255,  ..., -0.0914, -0.1042,  0.0077],
         [ 0.2168, -0.3940,  0.4351,  ...,  0.1372,  0.2212,  0.2840],
         ...,
         [-0.0537, -0.0027,  0.1592,  ...,  0.5992,  0.0922,  0.1777],
         [-0.4116,  0.7524, -0.6762,  ...,  0.2347, -0.0351,  0.3472],
         [-0.3796,  0.0548,  0.0301,  ...,  0.6387,  0.2908,  0.4073]]]), modified_attrs={}, prev=None) 22896659744512
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d31810c040)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x1c076f70)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x1c076f70)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x1c076f70)
tracing opcode LOAD_FAST None pc=34 frame=19(0x1c076f70)
tracing opcode LOAD_FAST None pc=36 frame=19(0x1c076f70)
load fast: 22896660018416
tracing opcode BINARY_ADD None pc=38 frame=19(0x1c076f70)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x1c076f70)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x11a4c100)
push tracker due to record
push tracker 2 frame 0x11a4c100 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x11a4c100)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x11a4c100)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x11a4c100 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x11a4c100)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x11a4c100)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x11a4c100)
load fast: 22896659272944
tracing opcode LOAD_ATTR None pc=12 frame=2(0x11a4c100)
tracing opcode STORE_FAST None pc=14 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x11a4c100)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x11a4c100)
tracing opcode CALL_METHOD None pc=20 frame=2(0x11a4c100)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x11a4c100)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=28 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=30 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=32 frame=2(0x11a4c100)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x11a4c100)
record function in graph <built-in method mean of Tensor object at 0x14d30b3e14f0>
func self id: 22896659272944
tracing opcode STORE_FAST None pc=36 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x11a4c100)
tracing opcode LOAD_FAST None pc=40 frame=2(0x11a4c100)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x11a4c100)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=46 frame=2(0x11a4c100)
tracing opcode CALL_METHOD None pc=48 frame=2(0x11a4c100)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=52 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=54 frame=2(0x11a4c100)
tracing opcode LOAD_CONST None pc=56 frame=2(0x11a4c100)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x11a4c100)
record function in graph <built-in method mean of Tensor object at 0x14d30b3e18b0>
func self id: 22896659273904
tracing opcode STORE_FAST None pc=60 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x11a4c100)
tracing opcode LOAD_FAST None pc=64 frame=2(0x11a4c100)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x11a4c100)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x11a4c100)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x11a4c100)
tracing opcode LOAD_FAST None pc=72 frame=2(0x11a4c100)
tracing opcode LOAD_FAST None pc=74 frame=2(0x11a4c100)
load fast: 22897554165568
tracing opcode LOAD_ATTR None pc=76 frame=2(0x11a4c100)
tracing opcode BINARY_ADD None pc=78 frame=2(0x11a4c100)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x11a4c100)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x11a4c100)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x11a4c100)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x11a4c100)
tracing opcode LOAD_FAST None pc=90 frame=2(0x11a4c100)
tracing opcode CALL_METHOD None pc=92 frame=2(0x11a4c100)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x11a4c100)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x11a4c100)
tracing opcode LOAD_FAST None pc=100 frame=2(0x11a4c100)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x11a4c100)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x11a4c100)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x11a4c100)
tracing opcode BINARY_ADD None pc=108 frame=2(0x11a4c100)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x11a4c100)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x11a4c100)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x11a4c100)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_354 : [#users=4] = placeholder[target=tensor_354]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_354,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_354, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_354, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_354, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d30b3e14f0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x11a4c100)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x1c076f70)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x1c076f70)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x1c076f70)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_351 : [#users=1] = placeholder[target=tensor_351]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_351,), kwargs = {})
    %tensor_353 : [#users=1] = placeholder[target=tensor_353]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_353), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x1c076f70)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x1c075b50)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x1c075b50)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x1c075b50)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x1c075b50)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x1c075b50)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_321 : [#users=2] = placeholder[target=tensor_321]
    %tensor_322 : [#users=1] = placeholder[target=tensor_322]
    %tensor_323 : [#users=1] = placeholder[target=tensor_323]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_321,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_323, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_332 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_332, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_322, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_321), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x1c075b50)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x11a4e470)
push tracker due to record
push tracker 9 frame 0x11a4e470 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x11a4e470)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x11a4e470)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x11a4e470 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x11a4e470)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x11a4e470)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x11a4e470)
load fast: 22897554165664
tracing opcode LOAD_ATTR None pc=12 frame=9(0x11a4e470)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x11a4e470)
load fast: 22896659346352
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x11a4e470)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x11a4e470)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x11a4e470)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x11a4e470)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x11a4e470)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x11a4e470)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x11a4e470)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0x222db140)
push tracker due to record
push tracker 10 frame 0x222db140 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0x222db140)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0x222db140)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0x222db140 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0x222db140)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0x222db140)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0x222db140)
load fast: 22897554165712
tracing opcode LOAD_ATTR None pc=12 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0x222db140)
load fast: 22896659346352
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0x222db140)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0x222db140)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0x222db140)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0x222db140)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0x222db140)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0x222db140)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0x222db140)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x222ddb50)
push tracker due to record
push tracker 11 frame 0x222ddb50 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x222ddb50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x222ddb50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x222ddb50 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x222ddb50)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x222ddb50)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x222ddb50)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x222ddb50)
tracing opcode IS_OP None pc=16 frame=11(0x222ddb50)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x222ddb50)
load fast: 22897554034752
tracing opcode LOAD_METHOD None pc=22 frame=11(0x222ddb50)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x222ddb50)
load fast: 22896659346352
tracing opcode CALL_METHOD None pc=26 frame=11(0x222ddb50)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=34 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=36 frame=11(0x222ddb50)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xa1c8300)
push tracker due to record
push tracker 12 frame 0xa1c8300 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xa1c8300)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xa1c8300)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0xa1c8300 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xa1c8300)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xa1c8300)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xa1c8300)
load fast: 22896589534608
tracing opcode LOAD_METHOD None pc=12 frame=12(0xa1c8300)
tracing opcode CALL_METHOD None pc=14 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=16 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=18 frame=12(0xa1c8300)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xa1c8300)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xa1c8300)
tracing opcode LOAD_FAST None pc=24 frame=12(0xa1c8300)
load fast: 22897554034752
tracing opcode LOAD_ATTR None pc=26 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=28 frame=12(0xa1c8300)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xa1c8300)
tracing opcode BINARY_ADD None pc=32 frame=12(0xa1c8300)
tracing opcode STORE_FAST None pc=34 frame=12(0xa1c8300)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xa1c8300)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xa1c8300)
tracing opcode LOAD_FAST None pc=40 frame=12(0xa1c8300)
tracing opcode CALL_METHOD None pc=42 frame=12(0xa1c8300)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xa1c8300)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xa1c8300)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=50 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=52 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=54 frame=12(0xa1c8300)
tracing opcode LOAD_CONST None pc=56 frame=12(0xa1c8300)
tracing opcode CALL_METHOD None pc=58 frame=12(0xa1c8300)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xa1c8300)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_362 : [#users=1] = placeholder[target=tensor_362]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_362, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xa1c8300)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=40 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=42 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=44 frame=11(0x222ddb50)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x222ddb50)
record function in graph <built-in method chunk of Tensor object at 0x14d307154400>
func self id: 22896589489152
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x222ddb50)
sub_value 22896589537168 tensor([[[[-1.6062e-01, -2.0459e-01, -2.5094e-02,  ..., -3.2929e-01,
           -3.9041e-02,  3.6762e-01],
          [ 3.4155e-01, -1.0493e+00,  7.3726e-01,  ..., -4.1605e-01,
            4.8933e-01, -4.8609e-01],
          [ 1.8767e-01, -3.6436e-01, -1.3019e-01,  ..., -2.8733e-01,
           -5.4150e-02, -5.9321e-02],
          ...,
          [-4.8986e-01, -8.8397e-01,  6.1335e-01,  ..., -3.9442e-01,
            6.1238e-01,  6.0140e-01],
          [-4.0845e-01, -8.1902e-02,  3.7406e-01,  ..., -5.0954e-01,
           -2.7187e-02,  3.2802e-01],
          [ 4.0625e-01, -4.0586e-02, -7.0497e-01,  ..., -7.8854e-02,
            5.7649e-01,  1.8245e-01]],

         [[ 2.5693e-01, -3.2161e-01,  2.5008e-01,  ..., -5.9716e-01,
           -1.2376e-01, -1.1238e+00],
          [ 1.1963e-02,  1.8145e-01, -4.9442e-01,  ...,  2.0361e-01,
            3.2393e-01,  4.7673e-01],
          [ 5.2163e-01,  1.0394e+00, -9.1946e-01,  ..., -7.1110e-02,
           -1.3930e+00, -1.9480e-01],
          ...,
          [-6.0134e-01,  3.2576e-01,  2.9415e-01,  ...,  8.2440e-01,
           -2.6940e-01, -6.9020e-01],
          [-4.4869e-01,  4.8809e-01, -3.8625e-01,  ..., -3.2200e-01,
           -3.0800e-01,  4.0754e-01],
          [-6.1938e-01, -1.6285e-01, -4.2295e-01,  ..., -6.4688e-01,
           -1.0218e+00, -6.6850e-01]],

         [[ 1.2610e+00, -6.6083e-01, -1.5210e-02,  ..., -1.1818e+00,
            3.0494e-03, -4.7847e-01],
          [-9.8053e-04,  5.5122e-01,  9.8362e-01,  ..., -1.0373e-01,
           -3.5745e-01,  4.5522e-02],
          [ 7.8691e-02,  2.4059e-01,  5.5867e-01,  ...,  8.3855e-02,
            2.9997e-01,  8.2014e-01],
          ...,
          [ 1.8288e-01, -6.5963e-01, -2.2703e-01,  ...,  5.9697e-01,
           -1.1816e+00,  6.8246e-01],
          [-5.2540e-01,  1.3197e-01,  4.0232e-01,  ..., -4.6602e-01,
           -7.4735e-01,  1.0629e+00],
          [ 2.7626e-01,  3.6596e-01,  2.1445e-01,  ..., -4.2319e-01,
           -2.6197e-01, -5.1001e-01]],

         ...,

         [[-1.7615e+00,  6.3995e-01,  5.2776e-01,  ..., -2.9497e-01,
            2.4065e-01,  1.5108e+00],
          [-1.6526e-01,  3.9862e-01,  7.0484e-01,  ...,  5.4082e-01,
           -5.0995e-03,  9.0991e-01],
          [ 4.8744e-01, -5.8440e-01,  1.0511e+00,  ..., -2.1634e-01,
           -1.4030e+00, -2.4522e-01],
          ...,
          [-8.0744e-01,  3.7138e-01, -3.0073e-02,  ...,  1.3223e-01,
           -5.3444e-01,  6.0247e-01],
          [ 2.5110e-01,  7.5085e-01, -5.0204e-01,  ..., -8.1059e-01,
           -3.7664e-02, -6.7804e-01],
          [ 5.0253e-01, -3.9143e-01,  1.3168e+00,  ...,  5.9013e-01,
           -5.4459e-01,  3.4372e-01]],

         [[ 6.8248e-01, -6.9756e-01,  6.0555e-01,  ...,  1.3856e+00,
           -8.8990e-02,  6.0812e-01],
          [ 6.6185e-03,  6.4926e-01,  5.8433e-02,  ..., -1.7982e-02,
           -5.2117e-01,  6.6902e-01],
          [ 5.5635e-01,  3.8380e-02, -1.1847e+00,  ...,  2.7784e-01,
            7.6649e-01,  4.6480e-01],
          ...,
          [ 3.2794e-01, -1.6058e-01,  6.8229e-01,  ..., -1.9439e-01,
            7.6899e-01, -2.9392e-01],
          [ 1.2566e-01, -2.9506e-01,  3.8750e-01,  ..., -2.5789e-01,
           -6.1928e-01,  1.3879e-01],
          [ 2.1226e-01, -1.8492e-01, -6.9874e-01,  ...,  1.2937e-01,
           -6.1318e-01, -6.4684e-02]],

         [[-6.0989e-01, -2.6848e-01,  7.7374e-01,  ...,  1.7520e-02,
            1.9856e-01, -4.3481e-02],
          [ 4.0913e-01,  4.2166e-01,  6.9398e-01,  ...,  5.3782e-01,
            1.6743e-01,  1.2820e-01],
          [ 3.5615e-01, -1.7636e-01,  3.6993e-01,  ..., -1.8701e+00,
            9.4259e-02, -6.6719e-02],
          ...,
          [ 4.4465e-01, -1.0066e-01, -5.1537e-02,  ..., -4.7443e-01,
           -5.1992e-01,  3.7534e-02],
          [ 8.7181e-01,  2.2981e-01,  8.0851e-01,  ..., -1.5918e-01,
           -3.6926e-02,  2.4831e-01],
          [ 8.2976e-01, -2.2561e-01,  4.0443e-01,  ..., -5.2447e-01,
            7.6124e-03,  3.9848e-01]]]])
sub_value 22896589535088 tensor([[[[-0.0043,  0.3298,  0.6117,  ..., -1.1540, -0.4124, -0.3078],
          [-0.6558,  0.8936,  0.6104,  ..., -0.1266,  0.1056,  0.7433],
          [-0.5132,  0.1751,  0.3261,  ..., -0.6254,  0.4327, -0.0933],
          ...,
          [-0.6962,  0.4239,  0.6563,  ...,  0.2258, -0.1924, -0.0972],
          [-0.3060,  0.3162,  0.6713,  ..., -0.9996,  0.4449,  0.1516],
          [-0.8846,  0.3281, -0.1630,  ..., -0.2076, -0.9506, -0.8443]],

         [[-0.5251, -0.2652,  0.5449,  ...,  0.0870, -0.5218,  0.2943],
          [-0.0676, -0.1015,  0.6962,  ..., -0.6142, -0.1374,  0.4824],
          [-0.5146,  0.0765, -0.5873,  ...,  0.6680, -0.6283, -0.3832],
          ...,
          [ 0.1180,  0.5030, -0.6910,  ...,  0.0732, -0.8741,  0.0066],
          [ 0.4450, -0.3574, -0.1841,  ...,  0.7201,  0.2670,  0.5171],
          [-0.1621,  0.0057,  0.4163,  ..., -0.1298, -0.5513,  0.8821]],

         [[ 0.7840, -0.4480, -0.4499,  ...,  0.2338, -0.2680, -0.5890],
          [ 0.3021, -1.1233, -0.1286,  ...,  0.0486, -0.0187, -0.2399],
          [ 0.7181, -0.5844, -0.5085,  ...,  0.0345, -0.6678,  0.8808],
          ...,
          [ 0.3190, -0.2897, -0.1858,  ...,  1.1356,  0.3029,  0.1470],
          [ 0.2558,  0.1571,  0.2691,  ...,  0.6415, -0.1571,  0.5268],
          [-0.9545, -0.3654,  0.2796,  ..., -0.7509,  0.5508,  0.8096]],

         ...,

         [[ 0.2768, -0.3691, -0.2928,  ..., -0.1532,  0.7096, -0.3948],
          [-0.0764, -0.0149,  0.0328,  ..., -0.6769, -0.3400, -1.0709],
          [-0.1843,  0.6591, -0.0910,  ..., -0.1669,  0.3163, -0.0453],
          ...,
          [ 1.1191,  0.7078,  0.2553,  ..., -0.8237,  0.2815, -1.5545],
          [ 0.3790,  0.4234,  0.6559,  ..., -0.1276,  0.3397, -0.6860],
          [-0.2978,  0.1070, -0.1262,  ...,  0.0062,  0.2546, -0.4709]],

         [[-0.3463, -0.1718,  0.4856,  ..., -0.2235, -0.1614,  0.6013],
          [-1.0411, -0.4267,  0.5315,  ...,  0.2593,  0.8306, -0.6065],
          [-0.3817, -0.1225, -0.2601,  ..., -0.4122,  0.5753, -0.2525],
          ...,
          [ 0.1362, -0.4217,  0.1763,  ...,  0.6895,  0.2795, -0.5534],
          [-0.1717, -0.3846,  0.1522,  ..., -0.0866, -0.5059,  0.1185],
          [-0.5898, -0.5072,  1.0073,  ..., -0.6585,  0.4627,  0.7419]],

         [[-0.1327, -0.0160,  0.5705,  ...,  0.4973, -0.5408, -0.0592],
          [-0.1453,  0.3309,  0.4894,  ...,  0.4496, -0.5528, -0.6290],
          [ 0.6489, -0.0841,  0.1655,  ..., -1.3604,  0.0422,  0.3481],
          ...,
          [-0.1217,  0.0684,  0.3694,  ..., -0.0725,  0.0878,  0.0624],
          [-0.6474, -0.3090, -0.0983,  ..., -0.0749, -0.7380, -0.7176],
          [ 0.0569,  0.7404, -0.1574,  ..., -0.9262, -0.8775, -0.5046]]]])
sub_value 22896589489232 tensor([[[[-1.0754e-01,  5.8665e-01, -7.2390e-01,  ..., -2.7855e-01,
            1.6018e+00, -1.2138e-01],
          [-3.7567e-01,  7.0031e-01,  6.8698e-01,  ...,  8.1842e-01,
           -1.4854e-01, -7.6356e-01],
          [-1.2875e+00,  4.8063e-01, -5.1426e-01,  ..., -1.5069e-02,
            1.0110e+00,  1.1718e-01],
          ...,
          [-4.9200e-01,  6.7743e-01, -2.2398e-01,  ..., -2.5398e-01,
            2.0984e-01, -6.7093e-01],
          [-4.8175e-01,  1.3529e+00, -3.2153e-01,  ...,  5.0589e-01,
            3.3134e-01,  4.2213e-01],
          [-2.9090e-01, -6.2926e-01, -4.9050e-01,  ...,  3.0890e-01,
            7.1186e-01,  1.2570e-01]],

         [[ 7.5111e-01, -5.6973e-01,  7.8290e-01,  ...,  3.5314e-01,
            7.6895e-02, -5.1302e-02],
          [ 3.5675e-01, -7.1233e-02,  4.0139e-01,  ..., -4.7493e-02,
            9.2949e-02, -8.3154e-01],
          [ 1.0555e+00, -3.9557e-01, -2.4105e-02,  ..., -5.2054e-01,
            1.6791e-02, -8.5117e-01],
          ...,
          [ 7.3258e-01, -2.8793e-01,  1.2866e+00,  ...,  7.4280e-01,
            2.0486e-01, -5.3025e-01],
          [ 3.4308e-01, -3.3034e-01,  2.5918e-01,  ..., -8.0124e-01,
           -1.7033e-02, -1.9180e-01],
          [ 1.2530e+00,  3.0673e-01, -2.4057e-01,  ..., -5.3086e-01,
           -8.7352e-02,  4.9441e-03]],

         [[-1.4340e-01, -6.1273e-01, -3.2075e-02,  ..., -3.7762e-01,
            9.6426e-01,  5.8818e-01],
          [-8.3603e-01,  7.1989e-01,  3.9243e-01,  ...,  9.6442e-02,
           -4.3899e-01, -2.2090e-01],
          [ 9.7140e-03,  3.6166e-01, -3.4540e-01,  ..., -3.5411e-01,
            3.5120e-01, -6.5722e-02],
          ...,
          [ 4.7951e-01, -4.9300e-01,  1.0341e-01,  ..., -6.8337e-01,
            4.9633e-01,  6.7759e-01],
          [ 6.8185e-02, -1.8029e-01, -3.4641e-01,  ..., -7.5285e-01,
           -2.8994e-01,  1.3162e+00],
          [-4.2679e-01,  1.7485e-01, -1.8955e-01,  ..., -5.3544e-01,
           -3.1376e-01, -3.3581e-01]],

         ...,

         [[ 4.2537e-01,  4.8276e-01, -3.9832e-01,  ..., -1.8648e-01,
            1.0507e+00, -2.7941e-02],
          [-3.9175e-01,  2.2507e-01,  9.8561e-01,  ..., -1.9779e-01,
            3.7187e-01, -1.2449e+00],
          [ 1.6483e-02,  8.0552e-01,  3.9939e-01,  ...,  2.9532e-02,
            6.6844e-02,  8.1252e-02],
          ...,
          [ 7.4700e-01,  4.1640e-02,  1.1633e-01,  ...,  4.6868e-01,
            1.4875e-01, -2.5018e-01],
          [ 5.7593e-01, -2.7645e-01, -7.9142e-01,  ...,  8.1370e-02,
            8.8780e-01, -3.1766e-01],
          [-3.9206e-01,  9.5110e-01, -7.9541e-01,  ...,  2.3242e-01,
            7.0093e-01, -8.9307e-02]],

         [[-5.2955e-02,  4.6238e-01,  1.0548e-01,  ...,  4.6920e-01,
            4.3828e-01,  5.3320e-01],
          [-4.6768e-01,  6.9440e-01,  2.2377e-02,  ...,  1.0093e+00,
           -1.2951e-01, -4.7440e-01],
          [-3.0781e-01, -7.1026e-01, -4.0677e-01,  ...,  8.9380e-01,
           -5.3745e-01,  9.8963e-01],
          ...,
          [-7.1990e-01,  4.1718e-02, -1.7244e-04,  ..., -4.9105e-01,
           -7.6544e-01,  9.9666e-01],
          [-8.6212e-01,  5.3816e-01,  1.3144e-01,  ...,  2.5523e-01,
           -8.0787e-01,  1.8090e-01],
          [ 1.5503e-01, -1.5200e-01, -5.8348e-01,  ...,  4.8794e-01,
            5.5582e-01,  6.9702e-01]],

         [[-3.0914e-01, -2.0321e-01, -1.8967e-01,  ..., -1.5150e-01,
           -3.6583e-01, -7.5546e-01],
          [ 6.0979e-01, -3.4395e-01,  2.2016e-02,  ..., -2.9052e-01,
            5.7626e-01,  2.9862e-01],
          [ 2.4967e-01, -4.1529e-01, -9.8550e-01,  ...,  7.4701e-02,
           -2.4732e-01,  1.3800e+00],
          ...,
          [-3.7349e-01,  4.6416e-02, -3.2509e-01,  ..., -1.4270e-01,
           -2.2087e-01,  3.9488e-01],
          [-5.8139e-01,  1.8129e-01,  6.7435e-01,  ..., -7.6427e-01,
            2.2953e-01,  1.0403e+00],
          [ 2.5310e-01,  1.8221e-02,  2.6787e-01,  ...,  6.0663e-01,
           -1.3720e-01,  3.9768e-01]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x222ddb50)
tracing opcode STORE_FAST None pc=52 frame=11(0x222ddb50)
tracing opcode STORE_FAST None pc=54 frame=11(0x222ddb50)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x222ddb50)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x222ddb50)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=232 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=234 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=236 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=238 frame=11(0x222ddb50)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x222ddb50)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x222ddb50)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x222ddb50)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x222ddb50)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x14d30b4c0640)
push tracker due to record
push tracker 12 frame 0x14d30b4c0640 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x14d30b4c0640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x14d30b4c0640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x14d30b4c0640 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x14d30b4c0640)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x14d30b4c0640)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x14d30b4c0640)
load fast: 22896589607936
tracing opcode LOAD_METHOD None pc=12 frame=12(0x14d30b4c0640)
tracing opcode CALL_METHOD None pc=14 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=16 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=18 frame=12(0x14d30b4c0640)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x14d30b4c0640)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x14d30b4c0640)
tracing opcode LOAD_FAST None pc=24 frame=12(0x14d30b4c0640)
load fast: 22897554034752
tracing opcode LOAD_ATTR None pc=26 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=28 frame=12(0x14d30b4c0640)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x14d30b4c0640)
tracing opcode BINARY_ADD None pc=32 frame=12(0x14d30b4c0640)
tracing opcode STORE_FAST None pc=34 frame=12(0x14d30b4c0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x14d30b4c0640)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x14d30b4c0640)
tracing opcode LOAD_FAST None pc=40 frame=12(0x14d30b4c0640)
tracing opcode CALL_METHOD None pc=42 frame=12(0x14d30b4c0640)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x14d30b4c0640)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x14d30b4c0640)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=50 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=52 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=54 frame=12(0x14d30b4c0640)
tracing opcode LOAD_CONST None pc=56 frame=12(0x14d30b4c0640)
tracing opcode CALL_METHOD None pc=58 frame=12(0x14d30b4c0640)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x14d30b4c0640)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_363 : [#users=1] = placeholder[target=tensor_363]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_363, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x14d30b4c0640)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x222ddb50)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x222ddb50)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x222ddb50)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=262 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=264 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=266 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=268 frame=11(0x222ddb50)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x222ddb50)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x222ddb50)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x222ddb50)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x222ddb50)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x190a54d0)
push tracker due to record
push tracker 12 frame 0x190a54d0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x190a54d0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x190a54d0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x190a54d0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x190a54d0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x190a54d0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x190a54d0)
load fast: 22896589363056
tracing opcode LOAD_METHOD None pc=12 frame=12(0x190a54d0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x190a54d0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x190a54d0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x190a54d0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x190a54d0)
load fast: 22897554034752
tracing opcode LOAD_ATTR None pc=26 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x190a54d0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x190a54d0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x190a54d0)
tracing opcode STORE_FAST None pc=34 frame=12(0x190a54d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x190a54d0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x190a54d0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x190a54d0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x190a54d0)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x190a54d0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x190a54d0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x190a54d0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x190a54d0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x190a54d0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x190a54d0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_364 : [#users=1] = placeholder[target=tensor_364]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_364, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x190a54d0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x222ddb50)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x222ddb50)
tracing opcode STORE_FAST None pc=284 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x222ddb50)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x222ddb50)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x222ddb50)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x222ddb50)
tracing opcode BINARY_ADD None pc=296 frame=11(0x222ddb50)
tracing opcode STORE_FAST None pc=298 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x222ddb50)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=308 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=312 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=314 frame=11(0x222ddb50)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=320 frame=11(0x222ddb50)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x222ddb50)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x222ddb50)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x222ddb50)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x222ddb50)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=334 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=338 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=342 frame=11(0x222ddb50)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x222ddb50)
record function in graph <built-in method to of Tensor object at 0x14d30714c810>
func self id: 22896589457424
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x222ddb50)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=354 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=356 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=360 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=362 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=364 frame=11(0x222ddb50)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x222ddb50)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x222ddb50)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=382 frame=11(0x222ddb50)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x222ddb50)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0xbaa9d50)
push tracker due to record
push tracker 3 frame 0xbaa9d50 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0xbaa9d50)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0xbaa9d50)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0xbaa9d50 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0xbaa9d50)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0xbaa9d50)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0xbaa9d50)
load fast: 22897554034848
tracing opcode LOAD_ATTR None pc=12 frame=3(0xbaa9d50)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0xbaa9d50)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0xbaa9d50)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0xbaa9d50)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0xbaa9d50)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=392 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=394 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=396 frame=11(0x222ddb50)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=400 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=402 frame=11(0x222ddb50)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x163f7710)
push tracker due to record
push tracker 13 frame 0x163f7710 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x163f7710)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x163f7710)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x163f7710 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x163f7710)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x163f7710)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x163f7710)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x163f7710)
tracing opcode IS_OP None pc=16 frame=13(0x163f7710)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=54 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=56 frame=13(0x163f7710)
tracing opcode COMPARE_OP None pc=58 frame=13(0x163f7710)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=84 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=86 frame=13(0x163f7710)
tracing opcode COMPARE_OP None pc=88 frame=13(0x163f7710)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=96 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=98 frame=13(0x163f7710)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x163f7710)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x163f7710)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=138 frame=13(0x163f7710)
load fast: 22896589457824
tracing opcode LOAD_METHOD None pc=140 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=142 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=144 frame=13(0x163f7710)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x163f7710)
load fast: 22896589535088
tracing opcode LOAD_METHOD None pc=148 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=150 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=152 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=156 frame=13(0x163f7710)
load fast: 22897554034752
tracing opcode LOAD_ATTR None pc=158 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x163f7710)
tracing opcode STORE_FAST None pc=162 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=168 frame=13(0x163f7710)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=172 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=176 frame=13(0x163f7710)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x163f7710)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=186 frame=13(0x163f7710)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=190 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=194 frame=13(0x163f7710)
tracing opcode BINARY_ADD None pc=196 frame=13(0x163f7710)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=200 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=202 frame=13(0x163f7710)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x163f7710)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x163f7710)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x163f7710)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x163f7710)
tracing opcode STORE_FAST None pc=220 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=224 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x163f7710)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x163f7710)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=238 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=240 frame=13(0x163f7710)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=248 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=250 frame=13(0x163f7710)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x21fcf430)
push tracker due to record
push tracker 12 frame 0x21fcf430 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x21fcf430)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x21fcf430)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x21fcf430 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x21fcf430)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x21fcf430)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x21fcf430)
load fast: 22896588730592
tracing opcode LOAD_METHOD None pc=12 frame=12(0x21fcf430)
tracing opcode CALL_METHOD None pc=14 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=16 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=18 frame=12(0x21fcf430)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x21fcf430)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x21fcf430)
tracing opcode LOAD_FAST None pc=24 frame=12(0x21fcf430)
load fast: 22897554034752
tracing opcode LOAD_ATTR None pc=26 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=28 frame=12(0x21fcf430)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x21fcf430)
tracing opcode BINARY_ADD None pc=32 frame=12(0x21fcf430)
tracing opcode STORE_FAST None pc=34 frame=12(0x21fcf430)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x21fcf430)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x21fcf430)
tracing opcode LOAD_FAST None pc=40 frame=12(0x21fcf430)
tracing opcode CALL_METHOD None pc=42 frame=12(0x21fcf430)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x21fcf430)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x21fcf430)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=50 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=52 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=54 frame=12(0x21fcf430)
tracing opcode LOAD_CONST None pc=56 frame=12(0x21fcf430)
tracing opcode CALL_METHOD None pc=58 frame=12(0x21fcf430)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x21fcf430)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_369 : [#users=1] = placeholder[target=tensor_369]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_369, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x21fcf430)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=258 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=260 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=264 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=266 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=268 frame=13(0x163f7710)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x163f7710)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=278 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=280 frame=13(0x163f7710)
tracing opcode BINARY_ADD None pc=282 frame=13(0x163f7710)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=286 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=288 frame=13(0x163f7710)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=292 frame=13(0x163f7710)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=296 frame=13(0x163f7710)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=304 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=306 frame=13(0x163f7710)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=310 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=312 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=314 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x163f7710)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x190a69c0)
push tracker due to record
push tracker 14 frame 0x190a69c0 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x190a69c0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x190a69c0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x190a69c0 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x190a69c0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x190a69c0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x190a69c0)
load fast: 22896589489312
tracing opcode LOAD_METHOD None pc=12 frame=14(0x190a69c0)
tracing opcode LOAD_FAST None pc=14 frame=14(0x190a69c0)
load fast: 22896589457824
tracing opcode LOAD_METHOD None pc=16 frame=14(0x190a69c0)
tracing opcode LOAD_CONST None pc=18 frame=14(0x190a69c0)
tracing opcode CALL_METHOD None pc=20 frame=14(0x190a69c0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x190a69c0)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x190a69c0)
tracing opcode LOAD_CONST None pc=26 frame=14(0x190a69c0)
tracing opcode CALL_METHOD None pc=28 frame=14(0x190a69c0)
tracing opcode LOAD_FAST None pc=30 frame=14(0x190a69c0)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x190a69c0)
tracing opcode LOAD_CONST None pc=34 frame=14(0x190a69c0)
tracing opcode CALL_METHOD None pc=36 frame=14(0x190a69c0)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x190a69c0)
load fast: 22896589230704
tracing opcode LOAD_METHOD None pc=40 frame=14(0x190a69c0)
tracing opcode LOAD_CONST None pc=42 frame=14(0x190a69c0)
tracing opcode CALL_METHOD None pc=44 frame=14(0x190a69c0)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x190a69c0)
tracing opcode CALL_METHOD None pc=48 frame=14(0x190a69c0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x190a69c0)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_370 : [#users=1] = placeholder[target=tensor_370]
    %tensor_371 : [#users=0] = placeholder[target=tensor_371]
    %tensor_372 : [#users=0] = placeholder[target=tensor_372]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_370, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x190a69c0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x163f7710)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=326 frame=13(0x163f7710)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x163f7710)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=334 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x163f7710)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x163f7710)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=348 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=350 frame=13(0x163f7710)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=358 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=360 frame=13(0x163f7710)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1c079db0)
push tracker due to record
push tracker 12 frame 0x1c079db0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1c079db0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1c079db0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1c079db0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1c079db0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1c079db0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1c079db0)
load fast: 22896588935552
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1c079db0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1c079db0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1c079db0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1c079db0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1c079db0)
load fast: 22897554034752
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1c079db0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1c079db0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1c079db0)
tracing opcode STORE_FAST None pc=34 frame=12(0x1c079db0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1c079db0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1c079db0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1c079db0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1c079db0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1c079db0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1c079db0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1c079db0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1c079db0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1c079db0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1c079db0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_373 : [#users=1] = placeholder[target=tensor_373]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_373, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1c079db0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x163f7710)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x163f7710)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=374 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=378 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=380 frame=13(0x163f7710)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=386 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x163f7710)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x163f7710)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x163f7710)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x163f7710)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x163f7710)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=404 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=406 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=408 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=412 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=414 frame=13(0x163f7710)
tracing opcode COMPARE_OP None pc=416 frame=13(0x163f7710)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x163f7710)
tracing opcode STORE_FAST None pc=452 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=458 frame=13(0x163f7710)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x163f7710)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x163f7710)
tracing opcode BINARY_ADD None pc=464 frame=13(0x163f7710)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=468 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=470 frame=13(0x163f7710)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=474 frame=13(0x163f7710)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=478 frame=13(0x163f7710)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=486 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=488 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=492 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=494 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=496 frame=13(0x163f7710)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=500 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=504 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x163f7710)
record function in graph <built-in method to of Tensor object at 0x14d3070cdae0>
func self id: 22896588937952
tracing opcode CALL_METHOD None pc=508 frame=13(0x163f7710)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x163f7710)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=518 frame=13(0x163f7710)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=522 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=524 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=526 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x163f7710)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x6ee86b0)
push tracker due to record
push tracker 15 frame 0x6ee86b0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x6ee86b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x6ee86b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x6ee86b0 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x6ee86b0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x6ee86b0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x6ee86b0)
load fast: 22896588938432
tracing opcode LOAD_METHOD None pc=12 frame=15(0x6ee86b0)
tracing opcode LOAD_FAST None pc=14 frame=15(0x6ee86b0)
load fast: 22896589457824
tracing opcode LOAD_METHOD None pc=16 frame=15(0x6ee86b0)
tracing opcode LOAD_CONST None pc=18 frame=15(0x6ee86b0)
tracing opcode CALL_METHOD None pc=20 frame=15(0x6ee86b0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x6ee86b0)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x6ee86b0)
tracing opcode LOAD_CONST None pc=26 frame=15(0x6ee86b0)
tracing opcode CALL_METHOD None pc=28 frame=15(0x6ee86b0)
tracing opcode LOAD_FAST None pc=30 frame=15(0x6ee86b0)
load fast: 22896589535088
tracing opcode LOAD_METHOD None pc=32 frame=15(0x6ee86b0)
tracing opcode LOAD_CONST None pc=34 frame=15(0x6ee86b0)
tracing opcode CALL_METHOD None pc=36 frame=15(0x6ee86b0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x6ee86b0)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x6ee86b0)
tracing opcode LOAD_CONST None pc=42 frame=15(0x6ee86b0)
tracing opcode CALL_METHOD None pc=44 frame=15(0x6ee86b0)
tracing opcode BUILD_LIST None pc=46 frame=15(0x6ee86b0)
tracing opcode CALL_METHOD None pc=48 frame=15(0x6ee86b0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x6ee86b0)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_374 : [#users=1] = placeholder[target=tensor_374]
    %tensor_375 : [#users=0] = placeholder[target=tensor_375]
    %tensor_376 : [#users=0] = placeholder[target=tensor_376]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_374, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x6ee86b0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x163f7710)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x163f7710)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=538 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x163f7710)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=548 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=550 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=552 frame=13(0x163f7710)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x163f7710)
tracing opcode LOAD_CONST None pc=556 frame=13(0x163f7710)
tracing opcode CALL_METHOD None pc=558 frame=13(0x163f7710)
tracing opcode COMPARE_OP None pc=560 frame=13(0x163f7710)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x163f7710)
tracing opcode LOAD_FAST None pc=626 frame=13(0x163f7710)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x163f7710)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x163f7710)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x163f7710)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x163f7710)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_366 : [#users=1] = placeholder[target=tensor_366]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_366, 1), kwargs = {})
    %tensor_367 : [#users=1] = placeholder[target=tensor_367]
    %tensor_368 : [#users=1] = placeholder[target=tensor_368]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_367, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_368, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x163f7710)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=408 frame=11(0x222ddb50)
tracing opcode IS_OP None pc=410 frame=11(0x222ddb50)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=418 frame=11(0x222ddb50)
tracing opcode BINARY_ADD None pc=420 frame=11(0x222ddb50)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x222ddb50)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=470 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=472 frame=11(0x222ddb50)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=476 frame=11(0x222ddb50)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=484 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=486 frame=11(0x222ddb50)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d31c4daa40)
push tracker due to record
push tracker 3 frame 0x14d31c4daa40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d31c4daa40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d31c4daa40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d31c4daa40 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d31c4daa40)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d31c4daa40)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d31c4daa40)
load fast: 22897554034992
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d31c4daa40)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d31c4daa40)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d31c4daa40)
load fast: 22896588948320
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d31c4daa40)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_378 : [#users=0] = placeholder[target=tensor_378]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0046, 0.0038, 0.0049,  ..., 0.0033, 0.0031, 0.0045],
          [0.0044, 0.0046, 0.0040,  ..., 0.0036, 0.0036, 0.0026],
          [0.0041, 0.0049, 0.0032,  ..., 0.0039, 0.0036, 0.0041],
          ...,
          [0.0035, 0.0051, 0.0038,  ..., 0.0045, 0.0044, 0.0038],
          [0.0038, 0.0048, 0.0034,  ..., 0.0028, 0.0036, 0.0040],
          [0.0041, 0.0039, 0.0030,  ..., 0.0041, 0.0039, 0.0036]],

         [[0.0046, 0.0035, 0.0039,  ..., 0.0036, 0.0039, 0.0047],
          [0.0038, 0.0042, 0.0042,  ..., 0.0049, 0.0042, 0.0047],
          [0.0043, 0.0040, 0.0041,  ..., 0.0045, 0.0036, 0.0039],
          ...,
          [0.0044, 0.0036, 0.0051,  ..., 0.0035, 0.0045, 0.0042],
          [0.0031, 0.0053, 0.0041,  ..., 0.0040, 0.0037, 0.0042],
          [0.0050, 0.0034, 0.0039,  ..., 0.0057, 0.0043, 0.0045]],

         [[0.0046, 0.0032, 0.0038,  ..., 0.0041, 0.0036, 0.0042],
          [0.0033, 0.0049, 0.0041,  ..., 0.0041, 0.0038, 0.0041],
          [0.0032, 0.0043, 0.0037,  ..., 0.0038, 0.0045, 0.0040],
          ...,
          [0.0040, 0.0045, 0.0047,  ..., 0.0037, 0.0035, 0.0032],
          [0.0037, 0.0047, 0.0036,  ..., 0.0041, 0.0035, 0.0046],
          [0.0029, 0.0048, 0.0035,  ..., 0.0039, 0.0039, 0.0036]],

         ...,

         [[0.0028, 0.0036, 0.0043,  ..., 0.0031, 0.0047, 0.0035],
          [0.0029, 0.0038, 0.0030,  ..., 0.0039, 0.0041, 0.0036],
          [0.0038, 0.0040, 0.0032,  ..., 0.0039, 0.0041, 0.0041],
          ...,
          [0.0038, 0.0035, 0.0046,  ..., 0.0038, 0.0035, 0.0035],
          [0.0032, 0.0043, 0.0034,  ..., 0.0048, 0.0046, 0.0041],
          [0.0032, 0.0044, 0.0034,  ..., 0.0027, 0.0045, 0.0046]],

         [[0.0044, 0.0047, 0.0040,  ..., 0.0042, 0.0040, 0.0043],
          [0.0036, 0.0026, 0.0051,  ..., 0.0045, 0.0037, 0.0044],
          [0.0035, 0.0037, 0.0045,  ..., 0.0041, 0.0038, 0.0040],
          ...,
          [0.0034, 0.0050, 0.0036,  ..., 0.0036, 0.0039, 0.0050],
          [0.0036, 0.0036, 0.0043,  ..., 0.0043, 0.0039, 0.0039],
          [0.0032, 0.0042, 0.0037,  ..., 0.0033, 0.0039, 0.0039]],

         [[0.0036, 0.0040, 0.0034,  ..., 0.0037, 0.0040, 0.0039],
          [0.0033, 0.0029, 0.0041,  ..., 0.0045, 0.0031, 0.0031],
          [0.0028, 0.0033, 0.0055,  ..., 0.0046, 0.0036, 0.0042],
          ...,
          [0.0031, 0.0031, 0.0044,  ..., 0.0042, 0.0040, 0.0036],
          [0.0034, 0.0035, 0.0038,  ..., 0.0036, 0.0034, 0.0038],
          [0.0032, 0.0034, 0.0038,  ..., 0.0041, 0.0050, 0.0034]]]]), modified_attrs={}, prev=None) 22896589207584 22896588948320
obj: tensor([[[[0.0046, 0.0038, 0.0049,  ..., 0.0033, 0.0031, 0.0045],
          [0.0044, 0.0046, 0.0040,  ..., 0.0036, 0.0036, 0.0026],
          [0.0041, 0.0049, 0.0032,  ..., 0.0039, 0.0036, 0.0041],
          ...,
          [0.0035, 0.0051, 0.0038,  ..., 0.0045, 0.0044, 0.0038],
          [0.0038, 0.0048, 0.0034,  ..., 0.0028, 0.0036, 0.0040],
          [0.0041, 0.0039, 0.0030,  ..., 0.0041, 0.0039, 0.0036]],

         [[0.0046, 0.0035, 0.0039,  ..., 0.0036, 0.0039, 0.0047],
          [0.0038, 0.0042, 0.0042,  ..., 0.0049, 0.0042, 0.0047],
          [0.0043, 0.0040, 0.0041,  ..., 0.0045, 0.0036, 0.0039],
          ...,
          [0.0044, 0.0036, 0.0051,  ..., 0.0035, 0.0045, 0.0042],
          [0.0031, 0.0053, 0.0041,  ..., 0.0040, 0.0037, 0.0042],
          [0.0050, 0.0034, 0.0039,  ..., 0.0057, 0.0043, 0.0045]],

         [[0.0046, 0.0032, 0.0038,  ..., 0.0041, 0.0036, 0.0042],
          [0.0033, 0.0049, 0.0041,  ..., 0.0041, 0.0038, 0.0041],
          [0.0032, 0.0043, 0.0037,  ..., 0.0038, 0.0045, 0.0040],
          ...,
          [0.0040, 0.0045, 0.0047,  ..., 0.0037, 0.0035, 0.0032],
          [0.0037, 0.0047, 0.0036,  ..., 0.0041, 0.0035, 0.0046],
          [0.0029, 0.0048, 0.0035,  ..., 0.0039, 0.0039, 0.0036]],

         ...,

         [[0.0028, 0.0036, 0.0043,  ..., 0.0031, 0.0047, 0.0035],
          [0.0029, 0.0038, 0.0030,  ..., 0.0039, 0.0041, 0.0036],
          [0.0038, 0.0040, 0.0032,  ..., 0.0039, 0.0041, 0.0041],
          ...,
          [0.0038, 0.0035, 0.0046,  ..., 0.0038, 0.0035, 0.0035],
          [0.0032, 0.0043, 0.0034,  ..., 0.0048, 0.0046, 0.0041],
          [0.0032, 0.0044, 0.0034,  ..., 0.0027, 0.0045, 0.0046]],

         [[0.0044, 0.0047, 0.0040,  ..., 0.0042, 0.0040, 0.0043],
          [0.0036, 0.0026, 0.0051,  ..., 0.0045, 0.0037, 0.0044],
          [0.0035, 0.0037, 0.0045,  ..., 0.0041, 0.0038, 0.0040],
          ...,
          [0.0034, 0.0050, 0.0036,  ..., 0.0036, 0.0039, 0.0050],
          [0.0036, 0.0036, 0.0043,  ..., 0.0043, 0.0039, 0.0039],
          [0.0032, 0.0042, 0.0037,  ..., 0.0033, 0.0039, 0.0039]],

         [[0.0036, 0.0040, 0.0034,  ..., 0.0037, 0.0040, 0.0039],
          [0.0033, 0.0029, 0.0041,  ..., 0.0045, 0.0031, 0.0031],
          [0.0028, 0.0033, 0.0055,  ..., 0.0046, 0.0036, 0.0042],
          ...,
          [0.0031, 0.0031, 0.0044,  ..., 0.0042, 0.0040, 0.0036],
          [0.0034, 0.0035, 0.0038,  ..., 0.0036, 0.0034, 0.0038],
          [0.0032, 0.0034, 0.0038,  ..., 0.0041, 0.0050, 0.0034]]]]) 22896588948320
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0046, 0.0038, 0.0049,  ..., 0.0033, 0.0031, 0.0045],
          [0.0044, 0.0046, 0.0040,  ..., 0.0036, 0.0036, 0.0026],
          [0.0041, 0.0049, 0.0032,  ..., 0.0039, 0.0036, 0.0041],
          ...,
          [0.0035, 0.0051, 0.0038,  ..., 0.0045, 0.0044, 0.0038],
          [0.0038, 0.0048, 0.0034,  ..., 0.0028, 0.0036, 0.0040],
          [0.0041, 0.0039, 0.0030,  ..., 0.0041, 0.0039, 0.0036]],

         [[0.0046, 0.0035, 0.0039,  ..., 0.0036, 0.0039, 0.0047],
          [0.0038, 0.0042, 0.0042,  ..., 0.0049, 0.0042, 0.0047],
          [0.0043, 0.0040, 0.0041,  ..., 0.0045, 0.0036, 0.0039],
          ...,
          [0.0044, 0.0036, 0.0051,  ..., 0.0035, 0.0045, 0.0042],
          [0.0031, 0.0053, 0.0041,  ..., 0.0040, 0.0037, 0.0042],
          [0.0050, 0.0034, 0.0039,  ..., 0.0057, 0.0043, 0.0045]],

         [[0.0046, 0.0032, 0.0038,  ..., 0.0041, 0.0036, 0.0042],
          [0.0033, 0.0049, 0.0041,  ..., 0.0041, 0.0038, 0.0041],
          [0.0032, 0.0043, 0.0037,  ..., 0.0038, 0.0045, 0.0040],
          ...,
          [0.0040, 0.0045, 0.0047,  ..., 0.0037, 0.0035, 0.0032],
          [0.0037, 0.0047, 0.0036,  ..., 0.0041, 0.0035, 0.0046],
          [0.0029, 0.0048, 0.0035,  ..., 0.0039, 0.0039, 0.0036]],

         ...,

         [[0.0028, 0.0036, 0.0043,  ..., 0.0031, 0.0047, 0.0035],
          [0.0029, 0.0038, 0.0030,  ..., 0.0039, 0.0041, 0.0036],
          [0.0038, 0.0040, 0.0032,  ..., 0.0039, 0.0041, 0.0041],
          ...,
          [0.0038, 0.0035, 0.0046,  ..., 0.0038, 0.0035, 0.0035],
          [0.0032, 0.0043, 0.0034,  ..., 0.0048, 0.0046, 0.0041],
          [0.0032, 0.0044, 0.0034,  ..., 0.0027, 0.0045, 0.0046]],

         [[0.0044, 0.0047, 0.0040,  ..., 0.0042, 0.0040, 0.0043],
          [0.0036, 0.0026, 0.0051,  ..., 0.0045, 0.0037, 0.0044],
          [0.0035, 0.0037, 0.0045,  ..., 0.0041, 0.0038, 0.0040],
          ...,
          [0.0034, 0.0050, 0.0036,  ..., 0.0036, 0.0039, 0.0050],
          [0.0036, 0.0036, 0.0043,  ..., 0.0043, 0.0039, 0.0039],
          [0.0032, 0.0042, 0.0037,  ..., 0.0033, 0.0039, 0.0039]],

         [[0.0036, 0.0040, 0.0034,  ..., 0.0037, 0.0040, 0.0039],
          [0.0033, 0.0029, 0.0041,  ..., 0.0045, 0.0031, 0.0031],
          [0.0028, 0.0033, 0.0055,  ..., 0.0046, 0.0036, 0.0042],
          ...,
          [0.0031, 0.0031, 0.0044,  ..., 0.0042, 0.0040, 0.0036],
          [0.0034, 0.0035, 0.0038,  ..., 0.0036, 0.0034, 0.0038],
          [0.0032, 0.0034, 0.0038,  ..., 0.0041, 0.0050, 0.0034]]]]), modified_attrs={}, prev=None) 22896588759488
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d31c4daa40)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x222ddb50)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x222ddb50)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=536 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=538 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=540 frame=11(0x222ddb50)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=548 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=550 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=552 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=554 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=556 frame=11(0x222ddb50)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=560 frame=11(0x222ddb50)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=568 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=570 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=572 frame=11(0x222ddb50)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x222ddb50)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x222ddb50)
tracing opcode LOAD_CONST None pc=578 frame=11(0x222ddb50)
tracing opcode BINARY_ADD None pc=580 frame=11(0x222ddb50)
tracing opcode STORE_FAST None pc=582 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x222ddb50)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x222ddb50)
tracing opcode LOAD_FAST None pc=588 frame=11(0x222ddb50)
tracing opcode CALL_METHOD None pc=590 frame=11(0x222ddb50)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x222ddb50)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x222ddb50)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x222ddb50)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x222ddb50)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_361 : [#users=1] = placeholder[target=tensor_361]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_361,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_365 : [#users=1] = placeholder[target=tensor_365]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_365, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_366 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_366, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_377 : [#users=1] = placeholder[target=tensor_377]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_377, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x222ddb50)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0x222db140)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0x222db140)
tracing opcode LOAD_CONST None pc=46 frame=10(0x222db140)
tracing opcode IS_OP None pc=48 frame=10(0x222db140)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0x222db140)
tracing opcode STORE_FAST None pc=54 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0x222db140)
tracing opcode LOAD_METHOD None pc=58 frame=10(0x222db140)
tracing opcode LOAD_FAST None pc=60 frame=10(0x222db140)
tracing opcode LOAD_FAST None pc=62 frame=10(0x222db140)
tracing opcode CALL_METHOD None pc=64 frame=10(0x222db140)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x11a3cd00)
push tracker due to record
push tracker 16 frame 0x11a3cd00 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x11a3cd00)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x11a3cd00)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x11a3cd00 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x11a3cd00)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x11a3cd00)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x11a3cd00)
load fast: 22897554035040
tracing opcode LOAD_METHOD None pc=12 frame=16(0x11a3cd00)
tracing opcode LOAD_FAST None pc=14 frame=16(0x11a3cd00)
load fast: 22896588817808
tracing opcode CALL_METHOD None pc=16 frame=16(0x11a3cd00)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x11a3cd00)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x11a3cd00)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x11a3cd00)
tracing opcode LOAD_FAST None pc=24 frame=16(0x11a3cd00)
tracing opcode CALL_METHOD None pc=26 frame=16(0x11a3cd00)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x1c075ec0)
push tracker due to record
push tracker 3 frame 0x1c075ec0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x1c075ec0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x1c075ec0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x1c075ec0 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x1c075ec0)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x1c075ec0)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x1c075ec0)
load fast: 22897554035184
tracing opcode LOAD_ATTR None pc=12 frame=3(0x1c075ec0)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x1c075ec0)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x1c075ec0)
load fast: 22896588612688
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x1c075ec0)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_380 : [#users=0] = placeholder[target=tensor_380]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.0864, -0.2681, -0.0888,  ...,  0.1660,  0.0768, -0.0078],
         [-0.0826, -0.2626, -0.1002,  ...,  0.1592,  0.0768, -0.0092],
         [-0.0838, -0.2602, -0.0952,  ...,  0.1637,  0.0786, -0.0077],
         ...,
         [-0.0859, -0.2635, -0.1021,  ...,  0.1677,  0.0769, -0.0063],
         [-0.0847, -0.2719, -0.0969,  ...,  0.1636,  0.0753, -0.0082],
         [-0.0872, -0.2633, -0.0986,  ...,  0.1617,  0.0775, -0.0069]]]), modified_attrs={}, prev=None) 22896588478736 22896588612688
obj: tensor([[[-0.0864, -0.2681, -0.0888,  ...,  0.1660,  0.0768, -0.0078],
         [-0.0826, -0.2626, -0.1002,  ...,  0.1592,  0.0768, -0.0092],
         [-0.0838, -0.2602, -0.0952,  ...,  0.1637,  0.0786, -0.0077],
         ...,
         [-0.0859, -0.2635, -0.1021,  ...,  0.1677,  0.0769, -0.0063],
         [-0.0847, -0.2719, -0.0969,  ...,  0.1636,  0.0753, -0.0082],
         [-0.0872, -0.2633, -0.0986,  ...,  0.1617,  0.0775, -0.0069]]]) 22896588612688
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.0864, -0.2681, -0.0888,  ...,  0.1660,  0.0768, -0.0078],
         [-0.0826, -0.2626, -0.1002,  ...,  0.1592,  0.0768, -0.0092],
         [-0.0838, -0.2602, -0.0952,  ...,  0.1637,  0.0786, -0.0077],
         ...,
         [-0.0859, -0.2635, -0.1021,  ...,  0.1677,  0.0769, -0.0063],
         [-0.0847, -0.2719, -0.0969,  ...,  0.1636,  0.0753, -0.0082],
         [-0.0872, -0.2633, -0.0986,  ...,  0.1617,  0.0775, -0.0069]]]), modified_attrs={}, prev=None) 22896588876480
tracing opcode RETURN_VALUE None pc=74 frame=3(0x1c075ec0)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x11a3cd00)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x11a3cd00)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x11a3cd00)
tracing opcode LOAD_FAST None pc=34 frame=16(0x11a3cd00)
tracing opcode LOAD_FAST None pc=36 frame=16(0x11a3cd00)
load fast: 22896659346352
tracing opcode BINARY_ADD None pc=38 frame=16(0x11a3cd00)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x11a3cd00)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d30b3f6a40)
push tracker due to record
push tracker 2 frame 0x14d30b3f6a40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d30b3f6a40)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d30b3f6a40)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d30b3f6a40 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d30b3f6a40)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d30b3f6a40)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d30b3f6a40)
load fast: 22896588483136
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d30b3f6a40)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d30b3f6a40)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d30b3f6a40)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d30b3f6a40)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d30b3f6a40)
record function in graph <built-in method mean of Tensor object at 0x14d30705ea40>
func self id: 22896588483136
tracing opcode STORE_FAST None pc=36 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d30b3f6a40)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d30b3f6a40)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d30b3f6a40)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d30b3f6a40)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d30b3f6a40)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d30b3f6a40)
record function in graph <built-in method mean of Tensor object at 0x14d30705ef90>
func self id: 22896588484496
tracing opcode STORE_FAST None pc=60 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d30b3f6a40)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d30b3f6a40)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d30b3f6a40)
load fast: 22897554035136
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d30b3f6a40)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d30b3f6a40)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d30b3f6a40)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d30b3f6a40)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d30b3f6a40)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d30b3f6a40)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d30b3f6a40)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d30b3f6a40)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d30b3f6a40)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d30b3f6a40)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d30b3f6a40)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d30b3f6a40)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d30b3f6a40)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d30b3f6a40)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_382 : [#users=4] = placeholder[target=tensor_382]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_382,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_382, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_382, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_382, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d30705ea40>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d30b3f6a40)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x11a3cd00)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x11a3cd00)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x11a3cd00)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_379 : [#users=1] = placeholder[target=tensor_379]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_379,), kwargs = {})
    %tensor_381 : [#users=1] = placeholder[target=tensor_381]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_381), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x11a3cd00)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0x222db140)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0x222db140)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0x222db140)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0x222db140)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_358 : [#users=2] = placeholder[target=tensor_358]
    %tensor_359 : [#users=1] = placeholder[target=tensor_359]
    %tensor_360 : [#users=1] = placeholder[target=tensor_360]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_358,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_360, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_366 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_366, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_359, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_358), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0x222db140)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x11a4e470)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x11a4e470)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x11a4e470)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x11a4e470)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x11a4e470)
tracing opcode LOAD_FAST None pc=48 frame=9(0x11a4e470)
tracing opcode CALL_METHOD None pc=50 frame=9(0x11a4e470)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d30b4c0440)
push tracker due to record
push tracker 17 frame 0x14d30b4c0440 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d30b4c0440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d30b4c0440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d30b4c0440 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d30b4c0440)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d30b4c0440)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d30b4c0440)
load fast: 22897554035232
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d30b4c0440)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d30b4c0440)
load fast: 22896588696048
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d30b4c0440)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d30b4c0440)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d30b4c0440)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d30b4c0440)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d30b4c0440)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d30b4c0440)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x190b3ce0)
push tracker due to record
push tracker 18 frame 0x190b3ce0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x190b3ce0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x190b3ce0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x190b3ce0 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x190b3ce0)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x190b3ce0)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x190b3ce0)
load fast: 22897554035328
tracing opcode LOAD_METHOD None pc=12 frame=18(0x190b3ce0)
tracing opcode LOAD_FAST None pc=14 frame=18(0x190b3ce0)
load fast: 22896588364192
tracing opcode CALL_METHOD None pc=16 frame=18(0x190b3ce0)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x190b3ce0)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_384 : [#users=1] = placeholder[target=tensor_384]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_384,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x190b3ce0)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d30b4c0440)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d30b4c0440)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d30b4c0440)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_383 : [#users=1] = placeholder[target=tensor_383]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_383,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d30b4c0440)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x11a4e470)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x11a4e470)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x11a4e470)
tracing opcode LOAD_FAST None pc=58 frame=9(0x11a4e470)
tracing opcode LOAD_FAST None pc=60 frame=9(0x11a4e470)
tracing opcode CALL_METHOD None pc=62 frame=9(0x11a4e470)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x10158750)
push tracker due to record
push tracker 19 frame 0x10158750 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x10158750)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x10158750)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x10158750 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x10158750)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x10158750)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x10158750)
load fast: 22897554035376
tracing opcode LOAD_METHOD None pc=12 frame=19(0x10158750)
tracing opcode LOAD_FAST None pc=14 frame=19(0x10158750)
load fast: 22896588362432
tracing opcode CALL_METHOD None pc=16 frame=19(0x10158750)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x10158750)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x10158750)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x10158750)
tracing opcode LOAD_FAST None pc=24 frame=19(0x10158750)
tracing opcode CALL_METHOD None pc=26 frame=19(0x10158750)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d30b3f6440)
push tracker due to record
push tracker 3 frame 0x14d30b3f6440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d30b3f6440)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d30b3f6440)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d30b3f6440 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d30b3f6440)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d30b3f6440)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d30b3f6440)
load fast: 22897554035520
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d30b3f6440)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d30b3f6440)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d30b3f6440)
load fast: 22896588406032
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d30b3f6440)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_386 : [#users=0] = placeholder[target=tensor_386]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.4077, -0.5334,  0.2988,  ..., -0.3112,  0.0937,  0.2989],
         [ 0.0775, -0.4739, -0.7281,  ...,  0.1638, -0.1024, -0.1267],
         [ 0.1611,  0.2032,  0.3692,  ...,  0.1179,  0.0198,  0.0860],
         ...,
         [ 0.1010,  0.0736, -0.0717,  ..., -0.1110, -0.0363, -0.0622],
         [ 0.9327, -0.4464, -0.1235,  ..., -0.6670,  0.0963,  0.5317],
         [ 0.7550, -0.5869, -0.2661,  ...,  0.0933, -0.2297, -0.0364]]]), modified_attrs={}, prev=None) 22896588566192 22896588406032
obj: tensor([[[ 0.4077, -0.5334,  0.2988,  ..., -0.3112,  0.0937,  0.2989],
         [ 0.0775, -0.4739, -0.7281,  ...,  0.1638, -0.1024, -0.1267],
         [ 0.1611,  0.2032,  0.3692,  ...,  0.1179,  0.0198,  0.0860],
         ...,
         [ 0.1010,  0.0736, -0.0717,  ..., -0.1110, -0.0363, -0.0622],
         [ 0.9327, -0.4464, -0.1235,  ..., -0.6670,  0.0963,  0.5317],
         [ 0.7550, -0.5869, -0.2661,  ...,  0.0933, -0.2297, -0.0364]]]) 22896588406032
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.4077, -0.5334,  0.2988,  ..., -0.3112,  0.0937,  0.2989],
         [ 0.0775, -0.4739, -0.7281,  ...,  0.1638, -0.1024, -0.1267],
         [ 0.1611,  0.2032,  0.3692,  ...,  0.1179,  0.0198,  0.0860],
         ...,
         [ 0.1010,  0.0736, -0.0717,  ..., -0.1110, -0.0363, -0.0622],
         [ 0.9327, -0.4464, -0.1235,  ..., -0.6670,  0.0963,  0.5317],
         [ 0.7550, -0.5869, -0.2661,  ...,  0.0933, -0.2297, -0.0364]]]), modified_attrs={}, prev=None) 22896588452384
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d30b3f6440)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x10158750)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x10158750)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x10158750)
tracing opcode LOAD_FAST None pc=34 frame=19(0x10158750)
tracing opcode LOAD_FAST None pc=36 frame=19(0x10158750)
load fast: 22896588696048
tracing opcode BINARY_ADD None pc=38 frame=19(0x10158750)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x10158750)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x238aad10)
push tracker due to record
push tracker 2 frame 0x238aad10 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x238aad10)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x238aad10)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x238aad10 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x238aad10)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x238aad10)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x238aad10)
load fast: 22896587965520
tracing opcode LOAD_ATTR None pc=12 frame=2(0x238aad10)
tracing opcode STORE_FAST None pc=14 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x238aad10)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x238aad10)
tracing opcode CALL_METHOD None pc=20 frame=2(0x238aad10)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x238aad10)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=28 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=30 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=32 frame=2(0x238aad10)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x238aad10)
record function in graph <built-in method mean of Tensor object at 0x14d306fe0450>
func self id: 22896587965520
tracing opcode STORE_FAST None pc=36 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x238aad10)
tracing opcode LOAD_FAST None pc=40 frame=2(0x238aad10)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x238aad10)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=46 frame=2(0x238aad10)
tracing opcode CALL_METHOD None pc=48 frame=2(0x238aad10)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=52 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=54 frame=2(0x238aad10)
tracing opcode LOAD_CONST None pc=56 frame=2(0x238aad10)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x238aad10)
record function in graph <built-in method mean of Tensor object at 0x14d30704bdb0>
func self id: 22896588406192
tracing opcode STORE_FAST None pc=60 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x238aad10)
tracing opcode LOAD_FAST None pc=64 frame=2(0x238aad10)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x238aad10)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x238aad10)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x238aad10)
tracing opcode LOAD_FAST None pc=72 frame=2(0x238aad10)
tracing opcode LOAD_FAST None pc=74 frame=2(0x238aad10)
load fast: 22897554035472
tracing opcode LOAD_ATTR None pc=76 frame=2(0x238aad10)
tracing opcode BINARY_ADD None pc=78 frame=2(0x238aad10)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x238aad10)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x238aad10)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x238aad10)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x238aad10)
tracing opcode LOAD_FAST None pc=90 frame=2(0x238aad10)
tracing opcode CALL_METHOD None pc=92 frame=2(0x238aad10)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x238aad10)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x238aad10)
tracing opcode LOAD_FAST None pc=100 frame=2(0x238aad10)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x238aad10)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x238aad10)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x238aad10)
tracing opcode BINARY_ADD None pc=108 frame=2(0x238aad10)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x238aad10)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x238aad10)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x238aad10)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_388 : [#users=4] = placeholder[target=tensor_388]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_388,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_388, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_388, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_388, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d306fe0450>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x238aad10)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x10158750)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x10158750)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x10158750)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_385 : [#users=1] = placeholder[target=tensor_385]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_385,), kwargs = {})
    %tensor_387 : [#users=1] = placeholder[target=tensor_387]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_387), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x10158750)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x11a4e470)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x11a4e470)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x11a4e470)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x11a4e470)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x11a4e470)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_355 : [#users=2] = placeholder[target=tensor_355]
    %tensor_356 : [#users=1] = placeholder[target=tensor_356]
    %tensor_357 : [#users=1] = placeholder[target=tensor_357]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_355,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_357, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_366 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_366, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_356, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_355), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x11a4e470)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing opcode UNPACK_SEQUENCE None pc=104 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=106 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=108 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:455
tracing opcode LOAD_FAST None pc=110 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=112 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:456
tracing opcode LOAD_FAST None pc=114 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=116 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=118 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=120 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=122 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:458
tracing opcode LOAD_FAST None pc=124 frame=4(0x6aceb20)
tracing opcode LOAD_ATTR None pc=126 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=128 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_FAST None pc=178 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:476
tracing opcode LOAD_FAST None pc=180 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:477
tracing opcode LOAD_FAST None pc=182 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:478
tracing opcode LOAD_FAST None pc=184 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:479
tracing opcode LOAD_FAST None pc=186 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:480
tracing opcode LOAD_FAST None pc=188 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:481
tracing opcode LOAD_DEREF None pc=190 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:475
tracing opcode LOAD_CONST None pc=192 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION_KW None pc=194 frame=4(0x6aceb20)
run into user defined function DebertaLayer(
  (attention): DebertaAttention(
    (self): DisentangledSelfAttention(
      (in_proj): Linear(in_features=768, out_features=2304, bias=False)
      (pos_dropout): StableDropout()
      (pos_proj): Linear(in_features=768, out_features=768, bias=False)
      (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
      (dropout): StableDropout()
    )
    (output): DebertaSelfOutput(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (LayerNorm): DebertaLayerNorm()
      (dropout): StableDropout()
    )
  )
  (intermediate): DebertaIntermediate(
    (dense): Linear(in_features=768, out_features=3072, bias=True)
    (intermediate_act_fn): GELUActivation()
  )
  (output): DebertaOutput(
    (dense): Linear(in_features=3072, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 9 0x66348d0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, attention) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mLOAD_FAST[0m(3, query_states) 
6: [33mLOAD_FAST[0m(4, relative_pos) 
7: [33mLOAD_FAST[0m(5, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, attention_output) 
11: [33mLOAD_FAST[0m(6, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, attention_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(0, self) 
18: [33mLOAD_METHOD[0m(1, intermediate) 
19: [33mLOAD_FAST[0m(7, attention_output) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(9, intermediate_output) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(2, output) 
24: [33mLOAD_FAST[0m(9, intermediate_output) 
25: [33mLOAD_FAST[0m(7, attention_output) 
26: [33mCALL_METHOD[0m(2, 2) 
27: [33mSTORE_FAST[0m(10, layer_output) 
28: [33mLOAD_FAST[0m(6, output_attentions) 
29: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
30: [33mLOAD_FAST[0m(10, layer_output) 
31: [33mLOAD_FAST[0m(8, att_matrix) 
32: [33mBUILD_TUPLE[0m(2, 2) 
33: [33mRETURN_VALUE[0m(None, None) 
34: [33mLOAD_FAST[0m(10, layer_output) 
35: [33mRETURN_VALUE[0m(None, None) 
36: [33mLOAD_CONST[0m(0, None) 
37: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 9), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(2, 9) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(86, 86)  -> inst 43
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, attention) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(3, query_states) 
11: [33mLOAD_FAST[0m(4, relative_pos) 
12: [33mLOAD_FAST[0m(5, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, attention_output) 
16: [33mLOAD_FAST[0m(6, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, attention_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, attention_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(0, self) 
23: [33mLOAD_METHOD[0m(1, intermediate) 
24: [33mLOAD_FAST[0m(7, attention_output) 
25: [33mCALL_METHOD[0m(1, 1) 
26: [33mSTORE_FAST[0m(9, intermediate_output) 
27: [33mLOAD_FAST[0m(0, self) 
28: [33mLOAD_METHOD[0m(2, output) 
29: [33mLOAD_FAST[0m(9, intermediate_output) 
30: [33mLOAD_FAST[0m(7, attention_output) 
31: [33mCALL_METHOD[0m(2, 2) 
32: [33mSTORE_FAST[0m(10, layer_output) 
33: [33mLOAD_FAST[0m(6, output_attentions) 
34: [33mPOP_JUMP_IF_FALSE[0m(78, 78)  -> inst 39
35: [33mLOAD_FAST[0m(10, layer_output) 
36: [33mLOAD_FAST[0m(8, att_matrix) 
37: [33mBUILD_TUPLE[0m(2, 2) 
38: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
39: [33mLOAD_FAST[0m(10, layer_output) 
40: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
41: [33mLOAD_CONST[0m(0, None) 
42: [32mJUMP_ABSOLUTE[0m(114, 114)  -> inst 57
43: [32mLOAD_GLOBAL[0m(6, guard_match) 
44: [32mLOAD_CONST[0m(2, 9) 
45: [32mLOAD_CONST[0m(3, 0) 
46: [32mLOAD_GLOBAL[0m(8, locals) 
47: [32mCALL_FUNCTION[0m(0, 0) 
48: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
49: [32mUNPACK_SEQUENCE[0m(2, 2) 
50: [32mSTORE_FAST[0m(12, __case_idx) 
51: [32mSTORE_FAST[0m(11, __graph_fn) 
52: [32mLOAD_GLOBAL[0m(4, enable_trace) 
53: [32mLOAD_CONST[0m(2, 9) 
54: [32mCALL_FUNCTION[0m(1, 1) 
55: [32mPOP_TOP[0m(None, None) 
56: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
57: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:372
tracing opcode LOAD_GLOBAL None pc=0 frame=9(0x24f84e10)
push tracker due to record
push tracker 9 frame 0x24f84e10 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=9(0x24f84e10)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=9(0x24f84e10)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9] frame_id 9
enable_trace
push tracker 9 frame 0x24f84e10 frame_id 9 read_stack False cf_info <class 'NoneType'> all [0, 4, 9]
tracing opcode POP_TOP None pc=110 frame=9(0x24f84e10)
restart: running injected code (f_lasti=110)
tracing opcode JUMP_ABSOLUTE None pc=112 frame=9(0x24f84e10)
restart: running injected code (f_lasti=112)
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_FAST None pc=10 frame=9(0x24f84e10)
load fast: 22897554035568
tracing opcode LOAD_ATTR None pc=12 frame=9(0x24f84e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:382
tracing opcode LOAD_FAST None pc=14 frame=9(0x24f84e10)
load fast: 22896588036832
tracing line /home/drc/frontend/test/test_model_deberta.py:383
tracing opcode LOAD_FAST None pc=16 frame=9(0x24f84e10)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:384
tracing opcode LOAD_FAST None pc=18 frame=9(0x24f84e10)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:385
tracing opcode LOAD_FAST None pc=20 frame=9(0x24f84e10)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:386
tracing opcode LOAD_FAST None pc=22 frame=9(0x24f84e10)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:387
tracing opcode LOAD_FAST None pc=24 frame=9(0x24f84e10)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:381
tracing opcode LOAD_CONST None pc=26 frame=9(0x24f84e10)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=9(0x24f84e10)
run into user defined function DebertaAttention(
  (self): DisentangledSelfAttention(
    (in_proj): Linear(in_features=768, out_features=2304, bias=False)
    (pos_dropout): StableDropout()
    (pos_proj): Linear(in_features=768, out_features=768, bias=False)
    (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
    (dropout): StableDropout()
  )
  (output): DebertaSelfOutput(
    (dense): Linear(in_features=768, out_features=768, bias=True)
    (LayerNorm): DebertaLayerNorm()
    (dropout): StableDropout()
  )
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 10 0x6d1af60 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, self) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mLOAD_FAST[0m(2, attention_mask) 
4: [33mLOAD_FAST[0m(3, output_attentions) 
5: [33mLOAD_FAST[0m(4, query_states) 
6: [33mLOAD_FAST[0m(5, relative_pos) 
7: [33mLOAD_FAST[0m(6, rel_embeddings) 
8: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
9: [33mCALL_FUNCTION_KW[0m(6, 6) 
10: [33mSTORE_FAST[0m(7, self_output) 
11: [33mLOAD_FAST[0m(3, output_attentions) 
12: [33mPOP_JUMP_IF_FALSE[0m(34, 34)  -> inst 17
13: [33mLOAD_FAST[0m(7, self_output) 
14: [33mUNPACK_SEQUENCE[0m(2, 2) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mSTORE_FAST[0m(8, att_matrix) 
17: [33mLOAD_FAST[0m(4, query_states) 
18: [33mLOAD_CONST[0m(0, None) 
19: [33mIS_OP[0m(0, 0) 
20: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
21: [33mLOAD_FAST[0m(1, hidden_states) 
22: [33mSTORE_FAST[0m(4, query_states) 
23: [33mLOAD_FAST[0m(0, self) 
24: [33mLOAD_METHOD[0m(1, output) 
25: [33mLOAD_FAST[0m(7, self_output) 
26: [33mLOAD_FAST[0m(4, query_states) 
27: [33mCALL_METHOD[0m(2, 2) 
28: [33mSTORE_FAST[0m(9, attention_output) 
29: [33mLOAD_FAST[0m(3, output_attentions) 
30: [33mPOP_JUMP_IF_FALSE[0m(70, 70)  -> inst 35
31: [33mLOAD_FAST[0m(9, attention_output) 
32: [33mLOAD_FAST[0m(8, att_matrix) 
33: [33mBUILD_TUPLE[0m(2, 2) 
34: [33mRETURN_VALUE[0m(None, None) 
35: [33mLOAD_FAST[0m(9, attention_output) 
36: [33mRETURN_VALUE[0m(None, None) 
37: [33mLOAD_CONST[0m(0, None) 
38: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'tuple'>, ('query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, 10), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(2, 10) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(88, 88)  -> inst 44
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, self) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_FAST[0m(2, attention_mask) 
9: [33mLOAD_FAST[0m(3, output_attentions) 
10: [33mLOAD_FAST[0m(4, query_states) 
11: [33mLOAD_FAST[0m(5, relative_pos) 
12: [33mLOAD_FAST[0m(6, rel_embeddings) 
13: [33mLOAD_CONST[0m(1, ('query_states', 'relative_pos', 'rel_embeddings')) 
14: [33mCALL_FUNCTION_KW[0m(6, 6) 
15: [33mSTORE_FAST[0m(7, self_output) 
16: [33mLOAD_FAST[0m(3, output_attentions) 
17: [33mPOP_JUMP_IF_FALSE[0m(44, 44)  -> inst 22
18: [33mLOAD_FAST[0m(7, self_output) 
19: [33mUNPACK_SEQUENCE[0m(2, 2) 
20: [33mSTORE_FAST[0m(7, self_output) 
21: [33mSTORE_FAST[0m(8, att_matrix) 
22: [33mLOAD_FAST[0m(4, query_states) 
23: [33mLOAD_CONST[0m(0, None) 
24: [33mIS_OP[0m(0, 0) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mSTORE_FAST[0m(4, query_states) 
28: [33mLOAD_FAST[0m(0, self) 
29: [33mLOAD_METHOD[0m(1, output) 
30: [33mLOAD_FAST[0m(7, self_output) 
31: [33mLOAD_FAST[0m(4, query_states) 
32: [33mCALL_METHOD[0m(2, 2) 
33: [33mSTORE_FAST[0m(9, attention_output) 
34: [33mLOAD_FAST[0m(3, output_attentions) 
35: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
36: [33mLOAD_FAST[0m(9, attention_output) 
37: [33mLOAD_FAST[0m(8, att_matrix) 
38: [33mBUILD_TUPLE[0m(2, 2) 
39: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
40: [33mLOAD_FAST[0m(9, attention_output) 
41: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
42: [33mLOAD_CONST[0m(0, None) 
43: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
44: [32mLOAD_GLOBAL[0m(5, guard_match) 
45: [32mLOAD_CONST[0m(2, 10) 
46: [32mLOAD_CONST[0m(3, 0) 
47: [32mLOAD_GLOBAL[0m(7, locals) 
48: [32mCALL_FUNCTION[0m(0, 0) 
49: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
50: [32mUNPACK_SEQUENCE[0m(2, 2) 
51: [32mSTORE_FAST[0m(11, __case_idx) 
52: [32mSTORE_FAST[0m(10, __graph_fn) 
53: [32mLOAD_GLOBAL[0m(3, enable_trace) 
54: [32mLOAD_CONST[0m(2, 10) 
55: [32mCALL_FUNCTION[0m(1, 1) 
56: [32mPOP_TOP[0m(None, None) 
57: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
58: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:305
tracing opcode LOAD_GLOBAL None pc=0 frame=10(0xea854c0)
push tracker due to record
push tracker 10 frame 0xea854c0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=10(0xea854c0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=10(0xea854c0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10] frame_id 10
enable_trace
push tracker 10 frame 0xea854c0 frame_id 10 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10]
tracing opcode POP_TOP None pc=112 frame=10(0xea854c0)
restart: running injected code (f_lasti=112)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=10(0xea854c0)
restart: running injected code (f_lasti=114)
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_FAST None pc=10 frame=10(0xea854c0)
load fast: 22897554035616
tracing opcode LOAD_ATTR None pc=12 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:315
tracing opcode LOAD_FAST None pc=14 frame=10(0xea854c0)
load fast: 22896588036832
tracing line /home/drc/frontend/test/test_model_deberta.py:316
tracing opcode LOAD_FAST None pc=16 frame=10(0xea854c0)
load fast: 22897516328976
tracing line /home/drc/frontend/test/test_model_deberta.py:317
tracing opcode LOAD_FAST None pc=18 frame=10(0xea854c0)
load fast: 22900603085248
tracing line /home/drc/frontend/test/test_model_deberta.py:318
tracing opcode LOAD_FAST None pc=20 frame=10(0xea854c0)
load fast: 22900603167744
tracing line /home/drc/frontend/test/test_model_deberta.py:319
tracing opcode LOAD_FAST None pc=22 frame=10(0xea854c0)
load fast: 22897516734000
tracing line /home/drc/frontend/test/test_model_deberta.py:320
tracing opcode LOAD_FAST None pc=24 frame=10(0xea854c0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:314
tracing opcode LOAD_CONST None pc=26 frame=10(0xea854c0)
tracing opcode CALL_FUNCTION_KW None pc=28 frame=10(0xea854c0)
run into user defined function DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 11 0x6d1f5e0 forward
0: [33mLOAD_FAST[0m(4, query_states) 
1: [33mLOAD_CONST[0m(1, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(46, 46)  -> inst 23
4: [33mLOAD_DEREF[0m(4, self) 
5: [33mLOAD_METHOD[0m(0, in_proj) 
6: [33mLOAD_DEREF[0m(0, hidden_states) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(7, qp) 
9: [33mLOAD_DEREF[0m(4, self) 
10: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
11: [33mLOAD_FAST[0m(7, qp) 
12: [33mCALL_METHOD[0m(1, 1) 
13: [33mLOAD_ATTR[0m(2, chunk) 
14: [33mLOAD_CONST[0m(2, 3) 
15: [33mLOAD_CONST[0m(3, -1) 
16: [33mLOAD_CONST[0m(4, ('dim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mUNPACK_SEQUENCE[0m(3, 3) 
19: [33mSTORE_FAST[0m(8, query_layer) 
20: [33mSTORE_FAST[0m(9, key_layer) 
21: [33mSTORE_FAST[0m(10, value_layer) 
22: [33mJUMP_FORWARD[0m(164, 210)  -> inst 105
23: [33mLOAD_CONST[0m(5, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
24: [33mLOAD_CONST[0m(6, DisentangledSelfAttention.forward.<locals>.linear) 
25: [33mMAKE_FUNCTION[0m(0, 0) 
26: [33mSTORE_DEREF[0m(1, linear) 
27: [33mLOAD_DEREF[0m(4, self) 
28: [33mLOAD_ATTR[0m(0, in_proj) 
29: [33mLOAD_ATTR[0m(3, weight) 
30: [33mLOAD_ATTR[0m(2, chunk) 
31: [33mLOAD_DEREF[0m(4, self) 
32: [33mLOAD_ATTR[0m(4, num_attention_heads) 
33: [33mLOAD_CONST[0m(2, 3) 
34: [33mBINARY_MULTIPLY[0m(None, None) 
35: [33mLOAD_CONST[0m(7, 0) 
36: [33mLOAD_CONST[0m(4, ('dim',)) 
37: [33mCALL_FUNCTION_KW[0m(2, 2) 
38: [33mSTORE_DEREF[0m(5, ws) 
39: [33mLOAD_CLOSURE[0m(4, self) 
40: [33mLOAD_CLOSURE[0m(5, ws) 
41: [33mBUILD_TUPLE[0m(2, 2) 
42: [33mLOAD_CONST[0m(8, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
43: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
44: [33mMAKE_FUNCTION[0m(8, 8) 
45: [33mLOAD_GLOBAL[0m(5, range) 
46: [33mLOAD_CONST[0m(2, 3) 
47: [33mCALL_FUNCTION[0m(1, 1) 
48: [33mGET_ITER[0m(None, None) 
49: [33mCALL_FUNCTION[0m(1, 1) 
50: [33mSTORE_DEREF[0m(3, qkvw) 
51: [33mLOAD_CONST[0m(1, None) 
52: [33mBUILD_LIST[0m(1, 1) 
53: [33mLOAD_CONST[0m(2, 3) 
54: [33mBINARY_MULTIPLY[0m(None, None) 
55: [33mSTORE_DEREF[0m(2, qkvb) 
56: [33mLOAD_DEREF[0m(1, linear) 
57: [33mLOAD_DEREF[0m(3, qkvw) 
58: [33mLOAD_CONST[0m(7, 0) 
59: [33mBINARY_SUBSCR[0m(None, None) 
60: [33mLOAD_DEREF[0m(2, qkvb) 
61: [33mLOAD_CONST[0m(7, 0) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mLOAD_FAST[0m(4, query_states) 
64: [33mLOAD_ATTR[0m(6, to) 
65: [33mLOAD_DEREF[0m(3, qkvw) 
66: [33mLOAD_CONST[0m(7, 0) 
67: [33mBINARY_SUBSCR[0m(None, None) 
68: [33mLOAD_ATTR[0m(7, dtype) 
69: [33mLOAD_CONST[0m(10, ('dtype',)) 
70: [33mCALL_FUNCTION_KW[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(3, 3) 
72: [33mSTORE_FAST[0m(11, q) 
73: [33mLOAD_CLOSURE[0m(0, hidden_states) 
74: [33mLOAD_CLOSURE[0m(1, linear) 
75: [33mLOAD_CLOSURE[0m(2, qkvb) 
76: [33mLOAD_CLOSURE[0m(3, qkvw) 
77: [33mBUILD_TUPLE[0m(4, 4) 
78: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
79: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
80: [33mMAKE_FUNCTION[0m(8, 8) 
81: [33mLOAD_GLOBAL[0m(5, range) 
82: [33mLOAD_CONST[0m(12, 1) 
83: [33mLOAD_CONST[0m(2, 3) 
84: [33mCALL_FUNCTION[0m(2, 2) 
85: [33mGET_ITER[0m(None, None) 
86: [33mCALL_FUNCTION[0m(1, 1) 
87: [33mUNPACK_SEQUENCE[0m(2, 2) 
88: [33mSTORE_FAST[0m(12, k) 
89: [33mSTORE_FAST[0m(13, v) 
90: [33mLOAD_CLOSURE[0m(4, self) 
91: [33mBUILD_TUPLE[0m(1, 1) 
92: [33mLOAD_CONST[0m(13, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
93: [33mLOAD_CONST[0m(9, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
94: [33mMAKE_FUNCTION[0m(8, 8) 
95: [33mLOAD_FAST[0m(11, q) 
96: [33mLOAD_FAST[0m(12, k) 
97: [33mLOAD_FAST[0m(13, v) 
98: [33mBUILD_TUPLE[0m(3, 3) 
99: [33mGET_ITER[0m(None, None) 
100: [33mCALL_FUNCTION[0m(1, 1) 
101: [33mUNPACK_SEQUENCE[0m(3, 3) 
102: [33mSTORE_FAST[0m(8, query_layer) 
103: [33mSTORE_FAST[0m(9, key_layer) 
104: [33mSTORE_FAST[0m(10, value_layer) 
105: [33mLOAD_FAST[0m(8, query_layer) 
106: [33mLOAD_DEREF[0m(4, self) 
107: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
108: [33mLOAD_DEREF[0m(4, self) 
109: [33mLOAD_ATTR[0m(8, q_bias) 
110: [33mLOAD_CONST[0m(1, None) 
111: [33mLOAD_CONST[0m(1, None) 
112: [33mLOAD_CONST[0m(1, None) 
113: [33mLOAD_CONST[0m(1, None) 
114: [33mBUILD_SLICE[0m(2, 2) 
115: [33mBUILD_TUPLE[0m(3, 3) 
116: [33mBINARY_SUBSCR[0m(None, None) 
117: [33mCALL_METHOD[0m(1, 1) 
118: [33mBINARY_ADD[0m(None, None) 
119: [33mSTORE_FAST[0m(8, query_layer) 
120: [33mLOAD_FAST[0m(10, value_layer) 
121: [33mLOAD_DEREF[0m(4, self) 
122: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
123: [33mLOAD_DEREF[0m(4, self) 
124: [33mLOAD_ATTR[0m(9, v_bias) 
125: [33mLOAD_CONST[0m(1, None) 
126: [33mLOAD_CONST[0m(1, None) 
127: [33mLOAD_CONST[0m(1, None) 
128: [33mLOAD_CONST[0m(1, None) 
129: [33mBUILD_SLICE[0m(2, 2) 
130: [33mBUILD_TUPLE[0m(3, 3) 
131: [33mBINARY_SUBSCR[0m(None, None) 
132: [33mCALL_METHOD[0m(1, 1) 
133: [33mBINARY_ADD[0m(None, None) 
134: [33mSTORE_FAST[0m(10, value_layer) 
135: [33mLOAD_CONST[0m(1, None) 
136: [33mSTORE_FAST[0m(14, rel_att) 
137: [33mLOAD_CONST[0m(12, 1) 
138: [33mLOAD_GLOBAL[0m(10, len) 
139: [33mLOAD_DEREF[0m(4, self) 
140: [33mLOAD_ATTR[0m(11, pos_att_type) 
141: [33mCALL_FUNCTION[0m(1, 1) 
142: [33mBINARY_ADD[0m(None, None) 
143: [33mSTORE_FAST[0m(15, scale_factor) 
144: [33mLOAD_GLOBAL[0m(12, torch) 
145: [33mLOAD_METHOD[0m(13, sqrt) 
146: [33mLOAD_GLOBAL[0m(12, torch) 
147: [33mLOAD_ATTR[0m(14, tensor) 
148: [33mLOAD_FAST[0m(8, query_layer) 
149: [33mLOAD_METHOD[0m(15, size) 
150: [33mLOAD_CONST[0m(3, -1) 
151: [33mCALL_METHOD[0m(1, 1) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(16, float) 
154: [33mLOAD_CONST[0m(10, ('dtype',)) 
155: [33mCALL_FUNCTION_KW[0m(2, 2) 
156: [33mLOAD_FAST[0m(15, scale_factor) 
157: [33mBINARY_MULTIPLY[0m(None, None) 
158: [33mCALL_METHOD[0m(1, 1) 
159: [33mSTORE_FAST[0m(16, scale) 
160: [33mLOAD_FAST[0m(8, query_layer) 
161: [33mLOAD_FAST[0m(16, scale) 
162: [33mLOAD_ATTR[0m(6, to) 
163: [33mLOAD_FAST[0m(8, query_layer) 
164: [33mLOAD_ATTR[0m(7, dtype) 
165: [33mLOAD_CONST[0m(10, ('dtype',)) 
166: [33mCALL_FUNCTION_KW[0m(1, 1) 
167: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
168: [33mSTORE_FAST[0m(8, query_layer) 
169: [33mLOAD_GLOBAL[0m(12, torch) 
170: [33mLOAD_METHOD[0m(17, matmul) 
171: [33mLOAD_FAST[0m(8, query_layer) 
172: [33mLOAD_FAST[0m(9, key_layer) 
173: [33mLOAD_METHOD[0m(18, transpose) 
174: [33mLOAD_CONST[0m(3, -1) 
175: [33mLOAD_CONST[0m(14, -2) 
176: [33mCALL_METHOD[0m(2, 2) 
177: [33mCALL_METHOD[0m(2, 2) 
178: [33mSTORE_FAST[0m(17, attention_scores) 
179: [33mLOAD_DEREF[0m(4, self) 
180: [33mLOAD_ATTR[0m(19, relative_attention) 
181: [33mEXTENDED_ARG[0m(1, 1) 
182: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
183: [33mLOAD_DEREF[0m(4, self) 
184: [33mLOAD_METHOD[0m(20, pos_dropout) 
185: [33mLOAD_FAST[0m(6, rel_embeddings) 
186: [33mCALL_METHOD[0m(1, 1) 
187: [33mSTORE_FAST[0m(6, rel_embeddings) 
188: [33mLOAD_DEREF[0m(4, self) 
189: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
190: [33mLOAD_FAST[0m(8, query_layer) 
191: [33mLOAD_FAST[0m(9, key_layer) 
192: [33mLOAD_FAST[0m(5, relative_pos) 
193: [33mLOAD_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_FAST[0m(15, scale_factor) 
195: [33mCALL_METHOD[0m(5, 5) 
196: [33mSTORE_FAST[0m(14, rel_att) 
197: [33mLOAD_FAST[0m(14, rel_att) 
198: [33mLOAD_CONST[0m(1, None) 
199: [33mIS_OP[0m(1, 1) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_FALSE[0m(412, 412)  -> inst 206
202: [33mLOAD_FAST[0m(17, attention_scores) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mBINARY_ADD[0m(None, None) 
205: [33mSTORE_FAST[0m(17, attention_scores) 
206: [33mLOAD_DEREF[0m(4, self) 
207: [33mLOAD_ATTR[0m(22, talking_head) 
208: [33mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
210: [33mLOAD_DEREF[0m(4, self) 
211: [33mLOAD_METHOD[0m(23, head_logits_proj) 
212: [33mLOAD_FAST[0m(17, attention_scores) 
213: [33mLOAD_METHOD[0m(24, permute) 
214: [33mLOAD_CONST[0m(7, 0) 
215: [33mLOAD_CONST[0m(15, 2) 
216: [33mLOAD_CONST[0m(2, 3) 
217: [33mLOAD_CONST[0m(12, 1) 
218: [33mCALL_METHOD[0m(4, 4) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_METHOD[0m(24, permute) 
221: [33mLOAD_CONST[0m(7, 0) 
222: [33mLOAD_CONST[0m(2, 3) 
223: [33mLOAD_CONST[0m(12, 1) 
224: [33mLOAD_CONST[0m(15, 2) 
225: [33mCALL_METHOD[0m(4, 4) 
226: [33mSTORE_FAST[0m(17, attention_scores) 
227: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
228: [33mLOAD_METHOD[0m(26, apply) 
229: [33mLOAD_FAST[0m(17, attention_scores) 
230: [33mLOAD_FAST[0m(2, attention_mask) 
231: [33mLOAD_CONST[0m(3, -1) 
232: [33mCALL_METHOD[0m(3, 3) 
233: [33mSTORE_FAST[0m(18, attention_probs) 
234: [33mLOAD_DEREF[0m(4, self) 
235: [33mLOAD_METHOD[0m(27, dropout) 
236: [33mLOAD_FAST[0m(18, attention_probs) 
237: [33mCALL_METHOD[0m(1, 1) 
238: [33mSTORE_FAST[0m(18, attention_probs) 
239: [33mLOAD_DEREF[0m(4, self) 
240: [33mLOAD_ATTR[0m(22, talking_head) 
241: [33mEXTENDED_ARG[0m(2, 2) 
242: [33mPOP_JUMP_IF_FALSE[0m(520, 520)  -> inst 260
243: [33mLOAD_DEREF[0m(4, self) 
244: [33mLOAD_METHOD[0m(28, head_weights_proj) 
245: [33mLOAD_FAST[0m(18, attention_probs) 
246: [33mLOAD_METHOD[0m(24, permute) 
247: [33mLOAD_CONST[0m(7, 0) 
248: [33mLOAD_CONST[0m(15, 2) 
249: [33mLOAD_CONST[0m(2, 3) 
250: [33mLOAD_CONST[0m(12, 1) 
251: [33mCALL_METHOD[0m(4, 4) 
252: [33mCALL_METHOD[0m(1, 1) 
253: [33mLOAD_METHOD[0m(24, permute) 
254: [33mLOAD_CONST[0m(7, 0) 
255: [33mLOAD_CONST[0m(2, 3) 
256: [33mLOAD_CONST[0m(12, 1) 
257: [33mLOAD_CONST[0m(15, 2) 
258: [33mCALL_METHOD[0m(4, 4) 
259: [33mSTORE_FAST[0m(18, attention_probs) 
260: [33mLOAD_GLOBAL[0m(12, torch) 
261: [33mLOAD_METHOD[0m(17, matmul) 
262: [33mLOAD_FAST[0m(18, attention_probs) 
263: [33mLOAD_FAST[0m(10, value_layer) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(19, context_layer) 
266: [33mLOAD_FAST[0m(19, context_layer) 
267: [33mLOAD_METHOD[0m(24, permute) 
268: [33mLOAD_CONST[0m(7, 0) 
269: [33mLOAD_CONST[0m(15, 2) 
270: [33mLOAD_CONST[0m(12, 1) 
271: [33mLOAD_CONST[0m(2, 3) 
272: [33mCALL_METHOD[0m(4, 4) 
273: [33mLOAD_METHOD[0m(29, contiguous) 
274: [33mCALL_METHOD[0m(0, 0) 
275: [33mSTORE_FAST[0m(19, context_layer) 
276: [33mLOAD_FAST[0m(19, context_layer) 
277: [33mLOAD_METHOD[0m(15, size) 
278: [33mCALL_METHOD[0m(0, 0) 
279: [33mLOAD_CONST[0m(1, None) 
280: [33mLOAD_CONST[0m(14, -2) 
281: [33mBUILD_SLICE[0m(2, 2) 
282: [33mBINARY_SUBSCR[0m(None, None) 
283: [33mLOAD_CONST[0m(16, (-1,)) 
284: [33mBINARY_ADD[0m(None, None) 
285: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
286: [33mLOAD_FAST[0m(19, context_layer) 
287: [33mLOAD_METHOD[0m(30, view) 
288: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
289: [33mCALL_METHOD[0m(1, 1) 
290: [33mSTORE_FAST[0m(19, context_layer) 
291: [33mLOAD_FAST[0m(3, output_attentions) 
292: [33mEXTENDED_ARG[0m(2, 2) 
293: [33mPOP_JUMP_IF_FALSE[0m(596, 596)  -> inst 298
294: [33mLOAD_FAST[0m(19, context_layer) 
295: [33mLOAD_FAST[0m(18, attention_probs) 
296: [33mBUILD_TUPLE[0m(2, 2) 
297: [33mRETURN_VALUE[0m(None, None) 
298: [33mLOAD_FAST[0m(19, context_layer) 
299: [33mRETURN_VALUE[0m(None, None) 
300: [33mLOAD_CONST[0m(1, None) 
301: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'tuple'>, ('dim',)), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.linear'), (<class 'int'>, 0), (<class 'int'>, 1), (<class 'code'>, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'str'>, "\n        Call the module\n\n        Args:\n            hidden_states (`torch.FloatTensor`):\n                Input states to the module usually the output from previous layer, it will be the Q,K and V in\n                *Attention(Q,K,V)*\n\n            attention_mask (`torch.ByteTensor`):\n                An attention mask matrix of shape [*B*, *N*, *N*] where *B* is the batch size, *N* is the maximum\n                sequence length in which element [i,j] = *1* means the *i* th token in the input can attend to the *j*\n                th token.\n\n            output_attentions (`bool`, optional):\n                Whether return the attention matrix.\n\n            query_states (`torch.FloatTensor`, optional):\n                The *Q* state in *Attention(Q,K,V)*.\n\n            relative_pos (`torch.LongTensor`):\n                The relative position encoding between the tokens in the sequence. It's of shape [*B*, *N*, *N*] with\n                values ranging in [*-max_relative_positions*, *max_relative_positions*].\n\n            rel_embeddings (`torch.FloatTensor`):\n                The embedding of relative distances. It's a tensor of shape [\\(2 \\times\n                \\text{max_relative_positions}\\), *hidden_size*].\n\n\n        "), (<class 'int'>, -1), (<class 'tuple'>, ('dtype',)), (<class 'code'>, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>), (<class 'int'>, -2), (<class 'str'>, 'DisentangledSelfAttention.forward.<locals>.<listcomp>'), (<class 'tuple'>, (-1,)), (<class 'code'>, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>), (<class 'code'>, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>), (<class 'int'>, 11)]
guarded code
0: [32mLOAD_GLOBAL[0m(35, disable_trace) 
1: [32mLOAD_CONST[0m(17, 11) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(622, 622)  -> inst 311
6: [33mLOAD_FAST[0m(4, query_states) 
7: [33mLOAD_CONST[0m(6, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(58, 58)  -> inst 29
10: [33mLOAD_DEREF[0m(4, self) 
11: [33mLOAD_METHOD[0m(0, in_proj) 
12: [33mLOAD_DEREF[0m(0, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(7, qp) 
15: [33mLOAD_DEREF[0m(4, self) 
16: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
17: [33mLOAD_FAST[0m(7, qp) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_ATTR[0m(2, chunk) 
20: [33mLOAD_CONST[0m(0, 3) 
21: [33mLOAD_CONST[0m(9, -1) 
22: [33mLOAD_CONST[0m(1, ('dim',)) 
23: [33mCALL_FUNCTION_KW[0m(2, 2) 
24: [33mUNPACK_SEQUENCE[0m(3, 3) 
25: [33mSTORE_FAST[0m(8, query_layer) 
26: [33mSTORE_FAST[0m(9, key_layer) 
27: [33mSTORE_FAST[0m(10, value_layer) 
28: [33mJUMP_FORWARD[0m(164, 222)  -> inst 111
29: [33mLOAD_CONST[0m(16, <code object linear at 0x14d3f554ec90, file "/home/drc/frontend/test/test_model_deberta.py", line 642>) 
30: [33mLOAD_CONST[0m(2, DisentangledSelfAttention.forward.<locals>.linear) 
31: [33mMAKE_FUNCTION[0m(0, 0) 
32: [33mSTORE_DEREF[0m(1, linear) 
33: [33mLOAD_DEREF[0m(4, self) 
34: [33mLOAD_ATTR[0m(0, in_proj) 
35: [33mLOAD_ATTR[0m(3, weight) 
36: [33mLOAD_ATTR[0m(2, chunk) 
37: [33mLOAD_DEREF[0m(4, self) 
38: [33mLOAD_ATTR[0m(4, num_attention_heads) 
39: [33mLOAD_CONST[0m(0, 3) 
40: [33mBINARY_MULTIPLY[0m(None, None) 
41: [33mLOAD_CONST[0m(3, 0) 
42: [33mLOAD_CONST[0m(1, ('dim',)) 
43: [33mCALL_FUNCTION_KW[0m(2, 2) 
44: [33mSTORE_DEREF[0m(5, ws) 
45: [33mLOAD_CLOSURE[0m(4, self) 
46: [33mLOAD_CLOSURE[0m(5, ws) 
47: [33mBUILD_TUPLE[0m(2, 2) 
48: [33mLOAD_CONST[0m(5, <code object <listcomp> at 0x14d3f554edf0, file "/home/drc/frontend/test/test_model_deberta.py", line 649>) 
49: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
50: [33mMAKE_FUNCTION[0m(8, 8) 
51: [33mLOAD_GLOBAL[0m(5, range) 
52: [33mLOAD_CONST[0m(0, 3) 
53: [33mCALL_FUNCTION[0m(1, 1) 
54: [33mGET_ITER[0m(None, None) 
55: [33mCALL_FUNCTION[0m(1, 1) 
56: [33mSTORE_DEREF[0m(3, qkvw) 
57: [33mLOAD_CONST[0m(6, None) 
58: [33mBUILD_LIST[0m(1, 1) 
59: [33mLOAD_CONST[0m(0, 3) 
60: [33mBINARY_MULTIPLY[0m(None, None) 
61: [33mSTORE_DEREF[0m(2, qkvb) 
62: [33mLOAD_DEREF[0m(1, linear) 
63: [33mLOAD_DEREF[0m(3, qkvw) 
64: [33mLOAD_CONST[0m(3, 0) 
65: [33mBINARY_SUBSCR[0m(None, None) 
66: [33mLOAD_DEREF[0m(2, qkvb) 
67: [33mLOAD_CONST[0m(3, 0) 
68: [33mBINARY_SUBSCR[0m(None, None) 
69: [33mLOAD_FAST[0m(4, query_states) 
70: [33mLOAD_ATTR[0m(6, to) 
71: [33mLOAD_DEREF[0m(3, qkvw) 
72: [33mLOAD_CONST[0m(3, 0) 
73: [33mBINARY_SUBSCR[0m(None, None) 
74: [33mLOAD_ATTR[0m(7, dtype) 
75: [33mLOAD_CONST[0m(10, ('dtype',)) 
76: [33mCALL_FUNCTION_KW[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(3, 3) 
78: [33mSTORE_FAST[0m(11, q) 
79: [33mLOAD_CLOSURE[0m(0, hidden_states) 
80: [33mLOAD_CLOSURE[0m(1, linear) 
81: [33mLOAD_CLOSURE[0m(2, qkvb) 
82: [33mLOAD_CLOSURE[0m(3, qkvw) 
83: [33mBUILD_TUPLE[0m(4, 4) 
84: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f554eea0, file "/home/drc/frontend/test/test_model_deberta.py", line 653>) 
85: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
86: [33mMAKE_FUNCTION[0m(8, 8) 
87: [33mLOAD_GLOBAL[0m(5, range) 
88: [33mLOAD_CONST[0m(4, 1) 
89: [33mLOAD_CONST[0m(0, 3) 
90: [33mCALL_FUNCTION[0m(2, 2) 
91: [33mGET_ITER[0m(None, None) 
92: [33mCALL_FUNCTION[0m(1, 1) 
93: [33mUNPACK_SEQUENCE[0m(2, 2) 
94: [33mSTORE_FAST[0m(12, k) 
95: [33mSTORE_FAST[0m(13, v) 
96: [33mLOAD_CLOSURE[0m(4, self) 
97: [33mBUILD_TUPLE[0m(1, 1) 
98: [33mLOAD_CONST[0m(15, <code object <listcomp> at 0x14d3f554ef50, file "/home/drc/frontend/test/test_model_deberta.py", line 654>) 
99: [33mLOAD_CONST[0m(13, DisentangledSelfAttention.forward.<locals>.<listcomp>) 
100: [33mMAKE_FUNCTION[0m(8, 8) 
101: [33mLOAD_FAST[0m(11, q) 
102: [33mLOAD_FAST[0m(12, k) 
103: [33mLOAD_FAST[0m(13, v) 
104: [33mBUILD_TUPLE[0m(3, 3) 
105: [33mGET_ITER[0m(None, None) 
106: [33mCALL_FUNCTION[0m(1, 1) 
107: [33mUNPACK_SEQUENCE[0m(3, 3) 
108: [33mSTORE_FAST[0m(8, query_layer) 
109: [33mSTORE_FAST[0m(9, key_layer) 
110: [33mSTORE_FAST[0m(10, value_layer) 
111: [33mLOAD_FAST[0m(8, query_layer) 
112: [33mLOAD_DEREF[0m(4, self) 
113: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
114: [33mLOAD_DEREF[0m(4, self) 
115: [33mLOAD_ATTR[0m(8, q_bias) 
116: [33mLOAD_CONST[0m(6, None) 
117: [33mLOAD_CONST[0m(6, None) 
118: [33mLOAD_CONST[0m(6, None) 
119: [33mLOAD_CONST[0m(6, None) 
120: [33mBUILD_SLICE[0m(2, 2) 
121: [33mBUILD_TUPLE[0m(3, 3) 
122: [33mBINARY_SUBSCR[0m(None, None) 
123: [33mCALL_METHOD[0m(1, 1) 
124: [33mBINARY_ADD[0m(None, None) 
125: [33mSTORE_FAST[0m(8, query_layer) 
126: [33mLOAD_FAST[0m(10, value_layer) 
127: [33mLOAD_DEREF[0m(4, self) 
128: [33mLOAD_METHOD[0m(1, transpose_for_scores) 
129: [33mLOAD_DEREF[0m(4, self) 
130: [33mLOAD_ATTR[0m(9, v_bias) 
131: [33mLOAD_CONST[0m(6, None) 
132: [33mLOAD_CONST[0m(6, None) 
133: [33mLOAD_CONST[0m(6, None) 
134: [33mLOAD_CONST[0m(6, None) 
135: [33mBUILD_SLICE[0m(2, 2) 
136: [33mBUILD_TUPLE[0m(3, 3) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mCALL_METHOD[0m(1, 1) 
139: [33mBINARY_ADD[0m(None, None) 
140: [33mSTORE_FAST[0m(10, value_layer) 
141: [33mLOAD_CONST[0m(6, None) 
142: [33mSTORE_FAST[0m(14, rel_att) 
143: [33mLOAD_CONST[0m(4, 1) 
144: [33mLOAD_GLOBAL[0m(10, len) 
145: [33mLOAD_DEREF[0m(4, self) 
146: [33mLOAD_ATTR[0m(11, pos_att_type) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mBINARY_ADD[0m(None, None) 
149: [33mSTORE_FAST[0m(15, scale_factor) 
150: [33mLOAD_GLOBAL[0m(12, torch) 
151: [33mLOAD_METHOD[0m(13, sqrt) 
152: [33mLOAD_GLOBAL[0m(12, torch) 
153: [33mLOAD_ATTR[0m(14, tensor) 
154: [33mLOAD_FAST[0m(8, query_layer) 
155: [33mLOAD_METHOD[0m(15, size) 
156: [33mLOAD_CONST[0m(9, -1) 
157: [33mCALL_METHOD[0m(1, 1) 
158: [33mLOAD_GLOBAL[0m(12, torch) 
159: [33mLOAD_ATTR[0m(16, float) 
160: [33mLOAD_CONST[0m(10, ('dtype',)) 
161: [33mCALL_FUNCTION_KW[0m(2, 2) 
162: [33mLOAD_FAST[0m(15, scale_factor) 
163: [33mBINARY_MULTIPLY[0m(None, None) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(16, scale) 
166: [33mLOAD_FAST[0m(8, query_layer) 
167: [33mLOAD_FAST[0m(16, scale) 
168: [33mLOAD_ATTR[0m(6, to) 
169: [33mLOAD_FAST[0m(8, query_layer) 
170: [33mLOAD_ATTR[0m(7, dtype) 
171: [33mLOAD_CONST[0m(10, ('dtype',)) 
172: [33mCALL_FUNCTION_KW[0m(1, 1) 
173: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
174: [33mSTORE_FAST[0m(8, query_layer) 
175: [33mLOAD_GLOBAL[0m(12, torch) 
176: [33mLOAD_METHOD[0m(17, matmul) 
177: [33mLOAD_FAST[0m(8, query_layer) 
178: [33mLOAD_FAST[0m(9, key_layer) 
179: [33mLOAD_METHOD[0m(18, transpose) 
180: [33mLOAD_CONST[0m(9, -1) 
181: [33mLOAD_CONST[0m(12, -2) 
182: [33mCALL_METHOD[0m(2, 2) 
183: [33mCALL_METHOD[0m(2, 2) 
184: [33mSTORE_FAST[0m(17, attention_scores) 
185: [33mLOAD_DEREF[0m(4, self) 
186: [33mLOAD_ATTR[0m(19, relative_attention) 
187: [32mEXTENDED_ARG[0m(1, 1) 
188: [33mPOP_JUMP_IF_FALSE[0m(406, 406)  -> inst 203
189: [33mLOAD_DEREF[0m(4, self) 
190: [33mLOAD_METHOD[0m(20, pos_dropout) 
191: [33mLOAD_FAST[0m(6, rel_embeddings) 
192: [33mCALL_METHOD[0m(1, 1) 
193: [33mSTORE_FAST[0m(6, rel_embeddings) 
194: [33mLOAD_DEREF[0m(4, self) 
195: [33mLOAD_METHOD[0m(21, disentangled_att_bias) 
196: [33mLOAD_FAST[0m(8, query_layer) 
197: [33mLOAD_FAST[0m(9, key_layer) 
198: [33mLOAD_FAST[0m(5, relative_pos) 
199: [33mLOAD_FAST[0m(6, rel_embeddings) 
200: [33mLOAD_FAST[0m(15, scale_factor) 
201: [33mCALL_METHOD[0m(5, 5) 
202: [33mSTORE_FAST[0m(14, rel_att) 
203: [33mLOAD_FAST[0m(14, rel_att) 
204: [33mLOAD_CONST[0m(6, None) 
205: [33mIS_OP[0m(1, 1) 
206: [32mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
208: [33mLOAD_FAST[0m(17, attention_scores) 
209: [33mLOAD_FAST[0m(14, rel_att) 
210: [33mBINARY_ADD[0m(None, None) 
211: [33mSTORE_FAST[0m(17, attention_scores) 
212: [33mLOAD_DEREF[0m(4, self) 
213: [33mLOAD_ATTR[0m(22, talking_head) 
214: [32mEXTENDED_ARG[0m(1, 1) 
215: [33mPOP_JUMP_IF_FALSE[0m(466, 466)  -> inst 233
216: [33mLOAD_DEREF[0m(4, self) 
217: [33mLOAD_METHOD[0m(23, head_logits_proj) 
218: [33mLOAD_FAST[0m(17, attention_scores) 
219: [33mLOAD_METHOD[0m(24, permute) 
220: [33mLOAD_CONST[0m(3, 0) 
221: [33mLOAD_CONST[0m(7, 2) 
222: [33mLOAD_CONST[0m(0, 3) 
223: [33mLOAD_CONST[0m(4, 1) 
224: [33mCALL_METHOD[0m(4, 4) 
225: [33mCALL_METHOD[0m(1, 1) 
226: [33mLOAD_METHOD[0m(24, permute) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_CONST[0m(0, 3) 
229: [33mLOAD_CONST[0m(4, 1) 
230: [33mLOAD_CONST[0m(7, 2) 
231: [33mCALL_METHOD[0m(4, 4) 
232: [33mSTORE_FAST[0m(17, attention_scores) 
233: [33mLOAD_GLOBAL[0m(25, XSoftmax) 
234: [33mLOAD_METHOD[0m(26, apply) 
235: [33mLOAD_FAST[0m(17, attention_scores) 
236: [33mLOAD_FAST[0m(2, attention_mask) 
237: [33mLOAD_CONST[0m(9, -1) 
238: [33mCALL_METHOD[0m(3, 3) 
239: [33mSTORE_FAST[0m(18, attention_probs) 
240: [33mLOAD_DEREF[0m(4, self) 
241: [33mLOAD_METHOD[0m(27, dropout) 
242: [33mLOAD_FAST[0m(18, attention_probs) 
243: [33mCALL_METHOD[0m(1, 1) 
244: [33mSTORE_FAST[0m(18, attention_probs) 
245: [33mLOAD_DEREF[0m(4, self) 
246: [33mLOAD_ATTR[0m(22, talking_head) 
247: [32mEXTENDED_ARG[0m(2, 2) 
248: [33mPOP_JUMP_IF_FALSE[0m(532, 532)  -> inst 266
249: [33mLOAD_DEREF[0m(4, self) 
250: [33mLOAD_METHOD[0m(28, head_weights_proj) 
251: [33mLOAD_FAST[0m(18, attention_probs) 
252: [33mLOAD_METHOD[0m(24, permute) 
253: [33mLOAD_CONST[0m(3, 0) 
254: [33mLOAD_CONST[0m(7, 2) 
255: [33mLOAD_CONST[0m(0, 3) 
256: [33mLOAD_CONST[0m(4, 1) 
257: [33mCALL_METHOD[0m(4, 4) 
258: [33mCALL_METHOD[0m(1, 1) 
259: [33mLOAD_METHOD[0m(24, permute) 
260: [33mLOAD_CONST[0m(3, 0) 
261: [33mLOAD_CONST[0m(0, 3) 
262: [33mLOAD_CONST[0m(4, 1) 
263: [33mLOAD_CONST[0m(7, 2) 
264: [33mCALL_METHOD[0m(4, 4) 
265: [33mSTORE_FAST[0m(18, attention_probs) 
266: [33mLOAD_GLOBAL[0m(12, torch) 
267: [33mLOAD_METHOD[0m(17, matmul) 
268: [33mLOAD_FAST[0m(18, attention_probs) 
269: [33mLOAD_FAST[0m(10, value_layer) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(19, context_layer) 
272: [33mLOAD_FAST[0m(19, context_layer) 
273: [33mLOAD_METHOD[0m(24, permute) 
274: [33mLOAD_CONST[0m(3, 0) 
275: [33mLOAD_CONST[0m(7, 2) 
276: [33mLOAD_CONST[0m(4, 1) 
277: [33mLOAD_CONST[0m(0, 3) 
278: [33mCALL_METHOD[0m(4, 4) 
279: [33mLOAD_METHOD[0m(29, contiguous) 
280: [33mCALL_METHOD[0m(0, 0) 
281: [33mSTORE_FAST[0m(19, context_layer) 
282: [33mLOAD_FAST[0m(19, context_layer) 
283: [33mLOAD_METHOD[0m(15, size) 
284: [33mCALL_METHOD[0m(0, 0) 
285: [33mLOAD_CONST[0m(6, None) 
286: [33mLOAD_CONST[0m(12, -2) 
287: [33mBUILD_SLICE[0m(2, 2) 
288: [33mBINARY_SUBSCR[0m(None, None) 
289: [33mLOAD_CONST[0m(14, (-1,)) 
290: [33mBINARY_ADD[0m(None, None) 
291: [33mSTORE_FAST[0m(20, new_context_layer_shape) 
292: [33mLOAD_FAST[0m(19, context_layer) 
293: [33mLOAD_METHOD[0m(30, view) 
294: [33mLOAD_FAST[0m(20, new_context_layer_shape) 
295: [33mCALL_METHOD[0m(1, 1) 
296: [33mSTORE_FAST[0m(19, context_layer) 
297: [33mLOAD_FAST[0m(3, output_attentions) 
298: [32mEXTENDED_ARG[0m(2, 2) 
299: [33mPOP_JUMP_IF_FALSE[0m(610, 610)  -> inst 305
300: [33mLOAD_FAST[0m(19, context_layer) 
301: [33mLOAD_FAST[0m(18, attention_probs) 
302: [33mBUILD_TUPLE[0m(2, 2) 
303: [32mEXTENDED_ARG[0m(2, 2) 
304: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
305: [33mLOAD_FAST[0m(19, context_layer) 
306: [32mEXTENDED_ARG[0m(2, 2) 
307: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
308: [33mLOAD_CONST[0m(6, None) 
309: [32mEXTENDED_ARG[0m(2, 2) 
310: [32mJUMP_ABSOLUTE[0m(650, 650)  -> inst 325
311: [32mLOAD_GLOBAL[0m(34, guard_match) 
312: [32mLOAD_CONST[0m(17, 11) 
313: [32mLOAD_CONST[0m(3, 0) 
314: [32mLOAD_GLOBAL[0m(36, locals) 
315: [32mCALL_FUNCTION[0m(0, 0) 
316: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
317: [32mUNPACK_SEQUENCE[0m(2, 2) 
318: [32mSTORE_FAST[0m(22, __case_idx) 
319: [32mSTORE_FAST[0m(21, __graph_fn) 
320: [32mLOAD_GLOBAL[0m(32, enable_trace) 
321: [32mLOAD_CONST[0m(17, 11) 
322: [32mCALL_FUNCTION[0m(1, 1) 
323: [32mPOP_TOP[0m(None, None) 
324: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
325: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:599
tracing opcode LOAD_GLOBAL None pc=0 frame=11(0x24f94b80)
push tracker due to record
push tracker 11 frame 0x24f94b80 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=11(0x24f94b80)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=11(0x24f94b80)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
enable_trace
push tracker 11 frame 0x24f94b80 frame_id 11 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11]
tracing opcode POP_TOP None pc=646 frame=11(0x24f94b80)
restart: running injected code (f_lasti=646)
tracing opcode JUMP_ABSOLUTE None pc=648 frame=11(0x24f94b80)
restart: running injected code (f_lasti=648)
tracing line /home/drc/frontend/test/test_model_deberta.py:637
tracing opcode LOAD_FAST None pc=12 frame=11(0x24f94b80)
load fast: 22900603167744
tracing opcode LOAD_CONST None pc=14 frame=11(0x24f94b80)
tracing opcode IS_OP None pc=16 frame=11(0x24f94b80)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:638
tracing opcode LOAD_DEREF None pc=20 frame=11(0x24f94b80)
load fast: 22897554035664
tracing opcode LOAD_METHOD None pc=22 frame=11(0x24f94b80)
tracing opcode LOAD_DEREF None pc=24 frame=11(0x24f94b80)
load fast: 22896588036832
tracing opcode CALL_METHOD None pc=26 frame=11(0x24f94b80)
record function in graph Linear(in_features=768, out_features=2304, bias=False)
tracing opcode STORE_FAST None pc=28 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:639
tracing opcode LOAD_DEREF None pc=30 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=32 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=34 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=36 frame=11(0x24f94b80)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0xd195130)
push tracker due to record
push tracker 12 frame 0xd195130 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0xd195130)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0xd195130)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0xd195130 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0xd195130)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0xd195130)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0xd195130)
load fast: 22896588287728
tracing opcode LOAD_METHOD None pc=12 frame=12(0xd195130)
tracing opcode CALL_METHOD None pc=14 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=16 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=18 frame=12(0xd195130)
tracing opcode BUILD_SLICE None pc=20 frame=12(0xd195130)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0xd195130)
tracing opcode LOAD_FAST None pc=24 frame=12(0xd195130)
load fast: 22897554035664
tracing opcode LOAD_ATTR None pc=26 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=28 frame=12(0xd195130)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0xd195130)
tracing opcode BINARY_ADD None pc=32 frame=12(0xd195130)
tracing opcode STORE_FAST None pc=34 frame=12(0xd195130)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0xd195130)
tracing opcode LOAD_METHOD None pc=38 frame=12(0xd195130)
tracing opcode LOAD_FAST None pc=40 frame=12(0xd195130)
tracing opcode CALL_METHOD None pc=42 frame=12(0xd195130)
fetch:  torch.Size([1, 256, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0xd195130)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0xd195130)
tracing opcode LOAD_METHOD None pc=48 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=50 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=52 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=54 frame=12(0xd195130)
tracing opcode LOAD_CONST None pc=56 frame=12(0xd195130)
tracing opcode CALL_METHOD None pc=58 frame=12(0xd195130)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0xd195130)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_396 : [#users=1] = placeholder[target=tensor_396]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_396, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0xd195130)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_ATTR None pc=38 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=40 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=42 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=44 frame=11(0x24f94b80)
tracing opcode CALL_FUNCTION_KW None pc=46 frame=11(0x24f94b80)
record function in graph <built-in method chunk of Tensor object at 0x14d307041c20>
func self id: 22896588364832
tracing opcode UNPACK_SEQUENCE None pc=48 frame=11(0x24f94b80)
sub_value 22896588403872 tensor([[[[ 2.6088e-01,  4.5582e-01, -1.0764e+00,  ...,  7.2254e-01,
            1.0548e-02,  2.2736e-02],
          [ 3.4754e-02, -2.2725e-01, -5.4896e-01,  ..., -7.2439e-01,
            2.8130e-01,  1.0130e+00],
          [ 2.9974e-03, -5.2553e-01,  5.4996e-01,  ...,  8.7491e-01,
           -2.7061e-01, -8.0574e-02],
          ...,
          [-1.9573e-02,  2.8105e-01,  9.2189e-01,  ...,  2.5845e-01,
           -8.3556e-02, -3.9633e-01],
          [ 3.2308e-01, -5.8375e-03,  1.6928e-01,  ..., -1.1860e+00,
            5.0059e-01,  5.8415e-01],
          [-4.4150e-01, -3.0369e-01, -6.4102e-01,  ...,  2.9992e-01,
            3.7499e-03,  1.7950e-01]],

         [[-1.1172e+00, -6.9713e-01,  4.2155e-01,  ...,  6.3766e-01,
            5.8376e-01, -4.6091e-01],
          [ 2.6474e-01, -1.2527e-03,  5.6072e-01,  ..., -4.1818e-01,
            3.2567e-01,  2.1650e-01],
          [-9.3881e-02, -1.1292e+00, -5.2967e-01,  ...,  8.5758e-01,
           -5.7534e-01, -7.9215e-01],
          ...,
          [-2.4223e-01, -6.8396e-01, -1.2809e-01,  ...,  1.5767e+00,
           -4.4040e-02, -8.1710e-02],
          [-6.5760e-01,  6.1901e-01, -1.4417e-01,  ...,  5.8785e-01,
           -4.1924e-01,  3.7620e-01],
          [-3.4139e-01, -2.4439e-01,  2.6953e-01,  ..., -1.6047e-01,
            5.6078e-02, -9.4234e-01]],

         [[-6.8321e-01,  1.9815e-01, -6.2021e-02,  ...,  2.7005e-01,
           -1.0107e-01, -2.4765e-01],
          [-3.4253e-01, -1.3645e+00,  3.4897e-01,  ...,  1.0207e-01,
           -9.3995e-01,  1.9675e-01],
          [-5.5408e-01, -1.0756e-01, -1.9337e-01,  ..., -3.7429e-01,
           -4.3695e-01,  6.2963e-01],
          ...,
          [-5.8206e-01, -2.8380e-01, -3.7146e-01,  ..., -3.0568e-01,
           -9.4556e-01,  5.0608e-01],
          [-9.9400e-01,  6.2812e-02,  4.1049e-01,  ...,  2.8423e-01,
            1.4378e-01,  1.8701e-01],
          [-3.0514e-01, -3.2408e-01,  4.3217e-02,  ...,  5.9992e-02,
           -1.1101e+00,  9.3994e-02]],

         ...,

         [[ 2.9438e-02,  5.9309e-02,  8.0771e-01,  ..., -4.0892e-01,
           -6.5606e-01,  1.0699e-01],
          [ 6.8055e-01,  3.6800e-01,  7.3207e-01,  ...,  1.1972e+00,
            4.6399e-01,  4.8697e-01],
          [-8.9614e-01,  2.3391e-01,  7.1740e-02,  ...,  1.0064e+00,
            2.3180e-01, -2.0677e-01],
          ...,
          [-8.3897e-01,  2.9088e-01,  3.6032e-01,  ...,  3.1203e-01,
            9.7807e-01,  1.5694e+00],
          [-5.9018e-02, -4.7876e-01, -2.3522e-01,  ...,  1.7631e+00,
            8.4464e-01, -3.7720e-01],
          [-4.0339e-01,  6.1490e-02,  1.1005e+00,  ...,  9.9683e-01,
           -4.3735e-01, -2.3904e-01]],

         [[-2.5272e-01, -6.0622e-01,  1.1025e+00,  ..., -5.2953e-01,
            7.5143e-01, -2.6005e-01],
          [ 4.8178e-01, -1.5084e-01,  6.2668e-01,  ..., -1.7436e-01,
            1.7286e-01, -2.1969e-01],
          [ 2.9820e-01,  1.2181e+00,  4.4702e-01,  ..., -8.3501e-01,
           -8.0980e-01,  1.3495e-01],
          ...,
          [-2.3616e-01,  2.0140e-01, -1.5563e-01,  ..., -7.6574e-01,
            2.7396e-01, -3.3054e-01],
          [-2.6285e-01,  7.2042e-01, -1.8326e-01,  ..., -8.1901e-01,
           -2.9081e-01, -7.3512e-01],
          [-2.3366e-01,  1.3088e+00,  7.0949e-02,  ..., -8.9680e-02,
            1.0746e-01, -2.9023e-01]],

         [[-1.2271e-01,  6.0100e-01,  3.0465e-01,  ..., -5.3133e-01,
           -7.6741e-01,  7.1990e-02],
          [ 1.5131e-01, -7.8336e-01,  9.9127e-01,  ...,  4.5874e-01,
            4.6903e-01,  5.2191e-01],
          [-7.6220e-02, -1.0979e+00, -3.4015e-01,  ..., -1.4444e-01,
            1.9420e-01,  5.5618e-01],
          ...,
          [-4.7816e-01,  1.6229e-01,  1.1299e-01,  ..., -3.7696e-01,
           -2.9692e-01, -3.5277e-01],
          [-4.9619e-02,  7.4504e-01,  7.3036e-01,  ..., -1.0465e-01,
           -2.2602e-01,  5.6138e-01],
          [-3.5362e-01, -1.8247e-02,  4.7851e-01,  ..., -1.1201e+00,
           -4.8920e-01,  4.1788e-01]]]])
sub_value 22896587968080 tensor([[[[ 0.1327, -0.8024, -0.1333,  ..., -0.4507,  0.3572, -0.3988],
          [ 0.7793,  0.3038,  0.1031,  ..., -0.2375,  0.3423,  0.7372],
          [ 0.3173, -0.5053, -0.0673,  ...,  0.4861, -0.3607, -0.4827],
          ...,
          [-1.5088, -1.1927,  0.4837,  ...,  0.1007, -0.1530, -0.2170],
          [ 1.1532, -0.3197,  0.2974,  ..., -0.1170, -0.7585, -0.1921],
          [ 0.6411, -0.0706, -0.6800,  ...,  1.2166, -0.5468,  0.1691]],

         [[-0.5032, -0.1175, -0.0208,  ...,  0.3623,  0.3108,  0.8230],
          [-0.1835,  0.0731,  0.1053,  ..., -0.2917,  0.4310,  1.1688],
          [-1.0457,  0.8326,  0.4578,  ..., -0.1912,  0.4016,  0.2151],
          ...,
          [-0.6952,  0.4881, -0.8294,  ..., -0.3898,  0.5834,  0.4071],
          [-0.4672,  0.3440,  0.0650,  ..., -0.7734,  0.4234, -0.4548],
          [-0.0935,  0.6143,  0.2121,  ...,  0.1153, -0.8602,  0.2706]],

         [[ 0.8649, -0.7115,  0.5448,  ..., -0.2340,  1.1258, -0.4021],
          [ 0.1110,  0.0427, -0.6175,  ...,  0.2961, -0.0140, -0.2375],
          [-0.1759, -0.1337, -0.5762,  ...,  0.1391,  0.1051, -0.1725],
          ...,
          [ 1.6250,  0.0098, -0.1684,  ...,  0.5392, -0.4971,  0.0785],
          [-0.1983, -0.6379, -0.0922,  ...,  0.0239,  0.4073, -0.1022],
          [ 0.1901, -0.4337, -0.3825,  ...,  0.0924,  0.0684, -1.1323]],

         ...,

         [[ 0.0589, -0.8623, -0.0994,  ...,  0.2954,  0.0086, -0.7381],
          [ 0.3728,  0.1568, -0.5299,  ..., -0.1607, -0.8228, -0.0354],
          [-0.3335, -0.2604,  0.0915,  ..., -0.0166,  1.0254, -0.8046],
          ...,
          [ 0.0647, -1.3918, -0.2827,  ..., -0.3389, -0.0976, -0.3549],
          [-0.0372,  0.6840, -0.7937,  ..., -0.6758,  0.0438, -0.0703],
          [ 0.2577,  0.0726,  0.6593,  ..., -0.0792,  1.1211, -0.3586]],

         [[-0.1939,  0.2859, -0.2380,  ...,  0.2107,  0.7908,  0.9980],
          [ 0.2088, -0.3892, -0.0517,  ..., -0.0671,  0.0962, -0.1911],
          [ 0.3815, -0.1207, -0.7115,  ..., -0.4248,  0.1012, -1.2347],
          ...,
          [ 0.5085, -0.5783, -0.3857,  ...,  0.1283,  0.0360,  0.1085],
          [-0.8170, -0.0670,  0.1900,  ..., -0.1859, -0.1225,  0.0388],
          [-0.1401, -0.0521,  0.6335,  ..., -0.4608,  0.0254,  0.1614]],

         [[ 0.4370, -0.4716,  0.5453,  ...,  0.5105, -0.0483, -0.4554],
          [ 0.7903, -0.4951,  0.5626,  ..., -0.4049,  0.3105, -0.3629],
          [ 1.0044,  0.1297,  0.9754,  ...,  0.3163, -0.1236,  0.2438],
          ...,
          [-0.0796, -0.8367,  0.5544,  ...,  0.2704,  0.6195, -0.4559],
          [ 0.7801,  0.0754,  0.4747,  ...,  0.5745,  1.0555, -1.1859],
          [-0.0233, -0.0717,  0.3157,  ..., -0.5655, -0.0059,  0.6924]]]])
sub_value 22896587968160 tensor([[[[-0.0738, -0.7569, -0.3945,  ...,  0.5170, -0.6397,  0.1821],
          [ 0.9927, -1.1372,  0.3422,  ..., -0.2209, -0.0753,  1.5566],
          [ 0.7332, -1.3733, -0.4532,  ..., -0.2192,  0.1030,  0.4650],
          ...,
          [-0.5986,  0.0378, -0.4578,  ..., -0.0640, -0.4723,  0.7240],
          [ 0.0971, -0.4760,  0.1150,  ...,  0.5200, -0.1818, -0.2379],
          [-0.1227, -1.7129, -0.0286,  ..., -0.3089, -0.1759, -0.4651]],

         [[-0.7559, -0.2266, -0.4598,  ...,  0.3576, -0.5695, -0.0757],
          [-0.0807,  0.1959, -1.2098,  ..., -0.1619,  0.1933,  1.1539],
          [-0.1124,  0.2150,  0.4844,  ...,  0.1163,  0.2762, -0.2947],
          ...,
          [ 0.9325,  0.2597, -0.7039,  ...,  0.0297, -0.8397, -0.1544],
          [ 0.3561, -0.6140, -1.3417,  ..., -1.2853, -0.1463,  0.3190],
          [-0.2108, -0.1068,  0.0448,  ...,  0.7637,  0.9328, -0.6396]],

         [[ 0.2074, -0.2510,  0.2608,  ...,  1.0699,  0.5399, -0.5798],
          [ 1.0395, -0.1079, -0.2461,  ..., -0.5248, -0.2657,  0.4817],
          [ 0.0623, -0.3189, -0.0113,  ..., -1.5775,  0.5084, -0.3075],
          ...,
          [ 0.7255,  0.3658,  0.2893,  ...,  0.3284,  1.0164,  0.1842],
          [ 0.3194,  0.2379,  0.1788,  ..., -0.1298,  0.3256,  1.0209],
          [-0.1380, -1.8000, -0.1211,  ..., -0.1950,  0.8904,  0.7322]],

         ...,

         [[ 0.5101,  0.3834,  0.0564,  ...,  0.4426,  0.8383,  0.9496],
          [-0.0916,  0.1920, -0.8099,  ...,  0.4568,  0.6490, -0.1642],
          [ 0.0518,  0.7642, -0.1701,  ...,  0.7619,  0.2523, -0.9647],
          ...,
          [-0.2909,  0.7785, -0.4296,  ...,  1.3986,  0.9576,  0.0251],
          [-0.1160,  1.4169,  0.1362,  ...,  0.2428,  0.6380,  0.1042],
          [-0.3707,  0.4518, -0.1604,  ...,  0.7052,  0.7892, -0.7421]],

         [[ 0.0296,  0.1478,  0.0205,  ..., -0.1498,  0.3223, -0.3057],
          [-0.0403,  0.0940,  0.2893,  ...,  0.1368, -0.5146, -1.3139],
          [ 0.4644,  0.4988,  0.5251,  ..., -0.5893,  0.6329,  0.0463],
          ...,
          [ 0.3668, -0.2337, -0.1213,  ..., -1.0667, -0.1853, -0.0165],
          [ 0.5151, -0.2990,  0.2585,  ...,  0.4210, -0.0621,  0.4493],
          [ 0.0350,  0.3539,  0.5765,  ..., -0.4445, -0.0168, -0.8083]],

         [[ 0.2804, -0.5673, -0.4245,  ..., -1.2642, -0.2458, -0.4155],
          [ 0.5002,  0.0981,  0.1467,  ..., -0.3101,  0.2037,  0.3254],
          [ 0.0517,  0.6033, -0.0623,  ..., -0.0328,  0.6439,  0.1123],
          ...,
          [ 0.4769, -0.3865,  0.2589,  ...,  0.0566, -0.5640,  1.0044],
          [ 0.4098, -0.1487,  0.6309,  ..., -0.0500,  0.2885, -0.0855],
          [-0.2228,  0.1575, -0.7958,  ..., -0.1798, -1.1546, -0.4250]]]])
tracing opcode STORE_FAST None pc=50 frame=11(0x24f94b80)
tracing opcode STORE_FAST None pc=52 frame=11(0x24f94b80)
tracing opcode STORE_FAST None pc=54 frame=11(0x24f94b80)
tracing opcode JUMP_FORWARD None pc=56 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:656
tracing opcode LOAD_FAST None pc=222 frame=11(0x24f94b80)
tracing opcode LOAD_DEREF None pc=224 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=226 frame=11(0x24f94b80)
tracing opcode LOAD_DEREF None pc=228 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=230 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=232 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=234 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=236 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=238 frame=11(0x24f94b80)
tracing opcode BUILD_SLICE None pc=240 frame=11(0x24f94b80)
tracing opcode BUILD_TUPLE None pc=242 frame=11(0x24f94b80)
tracing opcode BINARY_SUBSCR None pc=244 frame=11(0x24f94b80)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=246 frame=11(0x24f94b80)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x1c38c5e0)
push tracker due to record
push tracker 12 frame 0x1c38c5e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x1c38c5e0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x1c38c5e0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x1c38c5e0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x1c38c5e0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x1c38c5e0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x1c38c5e0)
load fast: 22896587966160
tracing opcode LOAD_METHOD None pc=12 frame=12(0x1c38c5e0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x1c38c5e0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x1c38c5e0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x1c38c5e0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x1c38c5e0)
load fast: 22897554035664
tracing opcode LOAD_ATTR None pc=26 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x1c38c5e0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x1c38c5e0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x1c38c5e0)
tracing opcode STORE_FAST None pc=34 frame=12(0x1c38c5e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x1c38c5e0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x1c38c5e0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x1c38c5e0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x1c38c5e0)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x1c38c5e0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x1c38c5e0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x1c38c5e0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x1c38c5e0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x1c38c5e0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x1c38c5e0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_397 : [#users=1] = placeholder[target=tensor_397]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_397, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x1c38c5e0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=248 frame=11(0x24f94b80)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=250 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:657
tracing opcode LOAD_FAST None pc=252 frame=11(0x24f94b80)
tracing opcode LOAD_DEREF None pc=254 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=256 frame=11(0x24f94b80)
tracing opcode LOAD_DEREF None pc=258 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=260 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=262 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=264 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=266 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=268 frame=11(0x24f94b80)
tracing opcode BUILD_SLICE None pc=270 frame=11(0x24f94b80)
tracing opcode BUILD_TUPLE None pc=272 frame=11(0x24f94b80)
tracing opcode BINARY_SUBSCR None pc=274 frame=11(0x24f94b80)
record function in graph <built-in function getitem>
tracing opcode CALL_METHOD None pc=276 frame=11(0x24f94b80)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x8ae6860)
push tracker due to record
push tracker 12 frame 0x8ae6860 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x8ae6860)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x8ae6860)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
enable_trace
push tracker 12 frame 0x8ae6860 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x8ae6860)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x8ae6860)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x8ae6860)
load fast: 22896482294416
tracing opcode LOAD_METHOD None pc=12 frame=12(0x8ae6860)
tracing opcode CALL_METHOD None pc=14 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=16 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=18 frame=12(0x8ae6860)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x8ae6860)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x8ae6860)
tracing opcode LOAD_FAST None pc=24 frame=12(0x8ae6860)
load fast: 22897554035664
tracing opcode LOAD_ATTR None pc=26 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=28 frame=12(0x8ae6860)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x8ae6860)
tracing opcode BINARY_ADD None pc=32 frame=12(0x8ae6860)
tracing opcode STORE_FAST None pc=34 frame=12(0x8ae6860)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x8ae6860)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x8ae6860)
tracing opcode LOAD_FAST None pc=40 frame=12(0x8ae6860)
tracing opcode CALL_METHOD None pc=42 frame=12(0x8ae6860)
fetch:  torch.Size([1, 1, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x8ae6860)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x8ae6860)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=50 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=52 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=54 frame=12(0x8ae6860)
tracing opcode LOAD_CONST None pc=56 frame=12(0x8ae6860)
tracing opcode CALL_METHOD None pc=58 frame=12(0x8ae6860)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x8ae6860)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_398 : [#users=1] = placeholder[target=tensor_398]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_398, [1, 1, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x8ae6860)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode BINARY_ADD None pc=278 frame=11(0x24f94b80)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=280 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:659
tracing opcode LOAD_CONST None pc=282 frame=11(0x24f94b80)
tracing opcode STORE_FAST None pc=284 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:661
tracing opcode LOAD_CONST None pc=286 frame=11(0x24f94b80)
tracing opcode LOAD_GLOBAL None pc=288 frame=11(0x24f94b80)
tracing opcode LOAD_DEREF None pc=290 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=292 frame=11(0x24f94b80)
tracing opcode CALL_FUNCTION None pc=294 frame=11(0x24f94b80)
tracing opcode BINARY_ADD None pc=296 frame=11(0x24f94b80)
tracing opcode STORE_FAST None pc=298 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:662
tracing opcode LOAD_GLOBAL None pc=300 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=302 frame=11(0x24f94b80)
tracing opcode LOAD_GLOBAL None pc=304 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=306 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=308 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=310 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=312 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=314 frame=11(0x24f94b80)
fetch:  -1 <class 'int'>
tracing opcode LOAD_GLOBAL None pc=316 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=318 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=320 frame=11(0x24f94b80)
tracing opcode CALL_FUNCTION_KW None pc=322 frame=11(0x24f94b80)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=324 frame=11(0x24f94b80)
tracing opcode BINARY_MULTIPLY None pc=326 frame=11(0x24f94b80)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=328 frame=11(0x24f94b80)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=330 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:663
tracing opcode LOAD_FAST None pc=332 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=334 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=336 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=338 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=340 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=342 frame=11(0x24f94b80)
tracing opcode CALL_FUNCTION_KW None pc=344 frame=11(0x24f94b80)
record function in graph <built-in method to of Tensor object at 0x14d300b4db30>
func self id: 22896482507568
tracing opcode BINARY_TRUE_DIVIDE None pc=346 frame=11(0x24f94b80)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=348 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:664
tracing opcode LOAD_GLOBAL None pc=350 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=352 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=354 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=356 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=358 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=360 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=362 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=364 frame=11(0x24f94b80)
fetch:  -2 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=366 frame=11(0x24f94b80)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=368 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:665
tracing opcode LOAD_DEREF None pc=370 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=372 frame=11(0x24f94b80)
tracing opcode EXTENDED_ARG None pc=374 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:666
tracing opcode LOAD_DEREF None pc=378 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=380 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=382 frame=11(0x24f94b80)
load fast: 22897696732720
tracing opcode CALL_METHOD None pc=384 frame=11(0x24f94b80)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x238b9620)
push tracker due to record
push tracker 3 frame 0x238b9620 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x238b9620)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x238b9620)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x238b9620 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x238b9620)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x238b9620)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x238b9620)
load fast: 22897554035760
tracing opcode LOAD_ATTR None pc=12 frame=3(0x238b9620)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x238b9620)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x238b9620)
load fast: 22897696732720
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x238b9620)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
tracing opcode RETURN_VALUE None pc=74 frame=3(0x238b9620)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=386 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:667
tracing opcode LOAD_DEREF None pc=388 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=390 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=392 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=394 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=396 frame=11(0x24f94b80)
load fast: 22897516734000
tracing opcode LOAD_FAST None pc=398 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=400 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=402 frame=11(0x24f94b80)
fetch:  3 <class 'int'>
run into user defined function <bound method DisentangledSelfAttention.disentangled_att_bias of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 13 0x6ee5a50 disentangled_att_bias
0: [33mLOAD_FAST[0m(3, relative_pos) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(0, 0) 
3: [33mPOP_JUMP_IF_FALSE[0m(38, 38)  -> inst 19
4: [33mLOAD_FAST[0m(1, query_layer) 
5: [33mLOAD_METHOD[0m(0, size) 
6: [33mLOAD_CONST[0m(1, -2) 
7: [33mCALL_METHOD[0m(1, 1) 
8: [33mSTORE_FAST[0m(6, q) 
9: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
10: [33mLOAD_FAST[0m(6, q) 
11: [33mLOAD_FAST[0m(2, key_layer) 
12: [33mLOAD_METHOD[0m(0, size) 
13: [33mLOAD_CONST[0m(1, -2) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_ATTR[0m(2, device) 
17: [33mCALL_FUNCTION[0m(3, 3) 
18: [33mSTORE_FAST[0m(3, relative_pos) 
19: [33mLOAD_FAST[0m(3, relative_pos) 
20: [33mLOAD_METHOD[0m(3, dim) 
21: [33mCALL_METHOD[0m(0, 0) 
22: [33mLOAD_CONST[0m(2, 2) 
23: [33mCOMPARE_OP[0m(2, ==) 
24: [33mPOP_JUMP_IF_FALSE[0m(68, 68)  -> inst 34
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(4, unsqueeze) 
27: [33mLOAD_CONST[0m(3, 0) 
28: [33mCALL_METHOD[0m(1, 1) 
29: [33mLOAD_METHOD[0m(4, unsqueeze) 
30: [33mLOAD_CONST[0m(3, 0) 
31: [33mCALL_METHOD[0m(1, 1) 
32: [33mSTORE_FAST[0m(3, relative_pos) 
33: [33mJUMP_FORWARD[0m(54, 122)  -> inst 61
34: [33mLOAD_FAST[0m(3, relative_pos) 
35: [33mLOAD_METHOD[0m(3, dim) 
36: [33mCALL_METHOD[0m(0, 0) 
37: [33mLOAD_CONST[0m(4, 3) 
38: [33mCOMPARE_OP[0m(2, ==) 
39: [33mPOP_JUMP_IF_FALSE[0m(92, 92)  -> inst 46
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(4, unsqueeze) 
42: [33mLOAD_CONST[0m(5, 1) 
43: [33mCALL_METHOD[0m(1, 1) 
44: [33mSTORE_FAST[0m(3, relative_pos) 
45: [33mJUMP_FORWARD[0m(30, 122)  -> inst 61
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(3, dim) 
48: [33mCALL_METHOD[0m(0, 0) 
49: [33mLOAD_CONST[0m(6, 4) 
50: [33mCOMPARE_OP[0m(3, !=) 
51: [33mPOP_JUMP_IF_FALSE[0m(122, 122)  -> inst 61
52: [33mLOAD_GLOBAL[0m(5, ValueError) 
53: [33mLOAD_CONST[0m(7, Relative position ids must be of dim 2 or 3 or 4. ) 
54: [33mLOAD_FAST[0m(3, relative_pos) 
55: [33mLOAD_METHOD[0m(3, dim) 
56: [33mCALL_METHOD[0m(0, 0) 
57: [33mFORMAT_VALUE[0m(0, (None, False)) 
58: [33mBUILD_STRING[0m(2, 2) 
59: [33mCALL_FUNCTION[0m(1, 1) 
60: [33mRAISE_VARARGS[0m(1, 1) 
61: [33mLOAD_GLOBAL[0m(6, min) 
62: [33mLOAD_GLOBAL[0m(7, max) 
63: [33mLOAD_FAST[0m(1, query_layer) 
64: [33mLOAD_METHOD[0m(0, size) 
65: [33mLOAD_CONST[0m(1, -2) 
66: [33mCALL_METHOD[0m(1, 1) 
67: [33mLOAD_FAST[0m(2, key_layer) 
68: [33mLOAD_METHOD[0m(0, size) 
69: [33mLOAD_CONST[0m(1, -2) 
70: [33mCALL_METHOD[0m(1, 1) 
71: [33mCALL_FUNCTION[0m(2, 2) 
72: [33mLOAD_FAST[0m(0, self) 
73: [33mLOAD_ATTR[0m(8, max_relative_positions) 
74: [33mCALL_FUNCTION[0m(2, 2) 
75: [33mSTORE_FAST[0m(7, att_span) 
76: [33mLOAD_FAST[0m(3, relative_pos) 
77: [33mLOAD_METHOD[0m(9, long) 
78: [33mCALL_METHOD[0m(0, 0) 
79: [33mLOAD_METHOD[0m(10, to) 
80: [33mLOAD_FAST[0m(1, query_layer) 
81: [33mLOAD_ATTR[0m(2, device) 
82: [33mCALL_METHOD[0m(1, 1) 
83: [33mSTORE_FAST[0m(3, relative_pos) 
84: [33mLOAD_FAST[0m(4, rel_embeddings) 
85: [33mLOAD_FAST[0m(0, self) 
86: [33mLOAD_ATTR[0m(8, max_relative_positions) 
87: [33mLOAD_FAST[0m(7, att_span) 
88: [33mBINARY_SUBTRACT[0m(None, None) 
89: [33mLOAD_FAST[0m(0, self) 
90: [33mLOAD_ATTR[0m(8, max_relative_positions) 
91: [33mLOAD_FAST[0m(7, att_span) 
92: [33mBINARY_ADD[0m(None, None) 
93: [33mBUILD_SLICE[0m(2, 2) 
94: [33mLOAD_CONST[0m(0, None) 
95: [33mLOAD_CONST[0m(0, None) 
96: [33mBUILD_SLICE[0m(2, 2) 
97: [33mBUILD_TUPLE[0m(2, 2) 
98: [33mBINARY_SUBSCR[0m(None, None) 
99: [33mLOAD_METHOD[0m(4, unsqueeze) 
100: [33mLOAD_CONST[0m(3, 0) 
101: [33mCALL_METHOD[0m(1, 1) 
102: [33mSTORE_FAST[0m(4, rel_embeddings) 
103: [33mLOAD_CONST[0m(3, 0) 
104: [33mSTORE_FAST[0m(8, score) 
105: [33mLOAD_CONST[0m(8, c2p) 
106: [33mLOAD_FAST[0m(0, self) 
107: [33mLOAD_ATTR[0m(11, pos_att_type) 
108: [33mCONTAINS_OP[0m(0, 0) 
109: [33mEXTENDED_ARG[0m(1, 1) 
110: [33mPOP_JUMP_IF_FALSE[0m(320, 320)  -> inst 160
111: [33mLOAD_FAST[0m(0, self) 
112: [33mLOAD_METHOD[0m(12, pos_proj) 
113: [33mLOAD_FAST[0m(4, rel_embeddings) 
114: [33mCALL_METHOD[0m(1, 1) 
115: [33mSTORE_FAST[0m(9, pos_key_layer) 
116: [33mLOAD_FAST[0m(0, self) 
117: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
118: [33mLOAD_FAST[0m(9, pos_key_layer) 
119: [33mCALL_METHOD[0m(1, 1) 
120: [33mSTORE_FAST[0m(9, pos_key_layer) 
121: [33mLOAD_GLOBAL[0m(14, torch) 
122: [33mLOAD_METHOD[0m(15, matmul) 
123: [33mLOAD_FAST[0m(1, query_layer) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mLOAD_METHOD[0m(16, transpose) 
126: [33mLOAD_CONST[0m(9, -1) 
127: [33mLOAD_CONST[0m(1, -2) 
128: [33mCALL_METHOD[0m(2, 2) 
129: [33mCALL_METHOD[0m(2, 2) 
130: [33mSTORE_FAST[0m(10, c2p_att) 
131: [33mLOAD_GLOBAL[0m(14, torch) 
132: [33mLOAD_METHOD[0m(17, clamp) 
133: [33mLOAD_FAST[0m(3, relative_pos) 
134: [33mLOAD_FAST[0m(7, att_span) 
135: [33mBINARY_ADD[0m(None, None) 
136: [33mLOAD_CONST[0m(3, 0) 
137: [33mLOAD_FAST[0m(7, att_span) 
138: [33mLOAD_CONST[0m(2, 2) 
139: [33mBINARY_MULTIPLY[0m(None, None) 
140: [33mLOAD_CONST[0m(5, 1) 
141: [33mBINARY_SUBTRACT[0m(None, None) 
142: [33mCALL_METHOD[0m(3, 3) 
143: [33mSTORE_FAST[0m(11, c2p_pos) 
144: [33mLOAD_GLOBAL[0m(14, torch) 
145: [33mLOAD_ATTR[0m(18, gather) 
146: [33mLOAD_FAST[0m(10, c2p_att) 
147: [33mLOAD_CONST[0m(9, -1) 
148: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
149: [33mLOAD_FAST[0m(11, c2p_pos) 
150: [33mLOAD_FAST[0m(1, query_layer) 
151: [33mLOAD_FAST[0m(3, relative_pos) 
152: [33mCALL_FUNCTION[0m(3, 3) 
153: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
154: [33mCALL_FUNCTION_KW[0m(3, 3) 
155: [33mSTORE_FAST[0m(10, c2p_att) 
156: [33mLOAD_FAST[0m(8, score) 
157: [33mLOAD_FAST[0m(10, c2p_att) 
158: [33mINPLACE_ADD[0m(None, None) 
159: [33mSTORE_FAST[0m(8, score) 
160: [33mLOAD_CONST[0m(11, p2c) 
161: [33mLOAD_FAST[0m(0, self) 
162: [33mLOAD_ATTR[0m(11, pos_att_type) 
163: [33mCONTAINS_OP[0m(0, 0) 
164: [33mEXTENDED_ARG[0m(2, 2) 
165: [33mPOP_JUMP_IF_FALSE[0m(620, 620)  -> inst 310
166: [33mLOAD_FAST[0m(0, self) 
167: [33mLOAD_METHOD[0m(20, pos_q_proj) 
168: [33mLOAD_FAST[0m(4, rel_embeddings) 
169: [33mCALL_METHOD[0m(1, 1) 
170: [33mSTORE_FAST[0m(12, pos_query_layer) 
171: [33mLOAD_FAST[0m(0, self) 
172: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
173: [33mLOAD_FAST[0m(12, pos_query_layer) 
174: [33mCALL_METHOD[0m(1, 1) 
175: [33mSTORE_FAST[0m(12, pos_query_layer) 
176: [33mLOAD_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_GLOBAL[0m(14, torch) 
178: [33mLOAD_METHOD[0m(21, sqrt) 
179: [33mLOAD_GLOBAL[0m(14, torch) 
180: [33mLOAD_ATTR[0m(22, tensor) 
181: [33mLOAD_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_METHOD[0m(0, size) 
183: [33mLOAD_CONST[0m(9, -1) 
184: [33mCALL_METHOD[0m(1, 1) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(23, float) 
187: [33mLOAD_CONST[0m(12, ('dtype',)) 
188: [33mCALL_FUNCTION_KW[0m(2, 2) 
189: [33mLOAD_FAST[0m(5, scale_factor) 
190: [33mBINARY_MULTIPLY[0m(None, None) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
193: [33mSTORE_FAST[0m(12, pos_query_layer) 
194: [33mLOAD_FAST[0m(1, query_layer) 
195: [33mLOAD_METHOD[0m(0, size) 
196: [33mLOAD_CONST[0m(1, -2) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mLOAD_FAST[0m(2, key_layer) 
199: [33mLOAD_METHOD[0m(0, size) 
200: [33mLOAD_CONST[0m(1, -2) 
201: [33mCALL_METHOD[0m(1, 1) 
202: [33mCOMPARE_OP[0m(3, !=) 
203: [33mEXTENDED_ARG[0m(1, 1) 
204: [33mPOP_JUMP_IF_FALSE[0m(438, 438)  -> inst 219
205: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
206: [33mLOAD_FAST[0m(2, key_layer) 
207: [33mLOAD_METHOD[0m(0, size) 
208: [33mLOAD_CONST[0m(1, -2) 
209: [33mCALL_METHOD[0m(1, 1) 
210: [33mLOAD_FAST[0m(2, key_layer) 
211: [33mLOAD_METHOD[0m(0, size) 
212: [33mLOAD_CONST[0m(1, -2) 
213: [33mCALL_METHOD[0m(1, 1) 
214: [33mLOAD_FAST[0m(1, query_layer) 
215: [33mLOAD_ATTR[0m(2, device) 
216: [33mCALL_FUNCTION[0m(3, 3) 
217: [33mSTORE_FAST[0m(13, r_pos) 
218: [33mJUMP_FORWARD[0m(4, 442)  -> inst 221
219: [33mLOAD_FAST[0m(3, relative_pos) 
220: [33mSTORE_FAST[0m(13, r_pos) 
221: [33mLOAD_GLOBAL[0m(14, torch) 
222: [33mLOAD_METHOD[0m(17, clamp) 
223: [33mLOAD_FAST[0m(13, r_pos) 
224: [33mUNARY_NEGATIVE[0m(None, None) 
225: [33mLOAD_FAST[0m(7, att_span) 
226: [33mBINARY_ADD[0m(None, None) 
227: [33mLOAD_CONST[0m(3, 0) 
228: [33mLOAD_FAST[0m(7, att_span) 
229: [33mLOAD_CONST[0m(2, 2) 
230: [33mBINARY_MULTIPLY[0m(None, None) 
231: [33mLOAD_CONST[0m(5, 1) 
232: [33mBINARY_SUBTRACT[0m(None, None) 
233: [33mCALL_METHOD[0m(3, 3) 
234: [33mSTORE_FAST[0m(14, p2c_pos) 
235: [33mLOAD_GLOBAL[0m(14, torch) 
236: [33mLOAD_METHOD[0m(15, matmul) 
237: [33mLOAD_FAST[0m(2, key_layer) 
238: [33mLOAD_FAST[0m(12, pos_query_layer) 
239: [33mLOAD_METHOD[0m(16, transpose) 
240: [33mLOAD_CONST[0m(9, -1) 
241: [33mLOAD_CONST[0m(1, -2) 
242: [33mCALL_METHOD[0m(2, 2) 
243: [33mLOAD_ATTR[0m(10, to) 
244: [33mLOAD_FAST[0m(2, key_layer) 
245: [33mLOAD_ATTR[0m(24, dtype) 
246: [33mLOAD_CONST[0m(12, ('dtype',)) 
247: [33mCALL_FUNCTION_KW[0m(1, 1) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mSTORE_FAST[0m(15, p2c_att) 
250: [33mLOAD_GLOBAL[0m(14, torch) 
251: [33mLOAD_ATTR[0m(18, gather) 
252: [33mLOAD_FAST[0m(15, p2c_att) 
253: [33mLOAD_CONST[0m(9, -1) 
254: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
255: [33mLOAD_FAST[0m(14, p2c_pos) 
256: [33mLOAD_FAST[0m(1, query_layer) 
257: [33mLOAD_FAST[0m(2, key_layer) 
258: [33mCALL_FUNCTION[0m(3, 3) 
259: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
260: [33mCALL_FUNCTION_KW[0m(3, 3) 
261: [33mLOAD_METHOD[0m(16, transpose) 
262: [33mLOAD_CONST[0m(9, -1) 
263: [33mLOAD_CONST[0m(1, -2) 
264: [33mCALL_METHOD[0m(2, 2) 
265: [33mSTORE_FAST[0m(15, p2c_att) 
266: [33mLOAD_FAST[0m(1, query_layer) 
267: [33mLOAD_METHOD[0m(0, size) 
268: [33mLOAD_CONST[0m(1, -2) 
269: [33mCALL_METHOD[0m(1, 1) 
270: [33mLOAD_FAST[0m(2, key_layer) 
271: [33mLOAD_METHOD[0m(0, size) 
272: [33mLOAD_CONST[0m(1, -2) 
273: [33mCALL_METHOD[0m(1, 1) 
274: [33mCOMPARE_OP[0m(3, !=) 
275: [33mEXTENDED_ARG[0m(2, 2) 
276: [33mPOP_JUMP_IF_FALSE[0m(612, 612)  -> inst 306
277: [33mLOAD_FAST[0m(3, relative_pos) 
278: [33mLOAD_CONST[0m(0, None) 
279: [33mLOAD_CONST[0m(0, None) 
280: [33mBUILD_SLICE[0m(2, 2) 
281: [33mLOAD_CONST[0m(0, None) 
282: [33mLOAD_CONST[0m(0, None) 
283: [33mBUILD_SLICE[0m(2, 2) 
284: [33mLOAD_CONST[0m(0, None) 
285: [33mLOAD_CONST[0m(0, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(3, 0) 
288: [33mBUILD_TUPLE[0m(4, 4) 
289: [33mBINARY_SUBSCR[0m(None, None) 
290: [33mLOAD_METHOD[0m(4, unsqueeze) 
291: [33mLOAD_CONST[0m(9, -1) 
292: [33mCALL_METHOD[0m(1, 1) 
293: [33mSTORE_FAST[0m(16, pos_index) 
294: [33mLOAD_GLOBAL[0m(14, torch) 
295: [33mLOAD_ATTR[0m(18, gather) 
296: [33mLOAD_FAST[0m(15, p2c_att) 
297: [33mLOAD_CONST[0m(1, -2) 
298: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
299: [33mLOAD_FAST[0m(16, pos_index) 
300: [33mLOAD_FAST[0m(15, p2c_att) 
301: [33mLOAD_FAST[0m(2, key_layer) 
302: [33mCALL_FUNCTION[0m(3, 3) 
303: [33mLOAD_CONST[0m(10, ('dim', 'index')) 
304: [33mCALL_FUNCTION_KW[0m(3, 3) 
305: [33mSTORE_FAST[0m(15, p2c_att) 
306: [33mLOAD_FAST[0m(8, score) 
307: [33mLOAD_FAST[0m(15, p2c_att) 
308: [33mINPLACE_ADD[0m(None, None) 
309: [33mSTORE_FAST[0m(8, score) 
310: [33mLOAD_FAST[0m(8, score) 
311: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('dim', 'index')), (<class 'int'>, 3), (<class 'int'>, 0), (<class 'str'>, 'c2p'), (<class 'str'>, 'Relative position ids must be of dim 2 or 3 or 4. '), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'tuple'>, ('dtype',)), (<class 'int'>, -2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'str'>, 'p2c'), (<class 'int'>, 4), (<class 'int'>, 13)]
guarded code
0: [32mLOAD_GLOBAL[0m(31, disable_trace) 
1: [32mLOAD_CONST[0m(13, 13) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mEXTENDED_ARG[0m(2, 2) 
5: [32mJUMP_ABSOLUTE[0m(638, 638)  -> inst 319
6: [33mLOAD_FAST[0m(3, relative_pos) 
7: [33mLOAD_CONST[0m(5, None) 
8: [33mIS_OP[0m(0, 0) 
9: [33mPOP_JUMP_IF_FALSE[0m(50, 50)  -> inst 25
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(0, size) 
12: [33mLOAD_CONST[0m(8, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(6, q) 
15: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
16: [33mLOAD_FAST[0m(6, q) 
17: [33mLOAD_FAST[0m(2, key_layer) 
18: [33mLOAD_METHOD[0m(0, size) 
19: [33mLOAD_CONST[0m(8, -2) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mLOAD_FAST[0m(1, query_layer) 
22: [33mLOAD_ATTR[0m(2, device) 
23: [33mCALL_FUNCTION[0m(3, 3) 
24: [33mSTORE_FAST[0m(3, relative_pos) 
25: [33mLOAD_FAST[0m(3, relative_pos) 
26: [33mLOAD_METHOD[0m(3, dim) 
27: [33mCALL_METHOD[0m(0, 0) 
28: [33mLOAD_CONST[0m(6, 2) 
29: [33mCOMPARE_OP[0m(2, ==) 
30: [33mPOP_JUMP_IF_FALSE[0m(80, 80)  -> inst 40
31: [33mLOAD_FAST[0m(3, relative_pos) 
32: [33mLOAD_METHOD[0m(4, unsqueeze) 
33: [33mLOAD_CONST[0m(2, 0) 
34: [33mCALL_METHOD[0m(1, 1) 
35: [33mLOAD_METHOD[0m(4, unsqueeze) 
36: [33mLOAD_CONST[0m(2, 0) 
37: [33mCALL_METHOD[0m(1, 1) 
38: [33mSTORE_FAST[0m(3, relative_pos) 
39: [33mJUMP_FORWARD[0m(54, 134)  -> inst 67
40: [33mLOAD_FAST[0m(3, relative_pos) 
41: [33mLOAD_METHOD[0m(3, dim) 
42: [33mCALL_METHOD[0m(0, 0) 
43: [33mLOAD_CONST[0m(1, 3) 
44: [33mCOMPARE_OP[0m(2, ==) 
45: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
46: [33mLOAD_FAST[0m(3, relative_pos) 
47: [33mLOAD_METHOD[0m(4, unsqueeze) 
48: [33mLOAD_CONST[0m(10, 1) 
49: [33mCALL_METHOD[0m(1, 1) 
50: [33mSTORE_FAST[0m(3, relative_pos) 
51: [33mJUMP_FORWARD[0m(30, 134)  -> inst 67
52: [33mLOAD_FAST[0m(3, relative_pos) 
53: [33mLOAD_METHOD[0m(3, dim) 
54: [33mCALL_METHOD[0m(0, 0) 
55: [33mLOAD_CONST[0m(12, 4) 
56: [33mCOMPARE_OP[0m(3, !=) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_GLOBAL[0m(5, ValueError) 
59: [33mLOAD_CONST[0m(4, Relative position ids must be of dim 2 or 3 or 4. ) 
60: [33mLOAD_FAST[0m(3, relative_pos) 
61: [33mLOAD_METHOD[0m(3, dim) 
62: [33mCALL_METHOD[0m(0, 0) 
63: [33mFORMAT_VALUE[0m(0, (None, False)) 
64: [33mBUILD_STRING[0m(2, 2) 
65: [33mCALL_FUNCTION[0m(1, 1) 
66: [33mRAISE_VARARGS[0m(1, 1) 
67: [33mLOAD_GLOBAL[0m(6, min) 
68: [33mLOAD_GLOBAL[0m(7, max) 
69: [33mLOAD_FAST[0m(1, query_layer) 
70: [33mLOAD_METHOD[0m(0, size) 
71: [33mLOAD_CONST[0m(8, -2) 
72: [33mCALL_METHOD[0m(1, 1) 
73: [33mLOAD_FAST[0m(2, key_layer) 
74: [33mLOAD_METHOD[0m(0, size) 
75: [33mLOAD_CONST[0m(8, -2) 
76: [33mCALL_METHOD[0m(1, 1) 
77: [33mCALL_FUNCTION[0m(2, 2) 
78: [33mLOAD_FAST[0m(0, self) 
79: [33mLOAD_ATTR[0m(8, max_relative_positions) 
80: [33mCALL_FUNCTION[0m(2, 2) 
81: [33mSTORE_FAST[0m(7, att_span) 
82: [33mLOAD_FAST[0m(3, relative_pos) 
83: [33mLOAD_METHOD[0m(9, long) 
84: [33mCALL_METHOD[0m(0, 0) 
85: [33mLOAD_METHOD[0m(10, to) 
86: [33mLOAD_FAST[0m(1, query_layer) 
87: [33mLOAD_ATTR[0m(2, device) 
88: [33mCALL_METHOD[0m(1, 1) 
89: [33mSTORE_FAST[0m(3, relative_pos) 
90: [33mLOAD_FAST[0m(4, rel_embeddings) 
91: [33mLOAD_FAST[0m(0, self) 
92: [33mLOAD_ATTR[0m(8, max_relative_positions) 
93: [33mLOAD_FAST[0m(7, att_span) 
94: [33mBINARY_SUBTRACT[0m(None, None) 
95: [33mLOAD_FAST[0m(0, self) 
96: [33mLOAD_ATTR[0m(8, max_relative_positions) 
97: [33mLOAD_FAST[0m(7, att_span) 
98: [33mBINARY_ADD[0m(None, None) 
99: [33mBUILD_SLICE[0m(2, 2) 
100: [33mLOAD_CONST[0m(5, None) 
101: [33mLOAD_CONST[0m(5, None) 
102: [33mBUILD_SLICE[0m(2, 2) 
103: [33mBUILD_TUPLE[0m(2, 2) 
104: [33mBINARY_SUBSCR[0m(None, None) 
105: [33mLOAD_METHOD[0m(4, unsqueeze) 
106: [33mLOAD_CONST[0m(2, 0) 
107: [33mCALL_METHOD[0m(1, 1) 
108: [33mSTORE_FAST[0m(4, rel_embeddings) 
109: [33mLOAD_CONST[0m(2, 0) 
110: [33mSTORE_FAST[0m(8, score) 
111: [33mLOAD_CONST[0m(3, c2p) 
112: [33mLOAD_FAST[0m(0, self) 
113: [33mLOAD_ATTR[0m(11, pos_att_type) 
114: [33mCONTAINS_OP[0m(0, 0) 
115: [32mEXTENDED_ARG[0m(1, 1) 
116: [33mPOP_JUMP_IF_FALSE[0m(332, 332)  -> inst 166
117: [33mLOAD_FAST[0m(0, self) 
118: [33mLOAD_METHOD[0m(12, pos_proj) 
119: [33mLOAD_FAST[0m(4, rel_embeddings) 
120: [33mCALL_METHOD[0m(1, 1) 
121: [33mSTORE_FAST[0m(9, pos_key_layer) 
122: [33mLOAD_FAST[0m(0, self) 
123: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
124: [33mLOAD_FAST[0m(9, pos_key_layer) 
125: [33mCALL_METHOD[0m(1, 1) 
126: [33mSTORE_FAST[0m(9, pos_key_layer) 
127: [33mLOAD_GLOBAL[0m(14, torch) 
128: [33mLOAD_METHOD[0m(15, matmul) 
129: [33mLOAD_FAST[0m(1, query_layer) 
130: [33mLOAD_FAST[0m(9, pos_key_layer) 
131: [33mLOAD_METHOD[0m(16, transpose) 
132: [33mLOAD_CONST[0m(9, -1) 
133: [33mLOAD_CONST[0m(8, -2) 
134: [33mCALL_METHOD[0m(2, 2) 
135: [33mCALL_METHOD[0m(2, 2) 
136: [33mSTORE_FAST[0m(10, c2p_att) 
137: [33mLOAD_GLOBAL[0m(14, torch) 
138: [33mLOAD_METHOD[0m(17, clamp) 
139: [33mLOAD_FAST[0m(3, relative_pos) 
140: [33mLOAD_FAST[0m(7, att_span) 
141: [33mBINARY_ADD[0m(None, None) 
142: [33mLOAD_CONST[0m(2, 0) 
143: [33mLOAD_FAST[0m(7, att_span) 
144: [33mLOAD_CONST[0m(6, 2) 
145: [33mBINARY_MULTIPLY[0m(None, None) 
146: [33mLOAD_CONST[0m(10, 1) 
147: [33mBINARY_SUBTRACT[0m(None, None) 
148: [33mCALL_METHOD[0m(3, 3) 
149: [33mSTORE_FAST[0m(11, c2p_pos) 
150: [33mLOAD_GLOBAL[0m(14, torch) 
151: [33mLOAD_ATTR[0m(18, gather) 
152: [33mLOAD_FAST[0m(10, c2p_att) 
153: [33mLOAD_CONST[0m(9, -1) 
154: [33mLOAD_GLOBAL[0m(19, c2p_dynamic_expand) 
155: [33mLOAD_FAST[0m(11, c2p_pos) 
156: [33mLOAD_FAST[0m(1, query_layer) 
157: [33mLOAD_FAST[0m(3, relative_pos) 
158: [33mCALL_FUNCTION[0m(3, 3) 
159: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
160: [33mCALL_FUNCTION_KW[0m(3, 3) 
161: [33mSTORE_FAST[0m(10, c2p_att) 
162: [33mLOAD_FAST[0m(8, score) 
163: [33mLOAD_FAST[0m(10, c2p_att) 
164: [33mINPLACE_ADD[0m(None, None) 
165: [33mSTORE_FAST[0m(8, score) 
166: [33mLOAD_CONST[0m(11, p2c) 
167: [33mLOAD_FAST[0m(0, self) 
168: [33mLOAD_ATTR[0m(11, pos_att_type) 
169: [33mCONTAINS_OP[0m(0, 0) 
170: [32mEXTENDED_ARG[0m(2, 2) 
171: [33mPOP_JUMP_IF_FALSE[0m(632, 632)  -> inst 316
172: [33mLOAD_FAST[0m(0, self) 
173: [33mLOAD_METHOD[0m(20, pos_q_proj) 
174: [33mLOAD_FAST[0m(4, rel_embeddings) 
175: [33mCALL_METHOD[0m(1, 1) 
176: [33mSTORE_FAST[0m(12, pos_query_layer) 
177: [33mLOAD_FAST[0m(0, self) 
178: [33mLOAD_METHOD[0m(13, transpose_for_scores) 
179: [33mLOAD_FAST[0m(12, pos_query_layer) 
180: [33mCALL_METHOD[0m(1, 1) 
181: [33mSTORE_FAST[0m(12, pos_query_layer) 
182: [33mLOAD_FAST[0m(12, pos_query_layer) 
183: [33mLOAD_GLOBAL[0m(14, torch) 
184: [33mLOAD_METHOD[0m(21, sqrt) 
185: [33mLOAD_GLOBAL[0m(14, torch) 
186: [33mLOAD_ATTR[0m(22, tensor) 
187: [33mLOAD_FAST[0m(12, pos_query_layer) 
188: [33mLOAD_METHOD[0m(0, size) 
189: [33mLOAD_CONST[0m(9, -1) 
190: [33mCALL_METHOD[0m(1, 1) 
191: [33mLOAD_GLOBAL[0m(14, torch) 
192: [33mLOAD_ATTR[0m(23, float) 
193: [33mLOAD_CONST[0m(7, ('dtype',)) 
194: [33mCALL_FUNCTION_KW[0m(2, 2) 
195: [33mLOAD_FAST[0m(5, scale_factor) 
196: [33mBINARY_MULTIPLY[0m(None, None) 
197: [33mCALL_METHOD[0m(1, 1) 
198: [33mINPLACE_TRUE_DIVIDE[0m(None, None) 
199: [33mSTORE_FAST[0m(12, pos_query_layer) 
200: [33mLOAD_FAST[0m(1, query_layer) 
201: [33mLOAD_METHOD[0m(0, size) 
202: [33mLOAD_CONST[0m(8, -2) 
203: [33mCALL_METHOD[0m(1, 1) 
204: [33mLOAD_FAST[0m(2, key_layer) 
205: [33mLOAD_METHOD[0m(0, size) 
206: [33mLOAD_CONST[0m(8, -2) 
207: [33mCALL_METHOD[0m(1, 1) 
208: [33mCOMPARE_OP[0m(3, !=) 
209: [32mEXTENDED_ARG[0m(1, 1) 
210: [33mPOP_JUMP_IF_FALSE[0m(450, 450)  -> inst 225
211: [33mLOAD_GLOBAL[0m(1, build_relative_position) 
212: [33mLOAD_FAST[0m(2, key_layer) 
213: [33mLOAD_METHOD[0m(0, size) 
214: [33mLOAD_CONST[0m(8, -2) 
215: [33mCALL_METHOD[0m(1, 1) 
216: [33mLOAD_FAST[0m(2, key_layer) 
217: [33mLOAD_METHOD[0m(0, size) 
218: [33mLOAD_CONST[0m(8, -2) 
219: [33mCALL_METHOD[0m(1, 1) 
220: [33mLOAD_FAST[0m(1, query_layer) 
221: [33mLOAD_ATTR[0m(2, device) 
222: [33mCALL_FUNCTION[0m(3, 3) 
223: [33mSTORE_FAST[0m(13, r_pos) 
224: [33mJUMP_FORWARD[0m(4, 454)  -> inst 227
225: [33mLOAD_FAST[0m(3, relative_pos) 
226: [33mSTORE_FAST[0m(13, r_pos) 
227: [33mLOAD_GLOBAL[0m(14, torch) 
228: [33mLOAD_METHOD[0m(17, clamp) 
229: [33mLOAD_FAST[0m(13, r_pos) 
230: [33mUNARY_NEGATIVE[0m(None, None) 
231: [33mLOAD_FAST[0m(7, att_span) 
232: [33mBINARY_ADD[0m(None, None) 
233: [33mLOAD_CONST[0m(2, 0) 
234: [33mLOAD_FAST[0m(7, att_span) 
235: [33mLOAD_CONST[0m(6, 2) 
236: [33mBINARY_MULTIPLY[0m(None, None) 
237: [33mLOAD_CONST[0m(10, 1) 
238: [33mBINARY_SUBTRACT[0m(None, None) 
239: [33mCALL_METHOD[0m(3, 3) 
240: [33mSTORE_FAST[0m(14, p2c_pos) 
241: [33mLOAD_GLOBAL[0m(14, torch) 
242: [33mLOAD_METHOD[0m(15, matmul) 
243: [33mLOAD_FAST[0m(2, key_layer) 
244: [33mLOAD_FAST[0m(12, pos_query_layer) 
245: [33mLOAD_METHOD[0m(16, transpose) 
246: [33mLOAD_CONST[0m(9, -1) 
247: [33mLOAD_CONST[0m(8, -2) 
248: [33mCALL_METHOD[0m(2, 2) 
249: [33mLOAD_ATTR[0m(10, to) 
250: [33mLOAD_FAST[0m(2, key_layer) 
251: [33mLOAD_ATTR[0m(24, dtype) 
252: [33mLOAD_CONST[0m(7, ('dtype',)) 
253: [33mCALL_FUNCTION_KW[0m(1, 1) 
254: [33mCALL_METHOD[0m(2, 2) 
255: [33mSTORE_FAST[0m(15, p2c_att) 
256: [33mLOAD_GLOBAL[0m(14, torch) 
257: [33mLOAD_ATTR[0m(18, gather) 
258: [33mLOAD_FAST[0m(15, p2c_att) 
259: [33mLOAD_CONST[0m(9, -1) 
260: [33mLOAD_GLOBAL[0m(25, p2c_dynamic_expand) 
261: [33mLOAD_FAST[0m(14, p2c_pos) 
262: [33mLOAD_FAST[0m(1, query_layer) 
263: [33mLOAD_FAST[0m(2, key_layer) 
264: [33mCALL_FUNCTION[0m(3, 3) 
265: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
266: [33mCALL_FUNCTION_KW[0m(3, 3) 
267: [33mLOAD_METHOD[0m(16, transpose) 
268: [33mLOAD_CONST[0m(9, -1) 
269: [33mLOAD_CONST[0m(8, -2) 
270: [33mCALL_METHOD[0m(2, 2) 
271: [33mSTORE_FAST[0m(15, p2c_att) 
272: [33mLOAD_FAST[0m(1, query_layer) 
273: [33mLOAD_METHOD[0m(0, size) 
274: [33mLOAD_CONST[0m(8, -2) 
275: [33mCALL_METHOD[0m(1, 1) 
276: [33mLOAD_FAST[0m(2, key_layer) 
277: [33mLOAD_METHOD[0m(0, size) 
278: [33mLOAD_CONST[0m(8, -2) 
279: [33mCALL_METHOD[0m(1, 1) 
280: [33mCOMPARE_OP[0m(3, !=) 
281: [32mEXTENDED_ARG[0m(2, 2) 
282: [33mPOP_JUMP_IF_FALSE[0m(624, 624)  -> inst 312
283: [33mLOAD_FAST[0m(3, relative_pos) 
284: [33mLOAD_CONST[0m(5, None) 
285: [33mLOAD_CONST[0m(5, None) 
286: [33mBUILD_SLICE[0m(2, 2) 
287: [33mLOAD_CONST[0m(5, None) 
288: [33mLOAD_CONST[0m(5, None) 
289: [33mBUILD_SLICE[0m(2, 2) 
290: [33mLOAD_CONST[0m(5, None) 
291: [33mLOAD_CONST[0m(5, None) 
292: [33mBUILD_SLICE[0m(2, 2) 
293: [33mLOAD_CONST[0m(2, 0) 
294: [33mBUILD_TUPLE[0m(4, 4) 
295: [33mBINARY_SUBSCR[0m(None, None) 
296: [33mLOAD_METHOD[0m(4, unsqueeze) 
297: [33mLOAD_CONST[0m(9, -1) 
298: [33mCALL_METHOD[0m(1, 1) 
299: [33mSTORE_FAST[0m(16, pos_index) 
300: [33mLOAD_GLOBAL[0m(14, torch) 
301: [33mLOAD_ATTR[0m(18, gather) 
302: [33mLOAD_FAST[0m(15, p2c_att) 
303: [33mLOAD_CONST[0m(8, -2) 
304: [33mLOAD_GLOBAL[0m(26, pos_dynamic_expand) 
305: [33mLOAD_FAST[0m(16, pos_index) 
306: [33mLOAD_FAST[0m(15, p2c_att) 
307: [33mLOAD_FAST[0m(2, key_layer) 
308: [33mCALL_FUNCTION[0m(3, 3) 
309: [33mLOAD_CONST[0m(0, ('dim', 'index')) 
310: [33mCALL_FUNCTION_KW[0m(3, 3) 
311: [33mSTORE_FAST[0m(15, p2c_att) 
312: [33mLOAD_FAST[0m(8, score) 
313: [33mLOAD_FAST[0m(15, p2c_att) 
314: [33mINPLACE_ADD[0m(None, None) 
315: [33mSTORE_FAST[0m(8, score) 
316: [33mLOAD_FAST[0m(8, score) 
317: [32mEXTENDED_ARG[0m(2, 2) 
318: [32mJUMP_ABSOLUTE[0m(666, 666)  -> inst 333
319: [32mLOAD_GLOBAL[0m(30, guard_match) 
320: [32mLOAD_CONST[0m(13, 13) 
321: [32mLOAD_CONST[0m(2, 0) 
322: [32mLOAD_GLOBAL[0m(32, locals) 
323: [32mCALL_FUNCTION[0m(0, 0) 
324: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
325: [32mUNPACK_SEQUENCE[0m(2, 2) 
326: [32mSTORE_FAST[0m(18, __case_idx) 
327: [32mSTORE_FAST[0m(17, __graph_fn) 
328: [32mLOAD_GLOBAL[0m(28, enable_trace) 
329: [32mLOAD_CONST[0m(13, 13) 
330: [32mCALL_FUNCTION[0m(1, 1) 
331: [32mPOP_TOP[0m(None, None) 
332: [32mJUMP_ABSOLUTE[0m(12, 12)  -> inst 6
333: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:691
tracing opcode LOAD_GLOBAL None pc=0 frame=13(0x7493ce0)
push tracker due to record
push tracker 13 frame 0x7493ce0 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=13(0x7493ce0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=13(0x7493ce0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
enable_trace
push tracker 13 frame 0x7493ce0 frame_id 13 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13]
tracing opcode POP_TOP None pc=662 frame=13(0x7493ce0)
restart: running injected code (f_lasti=662)
tracing opcode JUMP_ABSOLUTE None pc=664 frame=13(0x7493ce0)
restart: running injected code (f_lasti=664)
tracing line /home/drc/frontend/test/test_model_deberta.py:692
tracing opcode LOAD_FAST None pc=12 frame=13(0x7493ce0)
load fast: 22897516734000
tracing opcode LOAD_CONST None pc=14 frame=13(0x7493ce0)
tracing opcode IS_OP None pc=16 frame=13(0x7493ce0)
tracing opcode POP_JUMP_IF_FALSE None pc=18 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:695
tracing opcode LOAD_FAST None pc=50 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=52 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=54 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=56 frame=13(0x7493ce0)
tracing opcode COMPARE_OP None pc=58 frame=13(0x7493ce0)
tracing opcode POP_JUMP_IF_FALSE None pc=60 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:697
tracing opcode LOAD_FAST None pc=80 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=82 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=84 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=86 frame=13(0x7493ce0)
tracing opcode COMPARE_OP None pc=88 frame=13(0x7493ce0)
tracing opcode POP_JUMP_IF_FALSE None pc=90 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:698
tracing opcode LOAD_FAST None pc=92 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=94 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=96 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=98 frame=13(0x7493ce0)
fetch:  1 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=100 frame=13(0x7493ce0)
tracing opcode JUMP_FORWARD None pc=102 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:703
tracing opcode LOAD_GLOBAL None pc=134 frame=13(0x7493ce0)
tracing opcode LOAD_GLOBAL None pc=136 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=138 frame=13(0x7493ce0)
load fast: 22896482507968
tracing opcode LOAD_METHOD None pc=140 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=142 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=144 frame=13(0x7493ce0)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=146 frame=13(0x7493ce0)
load fast: 22896587968080
tracing opcode LOAD_METHOD None pc=148 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=150 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=152 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION None pc=154 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=156 frame=13(0x7493ce0)
load fast: 22897554035664
tracing opcode LOAD_ATTR None pc=158 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION None pc=160 frame=13(0x7493ce0)
tracing opcode STORE_FAST None pc=162 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:704
tracing opcode LOAD_FAST None pc=164 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=166 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=168 frame=13(0x7493ce0)
record function in graph <method 'long' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=170 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=172 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=174 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=176 frame=13(0x7493ce0)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=178 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode LOAD_FAST None pc=180 frame=13(0x7493ce0)
load fast: 22897696732720
tracing line /home/drc/frontend/test/test_model_deberta.py:706
tracing opcode LOAD_FAST None pc=182 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=184 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=186 frame=13(0x7493ce0)
tracing opcode BINARY_SUBTRACT None pc=188 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=190 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=192 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=194 frame=13(0x7493ce0)
tracing opcode BINARY_ADD None pc=196 frame=13(0x7493ce0)
tracing opcode BUILD_SLICE None pc=198 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=200 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=202 frame=13(0x7493ce0)
tracing opcode BUILD_SLICE None pc=204 frame=13(0x7493ce0)
tracing opcode BUILD_TUPLE None pc=206 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode BINARY_SUBSCR None pc=208 frame=13(0x7493ce0)
record function in graph <built-in function getitem>
tracing opcode LOAD_METHOD None pc=210 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:707
tracing opcode LOAD_CONST None pc=212 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:705
tracing opcode CALL_METHOD None pc=214 frame=13(0x7493ce0)
fetch:  0 <class 'int'>
record function in graph <method 'unsqueeze' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=216 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:709
tracing opcode LOAD_CONST None pc=218 frame=13(0x7493ce0)
tracing opcode STORE_FAST None pc=220 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:712
tracing opcode LOAD_CONST None pc=222 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=224 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=226 frame=13(0x7493ce0)
tracing opcode CONTAINS_OP None pc=228 frame=13(0x7493ce0)
tracing opcode EXTENDED_ARG None pc=230 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:713
tracing opcode LOAD_FAST None pc=234 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=236 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=238 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=240 frame=13(0x7493ce0)
record function in graph Linear(in_features=768, out_features=768, bias=False)
tracing opcode STORE_FAST None pc=242 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:714
tracing opcode LOAD_FAST None pc=244 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=246 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=248 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=250 frame=13(0x7493ce0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x2529a190)
push tracker due to record
push tracker 12 frame 0x2529a190 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x2529a190)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x2529a190)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x2529a190 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x2529a190)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x2529a190)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x2529a190)
load fast: 22896481768768
tracing opcode LOAD_METHOD None pc=12 frame=12(0x2529a190)
tracing opcode CALL_METHOD None pc=14 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=16 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=18 frame=12(0x2529a190)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x2529a190)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x2529a190)
tracing opcode LOAD_FAST None pc=24 frame=12(0x2529a190)
load fast: 22897554035664
tracing opcode LOAD_ATTR None pc=26 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=28 frame=12(0x2529a190)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x2529a190)
tracing opcode BINARY_ADD None pc=32 frame=12(0x2529a190)
tracing opcode STORE_FAST None pc=34 frame=12(0x2529a190)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x2529a190)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x2529a190)
tracing opcode LOAD_FAST None pc=40 frame=12(0x2529a190)
tracing opcode CALL_METHOD None pc=42 frame=12(0x2529a190)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x2529a190)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x2529a190)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=50 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=52 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=54 frame=12(0x2529a190)
tracing opcode LOAD_CONST None pc=56 frame=12(0x2529a190)
tracing opcode CALL_METHOD None pc=58 frame=12(0x2529a190)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x2529a190)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_403 : [#users=1] = placeholder[target=tensor_403]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_403, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x2529a190)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=252 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:715
tracing opcode LOAD_GLOBAL None pc=254 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=256 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=258 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=260 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=262 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=264 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=266 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=268 frame=13(0x7493ce0)
fetch:  -1 <class 'int'>
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode CALL_METHOD None pc=270 frame=13(0x7493ce0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=272 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:716
tracing opcode LOAD_GLOBAL None pc=274 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=276 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=278 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=280 frame=13(0x7493ce0)
tracing opcode BINARY_ADD None pc=282 frame=13(0x7493ce0)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=284 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=286 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=288 frame=13(0x7493ce0)
tracing opcode BINARY_MULTIPLY None pc=290 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=292 frame=13(0x7493ce0)
tracing opcode BINARY_SUBTRACT None pc=294 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=296 frame=13(0x7493ce0)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=298 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:717
tracing opcode LOAD_GLOBAL None pc=300 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=302 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=304 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=306 frame=13(0x7493ce0)
tracing opcode LOAD_GLOBAL None pc=308 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=310 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=312 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=314 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION None pc=316 frame=13(0x7493ce0)
run into user defined function <function c2p_dynamic_expand at 0x14d344d15b80>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 14 0x6d1a950 c2p_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(1, query_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, 2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, relative_pos) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(4, -1) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 14)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(5, 14) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(4, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(1, query_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, 2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, relative_pos) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(3, -1) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(5, 14) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(5, 14) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_GLOBAL None pc=0 frame=14(0x24f81fc0)
push tracker due to record
push tracker 14 frame 0x24f81fc0 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=14(0x24f81fc0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=14(0x24f81fc0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
enable_trace
push tracker 14 frame 0x24f81fc0 frame_id 14 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 14]
tracing opcode POP_TOP None pc=76 frame=14(0x24f81fc0)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=14(0x24f81fc0)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:534
tracing opcode LOAD_FAST None pc=10 frame=14(0x24f81fc0)
load fast: 22896482293936
tracing opcode LOAD_METHOD None pc=12 frame=14(0x24f81fc0)
tracing opcode LOAD_FAST None pc=14 frame=14(0x24f81fc0)
load fast: 22896482507968
tracing opcode LOAD_METHOD None pc=16 frame=14(0x24f81fc0)
tracing opcode LOAD_CONST None pc=18 frame=14(0x24f81fc0)
tracing opcode CALL_METHOD None pc=20 frame=14(0x24f81fc0)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=14(0x24f81fc0)
tracing opcode LOAD_METHOD None pc=24 frame=14(0x24f81fc0)
tracing opcode LOAD_CONST None pc=26 frame=14(0x24f81fc0)
tracing opcode CALL_METHOD None pc=28 frame=14(0x24f81fc0)
tracing opcode LOAD_FAST None pc=30 frame=14(0x24f81fc0)
tracing opcode LOAD_METHOD None pc=32 frame=14(0x24f81fc0)
tracing opcode LOAD_CONST None pc=34 frame=14(0x24f81fc0)
tracing opcode CALL_METHOD None pc=36 frame=14(0x24f81fc0)
fetch:  2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=14(0x24f81fc0)
load fast: 22896482199248
tracing opcode LOAD_METHOD None pc=40 frame=14(0x24f81fc0)
tracing opcode LOAD_CONST None pc=42 frame=14(0x24f81fc0)
tracing opcode CALL_METHOD None pc=44 frame=14(0x24f81fc0)
fetch:  -1 <class 'int'>
tracing opcode BUILD_LIST None pc=46 frame=14(0x24f81fc0)
tracing opcode CALL_METHOD None pc=48 frame=14(0x24f81fc0)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=14(0x24f81fc0)
restart: running injected code (f_lasti=50)
commiting 14 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_404 : [#users=1] = placeholder[target=tensor_404]
    %tensor_405 : [#users=0] = placeholder[target=tensor_405]
    %tensor_406 : [#users=0] = placeholder[target=tensor_406]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_404, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=14(0x24f81fc0)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 14] frame_id 14
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode LOAD_CONST None pc=318 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION_KW None pc=320 frame=13(0x7493ce0)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=322 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:718
tracing opcode LOAD_FAST None pc=324 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=326 frame=13(0x7493ce0)
tracing opcode INPLACE_ADD None pc=328 frame=13(0x7493ce0)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=330 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:721
tracing opcode LOAD_CONST None pc=332 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=334 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=336 frame=13(0x7493ce0)
tracing opcode CONTAINS_OP None pc=338 frame=13(0x7493ce0)
tracing opcode EXTENDED_ARG None pc=340 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:722
tracing opcode LOAD_FAST None pc=344 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=346 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=348 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=350 frame=13(0x7493ce0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=352 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:723
tracing opcode LOAD_FAST None pc=354 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=356 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=358 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=360 frame=13(0x7493ce0)
run into user defined function <bound method DisentangledSelfAttention.transpose_for_scores of DisentangledSelfAttention(
  (in_proj): Linear(in_features=768, out_features=2304, bias=False)
  (pos_dropout): StableDropout()
  (pos_proj): Linear(in_features=768, out_features=768, bias=False)
  (pos_q_proj): Linear(in_features=768, out_features=768, bias=True)
  (dropout): StableDropout()
)>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 12 0x6d3e640 transpose_for_scores
0: [33mLOAD_FAST[0m(1, x) 
1: [33mLOAD_METHOD[0m(0, size) 
2: [33mCALL_METHOD[0m(0, 0) 
3: [33mLOAD_CONST[0m(0, None) 
4: [33mLOAD_CONST[0m(1, -1) 
5: [33mBUILD_SLICE[0m(2, 2) 
6: [33mBINARY_SUBSCR[0m(None, None) 
7: [33mLOAD_FAST[0m(0, self) 
8: [33mLOAD_ATTR[0m(1, num_attention_heads) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mBUILD_TUPLE[0m(2, 2) 
11: [33mBINARY_ADD[0m(None, None) 
12: [33mSTORE_FAST[0m(2, new_x_shape) 
13: [33mLOAD_FAST[0m(1, x) 
14: [33mLOAD_METHOD[0m(2, view) 
15: [33mLOAD_FAST[0m(2, new_x_shape) 
16: [33mCALL_METHOD[0m(1, 1) 
17: [33mSTORE_FAST[0m(1, x) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(3, permute) 
20: [33mLOAD_CONST[0m(2, 0) 
21: [33mLOAD_CONST[0m(3, 2) 
22: [33mLOAD_CONST[0m(4, 1) 
23: [33mLOAD_CONST[0m(5, 3) 
24: [33mCALL_METHOD[0m(4, 4) 
25: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 3), (<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'int'>, -1), (<class 'int'>, 1), (<class 'int'>, 12)]
guarded code
0: [32mLOAD_GLOBAL[0m(8, disable_trace) 
1: [32mLOAD_CONST[0m(6, 12) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
5: [33mLOAD_FAST[0m(1, x) 
6: [33mLOAD_METHOD[0m(0, size) 
7: [33mCALL_METHOD[0m(0, 0) 
8: [33mLOAD_CONST[0m(2, None) 
9: [33mLOAD_CONST[0m(4, -1) 
10: [33mBUILD_SLICE[0m(2, 2) 
11: [33mBINARY_SUBSCR[0m(None, None) 
12: [33mLOAD_FAST[0m(0, self) 
13: [33mLOAD_ATTR[0m(1, num_attention_heads) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mBUILD_TUPLE[0m(2, 2) 
16: [33mBINARY_ADD[0m(None, None) 
17: [33mSTORE_FAST[0m(2, new_x_shape) 
18: [33mLOAD_FAST[0m(1, x) 
19: [33mLOAD_METHOD[0m(2, view) 
20: [33mLOAD_FAST[0m(2, new_x_shape) 
21: [33mCALL_METHOD[0m(1, 1) 
22: [33mSTORE_FAST[0m(1, x) 
23: [33mLOAD_FAST[0m(1, x) 
24: [33mLOAD_METHOD[0m(3, permute) 
25: [33mLOAD_CONST[0m(1, 0) 
26: [33mLOAD_CONST[0m(3, 2) 
27: [33mLOAD_CONST[0m(5, 1) 
28: [33mLOAD_CONST[0m(0, 3) 
29: [33mCALL_METHOD[0m(4, 4) 
30: [32mJUMP_ABSOLUTE[0m(90, 90)  -> inst 45
31: [32mLOAD_GLOBAL[0m(7, guard_match) 
32: [32mLOAD_CONST[0m(6, 12) 
33: [32mLOAD_CONST[0m(1, 0) 
34: [32mLOAD_GLOBAL[0m(9, locals) 
35: [32mCALL_FUNCTION[0m(0, 0) 
36: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
37: [32mUNPACK_SEQUENCE[0m(2, 2) 
38: [32mSTORE_FAST[0m(4, __case_idx) 
39: [32mSTORE_FAST[0m(3, __graph_fn) 
40: [32mLOAD_GLOBAL[0m(5, enable_trace) 
41: [32mLOAD_CONST[0m(6, 12) 
42: [32mCALL_FUNCTION[0m(1, 1) 
43: [32mPOP_TOP[0m(None, None) 
44: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
45: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:594
tracing opcode LOAD_GLOBAL None pc=0 frame=12(0x24f827b0)
push tracker due to record
push tracker 12 frame 0x24f827b0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=12(0x24f827b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=12(0x24f827b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
enable_trace
push tracker 12 frame 0x24f827b0 frame_id 12 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 12]
tracing opcode POP_TOP None pc=86 frame=12(0x24f827b0)
restart: running injected code (f_lasti=86)
tracing opcode JUMP_ABSOLUTE None pc=88 frame=12(0x24f827b0)
restart: running injected code (f_lasti=88)
tracing line /home/drc/frontend/test/test_model_deberta.py:595
tracing opcode LOAD_FAST None pc=10 frame=12(0x24f827b0)
load fast: 22896481838720
tracing opcode LOAD_METHOD None pc=12 frame=12(0x24f827b0)
tracing opcode CALL_METHOD None pc=14 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=16 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=18 frame=12(0x24f827b0)
tracing opcode BUILD_SLICE None pc=20 frame=12(0x24f827b0)
tracing opcode BINARY_SUBSCR None pc=22 frame=12(0x24f827b0)
tracing opcode LOAD_FAST None pc=24 frame=12(0x24f827b0)
load fast: 22897554035664
tracing opcode LOAD_ATTR None pc=26 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=28 frame=12(0x24f827b0)
tracing opcode BUILD_TUPLE None pc=30 frame=12(0x24f827b0)
tracing opcode BINARY_ADD None pc=32 frame=12(0x24f827b0)
tracing opcode STORE_FAST None pc=34 frame=12(0x24f827b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:596
tracing opcode LOAD_FAST None pc=36 frame=12(0x24f827b0)
tracing opcode LOAD_METHOD None pc=38 frame=12(0x24f827b0)
tracing opcode LOAD_FAST None pc=40 frame=12(0x24f827b0)
tracing opcode CALL_METHOD None pc=42 frame=12(0x24f827b0)
fetch:  torch.Size([1, 512, 12, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=44 frame=12(0x24f827b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:597
tracing opcode LOAD_FAST None pc=46 frame=12(0x24f827b0)
tracing opcode LOAD_METHOD None pc=48 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=50 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=52 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=54 frame=12(0x24f827b0)
tracing opcode LOAD_CONST None pc=56 frame=12(0x24f827b0)
tracing opcode CALL_METHOD None pc=58 frame=12(0x24f827b0)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  3 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=60 frame=12(0x24f827b0)
restart: running injected code (f_lasti=60)
commiting 12 0 25 [32mRETURN_VALUE[0m(None, None)  60
callee is full graph, merge to caller
to merge graph graph():
    %tensor_407 : [#users=1] = placeholder[target=tensor_407]
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%tensor_407, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=0] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
tracing opcode RETURN_VALUE None pc=90 frame=12(0x24f827b0)
restart: running injected code (f_lasti=90)
before pop_tracker [0, 4, 9, 10, 11, 13, 12] frame_id 12
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=362 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:724
tracing opcode LOAD_FAST None pc=364 frame=13(0x7493ce0)
tracing opcode LOAD_GLOBAL None pc=366 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=368 frame=13(0x7493ce0)
tracing opcode LOAD_GLOBAL None pc=370 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=372 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=374 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=376 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=378 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=380 frame=13(0x7493ce0)
tracing opcode LOAD_GLOBAL None pc=382 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=384 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=386 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION_KW None pc=388 frame=13(0x7493ce0)
record function in graph <built-in method tensor of type object at 0x14d3c6aa4880>
tracing opcode LOAD_FAST None pc=390 frame=13(0x7493ce0)
tracing opcode BINARY_MULTIPLY None pc=392 frame=13(0x7493ce0)
record function in graph <built-in function mul>
tracing opcode CALL_METHOD None pc=394 frame=13(0x7493ce0)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode INPLACE_TRUE_DIVIDE None pc=396 frame=13(0x7493ce0)
record function in graph <built-in function itruediv>
tracing opcode STORE_FAST None pc=398 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:725
tracing opcode LOAD_FAST None pc=400 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=402 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=404 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=406 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=408 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=410 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=412 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=414 frame=13(0x7493ce0)
tracing opcode COMPARE_OP None pc=416 frame=13(0x7493ce0)
tracing opcode EXTENDED_ARG None pc=418 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:728
tracing opcode LOAD_FAST None pc=450 frame=13(0x7493ce0)
tracing opcode STORE_FAST None pc=452 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:729
tracing opcode LOAD_GLOBAL None pc=454 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=456 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=458 frame=13(0x7493ce0)
tracing opcode UNARY_NEGATIVE None pc=460 frame=13(0x7493ce0)
record function in graph <built-in function neg>
tracing opcode LOAD_FAST None pc=462 frame=13(0x7493ce0)
tracing opcode BINARY_ADD None pc=464 frame=13(0x7493ce0)
record function in graph <built-in function add>
tracing opcode LOAD_CONST None pc=466 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=468 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=470 frame=13(0x7493ce0)
tracing opcode BINARY_MULTIPLY None pc=472 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=474 frame=13(0x7493ce0)
tracing opcode BINARY_SUBTRACT None pc=476 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=478 frame=13(0x7493ce0)
fetch:  511 <class 'int'>
record function in graph <built-in method clamp of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=480 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:730
tracing opcode LOAD_GLOBAL None pc=482 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=484 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=486 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=488 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=490 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=492 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=494 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=496 frame=13(0x7493ce0)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=498 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=500 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=502 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=504 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION_KW None pc=506 frame=13(0x7493ce0)
record function in graph <built-in method to of Tensor object at 0x14d300abb090>
func self id: 22896481906832
tracing opcode CALL_METHOD None pc=508 frame=13(0x7493ce0)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=510 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_GLOBAL None pc=512 frame=13(0x7493ce0)
tracing opcode LOAD_ATTR None pc=514 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:732
tracing opcode LOAD_FAST None pc=516 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=518 frame=13(0x7493ce0)
tracing opcode LOAD_GLOBAL None pc=520 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=522 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=524 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=526 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION None pc=528 frame=13(0x7493ce0)
run into user defined function <function p2c_dynamic_expand at 0x14d344d15c10>
preprocess frame /home/drc/frontend/test/test_model_deberta.py 15 0x14d3407f7640 p2c_dynamic_expand
0: [33mLOAD_FAST[0m(0, c2p_pos) 
1: [33mLOAD_METHOD[0m(0, expand) 
2: [33mLOAD_FAST[0m(1, query_layer) 
3: [33mLOAD_METHOD[0m(1, size) 
4: [33mLOAD_CONST[0m(1, 0) 
5: [33mCALL_METHOD[0m(1, 1) 
6: [33mLOAD_FAST[0m(1, query_layer) 
7: [33mLOAD_METHOD[0m(1, size) 
8: [33mLOAD_CONST[0m(2, 1) 
9: [33mCALL_METHOD[0m(1, 1) 
10: [33mLOAD_FAST[0m(2, key_layer) 
11: [33mLOAD_METHOD[0m(1, size) 
12: [33mLOAD_CONST[0m(3, -2) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mLOAD_FAST[0m(2, key_layer) 
15: [33mLOAD_METHOD[0m(1, size) 
16: [33mLOAD_CONST[0m(3, -2) 
17: [33mCALL_METHOD[0m(1, 1) 
18: [33mBUILD_LIST[0m(4, 4) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'int'>, 0), (<class 'NoneType'>, None), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'int'>, 15)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(4, 15) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(52, 52)  -> inst 26
5: [33mLOAD_FAST[0m(0, c2p_pos) 
6: [33mLOAD_METHOD[0m(0, expand) 
7: [33mLOAD_FAST[0m(1, query_layer) 
8: [33mLOAD_METHOD[0m(1, size) 
9: [33mLOAD_CONST[0m(0, 0) 
10: [33mCALL_METHOD[0m(1, 1) 
11: [33mLOAD_FAST[0m(1, query_layer) 
12: [33mLOAD_METHOD[0m(1, size) 
13: [33mLOAD_CONST[0m(3, 1) 
14: [33mCALL_METHOD[0m(1, 1) 
15: [33mLOAD_FAST[0m(2, key_layer) 
16: [33mLOAD_METHOD[0m(1, size) 
17: [33mLOAD_CONST[0m(2, -2) 
18: [33mCALL_METHOD[0m(1, 1) 
19: [33mLOAD_FAST[0m(2, key_layer) 
20: [33mLOAD_METHOD[0m(1, size) 
21: [33mLOAD_CONST[0m(2, -2) 
22: [33mCALL_METHOD[0m(1, 1) 
23: [33mBUILD_LIST[0m(4, 4) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [32mJUMP_ABSOLUTE[0m(80, 80)  -> inst 40
26: [32mLOAD_GLOBAL[0m(5, guard_match) 
27: [32mLOAD_CONST[0m(4, 15) 
28: [32mLOAD_CONST[0m(0, 0) 
29: [32mLOAD_GLOBAL[0m(7, locals) 
30: [32mCALL_FUNCTION[0m(0, 0) 
31: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
32: [32mUNPACK_SEQUENCE[0m(2, 2) 
33: [32mSTORE_FAST[0m(4, __case_idx) 
34: [32mSTORE_FAST[0m(3, __graph_fn) 
35: [32mLOAD_GLOBAL[0m(3, enable_trace) 
36: [32mLOAD_CONST[0m(4, 15) 
37: [32mCALL_FUNCTION[0m(1, 1) 
38: [32mPOP_TOP[0m(None, None) 
39: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
40: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_GLOBAL None pc=0 frame=15(0x24f8e570)
push tracker due to record
push tracker 15 frame 0x24f8e570 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=15(0x24f8e570)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=15(0x24f8e570)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
enable_trace
push tracker 15 frame 0x24f8e570 frame_id 15 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 13, 15]
tracing opcode POP_TOP None pc=76 frame=15(0x24f8e570)
restart: running injected code (f_lasti=76)
tracing opcode JUMP_ABSOLUTE None pc=78 frame=15(0x24f8e570)
restart: running injected code (f_lasti=78)
tracing line /home/drc/frontend/test/test_model_deberta.py:539
tracing opcode LOAD_FAST None pc=10 frame=15(0x24f8e570)
load fast: 22896481907312
tracing opcode LOAD_METHOD None pc=12 frame=15(0x24f8e570)
tracing opcode LOAD_FAST None pc=14 frame=15(0x24f8e570)
load fast: 22896482507968
tracing opcode LOAD_METHOD None pc=16 frame=15(0x24f8e570)
tracing opcode LOAD_CONST None pc=18 frame=15(0x24f8e570)
tracing opcode CALL_METHOD None pc=20 frame=15(0x24f8e570)
fetch:  0 <class 'int'>
tracing opcode LOAD_FAST None pc=22 frame=15(0x24f8e570)
tracing opcode LOAD_METHOD None pc=24 frame=15(0x24f8e570)
tracing opcode LOAD_CONST None pc=26 frame=15(0x24f8e570)
tracing opcode CALL_METHOD None pc=28 frame=15(0x24f8e570)
tracing opcode LOAD_FAST None pc=30 frame=15(0x24f8e570)
load fast: 22896587968080
tracing opcode LOAD_METHOD None pc=32 frame=15(0x24f8e570)
tracing opcode LOAD_CONST None pc=34 frame=15(0x24f8e570)
tracing opcode CALL_METHOD None pc=36 frame=15(0x24f8e570)
fetch:  -2 <class 'int'>
tracing opcode LOAD_FAST None pc=38 frame=15(0x24f8e570)
tracing opcode LOAD_METHOD None pc=40 frame=15(0x24f8e570)
tracing opcode LOAD_CONST None pc=42 frame=15(0x24f8e570)
tracing opcode CALL_METHOD None pc=44 frame=15(0x24f8e570)
tracing opcode BUILD_LIST None pc=46 frame=15(0x24f8e570)
tracing opcode CALL_METHOD None pc=48 frame=15(0x24f8e570)
fetch:  [1, 12, 256, 256] <class 'list'>
record function in graph <method 'expand' of 'torch._C._TensorBase' objects>
tracing opcode JUMP_ABSOLUTE None pc=50 frame=15(0x24f8e570)
restart: running injected code (f_lasti=50)
commiting 15 0 20 [32mRETURN_VALUE[0m(None, None)  50
callee is full graph, merge to caller
to merge graph graph():
    %tensor_408 : [#users=1] = placeholder[target=tensor_408]
    %tensor_409 : [#users=0] = placeholder[target=tensor_409]
    %tensor_410 : [#users=0] = placeholder[target=tensor_410]
    %expand : [#users=0] = call_function[target=torch.Tensor.expand](args = (%tensor_408, [1, 12, 256, 256]), kwargs = {})
tracing opcode RETURN_VALUE None pc=80 frame=15(0x24f8e570)
restart: running injected code (f_lasti=80)
before pop_tracker [0, 4, 9, 10, 11, 13, 15] frame_id 15
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode LOAD_CONST None pc=530 frame=13(0x7493ce0)
tracing opcode CALL_FUNCTION_KW None pc=532 frame=13(0x7493ce0)
record function in graph <built-in method gather of type object at 0x14d3c6aa4880>
tracing opcode LOAD_METHOD None pc=534 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:733
tracing opcode LOAD_CONST None pc=536 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=538 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:731
tracing opcode CALL_METHOD None pc=540 frame=13(0x7493ce0)
record function in graph <method 'transpose' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=542 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:735
tracing opcode LOAD_FAST None pc=544 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=546 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=548 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=550 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=552 frame=13(0x7493ce0)
tracing opcode LOAD_METHOD None pc=554 frame=13(0x7493ce0)
tracing opcode LOAD_CONST None pc=556 frame=13(0x7493ce0)
tracing opcode CALL_METHOD None pc=558 frame=13(0x7493ce0)
tracing opcode COMPARE_OP None pc=560 frame=13(0x7493ce0)
tracing opcode EXTENDED_ARG None pc=562 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:738
tracing opcode LOAD_FAST None pc=624 frame=13(0x7493ce0)
tracing opcode LOAD_FAST None pc=626 frame=13(0x7493ce0)
tracing opcode INPLACE_ADD None pc=628 frame=13(0x7493ce0)
record function in graph <built-in function iadd>
tracing opcode STORE_FAST None pc=630 frame=13(0x7493ce0)
tracing line /home/drc/frontend/test/test_model_deberta.py:740
tracing opcode LOAD_FAST None pc=632 frame=13(0x7493ce0)
tracing opcode EXTENDED_ARG None pc=634 frame=13(0x7493ce0)
restart: running injected code (f_lasti=634)
commiting 13 0 311 [32mRETURN_VALUE[0m(None, None)  634
callee is full graph, merge to caller
to merge graph graph():
    %tensor_400 : [#users=1] = placeholder[target=tensor_400]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_400, 1), kwargs = {})
    %tensor_401 : [#users=1] = placeholder[target=tensor_401]
    %tensor_402 : [#users=1] = placeholder[target=tensor_402]
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%tensor_401, %transpose), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_1, %sqrt), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_1, 0, 511), kwargs = {})
    %transpose_1 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_1 : [#users=0] = call_method[target=to](args = (%transpose_1,), kwargs = {dtype: torch.float32})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%tensor_402, %transpose_1), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand_1})
    %transpose_2 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=0] = call_function[target=operator.iadd](args = (%iadd, %transpose_2), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDeviceVar(need_guard_check=True, extract_code_at_start=[locals['query_layer'].device], extract_code_hashs={4025797905663194187}, obj=device(type='cpu'), modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=666 frame=13(0x7493ce0)
restart: running injected code (f_lasti=666)
before pop_tracker [0, 4, 9, 10, 11, 13] frame_id 13
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=404 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:669
tracing opcode LOAD_FAST None pc=406 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=408 frame=11(0x24f94b80)
tracing opcode IS_OP None pc=410 frame=11(0x24f94b80)
tracing opcode EXTENDED_ARG None pc=412 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:670
tracing opcode LOAD_FAST None pc=416 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=418 frame=11(0x24f94b80)
tracing opcode BINARY_ADD None pc=420 frame=11(0x24f94b80)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=422 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:673
tracing opcode LOAD_DEREF None pc=424 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=426 frame=11(0x24f94b80)
tracing opcode EXTENDED_ARG None pc=428 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:676
tracing opcode LOAD_GLOBAL None pc=466 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=468 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=470 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=472 frame=11(0x24f94b80)
load fast: 22897516328976
tracing opcode LOAD_CONST None pc=474 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=476 frame=11(0x24f94b80)
record function in graph <bound method Function.apply of <class '__main__.XSoftmax'>>
tracing opcode STORE_FAST None pc=478 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:678
tracing opcode LOAD_DEREF None pc=480 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=482 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=484 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=486 frame=11(0x24f94b80)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e40d640)
push tracker due to record
push tracker 3 frame 0x14d33e40d640 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e40d640)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e40d640)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e40d640 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 11, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e40d640)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e40d640)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e40d640)
load fast: 22897554035904
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e40d640)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e40d640)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e40d640)
load fast: 22896481910192
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e40d640)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_412 : [#users=0] = placeholder[target=tensor_412]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[[0.0052, 0.0046, 0.0043,  ..., 0.0029, 0.0039, 0.0037],
          [0.0040, 0.0047, 0.0032,  ..., 0.0030, 0.0040, 0.0039],
          [0.0031, 0.0041, 0.0048,  ..., 0.0037, 0.0037, 0.0046],
          ...,
          [0.0057, 0.0031, 0.0034,  ..., 0.0036, 0.0033, 0.0032],
          [0.0040, 0.0050, 0.0032,  ..., 0.0037, 0.0045, 0.0029],
          [0.0043, 0.0039, 0.0047,  ..., 0.0042, 0.0035, 0.0036]],

         [[0.0045, 0.0038, 0.0039,  ..., 0.0032, 0.0038, 0.0043],
          [0.0042, 0.0040, 0.0039,  ..., 0.0037, 0.0047, 0.0038],
          [0.0040, 0.0035, 0.0036,  ..., 0.0042, 0.0039, 0.0042],
          ...,
          [0.0042, 0.0036, 0.0036,  ..., 0.0040, 0.0039, 0.0045],
          [0.0041, 0.0040, 0.0044,  ..., 0.0039, 0.0039, 0.0041],
          [0.0040, 0.0041, 0.0045,  ..., 0.0046, 0.0045, 0.0044]],

         [[0.0043, 0.0034, 0.0037,  ..., 0.0042, 0.0039, 0.0051],
          [0.0045, 0.0031, 0.0039,  ..., 0.0041, 0.0037, 0.0033],
          [0.0031, 0.0041, 0.0048,  ..., 0.0033, 0.0036, 0.0034],
          ...,
          [0.0032, 0.0032, 0.0052,  ..., 0.0036, 0.0038, 0.0037],
          [0.0041, 0.0038, 0.0042,  ..., 0.0032, 0.0032, 0.0033],
          [0.0033, 0.0043, 0.0044,  ..., 0.0038, 0.0044, 0.0039]],

         ...,

         [[0.0039, 0.0056, 0.0031,  ..., 0.0034, 0.0034, 0.0036],
          [0.0033, 0.0033, 0.0040,  ..., 0.0045, 0.0037, 0.0037],
          [0.0038, 0.0045, 0.0040,  ..., 0.0036, 0.0038, 0.0031],
          ...,
          [0.0038, 0.0026, 0.0038,  ..., 0.0031, 0.0037, 0.0047],
          [0.0036, 0.0030, 0.0038,  ..., 0.0039, 0.0035, 0.0036],
          [0.0037, 0.0048, 0.0036,  ..., 0.0039, 0.0041, 0.0041]],

         [[0.0041, 0.0031, 0.0044,  ..., 0.0043, 0.0040, 0.0046],
          [0.0032, 0.0036, 0.0034,  ..., 0.0038, 0.0037, 0.0037],
          [0.0050, 0.0041, 0.0026,  ..., 0.0039, 0.0040, 0.0034],
          ...,
          [0.0044, 0.0027, 0.0043,  ..., 0.0034, 0.0032, 0.0047],
          [0.0031, 0.0030, 0.0040,  ..., 0.0043, 0.0040, 0.0054],
          [0.0033, 0.0023, 0.0043,  ..., 0.0039, 0.0040, 0.0039]],

         [[0.0035, 0.0040, 0.0031,  ..., 0.0041, 0.0043, 0.0027],
          [0.0040, 0.0037, 0.0044,  ..., 0.0050, 0.0038, 0.0045],
          [0.0032, 0.0046, 0.0039,  ..., 0.0038, 0.0036, 0.0039],
          ...,
          [0.0040, 0.0034, 0.0039,  ..., 0.0049, 0.0033, 0.0035],
          [0.0044, 0.0038, 0.0036,  ..., 0.0029, 0.0035, 0.0034],
          [0.0033, 0.0043, 0.0037,  ..., 0.0040, 0.0029, 0.0043]]]]), modified_attrs={}, prev=None) 22896481694432 22896481910192
obj: tensor([[[[0.0052, 0.0046, 0.0043,  ..., 0.0029, 0.0039, 0.0037],
          [0.0040, 0.0047, 0.0032,  ..., 0.0030, 0.0040, 0.0039],
          [0.0031, 0.0041, 0.0048,  ..., 0.0037, 0.0037, 0.0046],
          ...,
          [0.0057, 0.0031, 0.0034,  ..., 0.0036, 0.0033, 0.0032],
          [0.0040, 0.0050, 0.0032,  ..., 0.0037, 0.0045, 0.0029],
          [0.0043, 0.0039, 0.0047,  ..., 0.0042, 0.0035, 0.0036]],

         [[0.0045, 0.0038, 0.0039,  ..., 0.0032, 0.0038, 0.0043],
          [0.0042, 0.0040, 0.0039,  ..., 0.0037, 0.0047, 0.0038],
          [0.0040, 0.0035, 0.0036,  ..., 0.0042, 0.0039, 0.0042],
          ...,
          [0.0042, 0.0036, 0.0036,  ..., 0.0040, 0.0039, 0.0045],
          [0.0041, 0.0040, 0.0044,  ..., 0.0039, 0.0039, 0.0041],
          [0.0040, 0.0041, 0.0045,  ..., 0.0046, 0.0045, 0.0044]],

         [[0.0043, 0.0034, 0.0037,  ..., 0.0042, 0.0039, 0.0051],
          [0.0045, 0.0031, 0.0039,  ..., 0.0041, 0.0037, 0.0033],
          [0.0031, 0.0041, 0.0048,  ..., 0.0033, 0.0036, 0.0034],
          ...,
          [0.0032, 0.0032, 0.0052,  ..., 0.0036, 0.0038, 0.0037],
          [0.0041, 0.0038, 0.0042,  ..., 0.0032, 0.0032, 0.0033],
          [0.0033, 0.0043, 0.0044,  ..., 0.0038, 0.0044, 0.0039]],

         ...,

         [[0.0039, 0.0056, 0.0031,  ..., 0.0034, 0.0034, 0.0036],
          [0.0033, 0.0033, 0.0040,  ..., 0.0045, 0.0037, 0.0037],
          [0.0038, 0.0045, 0.0040,  ..., 0.0036, 0.0038, 0.0031],
          ...,
          [0.0038, 0.0026, 0.0038,  ..., 0.0031, 0.0037, 0.0047],
          [0.0036, 0.0030, 0.0038,  ..., 0.0039, 0.0035, 0.0036],
          [0.0037, 0.0048, 0.0036,  ..., 0.0039, 0.0041, 0.0041]],

         [[0.0041, 0.0031, 0.0044,  ..., 0.0043, 0.0040, 0.0046],
          [0.0032, 0.0036, 0.0034,  ..., 0.0038, 0.0037, 0.0037],
          [0.0050, 0.0041, 0.0026,  ..., 0.0039, 0.0040, 0.0034],
          ...,
          [0.0044, 0.0027, 0.0043,  ..., 0.0034, 0.0032, 0.0047],
          [0.0031, 0.0030, 0.0040,  ..., 0.0043, 0.0040, 0.0054],
          [0.0033, 0.0023, 0.0043,  ..., 0.0039, 0.0040, 0.0039]],

         [[0.0035, 0.0040, 0.0031,  ..., 0.0041, 0.0043, 0.0027],
          [0.0040, 0.0037, 0.0044,  ..., 0.0050, 0.0038, 0.0045],
          [0.0032, 0.0046, 0.0039,  ..., 0.0038, 0.0036, 0.0039],
          ...,
          [0.0040, 0.0034, 0.0039,  ..., 0.0049, 0.0033, 0.0035],
          [0.0044, 0.0038, 0.0036,  ..., 0.0029, 0.0035, 0.0034],
          [0.0033, 0.0043, 0.0037,  ..., 0.0040, 0.0029, 0.0043]]]]) 22896481910192
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[[0.0052, 0.0046, 0.0043,  ..., 0.0029, 0.0039, 0.0037],
          [0.0040, 0.0047, 0.0032,  ..., 0.0030, 0.0040, 0.0039],
          [0.0031, 0.0041, 0.0048,  ..., 0.0037, 0.0037, 0.0046],
          ...,
          [0.0057, 0.0031, 0.0034,  ..., 0.0036, 0.0033, 0.0032],
          [0.0040, 0.0050, 0.0032,  ..., 0.0037, 0.0045, 0.0029],
          [0.0043, 0.0039, 0.0047,  ..., 0.0042, 0.0035, 0.0036]],

         [[0.0045, 0.0038, 0.0039,  ..., 0.0032, 0.0038, 0.0043],
          [0.0042, 0.0040, 0.0039,  ..., 0.0037, 0.0047, 0.0038],
          [0.0040, 0.0035, 0.0036,  ..., 0.0042, 0.0039, 0.0042],
          ...,
          [0.0042, 0.0036, 0.0036,  ..., 0.0040, 0.0039, 0.0045],
          [0.0041, 0.0040, 0.0044,  ..., 0.0039, 0.0039, 0.0041],
          [0.0040, 0.0041, 0.0045,  ..., 0.0046, 0.0045, 0.0044]],

         [[0.0043, 0.0034, 0.0037,  ..., 0.0042, 0.0039, 0.0051],
          [0.0045, 0.0031, 0.0039,  ..., 0.0041, 0.0037, 0.0033],
          [0.0031, 0.0041, 0.0048,  ..., 0.0033, 0.0036, 0.0034],
          ...,
          [0.0032, 0.0032, 0.0052,  ..., 0.0036, 0.0038, 0.0037],
          [0.0041, 0.0038, 0.0042,  ..., 0.0032, 0.0032, 0.0033],
          [0.0033, 0.0043, 0.0044,  ..., 0.0038, 0.0044, 0.0039]],

         ...,

         [[0.0039, 0.0056, 0.0031,  ..., 0.0034, 0.0034, 0.0036],
          [0.0033, 0.0033, 0.0040,  ..., 0.0045, 0.0037, 0.0037],
          [0.0038, 0.0045, 0.0040,  ..., 0.0036, 0.0038, 0.0031],
          ...,
          [0.0038, 0.0026, 0.0038,  ..., 0.0031, 0.0037, 0.0047],
          [0.0036, 0.0030, 0.0038,  ..., 0.0039, 0.0035, 0.0036],
          [0.0037, 0.0048, 0.0036,  ..., 0.0039, 0.0041, 0.0041]],

         [[0.0041, 0.0031, 0.0044,  ..., 0.0043, 0.0040, 0.0046],
          [0.0032, 0.0036, 0.0034,  ..., 0.0038, 0.0037, 0.0037],
          [0.0050, 0.0041, 0.0026,  ..., 0.0039, 0.0040, 0.0034],
          ...,
          [0.0044, 0.0027, 0.0043,  ..., 0.0034, 0.0032, 0.0047],
          [0.0031, 0.0030, 0.0040,  ..., 0.0043, 0.0040, 0.0054],
          [0.0033, 0.0023, 0.0043,  ..., 0.0039, 0.0040, 0.0039]],

         [[0.0035, 0.0040, 0.0031,  ..., 0.0041, 0.0043, 0.0027],
          [0.0040, 0.0037, 0.0044,  ..., 0.0050, 0.0038, 0.0045],
          [0.0032, 0.0046, 0.0039,  ..., 0.0038, 0.0036, 0.0039],
          ...,
          [0.0040, 0.0034, 0.0039,  ..., 0.0049, 0.0033, 0.0035],
          [0.0044, 0.0038, 0.0036,  ..., 0.0029, 0.0035, 0.0034],
          [0.0033, 0.0043, 0.0037,  ..., 0.0040, 0.0029, 0.0043]]]]), modified_attrs={}, prev=None) 22896481900960
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e40d640)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 11, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=488 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:679
tracing opcode LOAD_DEREF None pc=490 frame=11(0x24f94b80)
tracing opcode LOAD_ATTR None pc=492 frame=11(0x24f94b80)
tracing opcode EXTENDED_ARG None pc=494 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:682
tracing opcode LOAD_GLOBAL None pc=532 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=534 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=536 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=538 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=540 frame=11(0x24f94b80)
record function in graph <built-in method matmul of type object at 0x14d3c6aa4880>
tracing opcode STORE_FAST None pc=542 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:683
tracing opcode LOAD_FAST None pc=544 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=546 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=548 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=550 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=552 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=554 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=556 frame=11(0x24f94b80)
fetch:  0 <class 'int'>
fetch:  2 <class 'int'>
fetch:  1 <class 'int'>
record function in graph <method 'permute' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_METHOD None pc=558 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=560 frame=11(0x24f94b80)
record function in graph <method 'contiguous' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=562 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:684
tracing opcode LOAD_FAST None pc=564 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=566 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=568 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=570 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=572 frame=11(0x24f94b80)
tracing opcode BUILD_SLICE None pc=574 frame=11(0x24f94b80)
tracing opcode BINARY_SUBSCR None pc=576 frame=11(0x24f94b80)
tracing opcode LOAD_CONST None pc=578 frame=11(0x24f94b80)
tracing opcode BINARY_ADD None pc=580 frame=11(0x24f94b80)
tracing opcode STORE_FAST None pc=582 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:685
tracing opcode LOAD_FAST None pc=584 frame=11(0x24f94b80)
tracing opcode LOAD_METHOD None pc=586 frame=11(0x24f94b80)
tracing opcode LOAD_FAST None pc=588 frame=11(0x24f94b80)
tracing opcode CALL_METHOD None pc=590 frame=11(0x24f94b80)
fetch:  torch.Size([1, 256, -1]) <class 'torch.Size'>
record function in graph <method 'view' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=592 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:686
tracing opcode LOAD_FAST None pc=594 frame=11(0x24f94b80)
tracing opcode EXTENDED_ARG None pc=596 frame=11(0x24f94b80)
tracing line /home/drc/frontend/test/test_model_deberta.py:689
tracing opcode LOAD_FAST None pc=610 frame=11(0x24f94b80)
tracing opcode EXTENDED_ARG None pc=612 frame=11(0x24f94b80)
restart: running injected code (f_lasti=612)
commiting 11 0 299 [32mRETURN_VALUE[0m(None, None)  612
callee is full graph, merge to caller
to merge graph graph():
    %tensor_395 : [#users=1] = placeholder[target=tensor_395]
    %in_proj : [#users=1] = call_module[target=in_proj](args = (%tensor_395,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %tensor_399 : [#users=1] = placeholder[target=tensor_399]
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_399, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_400 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_400, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %tensor_411 : [#users=1] = placeholder[target=tensor_411]
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_411, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=0] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
tracing opcode RETURN_VALUE None pc=650 frame=11(0x24f94b80)
restart: running injected code (f_lasti=650)
before pop_tracker [0, 4, 9, 10, 11] frame_id 11
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:322
tracing opcode LOAD_FAST None pc=32 frame=10(0xea854c0)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:324
tracing opcode LOAD_FAST None pc=44 frame=10(0xea854c0)
tracing opcode LOAD_CONST None pc=46 frame=10(0xea854c0)
tracing opcode IS_OP None pc=48 frame=10(0xea854c0)
tracing opcode POP_JUMP_IF_FALSE None pc=50 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:325
tracing opcode LOAD_FAST None pc=52 frame=10(0xea854c0)
tracing opcode STORE_FAST None pc=54 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:326
tracing opcode LOAD_FAST None pc=56 frame=10(0xea854c0)
tracing opcode LOAD_METHOD None pc=58 frame=10(0xea854c0)
tracing opcode LOAD_FAST None pc=60 frame=10(0xea854c0)
tracing opcode LOAD_FAST None pc=62 frame=10(0xea854c0)
tracing opcode CALL_METHOD None pc=64 frame=10(0xea854c0)
run into user defined function DebertaSelfOutput(
  (dense): Linear(in_features=768, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 16 0x14d34086cc40 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 16), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 16) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 16) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 16) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:291
tracing opcode LOAD_GLOBAL None pc=0 frame=16(0x1f33cab0)
push tracker due to record
push tracker 16 frame 0x1f33cab0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=16(0x1f33cab0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=16(0x1f33cab0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
enable_trace
push tracker 16 frame 0x1f33cab0 frame_id 16 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16]
tracing opcode POP_TOP None pc=72 frame=16(0x1f33cab0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=16(0x1f33cab0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:292
tracing opcode LOAD_FAST None pc=10 frame=16(0x1f33cab0)
load fast: 22897554035952
tracing opcode LOAD_METHOD None pc=12 frame=16(0x1f33cab0)
tracing opcode LOAD_FAST None pc=14 frame=16(0x1f33cab0)
load fast: 22896481735840
tracing opcode CALL_METHOD None pc=16 frame=16(0x1f33cab0)
record function in graph Linear(in_features=768, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=16(0x1f33cab0)
tracing line /home/drc/frontend/test/test_model_deberta.py:293
tracing opcode LOAD_FAST None pc=20 frame=16(0x1f33cab0)
tracing opcode LOAD_METHOD None pc=22 frame=16(0x1f33cab0)
tracing opcode LOAD_FAST None pc=24 frame=16(0x1f33cab0)
tracing opcode CALL_METHOD None pc=26 frame=16(0x1f33cab0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x222dde60)
push tracker due to record
push tracker 3 frame 0x222dde60 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x222dde60)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x222dde60)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
enable_trace
push tracker 3 frame 0x222dde60 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x222dde60)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x222dde60)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x222dde60)
load fast: 22897554036096
tracing opcode LOAD_ATTR None pc=12 frame=3(0x222dde60)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x222dde60)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x222dde60)
load fast: 22896481496896
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x222dde60)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_414 : [#users=0] = placeholder[target=tensor_414]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[-0.0023,  0.0506, -0.1633,  ...,  0.1627,  0.0032, -0.0366],
         [-0.0014,  0.0550, -0.1629,  ...,  0.1632, -0.0061, -0.0378],
         [-0.0067,  0.0450, -0.1609,  ...,  0.1628, -0.0048, -0.0425],
         ...,
         [ 0.0004,  0.0471, -0.1644,  ...,  0.1690, -0.0015, -0.0429],
         [-0.0065,  0.0504, -0.1662,  ...,  0.1596, -0.0022, -0.0373],
         [-0.0065,  0.0451, -0.1637,  ...,  0.1609, -0.0072, -0.0409]]]), modified_attrs={}, prev=None) 22896481800832 22896481496896
obj: tensor([[[-0.0023,  0.0506, -0.1633,  ...,  0.1627,  0.0032, -0.0366],
         [-0.0014,  0.0550, -0.1629,  ...,  0.1632, -0.0061, -0.0378],
         [-0.0067,  0.0450, -0.1609,  ...,  0.1628, -0.0048, -0.0425],
         ...,
         [ 0.0004,  0.0471, -0.1644,  ...,  0.1690, -0.0015, -0.0429],
         [-0.0065,  0.0504, -0.1662,  ...,  0.1596, -0.0022, -0.0373],
         [-0.0065,  0.0451, -0.1637,  ...,  0.1609, -0.0072, -0.0409]]]) 22896481496896
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[-0.0023,  0.0506, -0.1633,  ...,  0.1627,  0.0032, -0.0366],
         [-0.0014,  0.0550, -0.1629,  ...,  0.1632, -0.0061, -0.0378],
         [-0.0067,  0.0450, -0.1609,  ...,  0.1628, -0.0048, -0.0425],
         ...,
         [ 0.0004,  0.0471, -0.1644,  ...,  0.1690, -0.0015, -0.0429],
         [-0.0065,  0.0504, -0.1662,  ...,  0.1596, -0.0022, -0.0373],
         [-0.0065,  0.0451, -0.1637,  ...,  0.1609, -0.0072, -0.0409]]]), modified_attrs={}, prev=None) 22896481552992
tracing opcode RETURN_VALUE None pc=74 frame=3(0x222dde60)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 10, 16, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=16(0x1f33cab0)
tracing line /home/drc/frontend/test/test_model_deberta.py:294
tracing opcode LOAD_FAST None pc=30 frame=16(0x1f33cab0)
tracing opcode LOAD_METHOD None pc=32 frame=16(0x1f33cab0)
tracing opcode LOAD_FAST None pc=34 frame=16(0x1f33cab0)
tracing opcode LOAD_FAST None pc=36 frame=16(0x1f33cab0)
load fast: 22896588036832
tracing opcode BINARY_ADD None pc=38 frame=16(0x1f33cab0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=16(0x1f33cab0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x14d307050040)
push tracker due to record
push tracker 2 frame 0x14d307050040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x14d307050040)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x14d307050040)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
enable_trace
push tracker 2 frame 0x14d307050040 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 10, 16, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x14d307050040)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x14d307050040)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x14d307050040)
load fast: 22896481649104
tracing opcode LOAD_ATTR None pc=12 frame=2(0x14d307050040)
tracing opcode STORE_FAST None pc=14 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x14d307050040)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x14d307050040)
tracing opcode CALL_METHOD None pc=20 frame=2(0x14d307050040)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x14d307050040)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=28 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=30 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=32 frame=2(0x14d307050040)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x14d307050040)
record function in graph <built-in method mean of Tensor object at 0x14d300a7c1d0>
func self id: 22896481649104
tracing opcode STORE_FAST None pc=36 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x14d307050040)
tracing opcode LOAD_FAST None pc=40 frame=2(0x14d307050040)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x14d307050040)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=46 frame=2(0x14d307050040)
tracing opcode CALL_METHOD None pc=48 frame=2(0x14d307050040)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=52 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=54 frame=2(0x14d307050040)
tracing opcode LOAD_CONST None pc=56 frame=2(0x14d307050040)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x14d307050040)
record function in graph <built-in method mean of Tensor object at 0x14d300a174f0>
func self id: 22896481236208
tracing opcode STORE_FAST None pc=60 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x14d307050040)
tracing opcode LOAD_FAST None pc=64 frame=2(0x14d307050040)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x14d307050040)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x14d307050040)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x14d307050040)
tracing opcode LOAD_FAST None pc=72 frame=2(0x14d307050040)
tracing opcode LOAD_FAST None pc=74 frame=2(0x14d307050040)
load fast: 22897554036048
tracing opcode LOAD_ATTR None pc=76 frame=2(0x14d307050040)
tracing opcode BINARY_ADD None pc=78 frame=2(0x14d307050040)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x14d307050040)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x14d307050040)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x14d307050040)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x14d307050040)
tracing opcode LOAD_FAST None pc=90 frame=2(0x14d307050040)
tracing opcode CALL_METHOD None pc=92 frame=2(0x14d307050040)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x14d307050040)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x14d307050040)
tracing opcode LOAD_FAST None pc=100 frame=2(0x14d307050040)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x14d307050040)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x14d307050040)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x14d307050040)
tracing opcode BINARY_ADD None pc=108 frame=2(0x14d307050040)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x14d307050040)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x14d307050040)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x14d307050040)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_416 : [#users=4] = placeholder[target=tensor_416]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_416,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_416, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_416, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_416, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d300a7c1d0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x14d307050040)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 10, 16, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=16(0x1f33cab0)
tracing line /home/drc/frontend/test/test_model_deberta.py:295
tracing opcode LOAD_FAST None pc=44 frame=16(0x1f33cab0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=16(0x1f33cab0)
restart: running injected code (f_lasti=46)
commiting 16 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_413 : [#users=1] = placeholder[target=tensor_413]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_413,), kwargs = {})
    %tensor_415 : [#users=1] = placeholder[target=tensor_415]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_415), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=16(0x1f33cab0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 10, 16] frame_id 16
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=66 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:328
tracing opcode LOAD_FAST None pc=68 frame=10(0xea854c0)
tracing opcode POP_JUMP_IF_FALSE None pc=70 frame=10(0xea854c0)
tracing line /home/drc/frontend/test/test_model_deberta.py:331
tracing opcode LOAD_FAST None pc=80 frame=10(0xea854c0)
tracing opcode JUMP_ABSOLUTE None pc=82 frame=10(0xea854c0)
restart: running injected code (f_lasti=82)
commiting 10 0 36 [32mRETURN_VALUE[0m(None, None)  82
callee is full graph, merge to caller
to merge graph graph():
    %tensor_392 : [#users=2] = placeholder[target=tensor_392]
    %tensor_393 : [#users=1] = placeholder[target=tensor_393]
    %tensor_394 : [#users=1] = placeholder[target=tensor_394]
    %in_proj : [#users=1] = call_module[target=self.in_proj](args = (%tensor_392,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_394, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_400 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_400, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_393, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_392), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_7 : [#users=0] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=116 frame=10(0xea854c0)
restart: running injected code (f_lasti=116)
before pop_tracker [0, 4, 9, 10] frame_id 10
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=30 frame=9(0x24f84e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:389
tracing opcode LOAD_FAST None pc=32 frame=9(0x24f84e10)
tracing opcode POP_JUMP_IF_FALSE None pc=34 frame=9(0x24f84e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:391
tracing opcode LOAD_FAST None pc=44 frame=9(0x24f84e10)
tracing opcode LOAD_METHOD None pc=46 frame=9(0x24f84e10)
tracing opcode LOAD_FAST None pc=48 frame=9(0x24f84e10)
tracing opcode CALL_METHOD None pc=50 frame=9(0x24f84e10)
run into user defined function DebertaIntermediate(
  (dense): Linear(in_features=768, out_features=3072, bias=True)
  (intermediate_act_fn): GELUActivation()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 17 0x6ee5dd0 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(1, hidden_states) 
11: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 17), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(6, disable_trace) 
1: [32mLOAD_CONST[0m(1, 17) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(34, 34)  -> inst 17
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, intermediate_act_fn) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(1, hidden_states) 
16: [32mJUMP_ABSOLUTE[0m(62, 62)  -> inst 31
17: [32mLOAD_GLOBAL[0m(5, guard_match) 
18: [32mLOAD_CONST[0m(1, 17) 
19: [32mLOAD_CONST[0m(2, 0) 
20: [32mLOAD_GLOBAL[0m(7, locals) 
21: [32mCALL_FUNCTION[0m(0, 0) 
22: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
23: [32mUNPACK_SEQUENCE[0m(2, 2) 
24: [32mSTORE_FAST[0m(3, __case_idx) 
25: [32mSTORE_FAST[0m(2, __graph_fn) 
26: [32mLOAD_GLOBAL[0m(3, enable_trace) 
27: [32mLOAD_CONST[0m(1, 17) 
28: [32mCALL_FUNCTION[0m(1, 1) 
29: [32mPOP_TOP[0m(None, None) 
30: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
31: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:344
tracing opcode LOAD_GLOBAL None pc=0 frame=17(0x14d307050240)
push tracker due to record
push tracker 17 frame 0x14d307050240 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=17(0x14d307050240)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=17(0x14d307050240)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17] frame_id 17
enable_trace
push tracker 17 frame 0x14d307050240 frame_id 17 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17]
tracing opcode POP_TOP None pc=58 frame=17(0x14d307050240)
restart: running injected code (f_lasti=58)
tracing opcode JUMP_ABSOLUTE None pc=60 frame=17(0x14d307050240)
restart: running injected code (f_lasti=60)
tracing line /home/drc/frontend/test/test_model_deberta.py:345
tracing opcode LOAD_FAST None pc=10 frame=17(0x14d307050240)
load fast: 22897554036144
tracing opcode LOAD_METHOD None pc=12 frame=17(0x14d307050240)
tracing opcode LOAD_FAST None pc=14 frame=17(0x14d307050240)
load fast: 22896481238928
tracing opcode CALL_METHOD None pc=16 frame=17(0x14d307050240)
record function in graph Linear(in_features=768, out_features=3072, bias=True)
tracing opcode STORE_FAST None pc=18 frame=17(0x14d307050240)
tracing line /home/drc/frontend/test/test_model_deberta.py:346
tracing opcode LOAD_FAST None pc=20 frame=17(0x14d307050240)
tracing opcode LOAD_METHOD None pc=22 frame=17(0x14d307050240)
tracing opcode LOAD_FAST None pc=24 frame=17(0x14d307050240)
tracing opcode CALL_METHOD None pc=26 frame=17(0x14d307050240)
run into user defined function GELUActivation()
preprocess frame /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py 18 0x14d33e46a440 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, act) 
2: [33mLOAD_FAST[0m(1, input) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 18), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(5, disable_trace) 
1: [32mLOAD_CONST[0m(1, 18) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(20, 20)  -> inst 10
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, act) 
7: [33mLOAD_FAST[0m(1, input) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
10: [32mLOAD_GLOBAL[0m(4, guard_match) 
11: [32mLOAD_CONST[0m(1, 18) 
12: [32mLOAD_CONST[0m(2, 0) 
13: [32mLOAD_GLOBAL[0m(6, locals) 
14: [32mCALL_FUNCTION[0m(0, 0) 
15: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
16: [32mUNPACK_SEQUENCE[0m(2, 2) 
17: [32mSTORE_FAST[0m(3, __case_idx) 
18: [32mSTORE_FAST[0m(2, __graph_fn) 
19: [32mLOAD_GLOBAL[0m(2, enable_trace) 
20: [32mLOAD_CONST[0m(1, 18) 
21: [32mCALL_FUNCTION[0m(1, 1) 
22: [32mPOP_TOP[0m(None, None) 
23: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
24: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_GLOBAL None pc=0 frame=18(0x147b6940)
push tracker due to record
push tracker 18 frame 0x147b6940 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=18(0x147b6940)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=18(0x147b6940)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
enable_trace
push tracker 18 frame 0x147b6940 frame_id 18 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 17, 18]
tracing opcode POP_TOP None pc=44 frame=18(0x147b6940)
restart: running injected code (f_lasti=44)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=18(0x147b6940)
restart: running injected code (f_lasti=46)
tracing line /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py:77
tracing opcode LOAD_FAST None pc=10 frame=18(0x147b6940)
load fast: 22897554036240
tracing opcode LOAD_METHOD None pc=12 frame=18(0x147b6940)
tracing opcode LOAD_FAST None pc=14 frame=18(0x147b6940)
load fast: 22896481427264
tracing opcode CALL_METHOD None pc=16 frame=18(0x147b6940)
record function in graph <built-in function gelu>
tracing opcode JUMP_ABSOLUTE None pc=18 frame=18(0x147b6940)
restart: running injected code (f_lasti=18)
commiting 18 0 4 [32mRETURN_VALUE[0m(None, None)  18
callee is full graph, merge to caller
to merge graph graph():
    %tensor_418 : [#users=1] = placeholder[target=tensor_418]
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%tensor_418,), kwargs = {})
tracing opcode RETURN_VALUE None pc=48 frame=18(0x147b6940)
restart: running injected code (f_lasti=48)
before pop_tracker [0, 4, 9, 17, 18] frame_id 18
tracing return in /home/drc/frontend-venv/lib/python3.9/site-packages/transformers/activations.py
tracing opcode STORE_FAST None pc=28 frame=17(0x14d307050240)
tracing line /home/drc/frontend/test/test_model_deberta.py:347
tracing opcode LOAD_FAST None pc=30 frame=17(0x14d307050240)
tracing opcode JUMP_ABSOLUTE None pc=32 frame=17(0x14d307050240)
restart: running injected code (f_lasti=32)
commiting 17 0 11 [32mRETURN_VALUE[0m(None, None)  32
callee is full graph, merge to caller
to merge graph graph():
    %tensor_417 : [#users=1] = placeholder[target=tensor_417]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_417,), kwargs = {})
    %gelu : [#users=0] = call_function[target=torch._C._nn.gelu](args = (%dense,), kwargs = {})
tracing opcode RETURN_VALUE None pc=62 frame=17(0x14d307050240)
restart: running injected code (f_lasti=62)
before pop_tracker [0, 4, 9, 17] frame_id 17
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=52 frame=9(0x24f84e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:392
tracing opcode LOAD_FAST None pc=54 frame=9(0x24f84e10)
tracing opcode LOAD_METHOD None pc=56 frame=9(0x24f84e10)
tracing opcode LOAD_FAST None pc=58 frame=9(0x24f84e10)
tracing opcode LOAD_FAST None pc=60 frame=9(0x24f84e10)
tracing opcode CALL_METHOD None pc=62 frame=9(0x24f84e10)
run into user defined function DebertaOutput(
  (dense): Linear(in_features=3072, out_features=768, bias=True)
  (LayerNorm): DebertaLayerNorm()
  (dropout): StableDropout()
)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 19 0x6ee6b10 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_METHOD[0m(0, dense) 
2: [33mLOAD_FAST[0m(1, hidden_states) 
3: [33mCALL_METHOD[0m(1, 1) 
4: [33mSTORE_FAST[0m(1, hidden_states) 
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(1, dropout) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(2, LayerNorm) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_FAST[0m(2, input_tensor) 
14: [33mBINARY_ADD[0m(None, None) 
15: [33mCALL_METHOD[0m(1, 1) 
16: [33mSTORE_FAST[0m(1, hidden_states) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'NoneType'>, None), (<class 'int'>, 19), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(7, disable_trace) 
1: [32mLOAD_CONST[0m(1, 19) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(48, 48)  -> inst 24
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_METHOD[0m(0, dense) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mCALL_METHOD[0m(1, 1) 
9: [33mSTORE_FAST[0m(1, hidden_states) 
10: [33mLOAD_FAST[0m(0, self) 
11: [33mLOAD_METHOD[0m(1, dropout) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mCALL_METHOD[0m(1, 1) 
14: [33mSTORE_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(0, self) 
16: [33mLOAD_METHOD[0m(2, LayerNorm) 
17: [33mLOAD_FAST[0m(1, hidden_states) 
18: [33mLOAD_FAST[0m(2, input_tensor) 
19: [33mBINARY_ADD[0m(None, None) 
20: [33mCALL_METHOD[0m(1, 1) 
21: [33mSTORE_FAST[0m(1, hidden_states) 
22: [33mLOAD_FAST[0m(1, hidden_states) 
23: [32mJUMP_ABSOLUTE[0m(76, 76)  -> inst 38
24: [32mLOAD_GLOBAL[0m(6, guard_match) 
25: [32mLOAD_CONST[0m(1, 19) 
26: [32mLOAD_CONST[0m(2, 0) 
27: [32mLOAD_GLOBAL[0m(8, locals) 
28: [32mCALL_FUNCTION[0m(0, 0) 
29: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
30: [32mUNPACK_SEQUENCE[0m(2, 2) 
31: [32mSTORE_FAST[0m(4, __case_idx) 
32: [32mSTORE_FAST[0m(3, __graph_fn) 
33: [32mLOAD_GLOBAL[0m(4, enable_trace) 
34: [32mLOAD_CONST[0m(1, 19) 
35: [32mCALL_FUNCTION[0m(1, 1) 
36: [32mPOP_TOP[0m(None, None) 
37: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
38: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:358
tracing opcode LOAD_GLOBAL None pc=0 frame=19(0x238bb0b0)
push tracker due to record
push tracker 19 frame 0x238bb0b0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=19(0x238bb0b0)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=19(0x238bb0b0)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19] frame_id 19
enable_trace
push tracker 19 frame 0x238bb0b0 frame_id 19 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19]
tracing opcode POP_TOP None pc=72 frame=19(0x238bb0b0)
restart: running injected code (f_lasti=72)
tracing opcode JUMP_ABSOLUTE None pc=74 frame=19(0x238bb0b0)
restart: running injected code (f_lasti=74)
tracing line /home/drc/frontend/test/test_model_deberta.py:359
tracing opcode LOAD_FAST None pc=10 frame=19(0x238bb0b0)
load fast: 22897554036288
tracing opcode LOAD_METHOD None pc=12 frame=19(0x238bb0b0)
tracing opcode LOAD_FAST None pc=14 frame=19(0x238bb0b0)
load fast: 22896481424704
tracing opcode CALL_METHOD None pc=16 frame=19(0x238bb0b0)
record function in graph Linear(in_features=3072, out_features=768, bias=True)
tracing opcode STORE_FAST None pc=18 frame=19(0x238bb0b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:360
tracing opcode LOAD_FAST None pc=20 frame=19(0x238bb0b0)
tracing opcode LOAD_METHOD None pc=22 frame=19(0x238bb0b0)
tracing opcode LOAD_FAST None pc=24 frame=19(0x238bb0b0)
tracing opcode CALL_METHOD None pc=26 frame=19(0x238bb0b0)
run into user defined function StableDropout()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 3 0x14d340872c80 forward
0: [33mLOAD_FAST[0m(0, self) 
1: [33mLOAD_ATTR[0m(0, training) 
2: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
3: [33mLOAD_FAST[0m(0, self) 
4: [33mLOAD_ATTR[0m(1, drop_prob) 
5: [33mLOAD_CONST[0m(1, 0) 
6: [33mCOMPARE_OP[0m(4, >) 
7: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
8: [33mLOAD_GLOBAL[0m(2, XDropout) 
9: [33mLOAD_METHOD[0m(3, apply) 
10: [33mLOAD_FAST[0m(1, x) 
11: [33mLOAD_FAST[0m(0, self) 
12: [33mLOAD_METHOD[0m(4, get_context) 
13: [33mCALL_METHOD[0m(0, 0) 
14: [33mCALL_METHOD[0m(2, 2) 
15: [33mRETURN_VALUE[0m(None, None) 
16: [33mLOAD_FAST[0m(1, x) 
17: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'str'>, '\n        Call the module\n\n        Args:\n            x (`torch.tensor`): The input tensor to apply dropout\n        '), (<class 'int'>, 0), (<class 'int'>, 3)]
guarded code
0: [32mLOAD_GLOBAL[0m(9, disable_trace) 
1: [32mLOAD_CONST[0m(2, 3) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(46, 46)  -> inst 23
5: [33mLOAD_FAST[0m(0, self) 
6: [33mLOAD_ATTR[0m(0, training) 
7: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
8: [33mLOAD_FAST[0m(0, self) 
9: [33mLOAD_ATTR[0m(1, drop_prob) 
10: [33mLOAD_CONST[0m(1, 0) 
11: [33mCOMPARE_OP[0m(4, >) 
12: [33mPOP_JUMP_IF_FALSE[0m(42, 42)  -> inst 21
13: [33mLOAD_GLOBAL[0m(2, XDropout) 
14: [33mLOAD_METHOD[0m(3, apply) 
15: [33mLOAD_FAST[0m(1, x) 
16: [33mLOAD_FAST[0m(0, self) 
17: [33mLOAD_METHOD[0m(4, get_context) 
18: [33mCALL_METHOD[0m(0, 0) 
19: [33mCALL_METHOD[0m(2, 2) 
20: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
21: [33mLOAD_FAST[0m(1, x) 
22: [32mJUMP_ABSOLUTE[0m(74, 74)  -> inst 37
23: [32mLOAD_GLOBAL[0m(8, guard_match) 
24: [32mLOAD_CONST[0m(2, 3) 
25: [32mLOAD_CONST[0m(1, 0) 
26: [32mLOAD_GLOBAL[0m(10, locals) 
27: [32mCALL_FUNCTION[0m(0, 0) 
28: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
29: [32mUNPACK_SEQUENCE[0m(2, 2) 
30: [32mSTORE_FAST[0m(3, __case_idx) 
31: [32mSTORE_FAST[0m(2, __graph_fn) 
32: [32mLOAD_GLOBAL[0m(6, enable_trace) 
33: [32mLOAD_CONST[0m(2, 3) 
34: [32mCALL_FUNCTION[0m(1, 1) 
35: [32mPOP_TOP[0m(None, None) 
36: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
37: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:229
tracing opcode LOAD_GLOBAL None pc=0 frame=3(0x14d33e46a840)
push tracker due to record
push tracker 3 frame 0x14d33e46a840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=3(0x14d33e46a840)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=3(0x14d33e46a840)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
enable_trace
push tracker 3 frame 0x14d33e46a840 frame_id 3 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 3]
tracing opcode POP_TOP None pc=70 frame=3(0x14d33e46a840)
restart: running injected code (f_lasti=70)
tracing opcode JUMP_ABSOLUTE None pc=72 frame=3(0x14d33e46a840)
restart: running injected code (f_lasti=72)
tracing line /home/drc/frontend/test/test_model_deberta.py:236
tracing opcode LOAD_FAST None pc=10 frame=3(0x14d33e46a840)
load fast: 22897554036432
tracing opcode LOAD_ATTR None pc=12 frame=3(0x14d33e46a840)
tracing opcode POP_JUMP_IF_FALSE None pc=14 frame=3(0x14d33e46a840)
tracing line /home/drc/frontend/test/test_model_deberta.py:238
tracing opcode LOAD_FAST None pc=42 frame=3(0x14d33e46a840)
load fast: 22896481026752
tracing opcode JUMP_ABSOLUTE None pc=44 frame=3(0x14d33e46a840)
restart: running injected code (f_lasti=44)
commiting 3 0 17 [32mRETURN_VALUE[0m(None, None)  44
callee is full graph, merge to caller
to merge graph graph():
    %tensor_420 : [#users=0] = placeholder[target=tensor_420]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['x']], extract_code_hashs={3397760177674279153}, obj=tensor([[[ 0.2547, -0.3725,  0.0798,  ..., -0.4737,  0.0082, -0.3747],
         [ 1.1171,  0.0862,  0.1097,  ..., -0.4989,  0.4344, -0.4529],
         [ 0.1313, -0.1456, -0.5706,  ..., -0.1977,  0.1204, -0.5810],
         ...,
         [ 1.0091,  0.2388, -0.3597,  ..., -0.3171, -0.0990, -0.5751],
         [ 0.1100,  0.3911, -0.1769,  ..., -0.4159,  0.4283, -0.6224],
         [ 0.1456,  0.1553, -0.0252,  ...,  0.3039, -0.0335,  0.0710]]]), modified_attrs={}, prev=None) 22896481474352 22896481026752
obj: tensor([[[ 0.2547, -0.3725,  0.0798,  ..., -0.4737,  0.0082, -0.3747],
         [ 1.1171,  0.0862,  0.1097,  ..., -0.4989,  0.4344, -0.4529],
         [ 0.1313, -0.1456, -0.5706,  ..., -0.1977,  0.1204, -0.5810],
         ...,
         [ 1.0091,  0.2388, -0.3597,  ..., -0.3171, -0.0990, -0.5751],
         [ 0.1100,  0.3911, -0.1769,  ..., -0.4159,  0.4283, -0.6224],
         [ 0.1456,  0.1553, -0.0252,  ...,  0.3039, -0.0335,  0.0710]]]) 22896481026752
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.2547, -0.3725,  0.0798,  ..., -0.4737,  0.0082, -0.3747],
         [ 1.1171,  0.0862,  0.1097,  ..., -0.4989,  0.4344, -0.4529],
         [ 0.1313, -0.1456, -0.5706,  ..., -0.1977,  0.1204, -0.5810],
         ...,
         [ 1.0091,  0.2388, -0.3597,  ..., -0.3171, -0.0990, -0.5751],
         [ 0.1100,  0.3911, -0.1769,  ..., -0.4159,  0.4283, -0.6224],
         [ 0.1456,  0.1553, -0.0252,  ...,  0.3039, -0.0335,  0.0710]]]), modified_attrs={}, prev=None) 22896480993824
tracing opcode RETURN_VALUE None pc=74 frame=3(0x14d33e46a840)
restart: running injected code (f_lasti=74)
before pop_tracker [0, 4, 9, 19, 3] frame_id 3
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=28 frame=19(0x238bb0b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:361
tracing opcode LOAD_FAST None pc=30 frame=19(0x238bb0b0)
tracing opcode LOAD_METHOD None pc=32 frame=19(0x238bb0b0)
tracing opcode LOAD_FAST None pc=34 frame=19(0x238bb0b0)
tracing opcode LOAD_FAST None pc=36 frame=19(0x238bb0b0)
load fast: 22896481238928
tracing opcode BINARY_ADD None pc=38 frame=19(0x238bb0b0)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=40 frame=19(0x238bb0b0)
run into user defined function DebertaLayerNorm()
preprocess frame /home/drc/frontend/test/test_model_deberta.py 2 0x662b6c0 forward
0: [33mLOAD_FAST[0m(1, hidden_states) 
1: [33mLOAD_ATTR[0m(0, dtype) 
2: [33mSTORE_FAST[0m(2, input_type) 
3: [33mLOAD_FAST[0m(1, hidden_states) 
4: [33mLOAD_METHOD[0m(1, float) 
5: [33mCALL_METHOD[0m(0, 0) 
6: [33mSTORE_FAST[0m(1, hidden_states) 
7: [33mLOAD_FAST[0m(1, hidden_states) 
8: [33mLOAD_ATTR[0m(2, mean) 
9: [33mLOAD_CONST[0m(1, -1) 
10: [33mLOAD_CONST[0m(2, True) 
11: [33mLOAD_CONST[0m(3, ('keepdim',)) 
12: [33mCALL_FUNCTION_KW[0m(2, 2) 
13: [33mSTORE_FAST[0m(3, mean) 
14: [33mLOAD_FAST[0m(1, hidden_states) 
15: [33mLOAD_FAST[0m(3, mean) 
16: [33mBINARY_SUBTRACT[0m(None, None) 
17: [33mLOAD_METHOD[0m(3, pow) 
18: [33mLOAD_CONST[0m(4, 2) 
19: [33mCALL_METHOD[0m(1, 1) 
20: [33mLOAD_ATTR[0m(2, mean) 
21: [33mLOAD_CONST[0m(1, -1) 
22: [33mLOAD_CONST[0m(2, True) 
23: [33mLOAD_CONST[0m(3, ('keepdim',)) 
24: [33mCALL_FUNCTION_KW[0m(2, 2) 
25: [33mSTORE_FAST[0m(4, variance) 
26: [33mLOAD_FAST[0m(1, hidden_states) 
27: [33mLOAD_FAST[0m(3, mean) 
28: [33mBINARY_SUBTRACT[0m(None, None) 
29: [33mLOAD_GLOBAL[0m(4, torch) 
30: [33mLOAD_METHOD[0m(5, sqrt) 
31: [33mLOAD_FAST[0m(4, variance) 
32: [33mLOAD_FAST[0m(0, self) 
33: [33mLOAD_ATTR[0m(6, variance_epsilon) 
34: [33mBINARY_ADD[0m(None, None) 
35: [33mCALL_METHOD[0m(1, 1) 
36: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
37: [33mSTORE_FAST[0m(1, hidden_states) 
38: [33mLOAD_FAST[0m(1, hidden_states) 
39: [33mLOAD_METHOD[0m(7, to) 
40: [33mLOAD_FAST[0m(2, input_type) 
41: [33mCALL_METHOD[0m(1, 1) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(0, self) 
44: [33mLOAD_ATTR[0m(8, weight) 
45: [33mLOAD_FAST[0m(1, hidden_states) 
46: [33mBINARY_MULTIPLY[0m(None, None) 
47: [33mLOAD_FAST[0m(0, self) 
48: [33mLOAD_ATTR[0m(9, bias) 
49: [33mBINARY_ADD[0m(None, None) 
50: [33mSTORE_FAST[0m(5, y) 
51: [33mLOAD_FAST[0m(5, y) 
52: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'tuple'>, ('keepdim',)), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'int'>, -1), (<class 'int'>, 0)]
guarded code
0: [32mLOAD_GLOBAL[0m(14, disable_trace) 
1: [32mLOAD_CONST[0m(2, 2) 
2: [32mCALL_FUNCTION[0m(1, 1) 
3: [32mPOP_TOP[0m(None, None) 
4: [32mJUMP_ABSOLUTE[0m(116, 116)  -> inst 58
5: [33mLOAD_FAST[0m(1, hidden_states) 
6: [33mLOAD_ATTR[0m(0, dtype) 
7: [33mSTORE_FAST[0m(2, input_type) 
8: [33mLOAD_FAST[0m(1, hidden_states) 
9: [33mLOAD_METHOD[0m(1, float) 
10: [33mCALL_METHOD[0m(0, 0) 
11: [33mSTORE_FAST[0m(1, hidden_states) 
12: [33mLOAD_FAST[0m(1, hidden_states) 
13: [33mLOAD_ATTR[0m(2, mean) 
14: [33mLOAD_CONST[0m(4, -1) 
15: [33mLOAD_CONST[0m(3, True) 
16: [33mLOAD_CONST[0m(0, ('keepdim',)) 
17: [33mCALL_FUNCTION_KW[0m(2, 2) 
18: [33mSTORE_FAST[0m(3, mean) 
19: [33mLOAD_FAST[0m(1, hidden_states) 
20: [33mLOAD_FAST[0m(3, mean) 
21: [33mBINARY_SUBTRACT[0m(None, None) 
22: [33mLOAD_METHOD[0m(3, pow) 
23: [33mLOAD_CONST[0m(2, 2) 
24: [33mCALL_METHOD[0m(1, 1) 
25: [33mLOAD_ATTR[0m(2, mean) 
26: [33mLOAD_CONST[0m(4, -1) 
27: [33mLOAD_CONST[0m(3, True) 
28: [33mLOAD_CONST[0m(0, ('keepdim',)) 
29: [33mCALL_FUNCTION_KW[0m(2, 2) 
30: [33mSTORE_FAST[0m(4, variance) 
31: [33mLOAD_FAST[0m(1, hidden_states) 
32: [33mLOAD_FAST[0m(3, mean) 
33: [33mBINARY_SUBTRACT[0m(None, None) 
34: [33mLOAD_GLOBAL[0m(4, torch) 
35: [33mLOAD_METHOD[0m(5, sqrt) 
36: [33mLOAD_FAST[0m(4, variance) 
37: [33mLOAD_FAST[0m(0, self) 
38: [33mLOAD_ATTR[0m(6, variance_epsilon) 
39: [33mBINARY_ADD[0m(None, None) 
40: [33mCALL_METHOD[0m(1, 1) 
41: [33mBINARY_TRUE_DIVIDE[0m(None, None) 
42: [33mSTORE_FAST[0m(1, hidden_states) 
43: [33mLOAD_FAST[0m(1, hidden_states) 
44: [33mLOAD_METHOD[0m(7, to) 
45: [33mLOAD_FAST[0m(2, input_type) 
46: [33mCALL_METHOD[0m(1, 1) 
47: [33mSTORE_FAST[0m(1, hidden_states) 
48: [33mLOAD_FAST[0m(0, self) 
49: [33mLOAD_ATTR[0m(8, weight) 
50: [33mLOAD_FAST[0m(1, hidden_states) 
51: [33mBINARY_MULTIPLY[0m(None, None) 
52: [33mLOAD_FAST[0m(0, self) 
53: [33mLOAD_ATTR[0m(9, bias) 
54: [33mBINARY_ADD[0m(None, None) 
55: [33mSTORE_FAST[0m(5, y) 
56: [33mLOAD_FAST[0m(5, y) 
57: [32mJUMP_ABSOLUTE[0m(144, 144)  -> inst 72
58: [32mLOAD_GLOBAL[0m(13, guard_match) 
59: [32mLOAD_CONST[0m(2, 2) 
60: [32mLOAD_CONST[0m(5, 0) 
61: [32mLOAD_GLOBAL[0m(15, locals) 
62: [32mCALL_FUNCTION[0m(0, 0) 
63: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
64: [32mUNPACK_SEQUENCE[0m(2, 2) 
65: [32mSTORE_FAST[0m(7, __case_idx) 
66: [32mSTORE_FAST[0m(6, __graph_fn) 
67: [32mLOAD_GLOBAL[0m(11, enable_trace) 
68: [32mLOAD_CONST[0m(2, 2) 
69: [32mCALL_FUNCTION[0m(1, 1) 
70: [32mPOP_TOP[0m(None, None) 
71: [32mJUMP_ABSOLUTE[0m(10, 10)  -> inst 5
72: [32mRETURN_VALUE[0m(None, None) 

tracing line /home/drc/frontend/test/test_model_deberta.py:273
tracing opcode LOAD_GLOBAL None pc=0 frame=2(0x24f84360)
push tracker due to record
push tracker 2 frame 0x24f84360 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
restart: running injected code (f_lasti=0)
tracing opcode LOAD_CONST None pc=2 frame=2(0x24f84360)
restart: running injected code (f_lasti=2)
tracing opcode CALL_FUNCTION None pc=4 frame=2(0x24f84360)
restart: running injected code (f_lasti=4)
disable_trace
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
enable_trace
push tracker 2 frame 0x24f84360 frame_id 2 read_stack False cf_info <class 'NoneType'> all [0, 4, 9, 19, 2]
tracing opcode POP_TOP None pc=140 frame=2(0x24f84360)
restart: running injected code (f_lasti=140)
tracing opcode JUMP_ABSOLUTE None pc=142 frame=2(0x24f84360)
restart: running injected code (f_lasti=142)
tracing line /home/drc/frontend/test/test_model_deberta.py:274
tracing opcode LOAD_FAST None pc=10 frame=2(0x24f84360)
load fast: 22896481028512
tracing opcode LOAD_ATTR None pc=12 frame=2(0x24f84360)
tracing opcode STORE_FAST None pc=14 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:275
tracing opcode LOAD_FAST None pc=16 frame=2(0x24f84360)
tracing opcode LOAD_METHOD None pc=18 frame=2(0x24f84360)
tracing opcode CALL_METHOD None pc=20 frame=2(0x24f84360)
record function in graph <method 'float' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=22 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:276
tracing opcode LOAD_FAST None pc=24 frame=2(0x24f84360)
tracing opcode LOAD_ATTR None pc=26 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=28 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=30 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=32 frame=2(0x24f84360)
tracing opcode CALL_FUNCTION_KW None pc=34 frame=2(0x24f84360)
record function in graph <built-in method mean of Tensor object at 0x14d3009e49a0>
func self id: 22896481028512
tracing opcode STORE_FAST None pc=36 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:277
tracing opcode LOAD_FAST None pc=38 frame=2(0x24f84360)
tracing opcode LOAD_FAST None pc=40 frame=2(0x24f84360)
tracing opcode BINARY_SUBTRACT None pc=42 frame=2(0x24f84360)
record function in graph <built-in function sub>
tracing opcode LOAD_METHOD None pc=44 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=46 frame=2(0x24f84360)
tracing opcode CALL_METHOD None pc=48 frame=2(0x24f84360)
fetch:  2 <class 'int'>
record function in graph <method 'pow' of 'torch._C._TensorBase' objects>
tracing opcode LOAD_ATTR None pc=50 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=52 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=54 frame=2(0x24f84360)
tracing opcode LOAD_CONST None pc=56 frame=2(0x24f84360)
tracing opcode CALL_FUNCTION_KW None pc=58 frame=2(0x24f84360)
record function in graph <built-in method mean of Tensor object at 0x14d3009fd090>
func self id: 22896481128592
tracing opcode STORE_FAST None pc=60 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:278
tracing opcode LOAD_FAST None pc=62 frame=2(0x24f84360)
tracing opcode LOAD_FAST None pc=64 frame=2(0x24f84360)
tracing opcode BINARY_SUBTRACT None pc=66 frame=2(0x24f84360)
record function in graph <built-in function sub>
tracing opcode LOAD_GLOBAL None pc=68 frame=2(0x24f84360)
tracing opcode LOAD_METHOD None pc=70 frame=2(0x24f84360)
tracing opcode LOAD_FAST None pc=72 frame=2(0x24f84360)
tracing opcode LOAD_FAST None pc=74 frame=2(0x24f84360)
load fast: 22897554036384
tracing opcode LOAD_ATTR None pc=76 frame=2(0x24f84360)
tracing opcode BINARY_ADD None pc=78 frame=2(0x24f84360)
record function in graph <built-in function add>
tracing opcode CALL_METHOD None pc=80 frame=2(0x24f84360)
record function in graph <built-in method sqrt of type object at 0x14d3c6aa4880>
tracing opcode BINARY_TRUE_DIVIDE None pc=82 frame=2(0x24f84360)
record function in graph <built-in function truediv>
tracing opcode STORE_FAST None pc=84 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:279
tracing opcode LOAD_FAST None pc=86 frame=2(0x24f84360)
tracing opcode LOAD_METHOD None pc=88 frame=2(0x24f84360)
tracing opcode LOAD_FAST None pc=90 frame=2(0x24f84360)
tracing opcode CALL_METHOD None pc=92 frame=2(0x24f84360)
record function in graph <method 'to' of 'torch._C._TensorBase' objects>
tracing opcode STORE_FAST None pc=94 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:280
tracing opcode LOAD_FAST None pc=96 frame=2(0x24f84360)
tracing opcode LOAD_ATTR None pc=98 frame=2(0x24f84360)
tracing opcode LOAD_FAST None pc=100 frame=2(0x24f84360)
tracing opcode BINARY_MULTIPLY None pc=102 frame=2(0x24f84360)
record function in graph <built-in function mul>
tracing opcode LOAD_FAST None pc=104 frame=2(0x24f84360)
tracing opcode LOAD_ATTR None pc=106 frame=2(0x24f84360)
tracing opcode BINARY_ADD None pc=108 frame=2(0x24f84360)
record function in graph <built-in function add>
tracing opcode STORE_FAST None pc=110 frame=2(0x24f84360)
tracing line /home/drc/frontend/test/test_model_deberta.py:281
tracing opcode LOAD_FAST None pc=112 frame=2(0x24f84360)
tracing opcode JUMP_ABSOLUTE None pc=114 frame=2(0x24f84360)
restart: running injected code (f_lasti=114)
commiting 2 0 52 [32mRETURN_VALUE[0m(None, None)  114
callee is full graph, merge to caller
to merge graph graph():
    %tensor_422 : [#users=4] = placeholder[target=tensor_422]
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%tensor_422,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%tensor_422, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%tensor_422, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%tensor_422, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=bias]
    %add_1 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
[34m[warning] cannot find store pos in callee, skip guard check[0m TorchDtypeVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].dtype], extract_code_hashs={2295845943273712772}, obj=torch.float32, modified_attrs={}, prev=None)
[34m[warning] cannot find store pos in callee, skip guard check[0m FunctionVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states'].mean], extract_code_hashs={375010436177533193}, obj=<built-in method mean of Tensor object at 0x14d3009e49a0>, modified_attrs={}, prev=None)
tracing opcode RETURN_VALUE None pc=144 frame=2(0x24f84360)
restart: running injected code (f_lasti=144)
before pop_tracker [0, 4, 9, 19, 2] frame_id 2
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=42 frame=19(0x238bb0b0)
tracing line /home/drc/frontend/test/test_model_deberta.py:362
tracing opcode LOAD_FAST None pc=44 frame=19(0x238bb0b0)
tracing opcode JUMP_ABSOLUTE None pc=46 frame=19(0x238bb0b0)
restart: running injected code (f_lasti=46)
commiting 19 0 18 [32mRETURN_VALUE[0m(None, None)  46
callee is full graph, merge to caller
to merge graph graph():
    %tensor_419 : [#users=1] = placeholder[target=tensor_419]
    %dense : [#users=1] = call_module[target=dense](args = (%tensor_419,), kwargs = {})
    %tensor_421 : [#users=1] = placeholder[target=tensor_421]
    %add : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_421), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add, %mean), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add_1,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=LayerNorm.bias]
    %add_2 : [#users=0] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
tracing opcode RETURN_VALUE None pc=76 frame=19(0x238bb0b0)
restart: running injected code (f_lasti=76)
before pop_tracker [0, 4, 9, 19] frame_id 19
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=64 frame=9(0x24f84e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:393
tracing opcode LOAD_FAST None pc=66 frame=9(0x24f84e10)
tracing opcode POP_JUMP_IF_FALSE None pc=68 frame=9(0x24f84e10)
tracing line /home/drc/frontend/test/test_model_deberta.py:396
tracing opcode LOAD_FAST None pc=78 frame=9(0x24f84e10)
tracing opcode JUMP_ABSOLUTE None pc=80 frame=9(0x24f84e10)
restart: running injected code (f_lasti=80)
commiting 9 0 35 [32mRETURN_VALUE[0m(None, None)  80
callee is full graph, merge to caller
to merge graph graph():
    %tensor_389 : [#users=2] = placeholder[target=tensor_389]
    %tensor_390 : [#users=1] = placeholder[target=tensor_390]
    %tensor_391 : [#users=1] = placeholder[target=tensor_391]
    %in_proj : [#users=1] = call_module[target=attention.self.in_proj](args = (%tensor_389,), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_1 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=attention.self.q_bias]
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_3, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=attention.self.v_bias]
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_4, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_1, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_391, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=attention.self.__external_param__6]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_5, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=attention.self.pos_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=attention.self.pos_q_proj](args = (%unsqueeze_1,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %tensor_400 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor_400, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_1, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %tensor_390, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=attention.output.dense](args = (%view_5,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_389), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=attention.output.LayerNorm.weight]
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_2, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_2, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_3, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=output.LayerNorm.bias]
    %add_10 : [#users=0] = call_function[target=operator.add](args = (%mul_3, %bias_1), kwargs = {})
tracing opcode RETURN_VALUE None pc=114 frame=9(0x24f84e10)
restart: running injected code (f_lasti=114)
before pop_tracker [0, 4, 9] frame_id 9
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=196 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:484
tracing opcode LOAD_DEREF None pc=198 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=200 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:487
tracing opcode LOAD_FAST None pc=210 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=212 frame=4(0x6aceb20)
tracing opcode IS_OP None pc=214 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=216 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:492
tracing opcode LOAD_FAST None pc=274 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=276 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:494
tracing opcode LOAD_DEREF None pc=278 frame=4(0x6aceb20)
tracing opcode POP_JUMP_IF_FALSE None pc=280 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:454
tracing opcode FOR_ITER None pc=102 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:497
tracing opcode LOAD_FAST None pc=294 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=296 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:498
tracing opcode LOAD_FAST None pc=300 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=302 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=304 frame=4(0x6aceb20)
tracing opcode BINARY_ADD None pc=306 frame=4(0x6aceb20)
tracing opcode STORE_FAST None pc=308 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:500
tracing opcode LOAD_FAST None pc=310 frame=4(0x6aceb20)
tracing opcode EXTENDED_ARG None pc=312 frame=4(0x6aceb20)
tracing line /home/drc/frontend/test/test_model_deberta.py:501
tracing opcode LOAD_GLOBAL None pc=316 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=318 frame=4(0x6aceb20)
tracing opcode LOAD_CONST None pc=320 frame=4(0x6aceb20)
tracing opcode MAKE_FUNCTION None pc=322 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=324 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=326 frame=4(0x6aceb20)
tracing opcode LOAD_FAST None pc=328 frame=4(0x6aceb20)
tracing opcode BUILD_TUPLE None pc=330 frame=4(0x6aceb20)
tracing opcode GET_ITER None pc=332 frame=4(0x6aceb20)
fetch:  (tensor([[[ 0.0497, -1.1979,  0.3910,  ..., -0.0620,  2.1572, -1.0994],
         [-0.1630, -0.0368, -0.2848,  ...,  0.5103,  1.8274, -1.0234],
         [ 0.8611, -0.5216, -1.0815,  ...,  0.6257,  0.6994, -0.0116],
         ...,
         [ 0.6009,  0.9201, -1.3784,  ...,  1.0170, -0.5446, -0.7523],
         [-0.3582,  0.1347, -0.9105,  ..., -1.0697,  1.1350,  0.1875],
         [ 1.1840, -0.2845, -0.9350,  ...,  2.6221, -0.1118, -1.3873]]]), (tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]), tensor([[[ 0.2453, -0.8209, -1.5773,  ..., -0.7530,  0.5611, -1.0536],
         [-1.3763, -0.7210,  0.7165,  ...,  1.8447, -0.2649,  0.4576],
         [ 0.8097, -1.5270,  0.0549,  ..., -0.9140, -0.1575,  1.5813],
         ...,
         [ 1.5826, -0.4208, -0.5604,  ..., -0.0417, -0.7410, -0.2762],
         [-0.8620,  0.7157, -0.4272,  ..., -2.1045,  0.2169,  0.5129],
         [ 1.5848,  0.4604,  0.1122,  ...,  1.2769, -1.3015, -0.9600]]]), tensor([[[-0.2009, -1.0015, -1.4984,  ..., -0.8924,  0.6290, -1.2252],
         [-1.2974, -0.4683,  0.4453,  ...,  1.5220, -0.1394, -0.0051],
         [ 0.8862, -1.8954, -0.3315,  ..., -0.7523, -0.6691,  1.2660],
         ...,
         [ 1.5066, -0.8309, -1.1303,  ..., -0.3183, -0.7176, -0.1407],
         [-0.7342,  0.2342, -0.3001,  ..., -2.5683,  0.3427,  0.1694],
         [ 1.6684, -0.0660,  0.3791,  ...,  1.5715, -1.0558, -1.0425]]]), tensor([[[-0.4691, -1.0801, -1.3958,  ..., -1.3789,  0.7441, -1.8362],
         [-0.7857, -0.5102,  0.6686,  ...,  1.1394,  0.1822, -0.0783],
         [ 0.6132, -1.8573,  0.0632,  ..., -0.1344, -0.6569,  0.5182],
         ...,
         [ 1.0973, -1.1271, -0.9721,  ..., -0.2580, -1.2064, -0.7786],
         [-1.0012, -0.2480, -0.2770,  ..., -2.5191,  0.0368,  0.0914],
         [ 1.7651, -0.0393,  0.1962,  ...,  1.4521, -0.5620, -1.4656]]]), tensor([[[-4.0665e-01, -1.3664e+00, -1.1371e+00,  ..., -1.2043e+00,
           9.9787e-01, -2.5679e+00],
         [-1.1956e+00, -2.9393e-01,  9.2366e-01,  ...,  1.5796e+00,
           4.8789e-01, -4.1854e-01],
         [ 7.8121e-01, -1.8429e+00,  3.4981e-01,  ..., -3.7148e-02,
          -6.0460e-01,  4.5103e-01],
         ...,
         [ 7.6865e-01, -7.5692e-01, -9.4936e-01,  ..., -8.8039e-02,
          -8.1862e-01, -7.8583e-01],
         [-8.4232e-01,  3.8073e-01, -5.2328e-01,  ..., -2.3860e+00,
           3.7789e-01, -1.8506e-01],
         [ 1.6004e+00,  1.4404e-01,  2.2705e-04,  ...,  1.3933e+00,
          -2.9675e-01, -1.3278e+00]]]), tensor([[[-0.6004, -0.7808, -0.8473,  ..., -0.5934,  1.1574, -2.5137],
         [-1.6978, -0.0830,  0.7676,  ...,  1.4792,  0.5203, -0.9563],
         [ 0.9356, -1.1589, -0.2471,  ...,  0.4475, -0.3872,  0.1836],
         ...,
         [ 0.1682, -0.1131, -1.0202,  ...,  0.1585, -0.2599, -0.7881],
         [-1.2156,  0.2749, -0.4601,  ..., -2.1918,  0.6081, -0.1531],
         [ 1.4250,  0.2925, -0.6653,  ...,  1.4149, -0.1575, -1.1067]]]), tensor([[[-0.6818,  0.0941, -0.9705,  ..., -0.1498,  1.2024, -1.6038],
         [-1.4993, -0.0393,  0.3532,  ...,  1.3839,  0.4353, -0.1778],
         [ 1.0229, -0.9444, -0.4063,  ...,  0.3713, -0.3324,  0.5657],
         ...,
         [-0.2204,  0.2661, -1.2854,  ...,  0.3083, -0.3572, -0.3973],
         [-1.2561,  0.0263, -0.4895,  ..., -1.3646, -0.0136, -0.0422],
         [ 1.2327,  0.4498, -0.7420,  ...,  0.9934,  0.1430, -1.0951]]]), tensor([[[-4.1688e-01,  2.3071e-01, -9.4279e-01,  ...,  4.0344e-01,
           9.2204e-01, -1.2473e+00],
         [-1.5669e+00,  5.9562e-02,  6.5833e-01,  ...,  1.0633e+00,
           7.1158e-01, -1.9074e-01],
         [-9.5193e-02, -3.5884e-01, -7.0531e-01,  ...,  5.7193e-02,
           9.9467e-02,  7.9167e-01],
         ...,
         [-2.0823e-01,  6.2311e-01, -1.5289e+00,  ...,  1.7887e-01,
          -6.6074e-01, -1.4504e-01],
         [-1.0244e+00,  6.6220e-02, -4.6357e-01,  ..., -1.4019e+00,
          -6.3171e-04,  3.8740e-01],
         [ 9.0415e-01,  9.0392e-01, -3.7657e-01,  ...,  1.2642e+00,
           5.1613e-02, -1.8454e+00]]]), tensor([[[-0.6355, -0.3309, -0.0201,  ...,  0.0213,  1.5479, -1.2221],
         [-1.5138, -0.0424,  1.0942,  ...,  0.6697,  0.7223, -0.7377],
         [ 0.1725, -0.2751, -0.8407,  ...,  0.0618,  0.1603,  0.3131],
         ...,
         [-0.1659,  0.8781, -0.5870,  ...,  0.4932, -0.5923, -0.3210],
         [-1.1752, -0.5636,  0.2241,  ..., -0.7830, -0.1523,  0.0901],
         [ 0.7510,  0.4514, -0.1090,  ...,  1.3494, -0.2339, -1.6931]]]), tensor([[[-0.5859,  0.1019, -0.2070,  ..., -0.2703,  1.6462, -1.4491],
         [-1.6070,  0.2773,  0.4987,  ...,  0.6461,  1.7907, -0.5347],
         [ 0.3558, -0.0455, -1.3200,  ...,  0.3298,  0.4327,  0.3425],
         ...,
         [-0.6818,  1.0505, -1.1530,  ...,  0.7059, -0.6950, -0.3357],
         [-1.3193, -0.2884,  0.1587,  ..., -0.7497,  0.7363,  0.0795],
         [ 0.7040,  0.3563, -0.5881,  ...,  1.7395, -0.1750, -2.0577]]]), tensor([[[-0.5505, -0.2386,  0.3085,  ...,  0.3940,  2.2735, -1.1307],
         [-1.3852,  0.5251,  0.5438,  ...,  0.5861,  1.6061, -0.5170],
         [ 0.7864, -0.4602, -0.7659,  ...,  0.4809,  0.5860,  0.5741],
         ...,
         [-0.4325,  0.9386, -0.8854,  ...,  1.2820, -0.5849, -0.1534],
         [-1.3528,  0.4082, -0.4270,  ..., -0.4132,  0.6633,  0.4111],
         [ 0.5540,  0.3289, -0.4886,  ...,  2.2747,  0.0863, -1.5667]]]), tensor([[[-0.2056, -0.9809,  0.5020,  ...,  0.2419,  2.3249, -0.7846],
         [-1.3063, -0.1916, -0.2617,  ...,  0.8718,  1.5070, -0.6086],
         [ 0.7923, -0.4869, -0.4622,  ...,  0.6982,  0.6251,  0.5959],
         ...,
         [-0.3972,  0.6827, -0.9917,  ...,  1.2291, -0.5148, -0.2162],
         [-0.4804, -0.2996, -0.6154,  ..., -0.8682,  0.7741,  0.8680],
         [ 1.1260, -0.5127, -0.8208,  ...,  2.3439, -0.0846, -1.5264]]]), tensor([[[ 0.0497, -1.1979,  0.3910,  ..., -0.0620,  2.1572, -1.0994],
         [-0.1630, -0.0368, -0.2848,  ...,  0.5103,  1.8274, -1.0234],
         [ 0.8611, -0.5216, -1.0815,  ...,  0.6257,  0.6994, -0.0116],
         ...,
         [ 0.6009,  0.9201, -1.3784,  ...,  1.0170, -0.5446, -0.7523],
         [-0.3582,  0.1347, -0.9105,  ..., -1.0697,  1.1350,  0.1875],
         [ 1.1840, -0.2845, -0.9350,  ...,  2.6221, -0.1118, -1.3873]]])), None) <class 'tuple'>
tracing opcode CALL_FUNCTION None pc=334 frame=4(0x6aceb20)
tracing opcode CALL_FUNCTION None pc=336 frame=4(0x6aceb20)
fetch:  <generator object DebertaEncoder.forward.<locals>.<genexpr> at 0x14d30f861820> <class 'generator'>
generate any for <generator object DebertaEncoder.forward.<locals>.<genexpr> at 0x14d30f861820> <class 'generator'> []
tracing opcode EXTENDED_ARG None pc=338 frame=4(0x6aceb20)
restart: running injected code (f_lasti=338)
commiting 4 0 162 [32mRETURN_VALUE[0m(None, None)  338
callee is full graph, merge to caller
to merge graph graph():
    %tensor_11 : [#users=1] = placeholder[target=tensor_11]
    %unsqueeze : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_11, 1), kwargs = {})
    %unsqueeze_1 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze, 2), kwargs = {})
    %squeeze : [#users=1] = call_function[target=torch.Tensor.squeeze](args = (%unsqueeze_1, -2), kwargs = {})
    %unsqueeze_2 : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%squeeze, -1), kwargs = {})
    %mul : [#users=1] = call_function[target=operator.mul](args = (%unsqueeze_1, %unsqueeze_2), kwargs = {})
    %byte : [#users=12] = call_function[target=torch.Tensor.byte](args = (%mul,), kwargs = {})
    %tensor_13 : [#users=2] = placeholder[target=tensor_13]
    %arange : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %arange_1 : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %getitem : [#users=1] = call_function[target=operator.getitem](args = (%arange, [slice(None, None, None), None]), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%arange_1, 1, -1), kwargs = {})
    %repeat : [#users=1] = call_function[target=torch.Tensor.repeat](args = (%view, 256, 1), kwargs = {})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%getitem, %repeat), kwargs = {})
    %getitem_1 : [#users=1] = call_function[target=operator.getitem](args = (%sub, [slice(None, 256, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_3 : [#users=12] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_1, 0), kwargs = {})
    %in_proj : [#users=1] = call_module[target=layer.0.attention.self.in_proj](args = (%tensor_13,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_3 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_4 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=layer.0.attention.self.q_bias]
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_5, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%getitem_2, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=layer.0.attention.self.v_bias]
    %getitem_6 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_6, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%getitem_4, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_1 : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt : [#users=2] = call_function[target=torch.sqrt](args = (%mul_1,), kwargs = {})
    %to : [#users=0] = call_method[target=to](args = (%sqrt,), kwargs = {dtype: torch.float32})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%add, %sqrt), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_3, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose), kwargs = {})
    %unsqueeze_4 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_4,), kwargs = {})
    %to_1 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_4, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_7 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_5 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_7, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=layer.0.attention.self.pos_proj](args = (%unsqueeze_5,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv, %transpose_1), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_4, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_2, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=layer.0.attention.self.pos_q_proj](args = (%unsqueeze_5,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_5, 0, 2, 1, 3), kwargs = {})
    %tensor_26 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%tensor_26, 3), kwargs = {})
    %sqrt_1 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_2,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_1), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_4,), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_3, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_3, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_4, %byte, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_1), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_6 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=layer.0.attention.output.dense](args = (%view_6,), kwargs = {})
    %add_5 : [#users=4] = call_function[target=operator.add](args = (%dense, %tensor_13), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_5,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%add_5, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_1, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%add_5, %mean), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%add_6,), kwargs = {})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%sub_2, %sqrt_2), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_1, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=layer.0.attention.output.LayerNorm.weight]
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv_1), kwargs = {})
    %bias : [#users=1] = get_attr[target=layer.0.attention.output.LayerNorm.bias]
    %add_7 : [#users=2] = call_function[target=operator.add](args = (%mul_3, %bias), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=layer.0.intermediate.dense](args = (%add_7,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=layer.0.output.dense](args = (%gelu,), kwargs = {})
    %add_8 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_7), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_8,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_8, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_3, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_4 : [#users=1] = call_function[target=operator.sub](args = (%add_8, %mean_2), kwargs = {})
    %add_9 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_9,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_4, %sqrt_3), kwargs = {})
    %to_4 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=layer.0.output.LayerNorm.weight]
    %mul_4 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=layer.0.output.LayerNorm.bias]
    %add_10 : [#users=2] = call_function[target=operator.add](args = (%mul_4, %bias_1), kwargs = {})
    %in_proj_1 : [#users=1] = call_module[target=layer.1.attention.self.in_proj](args = (%add_10,), kwargs = {})
    %view_7 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_1, [1, 256, 12, -1]), kwargs = {})
    %permute_6 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_7, 0, 2, 1, 3), kwargs = {})
    %chunk_1 : [#users=3] = call_method[target=chunk](args = (%permute_6, 3), kwargs = {dim: -1})
    %getitem_8 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_1, 0), kwargs = {})
    %getitem_9 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_1, 1), kwargs = {})
    %getitem_10 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_1, 2), kwargs = {})
    %q_bias_1 : [#users=1] = get_attr[target=layer.1.attention.self.q_bias]
    %getitem_11 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_1, [None, None, slice(None, None, None)]), kwargs = {})
    %view_8 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_11, [1, 1, 12, -1]), kwargs = {})
    %permute_7 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_8, 0, 2, 1, 3), kwargs = {})
    %add_11 : [#users=1] = call_function[target=operator.add](args = (%getitem_8, %permute_7), kwargs = {})
    %v_bias_1 : [#users=1] = get_attr[target=layer.1.attention.self.v_bias]
    %getitem_12 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_1, [None, None, slice(None, None, None)]), kwargs = {})
    %view_9 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_12, [1, 1, 12, -1]), kwargs = {})
    %permute_8 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_9, 0, 2, 1, 3), kwargs = {})
    %add_12 : [#users=1] = call_function[target=operator.add](args = (%getitem_10, %permute_8), kwargs = {})
    %tensor_27 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_5 : [#users=1] = call_function[target=operator.mul](args = (%tensor_27, 3), kwargs = {})
    %sqrt_4 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_5,), kwargs = {})
    %to_5 : [#users=0] = call_method[target=to](args = (%sqrt_4,), kwargs = {dtype: torch.float32})
    %truediv_3 : [#users=2] = call_function[target=operator.truediv](args = (%add_11, %sqrt_4), kwargs = {})
    %transpose_4 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_9, -1, -2), kwargs = {})
    %matmul_4 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_3, %transpose_4), kwargs = {})
    %unsqueeze_6 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_1 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_6,), kwargs = {})
    %to_6 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_6, cpu), kwargs = {})
    %__external_param__7 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_13 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__7, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_7 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_13, 0), kwargs = {})
    %pos_proj_1 : [#users=1] = call_module[target=layer.1.attention.self.pos_proj](args = (%unsqueeze_7,), kwargs = {})
    %view_10 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_1, [1, 512, 12, -1]), kwargs = {})
    %permute_9 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_10, 0, 2, 1, 3), kwargs = {})
    %transpose_5 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_9, -1, -2), kwargs = {})
    %matmul_5 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_3, %transpose_5), kwargs = {})
    %add_13 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_6, 256), kwargs = {})
    %clamp_2 : [#users=1] = call_function[target=torch.clamp](args = (%add_13, 0, 511), kwargs = {})
    %expand_2 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_2, [1, 12, 256, 256]), kwargs = {})
    %gather_2 : [#users=2] = call_function[target=torch.gather](args = (%matmul_5,), kwargs = {dim: -1, index: %expand_2})
    %full_like_1 : [#users=1] = call_function[target=torch.full_like](args = (%gather_2, 0), kwargs = {})
    %iadd_2 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_1, %gather_2), kwargs = {})
    %pos_q_proj_1 : [#users=1] = call_module[target=layer.1.attention.self.pos_q_proj](args = (%unsqueeze_7,), kwargs = {})
    %view_11 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_1, [1, 512, 12, -1]), kwargs = {})
    %permute_10 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_11, 0, 2, 1, 3), kwargs = {})
    %tensor_60 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_6 : [#users=1] = call_function[target=operator.mul](args = (%tensor_60, 3), kwargs = {})
    %sqrt_5 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_6,), kwargs = {})
    %itruediv_1 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_10, %sqrt_5), kwargs = {})
    %neg_1 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_6,), kwargs = {})
    %add_14 : [#users=1] = call_function[target=operator.add](args = (%neg_1, 256), kwargs = {})
    %clamp_3 : [#users=1] = call_function[target=torch.clamp](args = (%add_14, 0, 511), kwargs = {})
    %transpose_6 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_1, -1, -2), kwargs = {})
    %to_7 : [#users=0] = call_method[target=to](args = (%transpose_6,), kwargs = {dtype: torch.float32})
    %matmul_6 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_9, %transpose_6), kwargs = {})
    %expand_3 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_3, [1, 12, 256, 256]), kwargs = {})
    %gather_3 : [#users=1] = call_function[target=torch.gather](args = (%matmul_6,), kwargs = {dim: -1, index: %expand_3})
    %transpose_7 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_3, -1, -2), kwargs = {})
    %iadd_3 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_2, %transpose_7), kwargs = {})
    %add_15 : [#users=1] = call_function[target=operator.add](args = (%matmul_4, %iadd_3), kwargs = {})
    %apply_1 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_15, %byte, -1), kwargs = {})
    %matmul_7 : [#users=1] = call_function[target=torch.matmul](args = (%apply_1, %add_12), kwargs = {})
    %permute_11 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_7, 0, 2, 1, 3), kwargs = {})
    %contiguous_1 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_11,), kwargs = {})
    %view_12 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_1, [1, 256, -1]), kwargs = {})
    %dense_3 : [#users=1] = call_module[target=layer.1.attention.output.dense](args = (%view_12,), kwargs = {})
    %add_16 : [#users=4] = call_function[target=operator.add](args = (%dense_3, %add_10), kwargs = {})
    %float_3 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_16,), kwargs = {})
    %mean_4 : [#users=2] = call_method[target=mean](args = (%add_16, -1), kwargs = {keepdim: True})
    %sub_5 : [#users=1] = call_function[target=operator.sub](args = (%add_16, %mean_4), kwargs = {})
    %pow_3 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_5, 2), kwargs = {})
    %mean_5 : [#users=1] = call_method[target=mean](args = (%pow_3, -1), kwargs = {keepdim: True})
    %sub_6 : [#users=1] = call_function[target=operator.sub](args = (%add_16, %mean_4), kwargs = {})
    %add_17 : [#users=1] = call_function[target=operator.add](args = (%mean_5, 1e-07), kwargs = {})
    %sqrt_6 : [#users=1] = call_function[target=torch.sqrt](args = (%add_17,), kwargs = {})
    %truediv_4 : [#users=2] = call_function[target=operator.truediv](args = (%sub_6, %sqrt_6), kwargs = {})
    %to_8 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_4, torch.float32), kwargs = {})
    %weight_2 : [#users=1] = get_attr[target=layer.1.attention.output.LayerNorm.weight]
    %mul_7 : [#users=1] = call_function[target=operator.mul](args = (%weight_2, %truediv_4), kwargs = {})
    %bias_2 : [#users=1] = get_attr[target=layer.1.attention.output.LayerNorm.bias]
    %add_18 : [#users=2] = call_function[target=operator.add](args = (%mul_7, %bias_2), kwargs = {})
    %dense_4 : [#users=1] = call_module[target=layer.1.intermediate.dense](args = (%add_18,), kwargs = {})
    %gelu_1 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_4,), kwargs = {})
    %dense_5 : [#users=1] = call_module[target=layer.1.output.dense](args = (%gelu_1,), kwargs = {})
    %add_19 : [#users=4] = call_function[target=operator.add](args = (%dense_5, %add_18), kwargs = {})
    %float_4 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_19,), kwargs = {})
    %mean_6 : [#users=2] = call_method[target=mean](args = (%add_19, -1), kwargs = {keepdim: True})
    %sub_7 : [#users=1] = call_function[target=operator.sub](args = (%add_19, %mean_6), kwargs = {})
    %pow_4 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_7, 2), kwargs = {})
    %mean_7 : [#users=1] = call_method[target=mean](args = (%pow_4, -1), kwargs = {keepdim: True})
    %sub_8 : [#users=1] = call_function[target=operator.sub](args = (%add_19, %mean_6), kwargs = {})
    %add_20 : [#users=1] = call_function[target=operator.add](args = (%mean_7, 1e-07), kwargs = {})
    %sqrt_7 : [#users=1] = call_function[target=torch.sqrt](args = (%add_20,), kwargs = {})
    %truediv_5 : [#users=2] = call_function[target=operator.truediv](args = (%sub_8, %sqrt_7), kwargs = {})
    %to_9 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_5, torch.float32), kwargs = {})
    %weight_3 : [#users=1] = get_attr[target=layer.1.output.LayerNorm.weight]
    %mul_8 : [#users=1] = call_function[target=operator.mul](args = (%weight_3, %truediv_5), kwargs = {})
    %bias_3 : [#users=1] = get_attr[target=layer.1.output.LayerNorm.bias]
    %add_21 : [#users=2] = call_function[target=operator.add](args = (%mul_8, %bias_3), kwargs = {})
    %in_proj_2 : [#users=1] = call_module[target=layer.2.attention.self.in_proj](args = (%add_21,), kwargs = {})
    %view_13 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_2, [1, 256, 12, -1]), kwargs = {})
    %permute_12 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_13, 0, 2, 1, 3), kwargs = {})
    %chunk_2 : [#users=3] = call_method[target=chunk](args = (%permute_12, 3), kwargs = {dim: -1})
    %getitem_14 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_2, 0), kwargs = {})
    %getitem_15 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_2, 1), kwargs = {})
    %getitem_16 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_2, 2), kwargs = {})
    %q_bias_2 : [#users=1] = get_attr[target=layer.2.attention.self.q_bias]
    %getitem_17 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_2, [None, None, slice(None, None, None)]), kwargs = {})
    %view_14 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_17, [1, 1, 12, -1]), kwargs = {})
    %permute_13 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_14, 0, 2, 1, 3), kwargs = {})
    %add_22 : [#users=1] = call_function[target=operator.add](args = (%getitem_14, %permute_13), kwargs = {})
    %v_bias_2 : [#users=1] = get_attr[target=layer.2.attention.self.v_bias]
    %getitem_18 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_2, [None, None, slice(None, None, None)]), kwargs = {})
    %view_15 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_18, [1, 1, 12, -1]), kwargs = {})
    %permute_14 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_15, 0, 2, 1, 3), kwargs = {})
    %add_23 : [#users=1] = call_function[target=operator.add](args = (%getitem_16, %permute_14), kwargs = {})
    %tensor_61 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_9 : [#users=1] = call_function[target=operator.mul](args = (%tensor_61, 3), kwargs = {})
    %sqrt_8 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_9,), kwargs = {})
    %to_10 : [#users=0] = call_method[target=to](args = (%sqrt_8,), kwargs = {dtype: torch.float32})
    %truediv_6 : [#users=2] = call_function[target=operator.truediv](args = (%add_22, %sqrt_8), kwargs = {})
    %transpose_8 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_15, -1, -2), kwargs = {})
    %matmul_8 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_6, %transpose_8), kwargs = {})
    %unsqueeze_8 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_2 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_8,), kwargs = {})
    %to_11 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_8, cpu), kwargs = {})
    %__external_param__8 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_19 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__8, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_9 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_19, 0), kwargs = {})
    %pos_proj_2 : [#users=1] = call_module[target=layer.2.attention.self.pos_proj](args = (%unsqueeze_9,), kwargs = {})
    %view_16 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_2, [1, 512, 12, -1]), kwargs = {})
    %permute_15 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_16, 0, 2, 1, 3), kwargs = {})
    %transpose_9 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_15, -1, -2), kwargs = {})
    %matmul_9 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_6, %transpose_9), kwargs = {})
    %add_24 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_8, 256), kwargs = {})
    %clamp_4 : [#users=1] = call_function[target=torch.clamp](args = (%add_24, 0, 511), kwargs = {})
    %expand_4 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_4, [1, 12, 256, 256]), kwargs = {})
    %gather_4 : [#users=2] = call_function[target=torch.gather](args = (%matmul_9,), kwargs = {dim: -1, index: %expand_4})
    %full_like_2 : [#users=1] = call_function[target=torch.full_like](args = (%gather_4, 0), kwargs = {})
    %iadd_4 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_2, %gather_4), kwargs = {})
    %pos_q_proj_2 : [#users=1] = call_module[target=layer.2.attention.self.pos_q_proj](args = (%unsqueeze_9,), kwargs = {})
    %view_17 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_2, [1, 512, 12, -1]), kwargs = {})
    %permute_16 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_17, 0, 2, 1, 3), kwargs = {})
    %tensor_94 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_10 : [#users=1] = call_function[target=operator.mul](args = (%tensor_94, 3), kwargs = {})
    %sqrt_9 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_10,), kwargs = {})
    %itruediv_2 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_16, %sqrt_9), kwargs = {})
    %neg_2 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_8,), kwargs = {})
    %add_25 : [#users=1] = call_function[target=operator.add](args = (%neg_2, 256), kwargs = {})
    %clamp_5 : [#users=1] = call_function[target=torch.clamp](args = (%add_25, 0, 511), kwargs = {})
    %transpose_10 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_2, -1, -2), kwargs = {})
    %to_12 : [#users=0] = call_method[target=to](args = (%transpose_10,), kwargs = {dtype: torch.float32})
    %matmul_10 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_15, %transpose_10), kwargs = {})
    %expand_5 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_5, [1, 12, 256, 256]), kwargs = {})
    %gather_5 : [#users=1] = call_function[target=torch.gather](args = (%matmul_10,), kwargs = {dim: -1, index: %expand_5})
    %transpose_11 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_5, -1, -2), kwargs = {})
    %iadd_5 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_4, %transpose_11), kwargs = {})
    %add_26 : [#users=1] = call_function[target=operator.add](args = (%matmul_8, %iadd_5), kwargs = {})
    %apply_2 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_26, %byte, -1), kwargs = {})
    %matmul_11 : [#users=1] = call_function[target=torch.matmul](args = (%apply_2, %add_23), kwargs = {})
    %permute_17 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_11, 0, 2, 1, 3), kwargs = {})
    %contiguous_2 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_17,), kwargs = {})
    %view_18 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_2, [1, 256, -1]), kwargs = {})
    %dense_6 : [#users=1] = call_module[target=layer.2.attention.output.dense](args = (%view_18,), kwargs = {})
    %add_27 : [#users=4] = call_function[target=operator.add](args = (%dense_6, %add_21), kwargs = {})
    %float_5 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_27,), kwargs = {})
    %mean_8 : [#users=2] = call_method[target=mean](args = (%add_27, -1), kwargs = {keepdim: True})
    %sub_9 : [#users=1] = call_function[target=operator.sub](args = (%add_27, %mean_8), kwargs = {})
    %pow_5 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_9, 2), kwargs = {})
    %mean_9 : [#users=1] = call_method[target=mean](args = (%pow_5, -1), kwargs = {keepdim: True})
    %sub_10 : [#users=1] = call_function[target=operator.sub](args = (%add_27, %mean_8), kwargs = {})
    %add_28 : [#users=1] = call_function[target=operator.add](args = (%mean_9, 1e-07), kwargs = {})
    %sqrt_10 : [#users=1] = call_function[target=torch.sqrt](args = (%add_28,), kwargs = {})
    %truediv_7 : [#users=2] = call_function[target=operator.truediv](args = (%sub_10, %sqrt_10), kwargs = {})
    %to_13 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_7, torch.float32), kwargs = {})
    %weight_4 : [#users=1] = get_attr[target=layer.2.attention.output.LayerNorm.weight]
    %mul_11 : [#users=1] = call_function[target=operator.mul](args = (%weight_4, %truediv_7), kwargs = {})
    %bias_4 : [#users=1] = get_attr[target=layer.2.attention.output.LayerNorm.bias]
    %add_29 : [#users=2] = call_function[target=operator.add](args = (%mul_11, %bias_4), kwargs = {})
    %dense_7 : [#users=1] = call_module[target=layer.2.intermediate.dense](args = (%add_29,), kwargs = {})
    %gelu_2 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_7,), kwargs = {})
    %dense_8 : [#users=1] = call_module[target=layer.2.output.dense](args = (%gelu_2,), kwargs = {})
    %add_30 : [#users=4] = call_function[target=operator.add](args = (%dense_8, %add_29), kwargs = {})
    %float_6 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_30,), kwargs = {})
    %mean_10 : [#users=2] = call_method[target=mean](args = (%add_30, -1), kwargs = {keepdim: True})
    %sub_11 : [#users=1] = call_function[target=operator.sub](args = (%add_30, %mean_10), kwargs = {})
    %pow_6 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_11, 2), kwargs = {})
    %mean_11 : [#users=1] = call_method[target=mean](args = (%pow_6, -1), kwargs = {keepdim: True})
    %sub_12 : [#users=1] = call_function[target=operator.sub](args = (%add_30, %mean_10), kwargs = {})
    %add_31 : [#users=1] = call_function[target=operator.add](args = (%mean_11, 1e-07), kwargs = {})
    %sqrt_11 : [#users=1] = call_function[target=torch.sqrt](args = (%add_31,), kwargs = {})
    %truediv_8 : [#users=2] = call_function[target=operator.truediv](args = (%sub_12, %sqrt_11), kwargs = {})
    %to_14 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_8, torch.float32), kwargs = {})
    %weight_5 : [#users=1] = get_attr[target=layer.2.output.LayerNorm.weight]
    %mul_12 : [#users=1] = call_function[target=operator.mul](args = (%weight_5, %truediv_8), kwargs = {})
    %bias_5 : [#users=1] = get_attr[target=layer.2.output.LayerNorm.bias]
    %add_32 : [#users=2] = call_function[target=operator.add](args = (%mul_12, %bias_5), kwargs = {})
    %in_proj_3 : [#users=1] = call_module[target=layer.3.attention.self.in_proj](args = (%add_32,), kwargs = {})
    %view_19 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_3, [1, 256, 12, -1]), kwargs = {})
    %permute_18 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_19, 0, 2, 1, 3), kwargs = {})
    %chunk_3 : [#users=3] = call_method[target=chunk](args = (%permute_18, 3), kwargs = {dim: -1})
    %getitem_20 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_3, 0), kwargs = {})
    %getitem_21 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_3, 1), kwargs = {})
    %getitem_22 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_3, 2), kwargs = {})
    %q_bias_3 : [#users=1] = get_attr[target=layer.3.attention.self.q_bias]
    %getitem_23 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_3, [None, None, slice(None, None, None)]), kwargs = {})
    %view_20 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_23, [1, 1, 12, -1]), kwargs = {})
    %permute_19 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_20, 0, 2, 1, 3), kwargs = {})
    %add_33 : [#users=1] = call_function[target=operator.add](args = (%getitem_20, %permute_19), kwargs = {})
    %v_bias_3 : [#users=1] = get_attr[target=layer.3.attention.self.v_bias]
    %getitem_24 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_3, [None, None, slice(None, None, None)]), kwargs = {})
    %view_21 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_24, [1, 1, 12, -1]), kwargs = {})
    %permute_20 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_21, 0, 2, 1, 3), kwargs = {})
    %add_34 : [#users=1] = call_function[target=operator.add](args = (%getitem_22, %permute_20), kwargs = {})
    %tensor_95 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_13 : [#users=1] = call_function[target=operator.mul](args = (%tensor_95, 3), kwargs = {})
    %sqrt_12 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_13,), kwargs = {})
    %to_15 : [#users=0] = call_method[target=to](args = (%sqrt_12,), kwargs = {dtype: torch.float32})
    %truediv_9 : [#users=2] = call_function[target=operator.truediv](args = (%add_33, %sqrt_12), kwargs = {})
    %transpose_12 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_21, -1, -2), kwargs = {})
    %matmul_12 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_9, %transpose_12), kwargs = {})
    %unsqueeze_10 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_3 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_10,), kwargs = {})
    %to_16 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_10, cpu), kwargs = {})
    %__external_param__9 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_25 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__9, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_11 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_25, 0), kwargs = {})
    %pos_proj_3 : [#users=1] = call_module[target=layer.3.attention.self.pos_proj](args = (%unsqueeze_11,), kwargs = {})
    %view_22 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_3, [1, 512, 12, -1]), kwargs = {})
    %permute_21 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_22, 0, 2, 1, 3), kwargs = {})
    %transpose_13 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_21, -1, -2), kwargs = {})
    %matmul_13 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_9, %transpose_13), kwargs = {})
    %add_35 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_10, 256), kwargs = {})
    %clamp_6 : [#users=1] = call_function[target=torch.clamp](args = (%add_35, 0, 511), kwargs = {})
    %expand_6 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_6, [1, 12, 256, 256]), kwargs = {})
    %gather_6 : [#users=2] = call_function[target=torch.gather](args = (%matmul_13,), kwargs = {dim: -1, index: %expand_6})
    %full_like_3 : [#users=1] = call_function[target=torch.full_like](args = (%gather_6, 0), kwargs = {})
    %iadd_6 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_3, %gather_6), kwargs = {})
    %pos_q_proj_3 : [#users=1] = call_module[target=layer.3.attention.self.pos_q_proj](args = (%unsqueeze_11,), kwargs = {})
    %view_23 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_3, [1, 512, 12, -1]), kwargs = {})
    %permute_22 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_23, 0, 2, 1, 3), kwargs = {})
    %tensor_128 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_14 : [#users=1] = call_function[target=operator.mul](args = (%tensor_128, 3), kwargs = {})
    %sqrt_13 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_14,), kwargs = {})
    %itruediv_3 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_22, %sqrt_13), kwargs = {})
    %neg_3 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_10,), kwargs = {})
    %add_36 : [#users=1] = call_function[target=operator.add](args = (%neg_3, 256), kwargs = {})
    %clamp_7 : [#users=1] = call_function[target=torch.clamp](args = (%add_36, 0, 511), kwargs = {})
    %transpose_14 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_3, -1, -2), kwargs = {})
    %to_17 : [#users=0] = call_method[target=to](args = (%transpose_14,), kwargs = {dtype: torch.float32})
    %matmul_14 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_21, %transpose_14), kwargs = {})
    %expand_7 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_7, [1, 12, 256, 256]), kwargs = {})
    %gather_7 : [#users=1] = call_function[target=torch.gather](args = (%matmul_14,), kwargs = {dim: -1, index: %expand_7})
    %transpose_15 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_7, -1, -2), kwargs = {})
    %iadd_7 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_6, %transpose_15), kwargs = {})
    %add_37 : [#users=1] = call_function[target=operator.add](args = (%matmul_12, %iadd_7), kwargs = {})
    %apply_3 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_37, %byte, -1), kwargs = {})
    %matmul_15 : [#users=1] = call_function[target=torch.matmul](args = (%apply_3, %add_34), kwargs = {})
    %permute_23 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_15, 0, 2, 1, 3), kwargs = {})
    %contiguous_3 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_23,), kwargs = {})
    %view_24 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_3, [1, 256, -1]), kwargs = {})
    %dense_9 : [#users=1] = call_module[target=layer.3.attention.output.dense](args = (%view_24,), kwargs = {})
    %add_38 : [#users=4] = call_function[target=operator.add](args = (%dense_9, %add_32), kwargs = {})
    %float_7 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_38,), kwargs = {})
    %mean_12 : [#users=2] = call_method[target=mean](args = (%add_38, -1), kwargs = {keepdim: True})
    %sub_13 : [#users=1] = call_function[target=operator.sub](args = (%add_38, %mean_12), kwargs = {})
    %pow_7 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_13, 2), kwargs = {})
    %mean_13 : [#users=1] = call_method[target=mean](args = (%pow_7, -1), kwargs = {keepdim: True})
    %sub_14 : [#users=1] = call_function[target=operator.sub](args = (%add_38, %mean_12), kwargs = {})
    %add_39 : [#users=1] = call_function[target=operator.add](args = (%mean_13, 1e-07), kwargs = {})
    %sqrt_14 : [#users=1] = call_function[target=torch.sqrt](args = (%add_39,), kwargs = {})
    %truediv_10 : [#users=2] = call_function[target=operator.truediv](args = (%sub_14, %sqrt_14), kwargs = {})
    %to_18 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_10, torch.float32), kwargs = {})
    %weight_6 : [#users=1] = get_attr[target=layer.3.attention.output.LayerNorm.weight]
    %mul_15 : [#users=1] = call_function[target=operator.mul](args = (%weight_6, %truediv_10), kwargs = {})
    %bias_6 : [#users=1] = get_attr[target=layer.3.attention.output.LayerNorm.bias]
    %add_40 : [#users=2] = call_function[target=operator.add](args = (%mul_15, %bias_6), kwargs = {})
    %dense_10 : [#users=1] = call_module[target=layer.3.intermediate.dense](args = (%add_40,), kwargs = {})
    %gelu_3 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_10,), kwargs = {})
    %dense_11 : [#users=1] = call_module[target=layer.3.output.dense](args = (%gelu_3,), kwargs = {})
    %add_41 : [#users=4] = call_function[target=operator.add](args = (%dense_11, %add_40), kwargs = {})
    %float_8 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_41,), kwargs = {})
    %mean_14 : [#users=2] = call_method[target=mean](args = (%add_41, -1), kwargs = {keepdim: True})
    %sub_15 : [#users=1] = call_function[target=operator.sub](args = (%add_41, %mean_14), kwargs = {})
    %pow_8 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_15, 2), kwargs = {})
    %mean_15 : [#users=1] = call_method[target=mean](args = (%pow_8, -1), kwargs = {keepdim: True})
    %sub_16 : [#users=1] = call_function[target=operator.sub](args = (%add_41, %mean_14), kwargs = {})
    %add_42 : [#users=1] = call_function[target=operator.add](args = (%mean_15, 1e-07), kwargs = {})
    %sqrt_15 : [#users=1] = call_function[target=torch.sqrt](args = (%add_42,), kwargs = {})
    %truediv_11 : [#users=2] = call_function[target=operator.truediv](args = (%sub_16, %sqrt_15), kwargs = {})
    %to_19 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_11, torch.float32), kwargs = {})
    %weight_7 : [#users=1] = get_attr[target=layer.3.output.LayerNorm.weight]
    %mul_16 : [#users=1] = call_function[target=operator.mul](args = (%weight_7, %truediv_11), kwargs = {})
    %bias_7 : [#users=1] = get_attr[target=layer.3.output.LayerNorm.bias]
    %add_43 : [#users=2] = call_function[target=operator.add](args = (%mul_16, %bias_7), kwargs = {})
    %in_proj_4 : [#users=1] = call_module[target=layer.4.attention.self.in_proj](args = (%add_43,), kwargs = {})
    %view_25 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_4, [1, 256, 12, -1]), kwargs = {})
    %permute_24 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_25, 0, 2, 1, 3), kwargs = {})
    %chunk_4 : [#users=3] = call_method[target=chunk](args = (%permute_24, 3), kwargs = {dim: -1})
    %getitem_26 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_4, 0), kwargs = {})
    %getitem_27 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_4, 1), kwargs = {})
    %getitem_28 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_4, 2), kwargs = {})
    %q_bias_4 : [#users=1] = get_attr[target=layer.4.attention.self.q_bias]
    %getitem_29 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_4, [None, None, slice(None, None, None)]), kwargs = {})
    %view_26 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_29, [1, 1, 12, -1]), kwargs = {})
    %permute_25 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_26, 0, 2, 1, 3), kwargs = {})
    %add_44 : [#users=1] = call_function[target=operator.add](args = (%getitem_26, %permute_25), kwargs = {})
    %v_bias_4 : [#users=1] = get_attr[target=layer.4.attention.self.v_bias]
    %getitem_30 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_4, [None, None, slice(None, None, None)]), kwargs = {})
    %view_27 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_30, [1, 1, 12, -1]), kwargs = {})
    %permute_26 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_27, 0, 2, 1, 3), kwargs = {})
    %add_45 : [#users=1] = call_function[target=operator.add](args = (%getitem_28, %permute_26), kwargs = {})
    %tensor_129 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_17 : [#users=1] = call_function[target=operator.mul](args = (%tensor_129, 3), kwargs = {})
    %sqrt_16 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_17,), kwargs = {})
    %to_20 : [#users=0] = call_method[target=to](args = (%sqrt_16,), kwargs = {dtype: torch.float32})
    %truediv_12 : [#users=2] = call_function[target=operator.truediv](args = (%add_44, %sqrt_16), kwargs = {})
    %transpose_16 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_27, -1, -2), kwargs = {})
    %matmul_16 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_12, %transpose_16), kwargs = {})
    %unsqueeze_12 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_4 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_12,), kwargs = {})
    %to_21 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_12, cpu), kwargs = {})
    %__external_param__10 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_31 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__10, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_13 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_31, 0), kwargs = {})
    %pos_proj_4 : [#users=1] = call_module[target=layer.4.attention.self.pos_proj](args = (%unsqueeze_13,), kwargs = {})
    %view_28 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_4, [1, 512, 12, -1]), kwargs = {})
    %permute_27 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_28, 0, 2, 1, 3), kwargs = {})
    %transpose_17 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_27, -1, -2), kwargs = {})
    %matmul_17 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_12, %transpose_17), kwargs = {})
    %add_46 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_12, 256), kwargs = {})
    %clamp_8 : [#users=1] = call_function[target=torch.clamp](args = (%add_46, 0, 511), kwargs = {})
    %expand_8 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_8, [1, 12, 256, 256]), kwargs = {})
    %gather_8 : [#users=2] = call_function[target=torch.gather](args = (%matmul_17,), kwargs = {dim: -1, index: %expand_8})
    %full_like_4 : [#users=1] = call_function[target=torch.full_like](args = (%gather_8, 0), kwargs = {})
    %iadd_8 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_4, %gather_8), kwargs = {})
    %pos_q_proj_4 : [#users=1] = call_module[target=layer.4.attention.self.pos_q_proj](args = (%unsqueeze_13,), kwargs = {})
    %view_29 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_4, [1, 512, 12, -1]), kwargs = {})
    %permute_28 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_29, 0, 2, 1, 3), kwargs = {})
    %tensor_162 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_18 : [#users=1] = call_function[target=operator.mul](args = (%tensor_162, 3), kwargs = {})
    %sqrt_17 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_18,), kwargs = {})
    %itruediv_4 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_28, %sqrt_17), kwargs = {})
    %neg_4 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_12,), kwargs = {})
    %add_47 : [#users=1] = call_function[target=operator.add](args = (%neg_4, 256), kwargs = {})
    %clamp_9 : [#users=1] = call_function[target=torch.clamp](args = (%add_47, 0, 511), kwargs = {})
    %transpose_18 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_4, -1, -2), kwargs = {})
    %to_22 : [#users=0] = call_method[target=to](args = (%transpose_18,), kwargs = {dtype: torch.float32})
    %matmul_18 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_27, %transpose_18), kwargs = {})
    %expand_9 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_9, [1, 12, 256, 256]), kwargs = {})
    %gather_9 : [#users=1] = call_function[target=torch.gather](args = (%matmul_18,), kwargs = {dim: -1, index: %expand_9})
    %transpose_19 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_9, -1, -2), kwargs = {})
    %iadd_9 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_8, %transpose_19), kwargs = {})
    %add_48 : [#users=1] = call_function[target=operator.add](args = (%matmul_16, %iadd_9), kwargs = {})
    %apply_4 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_48, %byte, -1), kwargs = {})
    %matmul_19 : [#users=1] = call_function[target=torch.matmul](args = (%apply_4, %add_45), kwargs = {})
    %permute_29 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_19, 0, 2, 1, 3), kwargs = {})
    %contiguous_4 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_29,), kwargs = {})
    %view_30 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_4, [1, 256, -1]), kwargs = {})
    %dense_12 : [#users=1] = call_module[target=layer.4.attention.output.dense](args = (%view_30,), kwargs = {})
    %add_49 : [#users=4] = call_function[target=operator.add](args = (%dense_12, %add_43), kwargs = {})
    %float_9 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_49,), kwargs = {})
    %mean_16 : [#users=2] = call_method[target=mean](args = (%add_49, -1), kwargs = {keepdim: True})
    %sub_17 : [#users=1] = call_function[target=operator.sub](args = (%add_49, %mean_16), kwargs = {})
    %pow_9 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_17, 2), kwargs = {})
    %mean_17 : [#users=1] = call_method[target=mean](args = (%pow_9, -1), kwargs = {keepdim: True})
    %sub_18 : [#users=1] = call_function[target=operator.sub](args = (%add_49, %mean_16), kwargs = {})
    %add_50 : [#users=1] = call_function[target=operator.add](args = (%mean_17, 1e-07), kwargs = {})
    %sqrt_18 : [#users=1] = call_function[target=torch.sqrt](args = (%add_50,), kwargs = {})
    %truediv_13 : [#users=2] = call_function[target=operator.truediv](args = (%sub_18, %sqrt_18), kwargs = {})
    %to_23 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_13, torch.float32), kwargs = {})
    %weight_8 : [#users=1] = get_attr[target=layer.4.attention.output.LayerNorm.weight]
    %mul_19 : [#users=1] = call_function[target=operator.mul](args = (%weight_8, %truediv_13), kwargs = {})
    %bias_8 : [#users=1] = get_attr[target=layer.4.attention.output.LayerNorm.bias]
    %add_51 : [#users=2] = call_function[target=operator.add](args = (%mul_19, %bias_8), kwargs = {})
    %dense_13 : [#users=1] = call_module[target=layer.4.intermediate.dense](args = (%add_51,), kwargs = {})
    %gelu_4 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_13,), kwargs = {})
    %dense_14 : [#users=1] = call_module[target=layer.4.output.dense](args = (%gelu_4,), kwargs = {})
    %add_52 : [#users=4] = call_function[target=operator.add](args = (%dense_14, %add_51), kwargs = {})
    %float_10 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_52,), kwargs = {})
    %mean_18 : [#users=2] = call_method[target=mean](args = (%add_52, -1), kwargs = {keepdim: True})
    %sub_19 : [#users=1] = call_function[target=operator.sub](args = (%add_52, %mean_18), kwargs = {})
    %pow_10 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_19, 2), kwargs = {})
    %mean_19 : [#users=1] = call_method[target=mean](args = (%pow_10, -1), kwargs = {keepdim: True})
    %sub_20 : [#users=1] = call_function[target=operator.sub](args = (%add_52, %mean_18), kwargs = {})
    %add_53 : [#users=1] = call_function[target=operator.add](args = (%mean_19, 1e-07), kwargs = {})
    %sqrt_19 : [#users=1] = call_function[target=torch.sqrt](args = (%add_53,), kwargs = {})
    %truediv_14 : [#users=2] = call_function[target=operator.truediv](args = (%sub_20, %sqrt_19), kwargs = {})
    %to_24 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_14, torch.float32), kwargs = {})
    %weight_9 : [#users=1] = get_attr[target=layer.4.output.LayerNorm.weight]
    %mul_20 : [#users=1] = call_function[target=operator.mul](args = (%weight_9, %truediv_14), kwargs = {})
    %bias_9 : [#users=1] = get_attr[target=layer.4.output.LayerNorm.bias]
    %add_54 : [#users=2] = call_function[target=operator.add](args = (%mul_20, %bias_9), kwargs = {})
    %in_proj_5 : [#users=1] = call_module[target=layer.5.attention.self.in_proj](args = (%add_54,), kwargs = {})
    %view_31 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_5, [1, 256, 12, -1]), kwargs = {})
    %permute_30 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_31, 0, 2, 1, 3), kwargs = {})
    %chunk_5 : [#users=3] = call_method[target=chunk](args = (%permute_30, 3), kwargs = {dim: -1})
    %getitem_32 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_5, 0), kwargs = {})
    %getitem_33 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_5, 1), kwargs = {})
    %getitem_34 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_5, 2), kwargs = {})
    %q_bias_5 : [#users=1] = get_attr[target=layer.5.attention.self.q_bias]
    %getitem_35 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_5, [None, None, slice(None, None, None)]), kwargs = {})
    %view_32 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_35, [1, 1, 12, -1]), kwargs = {})
    %permute_31 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_32, 0, 2, 1, 3), kwargs = {})
    %add_55 : [#users=1] = call_function[target=operator.add](args = (%getitem_32, %permute_31), kwargs = {})
    %v_bias_5 : [#users=1] = get_attr[target=layer.5.attention.self.v_bias]
    %getitem_36 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_5, [None, None, slice(None, None, None)]), kwargs = {})
    %view_33 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_36, [1, 1, 12, -1]), kwargs = {})
    %permute_32 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_33, 0, 2, 1, 3), kwargs = {})
    %add_56 : [#users=1] = call_function[target=operator.add](args = (%getitem_34, %permute_32), kwargs = {})
    %tensor_163 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_21 : [#users=1] = call_function[target=operator.mul](args = (%tensor_163, 3), kwargs = {})
    %sqrt_20 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_21,), kwargs = {})
    %to_25 : [#users=0] = call_method[target=to](args = (%sqrt_20,), kwargs = {dtype: torch.float32})
    %truediv_15 : [#users=2] = call_function[target=operator.truediv](args = (%add_55, %sqrt_20), kwargs = {})
    %transpose_20 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_33, -1, -2), kwargs = {})
    %matmul_20 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_15, %transpose_20), kwargs = {})
    %unsqueeze_14 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_5 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_14,), kwargs = {})
    %to_26 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_14, cpu), kwargs = {})
    %__external_param__11 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_37 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__11, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_15 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_37, 0), kwargs = {})
    %pos_proj_5 : [#users=1] = call_module[target=layer.5.attention.self.pos_proj](args = (%unsqueeze_15,), kwargs = {})
    %view_34 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_5, [1, 512, 12, -1]), kwargs = {})
    %permute_33 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_34, 0, 2, 1, 3), kwargs = {})
    %transpose_21 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_33, -1, -2), kwargs = {})
    %matmul_21 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_15, %transpose_21), kwargs = {})
    %add_57 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_14, 256), kwargs = {})
    %clamp_10 : [#users=1] = call_function[target=torch.clamp](args = (%add_57, 0, 511), kwargs = {})
    %expand_10 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_10, [1, 12, 256, 256]), kwargs = {})
    %gather_10 : [#users=2] = call_function[target=torch.gather](args = (%matmul_21,), kwargs = {dim: -1, index: %expand_10})
    %full_like_5 : [#users=1] = call_function[target=torch.full_like](args = (%gather_10, 0), kwargs = {})
    %iadd_10 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_5, %gather_10), kwargs = {})
    %pos_q_proj_5 : [#users=1] = call_module[target=layer.5.attention.self.pos_q_proj](args = (%unsqueeze_15,), kwargs = {})
    %view_35 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_5, [1, 512, 12, -1]), kwargs = {})
    %permute_34 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_35, 0, 2, 1, 3), kwargs = {})
    %tensor_196 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_22 : [#users=1] = call_function[target=operator.mul](args = (%tensor_196, 3), kwargs = {})
    %sqrt_21 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_22,), kwargs = {})
    %itruediv_5 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_34, %sqrt_21), kwargs = {})
    %neg_5 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_14,), kwargs = {})
    %add_58 : [#users=1] = call_function[target=operator.add](args = (%neg_5, 256), kwargs = {})
    %clamp_11 : [#users=1] = call_function[target=torch.clamp](args = (%add_58, 0, 511), kwargs = {})
    %transpose_22 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_5, -1, -2), kwargs = {})
    %to_27 : [#users=0] = call_method[target=to](args = (%transpose_22,), kwargs = {dtype: torch.float32})
    %matmul_22 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_33, %transpose_22), kwargs = {})
    %expand_11 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_11, [1, 12, 256, 256]), kwargs = {})
    %gather_11 : [#users=1] = call_function[target=torch.gather](args = (%matmul_22,), kwargs = {dim: -1, index: %expand_11})
    %transpose_23 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_11, -1, -2), kwargs = {})
    %iadd_11 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_10, %transpose_23), kwargs = {})
    %add_59 : [#users=1] = call_function[target=operator.add](args = (%matmul_20, %iadd_11), kwargs = {})
    %apply_5 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_59, %byte, -1), kwargs = {})
    %matmul_23 : [#users=1] = call_function[target=torch.matmul](args = (%apply_5, %add_56), kwargs = {})
    %permute_35 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_23, 0, 2, 1, 3), kwargs = {})
    %contiguous_5 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_35,), kwargs = {})
    %view_36 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_5, [1, 256, -1]), kwargs = {})
    %dense_15 : [#users=1] = call_module[target=layer.5.attention.output.dense](args = (%view_36,), kwargs = {})
    %add_60 : [#users=4] = call_function[target=operator.add](args = (%dense_15, %add_54), kwargs = {})
    %float_11 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_60,), kwargs = {})
    %mean_20 : [#users=2] = call_method[target=mean](args = (%add_60, -1), kwargs = {keepdim: True})
    %sub_21 : [#users=1] = call_function[target=operator.sub](args = (%add_60, %mean_20), kwargs = {})
    %pow_11 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_21, 2), kwargs = {})
    %mean_21 : [#users=1] = call_method[target=mean](args = (%pow_11, -1), kwargs = {keepdim: True})
    %sub_22 : [#users=1] = call_function[target=operator.sub](args = (%add_60, %mean_20), kwargs = {})
    %add_61 : [#users=1] = call_function[target=operator.add](args = (%mean_21, 1e-07), kwargs = {})
    %sqrt_22 : [#users=1] = call_function[target=torch.sqrt](args = (%add_61,), kwargs = {})
    %truediv_16 : [#users=2] = call_function[target=operator.truediv](args = (%sub_22, %sqrt_22), kwargs = {})
    %to_28 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_16, torch.float32), kwargs = {})
    %weight_10 : [#users=1] = get_attr[target=layer.5.attention.output.LayerNorm.weight]
    %mul_23 : [#users=1] = call_function[target=operator.mul](args = (%weight_10, %truediv_16), kwargs = {})
    %bias_10 : [#users=1] = get_attr[target=layer.5.attention.output.LayerNorm.bias]
    %add_62 : [#users=2] = call_function[target=operator.add](args = (%mul_23, %bias_10), kwargs = {})
    %dense_16 : [#users=1] = call_module[target=layer.5.intermediate.dense](args = (%add_62,), kwargs = {})
    %gelu_5 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_16,), kwargs = {})
    %dense_17 : [#users=1] = call_module[target=layer.5.output.dense](args = (%gelu_5,), kwargs = {})
    %add_63 : [#users=4] = call_function[target=operator.add](args = (%dense_17, %add_62), kwargs = {})
    %float_12 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_63,), kwargs = {})
    %mean_22 : [#users=2] = call_method[target=mean](args = (%add_63, -1), kwargs = {keepdim: True})
    %sub_23 : [#users=1] = call_function[target=operator.sub](args = (%add_63, %mean_22), kwargs = {})
    %pow_12 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_23, 2), kwargs = {})
    %mean_23 : [#users=1] = call_method[target=mean](args = (%pow_12, -1), kwargs = {keepdim: True})
    %sub_24 : [#users=1] = call_function[target=operator.sub](args = (%add_63, %mean_22), kwargs = {})
    %add_64 : [#users=1] = call_function[target=operator.add](args = (%mean_23, 1e-07), kwargs = {})
    %sqrt_23 : [#users=1] = call_function[target=torch.sqrt](args = (%add_64,), kwargs = {})
    %truediv_17 : [#users=2] = call_function[target=operator.truediv](args = (%sub_24, %sqrt_23), kwargs = {})
    %to_29 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_17, torch.float32), kwargs = {})
    %weight_11 : [#users=1] = get_attr[target=layer.5.output.LayerNorm.weight]
    %mul_24 : [#users=1] = call_function[target=operator.mul](args = (%weight_11, %truediv_17), kwargs = {})
    %bias_11 : [#users=1] = get_attr[target=layer.5.output.LayerNorm.bias]
    %add_65 : [#users=2] = call_function[target=operator.add](args = (%mul_24, %bias_11), kwargs = {})
    %in_proj_6 : [#users=1] = call_module[target=layer.6.attention.self.in_proj](args = (%add_65,), kwargs = {})
    %view_37 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_6, [1, 256, 12, -1]), kwargs = {})
    %permute_36 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_37, 0, 2, 1, 3), kwargs = {})
    %chunk_6 : [#users=3] = call_method[target=chunk](args = (%permute_36, 3), kwargs = {dim: -1})
    %getitem_38 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_6, 0), kwargs = {})
    %getitem_39 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_6, 1), kwargs = {})
    %getitem_40 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_6, 2), kwargs = {})
    %q_bias_6 : [#users=1] = get_attr[target=layer.6.attention.self.q_bias]
    %getitem_41 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_6, [None, None, slice(None, None, None)]), kwargs = {})
    %view_38 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_41, [1, 1, 12, -1]), kwargs = {})
    %permute_37 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_38, 0, 2, 1, 3), kwargs = {})
    %add_66 : [#users=1] = call_function[target=operator.add](args = (%getitem_38, %permute_37), kwargs = {})
    %v_bias_6 : [#users=1] = get_attr[target=layer.6.attention.self.v_bias]
    %getitem_42 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_6, [None, None, slice(None, None, None)]), kwargs = {})
    %view_39 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_42, [1, 1, 12, -1]), kwargs = {})
    %permute_38 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_39, 0, 2, 1, 3), kwargs = {})
    %add_67 : [#users=1] = call_function[target=operator.add](args = (%getitem_40, %permute_38), kwargs = {})
    %tensor_197 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_25 : [#users=1] = call_function[target=operator.mul](args = (%tensor_197, 3), kwargs = {})
    %sqrt_24 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_25,), kwargs = {})
    %to_30 : [#users=0] = call_method[target=to](args = (%sqrt_24,), kwargs = {dtype: torch.float32})
    %truediv_18 : [#users=2] = call_function[target=operator.truediv](args = (%add_66, %sqrt_24), kwargs = {})
    %transpose_24 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_39, -1, -2), kwargs = {})
    %matmul_24 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_18, %transpose_24), kwargs = {})
    %unsqueeze_16 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_6 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_16,), kwargs = {})
    %to_31 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_16, cpu), kwargs = {})
    %__external_param__12 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_43 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__12, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_17 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_43, 0), kwargs = {})
    %pos_proj_6 : [#users=1] = call_module[target=layer.6.attention.self.pos_proj](args = (%unsqueeze_17,), kwargs = {})
    %view_40 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_6, [1, 512, 12, -1]), kwargs = {})
    %permute_39 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_40, 0, 2, 1, 3), kwargs = {})
    %transpose_25 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_39, -1, -2), kwargs = {})
    %matmul_25 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_18, %transpose_25), kwargs = {})
    %add_68 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_16, 256), kwargs = {})
    %clamp_12 : [#users=1] = call_function[target=torch.clamp](args = (%add_68, 0, 511), kwargs = {})
    %expand_12 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_12, [1, 12, 256, 256]), kwargs = {})
    %gather_12 : [#users=2] = call_function[target=torch.gather](args = (%matmul_25,), kwargs = {dim: -1, index: %expand_12})
    %full_like_6 : [#users=1] = call_function[target=torch.full_like](args = (%gather_12, 0), kwargs = {})
    %iadd_12 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_6, %gather_12), kwargs = {})
    %pos_q_proj_6 : [#users=1] = call_module[target=layer.6.attention.self.pos_q_proj](args = (%unsqueeze_17,), kwargs = {})
    %view_41 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_6, [1, 512, 12, -1]), kwargs = {})
    %permute_40 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_41, 0, 2, 1, 3), kwargs = {})
    %tensor_230 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_26 : [#users=1] = call_function[target=operator.mul](args = (%tensor_230, 3), kwargs = {})
    %sqrt_25 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_26,), kwargs = {})
    %itruediv_6 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_40, %sqrt_25), kwargs = {})
    %neg_6 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_16,), kwargs = {})
    %add_69 : [#users=1] = call_function[target=operator.add](args = (%neg_6, 256), kwargs = {})
    %clamp_13 : [#users=1] = call_function[target=torch.clamp](args = (%add_69, 0, 511), kwargs = {})
    %transpose_26 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_6, -1, -2), kwargs = {})
    %to_32 : [#users=0] = call_method[target=to](args = (%transpose_26,), kwargs = {dtype: torch.float32})
    %matmul_26 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_39, %transpose_26), kwargs = {})
    %expand_13 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_13, [1, 12, 256, 256]), kwargs = {})
    %gather_13 : [#users=1] = call_function[target=torch.gather](args = (%matmul_26,), kwargs = {dim: -1, index: %expand_13})
    %transpose_27 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_13, -1, -2), kwargs = {})
    %iadd_13 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_12, %transpose_27), kwargs = {})
    %add_70 : [#users=1] = call_function[target=operator.add](args = (%matmul_24, %iadd_13), kwargs = {})
    %apply_6 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_70, %byte, -1), kwargs = {})
    %matmul_27 : [#users=1] = call_function[target=torch.matmul](args = (%apply_6, %add_67), kwargs = {})
    %permute_41 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_27, 0, 2, 1, 3), kwargs = {})
    %contiguous_6 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_41,), kwargs = {})
    %view_42 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_6, [1, 256, -1]), kwargs = {})
    %dense_18 : [#users=1] = call_module[target=layer.6.attention.output.dense](args = (%view_42,), kwargs = {})
    %add_71 : [#users=4] = call_function[target=operator.add](args = (%dense_18, %add_65), kwargs = {})
    %float_13 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_71,), kwargs = {})
    %mean_24 : [#users=2] = call_method[target=mean](args = (%add_71, -1), kwargs = {keepdim: True})
    %sub_25 : [#users=1] = call_function[target=operator.sub](args = (%add_71, %mean_24), kwargs = {})
    %pow_13 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_25, 2), kwargs = {})
    %mean_25 : [#users=1] = call_method[target=mean](args = (%pow_13, -1), kwargs = {keepdim: True})
    %sub_26 : [#users=1] = call_function[target=operator.sub](args = (%add_71, %mean_24), kwargs = {})
    %add_72 : [#users=1] = call_function[target=operator.add](args = (%mean_25, 1e-07), kwargs = {})
    %sqrt_26 : [#users=1] = call_function[target=torch.sqrt](args = (%add_72,), kwargs = {})
    %truediv_19 : [#users=2] = call_function[target=operator.truediv](args = (%sub_26, %sqrt_26), kwargs = {})
    %to_33 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_19, torch.float32), kwargs = {})
    %weight_12 : [#users=1] = get_attr[target=layer.6.attention.output.LayerNorm.weight]
    %mul_27 : [#users=1] = call_function[target=operator.mul](args = (%weight_12, %truediv_19), kwargs = {})
    %bias_12 : [#users=1] = get_attr[target=layer.6.attention.output.LayerNorm.bias]
    %add_73 : [#users=2] = call_function[target=operator.add](args = (%mul_27, %bias_12), kwargs = {})
    %dense_19 : [#users=1] = call_module[target=layer.6.intermediate.dense](args = (%add_73,), kwargs = {})
    %gelu_6 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_19,), kwargs = {})
    %dense_20 : [#users=1] = call_module[target=layer.6.output.dense](args = (%gelu_6,), kwargs = {})
    %add_74 : [#users=4] = call_function[target=operator.add](args = (%dense_20, %add_73), kwargs = {})
    %float_14 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_74,), kwargs = {})
    %mean_26 : [#users=2] = call_method[target=mean](args = (%add_74, -1), kwargs = {keepdim: True})
    %sub_27 : [#users=1] = call_function[target=operator.sub](args = (%add_74, %mean_26), kwargs = {})
    %pow_14 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_27, 2), kwargs = {})
    %mean_27 : [#users=1] = call_method[target=mean](args = (%pow_14, -1), kwargs = {keepdim: True})
    %sub_28 : [#users=1] = call_function[target=operator.sub](args = (%add_74, %mean_26), kwargs = {})
    %add_75 : [#users=1] = call_function[target=operator.add](args = (%mean_27, 1e-07), kwargs = {})
    %sqrt_27 : [#users=1] = call_function[target=torch.sqrt](args = (%add_75,), kwargs = {})
    %truediv_20 : [#users=2] = call_function[target=operator.truediv](args = (%sub_28, %sqrt_27), kwargs = {})
    %to_34 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_20, torch.float32), kwargs = {})
    %weight_13 : [#users=1] = get_attr[target=layer.6.output.LayerNorm.weight]
    %mul_28 : [#users=1] = call_function[target=operator.mul](args = (%weight_13, %truediv_20), kwargs = {})
    %bias_13 : [#users=1] = get_attr[target=layer.6.output.LayerNorm.bias]
    %add_76 : [#users=2] = call_function[target=operator.add](args = (%mul_28, %bias_13), kwargs = {})
    %in_proj_7 : [#users=1] = call_module[target=layer.7.attention.self.in_proj](args = (%add_76,), kwargs = {})
    %view_43 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_7, [1, 256, 12, -1]), kwargs = {})
    %permute_42 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_43, 0, 2, 1, 3), kwargs = {})
    %chunk_7 : [#users=3] = call_method[target=chunk](args = (%permute_42, 3), kwargs = {dim: -1})
    %getitem_44 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_7, 0), kwargs = {})
    %getitem_45 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_7, 1), kwargs = {})
    %getitem_46 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_7, 2), kwargs = {})
    %q_bias_7 : [#users=1] = get_attr[target=layer.7.attention.self.q_bias]
    %getitem_47 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_7, [None, None, slice(None, None, None)]), kwargs = {})
    %view_44 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_47, [1, 1, 12, -1]), kwargs = {})
    %permute_43 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_44, 0, 2, 1, 3), kwargs = {})
    %add_77 : [#users=1] = call_function[target=operator.add](args = (%getitem_44, %permute_43), kwargs = {})
    %v_bias_7 : [#users=1] = get_attr[target=layer.7.attention.self.v_bias]
    %getitem_48 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_7, [None, None, slice(None, None, None)]), kwargs = {})
    %view_45 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_48, [1, 1, 12, -1]), kwargs = {})
    %permute_44 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_45, 0, 2, 1, 3), kwargs = {})
    %add_78 : [#users=1] = call_function[target=operator.add](args = (%getitem_46, %permute_44), kwargs = {})
    %tensor_231 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_29 : [#users=1] = call_function[target=operator.mul](args = (%tensor_231, 3), kwargs = {})
    %sqrt_28 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_29,), kwargs = {})
    %to_35 : [#users=0] = call_method[target=to](args = (%sqrt_28,), kwargs = {dtype: torch.float32})
    %truediv_21 : [#users=2] = call_function[target=operator.truediv](args = (%add_77, %sqrt_28), kwargs = {})
    %transpose_28 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_45, -1, -2), kwargs = {})
    %matmul_28 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_21, %transpose_28), kwargs = {})
    %unsqueeze_18 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_7 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_18,), kwargs = {})
    %to_36 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_18, cpu), kwargs = {})
    %__external_param__13 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_49 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__13, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_19 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_49, 0), kwargs = {})
    %pos_proj_7 : [#users=1] = call_module[target=layer.7.attention.self.pos_proj](args = (%unsqueeze_19,), kwargs = {})
    %view_46 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_7, [1, 512, 12, -1]), kwargs = {})
    %permute_45 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_46, 0, 2, 1, 3), kwargs = {})
    %transpose_29 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_45, -1, -2), kwargs = {})
    %matmul_29 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_21, %transpose_29), kwargs = {})
    %add_79 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_18, 256), kwargs = {})
    %clamp_14 : [#users=1] = call_function[target=torch.clamp](args = (%add_79, 0, 511), kwargs = {})
    %expand_14 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_14, [1, 12, 256, 256]), kwargs = {})
    %gather_14 : [#users=2] = call_function[target=torch.gather](args = (%matmul_29,), kwargs = {dim: -1, index: %expand_14})
    %full_like_7 : [#users=1] = call_function[target=torch.full_like](args = (%gather_14, 0), kwargs = {})
    %iadd_14 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_7, %gather_14), kwargs = {})
    %pos_q_proj_7 : [#users=1] = call_module[target=layer.7.attention.self.pos_q_proj](args = (%unsqueeze_19,), kwargs = {})
    %view_47 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_7, [1, 512, 12, -1]), kwargs = {})
    %permute_46 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_47, 0, 2, 1, 3), kwargs = {})
    %tensor_264 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_30 : [#users=1] = call_function[target=operator.mul](args = (%tensor_264, 3), kwargs = {})
    %sqrt_29 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_30,), kwargs = {})
    %itruediv_7 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_46, %sqrt_29), kwargs = {})
    %neg_7 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_18,), kwargs = {})
    %add_80 : [#users=1] = call_function[target=operator.add](args = (%neg_7, 256), kwargs = {})
    %clamp_15 : [#users=1] = call_function[target=torch.clamp](args = (%add_80, 0, 511), kwargs = {})
    %transpose_30 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_7, -1, -2), kwargs = {})
    %to_37 : [#users=0] = call_method[target=to](args = (%transpose_30,), kwargs = {dtype: torch.float32})
    %matmul_30 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_45, %transpose_30), kwargs = {})
    %expand_15 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_15, [1, 12, 256, 256]), kwargs = {})
    %gather_15 : [#users=1] = call_function[target=torch.gather](args = (%matmul_30,), kwargs = {dim: -1, index: %expand_15})
    %transpose_31 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_15, -1, -2), kwargs = {})
    %iadd_15 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_14, %transpose_31), kwargs = {})
    %add_81 : [#users=1] = call_function[target=operator.add](args = (%matmul_28, %iadd_15), kwargs = {})
    %apply_7 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_81, %byte, -1), kwargs = {})
    %matmul_31 : [#users=1] = call_function[target=torch.matmul](args = (%apply_7, %add_78), kwargs = {})
    %permute_47 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_31, 0, 2, 1, 3), kwargs = {})
    %contiguous_7 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_47,), kwargs = {})
    %view_48 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_7, [1, 256, -1]), kwargs = {})
    %dense_21 : [#users=1] = call_module[target=layer.7.attention.output.dense](args = (%view_48,), kwargs = {})
    %add_82 : [#users=4] = call_function[target=operator.add](args = (%dense_21, %add_76), kwargs = {})
    %float_15 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_82,), kwargs = {})
    %mean_28 : [#users=2] = call_method[target=mean](args = (%add_82, -1), kwargs = {keepdim: True})
    %sub_29 : [#users=1] = call_function[target=operator.sub](args = (%add_82, %mean_28), kwargs = {})
    %pow_15 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_29, 2), kwargs = {})
    %mean_29 : [#users=1] = call_method[target=mean](args = (%pow_15, -1), kwargs = {keepdim: True})
    %sub_30 : [#users=1] = call_function[target=operator.sub](args = (%add_82, %mean_28), kwargs = {})
    %add_83 : [#users=1] = call_function[target=operator.add](args = (%mean_29, 1e-07), kwargs = {})
    %sqrt_30 : [#users=1] = call_function[target=torch.sqrt](args = (%add_83,), kwargs = {})
    %truediv_22 : [#users=2] = call_function[target=operator.truediv](args = (%sub_30, %sqrt_30), kwargs = {})
    %to_38 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_22, torch.float32), kwargs = {})
    %weight_14 : [#users=1] = get_attr[target=layer.7.attention.output.LayerNorm.weight]
    %mul_31 : [#users=1] = call_function[target=operator.mul](args = (%weight_14, %truediv_22), kwargs = {})
    %bias_14 : [#users=1] = get_attr[target=layer.7.attention.output.LayerNorm.bias]
    %add_84 : [#users=2] = call_function[target=operator.add](args = (%mul_31, %bias_14), kwargs = {})
    %dense_22 : [#users=1] = call_module[target=layer.7.intermediate.dense](args = (%add_84,), kwargs = {})
    %gelu_7 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_22,), kwargs = {})
    %dense_23 : [#users=1] = call_module[target=layer.7.output.dense](args = (%gelu_7,), kwargs = {})
    %add_85 : [#users=4] = call_function[target=operator.add](args = (%dense_23, %add_84), kwargs = {})
    %float_16 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_85,), kwargs = {})
    %mean_30 : [#users=2] = call_method[target=mean](args = (%add_85, -1), kwargs = {keepdim: True})
    %sub_31 : [#users=1] = call_function[target=operator.sub](args = (%add_85, %mean_30), kwargs = {})
    %pow_16 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_31, 2), kwargs = {})
    %mean_31 : [#users=1] = call_method[target=mean](args = (%pow_16, -1), kwargs = {keepdim: True})
    %sub_32 : [#users=1] = call_function[target=operator.sub](args = (%add_85, %mean_30), kwargs = {})
    %add_86 : [#users=1] = call_function[target=operator.add](args = (%mean_31, 1e-07), kwargs = {})
    %sqrt_31 : [#users=1] = call_function[target=torch.sqrt](args = (%add_86,), kwargs = {})
    %truediv_23 : [#users=2] = call_function[target=operator.truediv](args = (%sub_32, %sqrt_31), kwargs = {})
    %to_39 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_23, torch.float32), kwargs = {})
    %weight_15 : [#users=1] = get_attr[target=layer.7.output.LayerNorm.weight]
    %mul_32 : [#users=1] = call_function[target=operator.mul](args = (%weight_15, %truediv_23), kwargs = {})
    %bias_15 : [#users=1] = get_attr[target=layer.7.output.LayerNorm.bias]
    %add_87 : [#users=2] = call_function[target=operator.add](args = (%mul_32, %bias_15), kwargs = {})
    %in_proj_8 : [#users=1] = call_module[target=layer.8.attention.self.in_proj](args = (%add_87,), kwargs = {})
    %view_49 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_8, [1, 256, 12, -1]), kwargs = {})
    %permute_48 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_49, 0, 2, 1, 3), kwargs = {})
    %chunk_8 : [#users=3] = call_method[target=chunk](args = (%permute_48, 3), kwargs = {dim: -1})
    %getitem_50 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_8, 0), kwargs = {})
    %getitem_51 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_8, 1), kwargs = {})
    %getitem_52 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_8, 2), kwargs = {})
    %q_bias_8 : [#users=1] = get_attr[target=layer.8.attention.self.q_bias]
    %getitem_53 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_8, [None, None, slice(None, None, None)]), kwargs = {})
    %view_50 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_53, [1, 1, 12, -1]), kwargs = {})
    %permute_49 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_50, 0, 2, 1, 3), kwargs = {})
    %add_88 : [#users=1] = call_function[target=operator.add](args = (%getitem_50, %permute_49), kwargs = {})
    %v_bias_8 : [#users=1] = get_attr[target=layer.8.attention.self.v_bias]
    %getitem_54 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_8, [None, None, slice(None, None, None)]), kwargs = {})
    %view_51 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_54, [1, 1, 12, -1]), kwargs = {})
    %permute_50 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_51, 0, 2, 1, 3), kwargs = {})
    %add_89 : [#users=1] = call_function[target=operator.add](args = (%getitem_52, %permute_50), kwargs = {})
    %tensor_265 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_33 : [#users=1] = call_function[target=operator.mul](args = (%tensor_265, 3), kwargs = {})
    %sqrt_32 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_33,), kwargs = {})
    %to_40 : [#users=0] = call_method[target=to](args = (%sqrt_32,), kwargs = {dtype: torch.float32})
    %truediv_24 : [#users=2] = call_function[target=operator.truediv](args = (%add_88, %sqrt_32), kwargs = {})
    %transpose_32 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_51, -1, -2), kwargs = {})
    %matmul_32 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_24, %transpose_32), kwargs = {})
    %unsqueeze_20 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_8 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_20,), kwargs = {})
    %to_41 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_20, cpu), kwargs = {})
    %__external_param__14 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_55 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__14, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_21 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_55, 0), kwargs = {})
    %pos_proj_8 : [#users=1] = call_module[target=layer.8.attention.self.pos_proj](args = (%unsqueeze_21,), kwargs = {})
    %view_52 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_8, [1, 512, 12, -1]), kwargs = {})
    %permute_51 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_52, 0, 2, 1, 3), kwargs = {})
    %transpose_33 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_51, -1, -2), kwargs = {})
    %matmul_33 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_24, %transpose_33), kwargs = {})
    %add_90 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_20, 256), kwargs = {})
    %clamp_16 : [#users=1] = call_function[target=torch.clamp](args = (%add_90, 0, 511), kwargs = {})
    %expand_16 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_16, [1, 12, 256, 256]), kwargs = {})
    %gather_16 : [#users=2] = call_function[target=torch.gather](args = (%matmul_33,), kwargs = {dim: -1, index: %expand_16})
    %full_like_8 : [#users=1] = call_function[target=torch.full_like](args = (%gather_16, 0), kwargs = {})
    %iadd_16 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_8, %gather_16), kwargs = {})
    %pos_q_proj_8 : [#users=1] = call_module[target=layer.8.attention.self.pos_q_proj](args = (%unsqueeze_21,), kwargs = {})
    %view_53 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_8, [1, 512, 12, -1]), kwargs = {})
    %permute_52 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_53, 0, 2, 1, 3), kwargs = {})
    %tensor_298 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_34 : [#users=1] = call_function[target=operator.mul](args = (%tensor_298, 3), kwargs = {})
    %sqrt_33 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_34,), kwargs = {})
    %itruediv_8 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_52, %sqrt_33), kwargs = {})
    %neg_8 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_20,), kwargs = {})
    %add_91 : [#users=1] = call_function[target=operator.add](args = (%neg_8, 256), kwargs = {})
    %clamp_17 : [#users=1] = call_function[target=torch.clamp](args = (%add_91, 0, 511), kwargs = {})
    %transpose_34 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_8, -1, -2), kwargs = {})
    %to_42 : [#users=0] = call_method[target=to](args = (%transpose_34,), kwargs = {dtype: torch.float32})
    %matmul_34 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_51, %transpose_34), kwargs = {})
    %expand_17 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_17, [1, 12, 256, 256]), kwargs = {})
    %gather_17 : [#users=1] = call_function[target=torch.gather](args = (%matmul_34,), kwargs = {dim: -1, index: %expand_17})
    %transpose_35 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_17, -1, -2), kwargs = {})
    %iadd_17 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_16, %transpose_35), kwargs = {})
    %add_92 : [#users=1] = call_function[target=operator.add](args = (%matmul_32, %iadd_17), kwargs = {})
    %apply_8 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_92, %byte, -1), kwargs = {})
    %matmul_35 : [#users=1] = call_function[target=torch.matmul](args = (%apply_8, %add_89), kwargs = {})
    %permute_53 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_35, 0, 2, 1, 3), kwargs = {})
    %contiguous_8 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_53,), kwargs = {})
    %view_54 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_8, [1, 256, -1]), kwargs = {})
    %dense_24 : [#users=1] = call_module[target=layer.8.attention.output.dense](args = (%view_54,), kwargs = {})
    %add_93 : [#users=4] = call_function[target=operator.add](args = (%dense_24, %add_87), kwargs = {})
    %float_17 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_93,), kwargs = {})
    %mean_32 : [#users=2] = call_method[target=mean](args = (%add_93, -1), kwargs = {keepdim: True})
    %sub_33 : [#users=1] = call_function[target=operator.sub](args = (%add_93, %mean_32), kwargs = {})
    %pow_17 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_33, 2), kwargs = {})
    %mean_33 : [#users=1] = call_method[target=mean](args = (%pow_17, -1), kwargs = {keepdim: True})
    %sub_34 : [#users=1] = call_function[target=operator.sub](args = (%add_93, %mean_32), kwargs = {})
    %add_94 : [#users=1] = call_function[target=operator.add](args = (%mean_33, 1e-07), kwargs = {})
    %sqrt_34 : [#users=1] = call_function[target=torch.sqrt](args = (%add_94,), kwargs = {})
    %truediv_25 : [#users=2] = call_function[target=operator.truediv](args = (%sub_34, %sqrt_34), kwargs = {})
    %to_43 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_25, torch.float32), kwargs = {})
    %weight_16 : [#users=1] = get_attr[target=layer.8.attention.output.LayerNorm.weight]
    %mul_35 : [#users=1] = call_function[target=operator.mul](args = (%weight_16, %truediv_25), kwargs = {})
    %bias_16 : [#users=1] = get_attr[target=layer.8.attention.output.LayerNorm.bias]
    %add_95 : [#users=2] = call_function[target=operator.add](args = (%mul_35, %bias_16), kwargs = {})
    %dense_25 : [#users=1] = call_module[target=layer.8.intermediate.dense](args = (%add_95,), kwargs = {})
    %gelu_8 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_25,), kwargs = {})
    %dense_26 : [#users=1] = call_module[target=layer.8.output.dense](args = (%gelu_8,), kwargs = {})
    %add_96 : [#users=4] = call_function[target=operator.add](args = (%dense_26, %add_95), kwargs = {})
    %float_18 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_96,), kwargs = {})
    %mean_34 : [#users=2] = call_method[target=mean](args = (%add_96, -1), kwargs = {keepdim: True})
    %sub_35 : [#users=1] = call_function[target=operator.sub](args = (%add_96, %mean_34), kwargs = {})
    %pow_18 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_35, 2), kwargs = {})
    %mean_35 : [#users=1] = call_method[target=mean](args = (%pow_18, -1), kwargs = {keepdim: True})
    %sub_36 : [#users=1] = call_function[target=operator.sub](args = (%add_96, %mean_34), kwargs = {})
    %add_97 : [#users=1] = call_function[target=operator.add](args = (%mean_35, 1e-07), kwargs = {})
    %sqrt_35 : [#users=1] = call_function[target=torch.sqrt](args = (%add_97,), kwargs = {})
    %truediv_26 : [#users=2] = call_function[target=operator.truediv](args = (%sub_36, %sqrt_35), kwargs = {})
    %to_44 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_26, torch.float32), kwargs = {})
    %weight_17 : [#users=1] = get_attr[target=layer.8.output.LayerNorm.weight]
    %mul_36 : [#users=1] = call_function[target=operator.mul](args = (%weight_17, %truediv_26), kwargs = {})
    %bias_17 : [#users=1] = get_attr[target=layer.8.output.LayerNorm.bias]
    %add_98 : [#users=2] = call_function[target=operator.add](args = (%mul_36, %bias_17), kwargs = {})
    %in_proj_9 : [#users=1] = call_module[target=layer.9.attention.self.in_proj](args = (%add_98,), kwargs = {})
    %view_55 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_9, [1, 256, 12, -1]), kwargs = {})
    %permute_54 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_55, 0, 2, 1, 3), kwargs = {})
    %chunk_9 : [#users=3] = call_method[target=chunk](args = (%permute_54, 3), kwargs = {dim: -1})
    %getitem_56 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_9, 0), kwargs = {})
    %getitem_57 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_9, 1), kwargs = {})
    %getitem_58 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_9, 2), kwargs = {})
    %q_bias_9 : [#users=1] = get_attr[target=layer.9.attention.self.q_bias]
    %getitem_59 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_9, [None, None, slice(None, None, None)]), kwargs = {})
    %view_56 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_59, [1, 1, 12, -1]), kwargs = {})
    %permute_55 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_56, 0, 2, 1, 3), kwargs = {})
    %add_99 : [#users=1] = call_function[target=operator.add](args = (%getitem_56, %permute_55), kwargs = {})
    %v_bias_9 : [#users=1] = get_attr[target=layer.9.attention.self.v_bias]
    %getitem_60 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_9, [None, None, slice(None, None, None)]), kwargs = {})
    %view_57 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_60, [1, 1, 12, -1]), kwargs = {})
    %permute_56 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_57, 0, 2, 1, 3), kwargs = {})
    %add_100 : [#users=1] = call_function[target=operator.add](args = (%getitem_58, %permute_56), kwargs = {})
    %tensor_299 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_37 : [#users=1] = call_function[target=operator.mul](args = (%tensor_299, 3), kwargs = {})
    %sqrt_36 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_37,), kwargs = {})
    %to_45 : [#users=0] = call_method[target=to](args = (%sqrt_36,), kwargs = {dtype: torch.float32})
    %truediv_27 : [#users=2] = call_function[target=operator.truediv](args = (%add_99, %sqrt_36), kwargs = {})
    %transpose_36 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_57, -1, -2), kwargs = {})
    %matmul_36 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_27, %transpose_36), kwargs = {})
    %unsqueeze_22 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_9 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_22,), kwargs = {})
    %to_46 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_22, cpu), kwargs = {})
    %__external_param__15 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_61 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__15, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_23 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_61, 0), kwargs = {})
    %pos_proj_9 : [#users=1] = call_module[target=layer.9.attention.self.pos_proj](args = (%unsqueeze_23,), kwargs = {})
    %view_58 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_9, [1, 512, 12, -1]), kwargs = {})
    %permute_57 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_58, 0, 2, 1, 3), kwargs = {})
    %transpose_37 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_57, -1, -2), kwargs = {})
    %matmul_37 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_27, %transpose_37), kwargs = {})
    %add_101 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_22, 256), kwargs = {})
    %clamp_18 : [#users=1] = call_function[target=torch.clamp](args = (%add_101, 0, 511), kwargs = {})
    %expand_18 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_18, [1, 12, 256, 256]), kwargs = {})
    %gather_18 : [#users=2] = call_function[target=torch.gather](args = (%matmul_37,), kwargs = {dim: -1, index: %expand_18})
    %full_like_9 : [#users=1] = call_function[target=torch.full_like](args = (%gather_18, 0), kwargs = {})
    %iadd_18 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_9, %gather_18), kwargs = {})
    %pos_q_proj_9 : [#users=1] = call_module[target=layer.9.attention.self.pos_q_proj](args = (%unsqueeze_23,), kwargs = {})
    %view_59 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_9, [1, 512, 12, -1]), kwargs = {})
    %permute_58 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_59, 0, 2, 1, 3), kwargs = {})
    %tensor_332 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_38 : [#users=1] = call_function[target=operator.mul](args = (%tensor_332, 3), kwargs = {})
    %sqrt_37 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_38,), kwargs = {})
    %itruediv_9 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_58, %sqrt_37), kwargs = {})
    %neg_9 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_22,), kwargs = {})
    %add_102 : [#users=1] = call_function[target=operator.add](args = (%neg_9, 256), kwargs = {})
    %clamp_19 : [#users=1] = call_function[target=torch.clamp](args = (%add_102, 0, 511), kwargs = {})
    %transpose_38 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_9, -1, -2), kwargs = {})
    %to_47 : [#users=0] = call_method[target=to](args = (%transpose_38,), kwargs = {dtype: torch.float32})
    %matmul_38 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_57, %transpose_38), kwargs = {})
    %expand_19 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_19, [1, 12, 256, 256]), kwargs = {})
    %gather_19 : [#users=1] = call_function[target=torch.gather](args = (%matmul_38,), kwargs = {dim: -1, index: %expand_19})
    %transpose_39 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_19, -1, -2), kwargs = {})
    %iadd_19 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_18, %transpose_39), kwargs = {})
    %add_103 : [#users=1] = call_function[target=operator.add](args = (%matmul_36, %iadd_19), kwargs = {})
    %apply_9 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_103, %byte, -1), kwargs = {})
    %matmul_39 : [#users=1] = call_function[target=torch.matmul](args = (%apply_9, %add_100), kwargs = {})
    %permute_59 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_39, 0, 2, 1, 3), kwargs = {})
    %contiguous_9 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_59,), kwargs = {})
    %view_60 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_9, [1, 256, -1]), kwargs = {})
    %dense_27 : [#users=1] = call_module[target=layer.9.attention.output.dense](args = (%view_60,), kwargs = {})
    %add_104 : [#users=4] = call_function[target=operator.add](args = (%dense_27, %add_98), kwargs = {})
    %float_19 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_104,), kwargs = {})
    %mean_36 : [#users=2] = call_method[target=mean](args = (%add_104, -1), kwargs = {keepdim: True})
    %sub_37 : [#users=1] = call_function[target=operator.sub](args = (%add_104, %mean_36), kwargs = {})
    %pow_19 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_37, 2), kwargs = {})
    %mean_37 : [#users=1] = call_method[target=mean](args = (%pow_19, -1), kwargs = {keepdim: True})
    %sub_38 : [#users=1] = call_function[target=operator.sub](args = (%add_104, %mean_36), kwargs = {})
    %add_105 : [#users=1] = call_function[target=operator.add](args = (%mean_37, 1e-07), kwargs = {})
    %sqrt_38 : [#users=1] = call_function[target=torch.sqrt](args = (%add_105,), kwargs = {})
    %truediv_28 : [#users=2] = call_function[target=operator.truediv](args = (%sub_38, %sqrt_38), kwargs = {})
    %to_48 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_28, torch.float32), kwargs = {})
    %weight_18 : [#users=1] = get_attr[target=layer.9.attention.output.LayerNorm.weight]
    %mul_39 : [#users=1] = call_function[target=operator.mul](args = (%weight_18, %truediv_28), kwargs = {})
    %bias_18 : [#users=1] = get_attr[target=layer.9.attention.output.LayerNorm.bias]
    %add_106 : [#users=2] = call_function[target=operator.add](args = (%mul_39, %bias_18), kwargs = {})
    %dense_28 : [#users=1] = call_module[target=layer.9.intermediate.dense](args = (%add_106,), kwargs = {})
    %gelu_9 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_28,), kwargs = {})
    %dense_29 : [#users=1] = call_module[target=layer.9.output.dense](args = (%gelu_9,), kwargs = {})
    %add_107 : [#users=4] = call_function[target=operator.add](args = (%dense_29, %add_106), kwargs = {})
    %float_20 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_107,), kwargs = {})
    %mean_38 : [#users=2] = call_method[target=mean](args = (%add_107, -1), kwargs = {keepdim: True})
    %sub_39 : [#users=1] = call_function[target=operator.sub](args = (%add_107, %mean_38), kwargs = {})
    %pow_20 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_39, 2), kwargs = {})
    %mean_39 : [#users=1] = call_method[target=mean](args = (%pow_20, -1), kwargs = {keepdim: True})
    %sub_40 : [#users=1] = call_function[target=operator.sub](args = (%add_107, %mean_38), kwargs = {})
    %add_108 : [#users=1] = call_function[target=operator.add](args = (%mean_39, 1e-07), kwargs = {})
    %sqrt_39 : [#users=1] = call_function[target=torch.sqrt](args = (%add_108,), kwargs = {})
    %truediv_29 : [#users=2] = call_function[target=operator.truediv](args = (%sub_40, %sqrt_39), kwargs = {})
    %to_49 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_29, torch.float32), kwargs = {})
    %weight_19 : [#users=1] = get_attr[target=layer.9.output.LayerNorm.weight]
    %mul_40 : [#users=1] = call_function[target=operator.mul](args = (%weight_19, %truediv_29), kwargs = {})
    %bias_19 : [#users=1] = get_attr[target=layer.9.output.LayerNorm.bias]
    %add_109 : [#users=2] = call_function[target=operator.add](args = (%mul_40, %bias_19), kwargs = {})
    %in_proj_10 : [#users=1] = call_module[target=layer.10.attention.self.in_proj](args = (%add_109,), kwargs = {})
    %view_61 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_10, [1, 256, 12, -1]), kwargs = {})
    %permute_60 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_61, 0, 2, 1, 3), kwargs = {})
    %chunk_10 : [#users=3] = call_method[target=chunk](args = (%permute_60, 3), kwargs = {dim: -1})
    %getitem_62 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_10, 0), kwargs = {})
    %getitem_63 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_10, 1), kwargs = {})
    %getitem_64 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_10, 2), kwargs = {})
    %q_bias_10 : [#users=1] = get_attr[target=layer.10.attention.self.q_bias]
    %getitem_65 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_10, [None, None, slice(None, None, None)]), kwargs = {})
    %view_62 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_65, [1, 1, 12, -1]), kwargs = {})
    %permute_61 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_62, 0, 2, 1, 3), kwargs = {})
    %add_110 : [#users=1] = call_function[target=operator.add](args = (%getitem_62, %permute_61), kwargs = {})
    %v_bias_10 : [#users=1] = get_attr[target=layer.10.attention.self.v_bias]
    %getitem_66 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_10, [None, None, slice(None, None, None)]), kwargs = {})
    %view_63 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_66, [1, 1, 12, -1]), kwargs = {})
    %permute_62 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_63, 0, 2, 1, 3), kwargs = {})
    %add_111 : [#users=1] = call_function[target=operator.add](args = (%getitem_64, %permute_62), kwargs = {})
    %tensor_333 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_41 : [#users=1] = call_function[target=operator.mul](args = (%tensor_333, 3), kwargs = {})
    %sqrt_40 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_41,), kwargs = {})
    %to_50 : [#users=0] = call_method[target=to](args = (%sqrt_40,), kwargs = {dtype: torch.float32})
    %truediv_30 : [#users=2] = call_function[target=operator.truediv](args = (%add_110, %sqrt_40), kwargs = {})
    %transpose_40 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_63, -1, -2), kwargs = {})
    %matmul_40 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_30, %transpose_40), kwargs = {})
    %unsqueeze_24 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_10 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_24,), kwargs = {})
    %to_51 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_24, cpu), kwargs = {})
    %__external_param__16 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_67 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__16, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_25 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_67, 0), kwargs = {})
    %pos_proj_10 : [#users=1] = call_module[target=layer.10.attention.self.pos_proj](args = (%unsqueeze_25,), kwargs = {})
    %view_64 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_10, [1, 512, 12, -1]), kwargs = {})
    %permute_63 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_64, 0, 2, 1, 3), kwargs = {})
    %transpose_41 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_63, -1, -2), kwargs = {})
    %matmul_41 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_30, %transpose_41), kwargs = {})
    %add_112 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_24, 256), kwargs = {})
    %clamp_20 : [#users=1] = call_function[target=torch.clamp](args = (%add_112, 0, 511), kwargs = {})
    %expand_20 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_20, [1, 12, 256, 256]), kwargs = {})
    %gather_20 : [#users=2] = call_function[target=torch.gather](args = (%matmul_41,), kwargs = {dim: -1, index: %expand_20})
    %full_like_10 : [#users=1] = call_function[target=torch.full_like](args = (%gather_20, 0), kwargs = {})
    %iadd_20 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_10, %gather_20), kwargs = {})
    %pos_q_proj_10 : [#users=1] = call_module[target=layer.10.attention.self.pos_q_proj](args = (%unsqueeze_25,), kwargs = {})
    %view_65 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_10, [1, 512, 12, -1]), kwargs = {})
    %permute_64 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_65, 0, 2, 1, 3), kwargs = {})
    %tensor_366 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_42 : [#users=1] = call_function[target=operator.mul](args = (%tensor_366, 3), kwargs = {})
    %sqrt_41 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_42,), kwargs = {})
    %itruediv_10 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_64, %sqrt_41), kwargs = {})
    %neg_10 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_24,), kwargs = {})
    %add_113 : [#users=1] = call_function[target=operator.add](args = (%neg_10, 256), kwargs = {})
    %clamp_21 : [#users=1] = call_function[target=torch.clamp](args = (%add_113, 0, 511), kwargs = {})
    %transpose_42 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_10, -1, -2), kwargs = {})
    %to_52 : [#users=0] = call_method[target=to](args = (%transpose_42,), kwargs = {dtype: torch.float32})
    %matmul_42 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_63, %transpose_42), kwargs = {})
    %expand_21 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_21, [1, 12, 256, 256]), kwargs = {})
    %gather_21 : [#users=1] = call_function[target=torch.gather](args = (%matmul_42,), kwargs = {dim: -1, index: %expand_21})
    %transpose_43 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_21, -1, -2), kwargs = {})
    %iadd_21 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_20, %transpose_43), kwargs = {})
    %add_114 : [#users=1] = call_function[target=operator.add](args = (%matmul_40, %iadd_21), kwargs = {})
    %apply_10 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_114, %byte, -1), kwargs = {})
    %matmul_43 : [#users=1] = call_function[target=torch.matmul](args = (%apply_10, %add_111), kwargs = {})
    %permute_65 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_43, 0, 2, 1, 3), kwargs = {})
    %contiguous_10 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_65,), kwargs = {})
    %view_66 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_10, [1, 256, -1]), kwargs = {})
    %dense_30 : [#users=1] = call_module[target=layer.10.attention.output.dense](args = (%view_66,), kwargs = {})
    %add_115 : [#users=4] = call_function[target=operator.add](args = (%dense_30, %add_109), kwargs = {})
    %float_21 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_115,), kwargs = {})
    %mean_40 : [#users=2] = call_method[target=mean](args = (%add_115, -1), kwargs = {keepdim: True})
    %sub_41 : [#users=1] = call_function[target=operator.sub](args = (%add_115, %mean_40), kwargs = {})
    %pow_21 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_41, 2), kwargs = {})
    %mean_41 : [#users=1] = call_method[target=mean](args = (%pow_21, -1), kwargs = {keepdim: True})
    %sub_42 : [#users=1] = call_function[target=operator.sub](args = (%add_115, %mean_40), kwargs = {})
    %add_116 : [#users=1] = call_function[target=operator.add](args = (%mean_41, 1e-07), kwargs = {})
    %sqrt_42 : [#users=1] = call_function[target=torch.sqrt](args = (%add_116,), kwargs = {})
    %truediv_31 : [#users=2] = call_function[target=operator.truediv](args = (%sub_42, %sqrt_42), kwargs = {})
    %to_53 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_31, torch.float32), kwargs = {})
    %weight_20 : [#users=1] = get_attr[target=layer.10.attention.output.LayerNorm.weight]
    %mul_43 : [#users=1] = call_function[target=operator.mul](args = (%weight_20, %truediv_31), kwargs = {})
    %bias_20 : [#users=1] = get_attr[target=layer.10.attention.output.LayerNorm.bias]
    %add_117 : [#users=2] = call_function[target=operator.add](args = (%mul_43, %bias_20), kwargs = {})
    %dense_31 : [#users=1] = call_module[target=layer.10.intermediate.dense](args = (%add_117,), kwargs = {})
    %gelu_10 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_31,), kwargs = {})
    %dense_32 : [#users=1] = call_module[target=layer.10.output.dense](args = (%gelu_10,), kwargs = {})
    %add_118 : [#users=4] = call_function[target=operator.add](args = (%dense_32, %add_117), kwargs = {})
    %float_22 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_118,), kwargs = {})
    %mean_42 : [#users=2] = call_method[target=mean](args = (%add_118, -1), kwargs = {keepdim: True})
    %sub_43 : [#users=1] = call_function[target=operator.sub](args = (%add_118, %mean_42), kwargs = {})
    %pow_22 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_43, 2), kwargs = {})
    %mean_43 : [#users=1] = call_method[target=mean](args = (%pow_22, -1), kwargs = {keepdim: True})
    %sub_44 : [#users=1] = call_function[target=operator.sub](args = (%add_118, %mean_42), kwargs = {})
    %add_119 : [#users=1] = call_function[target=operator.add](args = (%mean_43, 1e-07), kwargs = {})
    %sqrt_43 : [#users=1] = call_function[target=torch.sqrt](args = (%add_119,), kwargs = {})
    %truediv_32 : [#users=2] = call_function[target=operator.truediv](args = (%sub_44, %sqrt_43), kwargs = {})
    %to_54 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_32, torch.float32), kwargs = {})
    %weight_21 : [#users=1] = get_attr[target=layer.10.output.LayerNorm.weight]
    %mul_44 : [#users=1] = call_function[target=operator.mul](args = (%weight_21, %truediv_32), kwargs = {})
    %bias_21 : [#users=1] = get_attr[target=layer.10.output.LayerNorm.bias]
    %add_120 : [#users=2] = call_function[target=operator.add](args = (%mul_44, %bias_21), kwargs = {})
    %in_proj_11 : [#users=1] = call_module[target=layer.11.attention.self.in_proj](args = (%add_120,), kwargs = {})
    %view_67 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_11, [1, 256, 12, -1]), kwargs = {})
    %permute_66 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_67, 0, 2, 1, 3), kwargs = {})
    %chunk_11 : [#users=3] = call_method[target=chunk](args = (%permute_66, 3), kwargs = {dim: -1})
    %getitem_68 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_11, 0), kwargs = {})
    %getitem_69 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_11, 1), kwargs = {})
    %getitem_70 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_11, 2), kwargs = {})
    %q_bias_11 : [#users=1] = get_attr[target=layer.11.attention.self.q_bias]
    %getitem_71 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_11, [None, None, slice(None, None, None)]), kwargs = {})
    %view_68 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_71, [1, 1, 12, -1]), kwargs = {})
    %permute_67 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_68, 0, 2, 1, 3), kwargs = {})
    %add_121 : [#users=1] = call_function[target=operator.add](args = (%getitem_68, %permute_67), kwargs = {})
    %v_bias_11 : [#users=1] = get_attr[target=layer.11.attention.self.v_bias]
    %getitem_72 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_11, [None, None, slice(None, None, None)]), kwargs = {})
    %view_69 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_72, [1, 1, 12, -1]), kwargs = {})
    %permute_68 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_69, 0, 2, 1, 3), kwargs = {})
    %add_122 : [#users=1] = call_function[target=operator.add](args = (%getitem_70, %permute_68), kwargs = {})
    %tensor_367 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_45 : [#users=1] = call_function[target=operator.mul](args = (%tensor_367, 3), kwargs = {})
    %sqrt_44 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_45,), kwargs = {})
    %to_55 : [#users=0] = call_method[target=to](args = (%sqrt_44,), kwargs = {dtype: torch.float32})
    %truediv_33 : [#users=2] = call_function[target=operator.truediv](args = (%add_121, %sqrt_44), kwargs = {})
    %transpose_44 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_69, -1, -2), kwargs = {})
    %matmul_44 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_33, %transpose_44), kwargs = {})
    %unsqueeze_26 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_3, 1), kwargs = {})
    %long_11 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_26,), kwargs = {})
    %to_56 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_26, cpu), kwargs = {})
    %__external_param__17 : [#users=1] = get_attr[target=layer.0.attention.self.__external_param__6]
    %getitem_73 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__17, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_27 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_73, 0), kwargs = {})
    %pos_proj_11 : [#users=1] = call_module[target=layer.11.attention.self.pos_proj](args = (%unsqueeze_27,), kwargs = {})
    %view_70 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_11, [1, 512, 12, -1]), kwargs = {})
    %permute_69 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_70, 0, 2, 1, 3), kwargs = {})
    %transpose_45 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_69, -1, -2), kwargs = {})
    %matmul_45 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_33, %transpose_45), kwargs = {})
    %add_123 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_26, 256), kwargs = {})
    %clamp_22 : [#users=1] = call_function[target=torch.clamp](args = (%add_123, 0, 511), kwargs = {})
    %expand_22 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_22, [1, 12, 256, 256]), kwargs = {})
    %gather_22 : [#users=2] = call_function[target=torch.gather](args = (%matmul_45,), kwargs = {dim: -1, index: %expand_22})
    %full_like_11 : [#users=1] = call_function[target=torch.full_like](args = (%gather_22, 0), kwargs = {})
    %iadd_22 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_11, %gather_22), kwargs = {})
    %pos_q_proj_11 : [#users=1] = call_module[target=layer.11.attention.self.pos_q_proj](args = (%unsqueeze_27,), kwargs = {})
    %view_71 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_11, [1, 512, 12, -1]), kwargs = {})
    %permute_70 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_71, 0, 2, 1, 3), kwargs = {})
    %tensor_400 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_46 : [#users=1] = call_function[target=operator.mul](args = (%tensor_400, 3), kwargs = {})
    %sqrt_45 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_46,), kwargs = {})
    %itruediv_11 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_70, %sqrt_45), kwargs = {})
    %neg_11 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_26,), kwargs = {})
    %add_124 : [#users=1] = call_function[target=operator.add](args = (%neg_11, 256), kwargs = {})
    %clamp_23 : [#users=1] = call_function[target=torch.clamp](args = (%add_124, 0, 511), kwargs = {})
    %transpose_46 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_11, -1, -2), kwargs = {})
    %to_57 : [#users=0] = call_method[target=to](args = (%transpose_46,), kwargs = {dtype: torch.float32})
    %matmul_46 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_69, %transpose_46), kwargs = {})
    %expand_23 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_23, [1, 12, 256, 256]), kwargs = {})
    %gather_23 : [#users=1] = call_function[target=torch.gather](args = (%matmul_46,), kwargs = {dim: -1, index: %expand_23})
    %transpose_47 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_23, -1, -2), kwargs = {})
    %iadd_23 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_22, %transpose_47), kwargs = {})
    %add_125 : [#users=1] = call_function[target=operator.add](args = (%matmul_44, %iadd_23), kwargs = {})
    %apply_11 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_125, %byte, -1), kwargs = {})
    %matmul_47 : [#users=1] = call_function[target=torch.matmul](args = (%apply_11, %add_122), kwargs = {})
    %permute_71 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_47, 0, 2, 1, 3), kwargs = {})
    %contiguous_11 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_71,), kwargs = {})
    %view_72 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_11, [1, 256, -1]), kwargs = {})
    %dense_33 : [#users=1] = call_module[target=layer.11.attention.output.dense](args = (%view_72,), kwargs = {})
    %add_126 : [#users=4] = call_function[target=operator.add](args = (%dense_33, %add_120), kwargs = {})
    %float_23 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_126,), kwargs = {})
    %mean_44 : [#users=2] = call_method[target=mean](args = (%add_126, -1), kwargs = {keepdim: True})
    %sub_45 : [#users=1] = call_function[target=operator.sub](args = (%add_126, %mean_44), kwargs = {})
    %pow_23 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_45, 2), kwargs = {})
    %mean_45 : [#users=1] = call_method[target=mean](args = (%pow_23, -1), kwargs = {keepdim: True})
    %sub_46 : [#users=1] = call_function[target=operator.sub](args = (%add_126, %mean_44), kwargs = {})
    %add_127 : [#users=1] = call_function[target=operator.add](args = (%mean_45, 1e-07), kwargs = {})
    %sqrt_46 : [#users=1] = call_function[target=torch.sqrt](args = (%add_127,), kwargs = {})
    %truediv_34 : [#users=2] = call_function[target=operator.truediv](args = (%sub_46, %sqrt_46), kwargs = {})
    %to_58 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_34, torch.float32), kwargs = {})
    %weight_22 : [#users=1] = get_attr[target=layer.11.attention.output.LayerNorm.weight]
    %mul_47 : [#users=1] = call_function[target=operator.mul](args = (%weight_22, %truediv_34), kwargs = {})
    %bias_22 : [#users=1] = get_attr[target=layer.11.attention.output.LayerNorm.bias]
    %add_128 : [#users=2] = call_function[target=operator.add](args = (%mul_47, %bias_22), kwargs = {})
    %dense_34 : [#users=1] = call_module[target=layer.11.intermediate.dense](args = (%add_128,), kwargs = {})
    %gelu_11 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_34,), kwargs = {})
    %dense_35 : [#users=1] = call_module[target=layer.11.output.dense](args = (%gelu_11,), kwargs = {})
    %add_129 : [#users=4] = call_function[target=operator.add](args = (%dense_35, %add_128), kwargs = {})
    %float_24 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_129,), kwargs = {})
    %mean_46 : [#users=2] = call_method[target=mean](args = (%add_129, -1), kwargs = {keepdim: True})
    %sub_47 : [#users=1] = call_function[target=operator.sub](args = (%add_129, %mean_46), kwargs = {})
    %pow_24 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_47, 2), kwargs = {})
    %mean_47 : [#users=1] = call_method[target=mean](args = (%pow_24, -1), kwargs = {keepdim: True})
    %sub_48 : [#users=1] = call_function[target=operator.sub](args = (%add_129, %mean_46), kwargs = {})
    %add_130 : [#users=1] = call_function[target=operator.add](args = (%mean_47, 1e-07), kwargs = {})
    %sqrt_47 : [#users=1] = call_function[target=torch.sqrt](args = (%add_130,), kwargs = {})
    %truediv_35 : [#users=2] = call_function[target=operator.truediv](args = (%sub_48, %sqrt_47), kwargs = {})
    %to_59 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_35, torch.float32), kwargs = {})
    %weight_23 : [#users=1] = get_attr[target=layer.11.output.LayerNorm.weight]
    %mul_48 : [#users=1] = call_function[target=operator.mul](args = (%weight_23, %truediv_35), kwargs = {})
    %bias_23 : [#users=1] = get_attr[target=layer.11.output.LayerNorm.bias]
    %add_131 : [#users=0] = call_function[target=operator.add](args = (%mul_48, %bias_23), kwargs = {})
generate any for <enumerate object at 0x14d33e56e040> <class 'enumerate'> [enumerate(locals['self'].encoder.layer).__iter__(), enumerate(locals['self'].encoder.layer)]
old obj TensorVar(need_guard_check=True, extract_code_at_start=[locals['hidden_states']], extract_code_hashs={-6225015754727082077}, obj=tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]), modified_attrs={}, prev=None) 22897516604048 22897552743216
obj: tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]) 22897552743216
self obj var: TensorVar(need_guard_check=False, extract_code_at_start=[], extract_code_hashs=set(), obj=tensor([[[ 0.0347, -1.0498, -1.7784,  ..., -0.9855,  0.5065, -0.9534],
         [-1.3184, -0.7883,  0.5531,  ...,  1.7039, -0.2045,  0.6442],
         [ 0.3936, -1.1758,  0.6011,  ..., -0.7256,  0.2134,  0.9067],
         ...,
         [ 2.3083, -0.5303, -0.1431,  ..., -0.3749, -0.9054, -0.1539],
         [-0.8224,  0.3612, -0.1894,  ..., -1.8704,  0.2308,  0.5689],
         [ 1.6022,  0.5707,  0.4282,  ...,  1.7783, -1.0033, -0.5569]]]), modified_attrs={}, prev=None) 22897552974320
tracing opcode RETURN_VALUE None pc=386 frame=4(0x6aceb20)
restart: running injected code (f_lasti=386)
before pop_tracker [0, 4] frame_id 4
tracing return in /home/drc/frontend/test/test_model_deberta.py
tracing opcode STORE_FAST None pc=248 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:990
tracing opcode LOAD_FAST None pc=250 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=252 frame=0(0x6614110)
tracing opcode BINARY_SUBSCR None pc=254 frame=0(0x6614110)
tracing opcode STORE_FAST None pc=256 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:992
tracing opcode LOAD_DEREF None pc=258 frame=0(0x6614110)
tracing opcode LOAD_ATTR None pc=260 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=262 frame=0(0x6614110)
tracing opcode COMPARE_OP None pc=264 frame=0(0x6614110)
tracing opcode EXTENDED_ARG None pc=266 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:1010
tracing opcode LOAD_FAST None pc=394 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=396 frame=0(0x6614110)
tracing opcode BINARY_SUBSCR None pc=398 frame=0(0x6614110)
tracing opcode STORE_FAST None pc=400 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:1012
tracing opcode LOAD_FAST None pc=402 frame=0(0x6614110)
tracing opcode EXTENDED_ARG None pc=404 frame=0(0x6614110)
tracing line /home/drc/frontend/test/test_model_deberta.py:1013
tracing opcode LOAD_FAST None pc=408 frame=0(0x6614110)
tracing opcode BUILD_TUPLE None pc=410 frame=0(0x6614110)
tracing opcode LOAD_FAST None pc=412 frame=0(0x6614110)
tracing opcode LOAD_FAST None pc=414 frame=0(0x6614110)
tracing opcode EXTENDED_ARG None pc=416 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=424 frame=0(0x6614110)
tracing opcode LOAD_CONST None pc=426 frame=0(0x6614110)
tracing opcode BUILD_SLICE None pc=428 frame=0(0x6614110)
tracing opcode BINARY_SUBSCR None pc=430 frame=0(0x6614110)
tracing opcode BINARY_ADD None pc=432 frame=0(0x6614110)
tracing opcode EXTENDED_ARG None pc=434 frame=0(0x6614110)
restart: running injected code (f_lasti=434)
commiting 0 0 215 [32mRETURN_VALUE[0m(None, None)  434
graph graph():
    %tensor_1 : [#users=1] = placeholder[target=tensor_1]
    %tensor_2 : [#users=2] = placeholder[target=tensor_2]
    %tensor_3 : [#users=0] = placeholder[target=tensor_3]
    %tensor_10 : [#users=1] = placeholder[target=tensor_10]
    %getitem : [#users=0] = call_function[target=operator.getitem](args = (%tensor_10, [slice(None, None, None), slice(None, 256, None)]), kwargs = {})
    %word_embeddings : [#users=5] = call_module[target=embeddings.word_embeddings](args = (%tensor_1,), kwargs = {})
    %zeros_like : [#users=0] = call_function[target=torch.zeros_like](args = (%word_embeddings,), kwargs = {})
    %float_1 : [#users=0] = call_function[target=torch.Tensor.float](args = (%word_embeddings,), kwargs = {})
    %mean : [#users=2] = call_method[target=mean](args = (%word_embeddings, -1), kwargs = {keepdim: True})
    %sub : [#users=1] = call_function[target=operator.sub](args = (%word_embeddings, %mean), kwargs = {})
    %pow_1 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub, 2), kwargs = {})
    %mean_1 : [#users=1] = call_method[target=mean](args = (%pow_1, -1), kwargs = {keepdim: True})
    %sub_1 : [#users=1] = call_function[target=operator.sub](args = (%word_embeddings, %mean), kwargs = {})
    %add : [#users=1] = call_function[target=operator.add](args = (%mean_1, 1e-07), kwargs = {})
    %sqrt : [#users=1] = call_function[target=torch.sqrt](args = (%add,), kwargs = {})
    %truediv : [#users=2] = call_function[target=operator.truediv](args = (%sub_1, %sqrt), kwargs = {})
    %to : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv, torch.float32), kwargs = {})
    %weight : [#users=1] = get_attr[target=embeddings.LayerNorm.weight]
    %mul : [#users=1] = call_function[target=operator.mul](args = (%weight, %truediv), kwargs = {})
    %bias : [#users=1] = get_attr[target=embeddings.LayerNorm.bias]
    %add_1 : [#users=1] = call_function[target=operator.add](args = (%mul, %bias), kwargs = {})
    %unsqueeze : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_2, 2), kwargs = {})
    %to_1 : [#users=1] = call_function[target=torch.Tensor.to](args = (%unsqueeze, torch.float32), kwargs = {})
    %mul_1 : [#users=2] = call_function[target=operator.mul](args = (%add_1, %to_1), kwargs = {})
    %unsqueeze_1 : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%tensor_2, 1), kwargs = {})
    %unsqueeze_2 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_1, 2), kwargs = {})
    %squeeze : [#users=1] = call_function[target=torch.Tensor.squeeze](args = (%unsqueeze_2, -2), kwargs = {})
    %unsqueeze_3 : [#users=1] = call_function[target=torch.Tensor.unsqueeze](args = (%squeeze, -1), kwargs = {})
    %mul_2 : [#users=1] = call_function[target=operator.mul](args = (%unsqueeze_2, %unsqueeze_3), kwargs = {})
    %byte : [#users=12] = call_function[target=torch.Tensor.byte](args = (%mul_2,), kwargs = {})
    %arange : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %arange_1 : [#users=1] = call_function[target=torch.arange](args = (256,), kwargs = {dtype: torch.int64, device: cpu})
    %getitem_1 : [#users=1] = call_function[target=operator.getitem](args = (%arange, [slice(None, None, None), None]), kwargs = {})
    %view : [#users=1] = call_function[target=torch.Tensor.view](args = (%arange_1, 1, -1), kwargs = {})
    %repeat : [#users=1] = call_function[target=torch.Tensor.repeat](args = (%view, 256, 1), kwargs = {})
    %sub_2 : [#users=1] = call_function[target=operator.sub](args = (%getitem_1, %repeat), kwargs = {})
    %getitem_2 : [#users=1] = call_function[target=operator.getitem](args = (%sub_2, [slice(None, 256, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_4 : [#users=12] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_2, 0), kwargs = {})
    %in_proj : [#users=1] = call_module[target=encoder.layer.0.attention.self.in_proj](args = (%mul_1,), kwargs = {})
    %view_1 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj, [1, 256, 12, -1]), kwargs = {})
    %permute : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_1, 0, 2, 1, 3), kwargs = {})
    %chunk : [#users=3] = call_method[target=chunk](args = (%permute, 3), kwargs = {dim: -1})
    %getitem_3 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 0), kwargs = {})
    %getitem_4 : [#users=2] = call_function[target=operator.getitem](args = (%chunk, 1), kwargs = {})
    %getitem_5 : [#users=1] = call_function[target=operator.getitem](args = (%chunk, 2), kwargs = {})
    %q_bias : [#users=1] = get_attr[target=encoder.layer.0.attention.self.q_bias]
    %getitem_6 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_2 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_6, [1, 1, 12, -1]), kwargs = {})
    %permute_1 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_2, 0, 2, 1, 3), kwargs = {})
    %add_2 : [#users=1] = call_function[target=operator.add](args = (%getitem_3, %permute_1), kwargs = {})
    %v_bias : [#users=1] = get_attr[target=encoder.layer.0.attention.self.v_bias]
    %getitem_7 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias, [None, None, slice(None, None, None)]), kwargs = {})
    %view_3 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_7, [1, 1, 12, -1]), kwargs = {})
    %permute_2 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_3, 0, 2, 1, 3), kwargs = {})
    %add_3 : [#users=1] = call_function[target=operator.add](args = (%getitem_5, %permute_2), kwargs = {})
    %tensor : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_3 : [#users=1] = call_function[target=operator.mul](args = (%tensor, 3), kwargs = {})
    %sqrt_1 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_3,), kwargs = {})
    %to_2 : [#users=0] = call_method[target=to](args = (%sqrt_1,), kwargs = {dtype: torch.float32})
    %truediv_1 : [#users=2] = call_function[target=operator.truediv](args = (%add_2, %sqrt_1), kwargs = {})
    %transpose : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_4, -1, -2), kwargs = {})
    %matmul : [#users=1] = call_function[target=torch.matmul](args = (%truediv_1, %transpose), kwargs = {})
    %unsqueeze_5 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_5,), kwargs = {})
    %to_3 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_5, cpu), kwargs = {})
    %__external_param__6 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_8 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__6, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_6 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_8, 0), kwargs = {})
    %pos_proj : [#users=1] = call_module[target=encoder.layer.0.attention.self.pos_proj](args = (%unsqueeze_6,), kwargs = {})
    %view_4 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_3 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_4, 0, 2, 1, 3), kwargs = {})
    %transpose_1 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_3, -1, -2), kwargs = {})
    %matmul_1 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_1, %transpose_1), kwargs = {})
    %add_4 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_5, 256), kwargs = {})
    %clamp : [#users=1] = call_function[target=torch.clamp](args = (%add_4, 0, 511), kwargs = {})
    %expand : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp, [1, 12, 256, 256]), kwargs = {})
    %gather : [#users=2] = call_function[target=torch.gather](args = (%matmul_1,), kwargs = {dim: -1, index: %expand})
    %full_like : [#users=1] = call_function[target=torch.full_like](args = (%gather, 0), kwargs = {})
    %iadd : [#users=1] = call_function[target=operator.iadd](args = (%full_like, %gather), kwargs = {})
    %pos_q_proj : [#users=1] = call_module[target=encoder.layer.0.attention.self.pos_q_proj](args = (%unsqueeze_6,), kwargs = {})
    %view_5 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj, [1, 512, 12, -1]), kwargs = {})
    %permute_4 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_5, 0, 2, 1, 3), kwargs = {})
    %tensor_26 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_4 : [#users=1] = call_function[target=operator.mul](args = (%tensor_26, 3), kwargs = {})
    %sqrt_2 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_4,), kwargs = {})
    %itruediv : [#users=1] = call_function[target=operator.itruediv](args = (%permute_4, %sqrt_2), kwargs = {})
    %neg : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_5,), kwargs = {})
    %add_5 : [#users=1] = call_function[target=operator.add](args = (%neg, 256), kwargs = {})
    %clamp_1 : [#users=1] = call_function[target=torch.clamp](args = (%add_5, 0, 511), kwargs = {})
    %transpose_2 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv, -1, -2), kwargs = {})
    %to_4 : [#users=0] = call_method[target=to](args = (%transpose_2,), kwargs = {dtype: torch.float32})
    %matmul_2 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_4, %transpose_2), kwargs = {})
    %expand_1 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_1, [1, 12, 256, 256]), kwargs = {})
    %gather_1 : [#users=1] = call_function[target=torch.gather](args = (%matmul_2,), kwargs = {dim: -1, index: %expand_1})
    %transpose_3 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_1, -1, -2), kwargs = {})
    %iadd_1 : [#users=1] = call_function[target=operator.iadd](args = (%iadd, %transpose_3), kwargs = {})
    %add_6 : [#users=1] = call_function[target=operator.add](args = (%matmul, %iadd_1), kwargs = {})
    %apply : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_6, %byte, -1), kwargs = {})
    %matmul_3 : [#users=1] = call_function[target=torch.matmul](args = (%apply, %add_3), kwargs = {})
    %permute_5 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_3, 0, 2, 1, 3), kwargs = {})
    %contiguous : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_5,), kwargs = {})
    %view_6 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous, [1, 256, -1]), kwargs = {})
    %dense : [#users=1] = call_module[target=encoder.layer.0.attention.output.dense](args = (%view_6,), kwargs = {})
    %add_7 : [#users=4] = call_function[target=operator.add](args = (%dense, %mul_1), kwargs = {})
    %float_2 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_7,), kwargs = {})
    %mean_2 : [#users=2] = call_method[target=mean](args = (%add_7, -1), kwargs = {keepdim: True})
    %sub_3 : [#users=1] = call_function[target=operator.sub](args = (%add_7, %mean_2), kwargs = {})
    %pow_2 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_3, 2), kwargs = {})
    %mean_3 : [#users=1] = call_method[target=mean](args = (%pow_2, -1), kwargs = {keepdim: True})
    %sub_4 : [#users=1] = call_function[target=operator.sub](args = (%add_7, %mean_2), kwargs = {})
    %add_8 : [#users=1] = call_function[target=operator.add](args = (%mean_3, 1e-07), kwargs = {})
    %sqrt_3 : [#users=1] = call_function[target=torch.sqrt](args = (%add_8,), kwargs = {})
    %truediv_2 : [#users=2] = call_function[target=operator.truediv](args = (%sub_4, %sqrt_3), kwargs = {})
    %to_5 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_2, torch.float32), kwargs = {})
    %weight_1 : [#users=1] = get_attr[target=encoder.layer.0.attention.output.LayerNorm.weight]
    %mul_5 : [#users=1] = call_function[target=operator.mul](args = (%weight_1, %truediv_2), kwargs = {})
    %bias_1 : [#users=1] = get_attr[target=encoder.layer.0.attention.output.LayerNorm.bias]
    %add_9 : [#users=2] = call_function[target=operator.add](args = (%mul_5, %bias_1), kwargs = {})
    %dense_1 : [#users=1] = call_module[target=encoder.layer.0.intermediate.dense](args = (%add_9,), kwargs = {})
    %gelu : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_1,), kwargs = {})
    %dense_2 : [#users=1] = call_module[target=encoder.layer.0.output.dense](args = (%gelu,), kwargs = {})
    %add_10 : [#users=4] = call_function[target=operator.add](args = (%dense_2, %add_9), kwargs = {})
    %float_3 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_10,), kwargs = {})
    %mean_4 : [#users=2] = call_method[target=mean](args = (%add_10, -1), kwargs = {keepdim: True})
    %sub_5 : [#users=1] = call_function[target=operator.sub](args = (%add_10, %mean_4), kwargs = {})
    %pow_3 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_5, 2), kwargs = {})
    %mean_5 : [#users=1] = call_method[target=mean](args = (%pow_3, -1), kwargs = {keepdim: True})
    %sub_6 : [#users=1] = call_function[target=operator.sub](args = (%add_10, %mean_4), kwargs = {})
    %add_11 : [#users=1] = call_function[target=operator.add](args = (%mean_5, 1e-07), kwargs = {})
    %sqrt_4 : [#users=1] = call_function[target=torch.sqrt](args = (%add_11,), kwargs = {})
    %truediv_3 : [#users=2] = call_function[target=operator.truediv](args = (%sub_6, %sqrt_4), kwargs = {})
    %to_6 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_3, torch.float32), kwargs = {})
    %weight_2 : [#users=1] = get_attr[target=encoder.layer.0.output.LayerNorm.weight]
    %mul_6 : [#users=1] = call_function[target=operator.mul](args = (%weight_2, %truediv_3), kwargs = {})
    %bias_2 : [#users=1] = get_attr[target=encoder.layer.0.output.LayerNorm.bias]
    %add_12 : [#users=2] = call_function[target=operator.add](args = (%mul_6, %bias_2), kwargs = {})
    %in_proj_1 : [#users=1] = call_module[target=encoder.layer.1.attention.self.in_proj](args = (%add_12,), kwargs = {})
    %view_7 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_1, [1, 256, 12, -1]), kwargs = {})
    %permute_6 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_7, 0, 2, 1, 3), kwargs = {})
    %chunk_1 : [#users=3] = call_method[target=chunk](args = (%permute_6, 3), kwargs = {dim: -1})
    %getitem_9 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_1, 0), kwargs = {})
    %getitem_10 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_1, 1), kwargs = {})
    %getitem_11 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_1, 2), kwargs = {})
    %q_bias_1 : [#users=1] = get_attr[target=encoder.layer.1.attention.self.q_bias]
    %getitem_12 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_1, [None, None, slice(None, None, None)]), kwargs = {})
    %view_8 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_12, [1, 1, 12, -1]), kwargs = {})
    %permute_7 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_8, 0, 2, 1, 3), kwargs = {})
    %add_13 : [#users=1] = call_function[target=operator.add](args = (%getitem_9, %permute_7), kwargs = {})
    %v_bias_1 : [#users=1] = get_attr[target=encoder.layer.1.attention.self.v_bias]
    %getitem_13 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_1, [None, None, slice(None, None, None)]), kwargs = {})
    %view_9 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_13, [1, 1, 12, -1]), kwargs = {})
    %permute_8 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_9, 0, 2, 1, 3), kwargs = {})
    %add_14 : [#users=1] = call_function[target=operator.add](args = (%getitem_11, %permute_8), kwargs = {})
    %tensor_27 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_7 : [#users=1] = call_function[target=operator.mul](args = (%tensor_27, 3), kwargs = {})
    %sqrt_5 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_7,), kwargs = {})
    %to_7 : [#users=0] = call_method[target=to](args = (%sqrt_5,), kwargs = {dtype: torch.float32})
    %truediv_4 : [#users=2] = call_function[target=operator.truediv](args = (%add_13, %sqrt_5), kwargs = {})
    %transpose_4 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_10, -1, -2), kwargs = {})
    %matmul_4 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_4, %transpose_4), kwargs = {})
    %unsqueeze_7 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_1 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_7,), kwargs = {})
    %to_8 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_7, cpu), kwargs = {})
    %__external_param__7 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_14 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__7, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_8 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_14, 0), kwargs = {})
    %pos_proj_1 : [#users=1] = call_module[target=encoder.layer.1.attention.self.pos_proj](args = (%unsqueeze_8,), kwargs = {})
    %view_10 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_1, [1, 512, 12, -1]), kwargs = {})
    %permute_9 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_10, 0, 2, 1, 3), kwargs = {})
    %transpose_5 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_9, -1, -2), kwargs = {})
    %matmul_5 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_4, %transpose_5), kwargs = {})
    %add_15 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_7, 256), kwargs = {})
    %clamp_2 : [#users=1] = call_function[target=torch.clamp](args = (%add_15, 0, 511), kwargs = {})
    %expand_2 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_2, [1, 12, 256, 256]), kwargs = {})
    %gather_2 : [#users=2] = call_function[target=torch.gather](args = (%matmul_5,), kwargs = {dim: -1, index: %expand_2})
    %full_like_1 : [#users=1] = call_function[target=torch.full_like](args = (%gather_2, 0), kwargs = {})
    %iadd_2 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_1, %gather_2), kwargs = {})
    %pos_q_proj_1 : [#users=1] = call_module[target=encoder.layer.1.attention.self.pos_q_proj](args = (%unsqueeze_8,), kwargs = {})
    %view_11 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_1, [1, 512, 12, -1]), kwargs = {})
    %permute_10 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_11, 0, 2, 1, 3), kwargs = {})
    %tensor_60 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_8 : [#users=1] = call_function[target=operator.mul](args = (%tensor_60, 3), kwargs = {})
    %sqrt_6 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_8,), kwargs = {})
    %itruediv_1 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_10, %sqrt_6), kwargs = {})
    %neg_1 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_7,), kwargs = {})
    %add_16 : [#users=1] = call_function[target=operator.add](args = (%neg_1, 256), kwargs = {})
    %clamp_3 : [#users=1] = call_function[target=torch.clamp](args = (%add_16, 0, 511), kwargs = {})
    %transpose_6 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_1, -1, -2), kwargs = {})
    %to_9 : [#users=0] = call_method[target=to](args = (%transpose_6,), kwargs = {dtype: torch.float32})
    %matmul_6 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_10, %transpose_6), kwargs = {})
    %expand_3 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_3, [1, 12, 256, 256]), kwargs = {})
    %gather_3 : [#users=1] = call_function[target=torch.gather](args = (%matmul_6,), kwargs = {dim: -1, index: %expand_3})
    %transpose_7 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_3, -1, -2), kwargs = {})
    %iadd_3 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_2, %transpose_7), kwargs = {})
    %add_17 : [#users=1] = call_function[target=operator.add](args = (%matmul_4, %iadd_3), kwargs = {})
    %apply_1 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_17, %byte, -1), kwargs = {})
    %matmul_7 : [#users=1] = call_function[target=torch.matmul](args = (%apply_1, %add_14), kwargs = {})
    %permute_11 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_7, 0, 2, 1, 3), kwargs = {})
    %contiguous_1 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_11,), kwargs = {})
    %view_12 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_1, [1, 256, -1]), kwargs = {})
    %dense_3 : [#users=1] = call_module[target=encoder.layer.1.attention.output.dense](args = (%view_12,), kwargs = {})
    %add_18 : [#users=4] = call_function[target=operator.add](args = (%dense_3, %add_12), kwargs = {})
    %float_4 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_18,), kwargs = {})
    %mean_6 : [#users=2] = call_method[target=mean](args = (%add_18, -1), kwargs = {keepdim: True})
    %sub_7 : [#users=1] = call_function[target=operator.sub](args = (%add_18, %mean_6), kwargs = {})
    %pow_4 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_7, 2), kwargs = {})
    %mean_7 : [#users=1] = call_method[target=mean](args = (%pow_4, -1), kwargs = {keepdim: True})
    %sub_8 : [#users=1] = call_function[target=operator.sub](args = (%add_18, %mean_6), kwargs = {})
    %add_19 : [#users=1] = call_function[target=operator.add](args = (%mean_7, 1e-07), kwargs = {})
    %sqrt_7 : [#users=1] = call_function[target=torch.sqrt](args = (%add_19,), kwargs = {})
    %truediv_5 : [#users=2] = call_function[target=operator.truediv](args = (%sub_8, %sqrt_7), kwargs = {})
    %to_10 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_5, torch.float32), kwargs = {})
    %weight_3 : [#users=1] = get_attr[target=encoder.layer.1.attention.output.LayerNorm.weight]
    %mul_9 : [#users=1] = call_function[target=operator.mul](args = (%weight_3, %truediv_5), kwargs = {})
    %bias_3 : [#users=1] = get_attr[target=encoder.layer.1.attention.output.LayerNorm.bias]
    %add_20 : [#users=2] = call_function[target=operator.add](args = (%mul_9, %bias_3), kwargs = {})
    %dense_4 : [#users=1] = call_module[target=encoder.layer.1.intermediate.dense](args = (%add_20,), kwargs = {})
    %gelu_1 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_4,), kwargs = {})
    %dense_5 : [#users=1] = call_module[target=encoder.layer.1.output.dense](args = (%gelu_1,), kwargs = {})
    %add_21 : [#users=4] = call_function[target=operator.add](args = (%dense_5, %add_20), kwargs = {})
    %float_5 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_21,), kwargs = {})
    %mean_8 : [#users=2] = call_method[target=mean](args = (%add_21, -1), kwargs = {keepdim: True})
    %sub_9 : [#users=1] = call_function[target=operator.sub](args = (%add_21, %mean_8), kwargs = {})
    %pow_5 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_9, 2), kwargs = {})
    %mean_9 : [#users=1] = call_method[target=mean](args = (%pow_5, -1), kwargs = {keepdim: True})
    %sub_10 : [#users=1] = call_function[target=operator.sub](args = (%add_21, %mean_8), kwargs = {})
    %add_22 : [#users=1] = call_function[target=operator.add](args = (%mean_9, 1e-07), kwargs = {})
    %sqrt_8 : [#users=1] = call_function[target=torch.sqrt](args = (%add_22,), kwargs = {})
    %truediv_6 : [#users=2] = call_function[target=operator.truediv](args = (%sub_10, %sqrt_8), kwargs = {})
    %to_11 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_6, torch.float32), kwargs = {})
    %weight_4 : [#users=1] = get_attr[target=encoder.layer.1.output.LayerNorm.weight]
    %mul_10 : [#users=1] = call_function[target=operator.mul](args = (%weight_4, %truediv_6), kwargs = {})
    %bias_4 : [#users=1] = get_attr[target=encoder.layer.1.output.LayerNorm.bias]
    %add_23 : [#users=2] = call_function[target=operator.add](args = (%mul_10, %bias_4), kwargs = {})
    %in_proj_2 : [#users=1] = call_module[target=encoder.layer.2.attention.self.in_proj](args = (%add_23,), kwargs = {})
    %view_13 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_2, [1, 256, 12, -1]), kwargs = {})
    %permute_12 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_13, 0, 2, 1, 3), kwargs = {})
    %chunk_2 : [#users=3] = call_method[target=chunk](args = (%permute_12, 3), kwargs = {dim: -1})
    %getitem_15 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_2, 0), kwargs = {})
    %getitem_16 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_2, 1), kwargs = {})
    %getitem_17 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_2, 2), kwargs = {})
    %q_bias_2 : [#users=1] = get_attr[target=encoder.layer.2.attention.self.q_bias]
    %getitem_18 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_2, [None, None, slice(None, None, None)]), kwargs = {})
    %view_14 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_18, [1, 1, 12, -1]), kwargs = {})
    %permute_13 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_14, 0, 2, 1, 3), kwargs = {})
    %add_24 : [#users=1] = call_function[target=operator.add](args = (%getitem_15, %permute_13), kwargs = {})
    %v_bias_2 : [#users=1] = get_attr[target=encoder.layer.2.attention.self.v_bias]
    %getitem_19 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_2, [None, None, slice(None, None, None)]), kwargs = {})
    %view_15 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_19, [1, 1, 12, -1]), kwargs = {})
    %permute_14 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_15, 0, 2, 1, 3), kwargs = {})
    %add_25 : [#users=1] = call_function[target=operator.add](args = (%getitem_17, %permute_14), kwargs = {})
    %tensor_61 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_11 : [#users=1] = call_function[target=operator.mul](args = (%tensor_61, 3), kwargs = {})
    %sqrt_9 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_11,), kwargs = {})
    %to_12 : [#users=0] = call_method[target=to](args = (%sqrt_9,), kwargs = {dtype: torch.float32})
    %truediv_7 : [#users=2] = call_function[target=operator.truediv](args = (%add_24, %sqrt_9), kwargs = {})
    %transpose_8 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_16, -1, -2), kwargs = {})
    %matmul_8 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_7, %transpose_8), kwargs = {})
    %unsqueeze_9 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_2 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_9,), kwargs = {})
    %to_13 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_9, cpu), kwargs = {})
    %__external_param__8 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_20 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__8, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_10 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_20, 0), kwargs = {})
    %pos_proj_2 : [#users=1] = call_module[target=encoder.layer.2.attention.self.pos_proj](args = (%unsqueeze_10,), kwargs = {})
    %view_16 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_2, [1, 512, 12, -1]), kwargs = {})
    %permute_15 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_16, 0, 2, 1, 3), kwargs = {})
    %transpose_9 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_15, -1, -2), kwargs = {})
    %matmul_9 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_7, %transpose_9), kwargs = {})
    %add_26 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_9, 256), kwargs = {})
    %clamp_4 : [#users=1] = call_function[target=torch.clamp](args = (%add_26, 0, 511), kwargs = {})
    %expand_4 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_4, [1, 12, 256, 256]), kwargs = {})
    %gather_4 : [#users=2] = call_function[target=torch.gather](args = (%matmul_9,), kwargs = {dim: -1, index: %expand_4})
    %full_like_2 : [#users=1] = call_function[target=torch.full_like](args = (%gather_4, 0), kwargs = {})
    %iadd_4 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_2, %gather_4), kwargs = {})
    %pos_q_proj_2 : [#users=1] = call_module[target=encoder.layer.2.attention.self.pos_q_proj](args = (%unsqueeze_10,), kwargs = {})
    %view_17 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_2, [1, 512, 12, -1]), kwargs = {})
    %permute_16 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_17, 0, 2, 1, 3), kwargs = {})
    %tensor_94 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_12 : [#users=1] = call_function[target=operator.mul](args = (%tensor_94, 3), kwargs = {})
    %sqrt_10 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_12,), kwargs = {})
    %itruediv_2 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_16, %sqrt_10), kwargs = {})
    %neg_2 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_9,), kwargs = {})
    %add_27 : [#users=1] = call_function[target=operator.add](args = (%neg_2, 256), kwargs = {})
    %clamp_5 : [#users=1] = call_function[target=torch.clamp](args = (%add_27, 0, 511), kwargs = {})
    %transpose_10 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_2, -1, -2), kwargs = {})
    %to_14 : [#users=0] = call_method[target=to](args = (%transpose_10,), kwargs = {dtype: torch.float32})
    %matmul_10 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_16, %transpose_10), kwargs = {})
    %expand_5 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_5, [1, 12, 256, 256]), kwargs = {})
    %gather_5 : [#users=1] = call_function[target=torch.gather](args = (%matmul_10,), kwargs = {dim: -1, index: %expand_5})
    %transpose_11 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_5, -1, -2), kwargs = {})
    %iadd_5 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_4, %transpose_11), kwargs = {})
    %add_28 : [#users=1] = call_function[target=operator.add](args = (%matmul_8, %iadd_5), kwargs = {})
    %apply_2 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_28, %byte, -1), kwargs = {})
    %matmul_11 : [#users=1] = call_function[target=torch.matmul](args = (%apply_2, %add_25), kwargs = {})
    %permute_17 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_11, 0, 2, 1, 3), kwargs = {})
    %contiguous_2 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_17,), kwargs = {})
    %view_18 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_2, [1, 256, -1]), kwargs = {})
    %dense_6 : [#users=1] = call_module[target=encoder.layer.2.attention.output.dense](args = (%view_18,), kwargs = {})
    %add_29 : [#users=4] = call_function[target=operator.add](args = (%dense_6, %add_23), kwargs = {})
    %float_6 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_29,), kwargs = {})
    %mean_10 : [#users=2] = call_method[target=mean](args = (%add_29, -1), kwargs = {keepdim: True})
    %sub_11 : [#users=1] = call_function[target=operator.sub](args = (%add_29, %mean_10), kwargs = {})
    %pow_6 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_11, 2), kwargs = {})
    %mean_11 : [#users=1] = call_method[target=mean](args = (%pow_6, -1), kwargs = {keepdim: True})
    %sub_12 : [#users=1] = call_function[target=operator.sub](args = (%add_29, %mean_10), kwargs = {})
    %add_30 : [#users=1] = call_function[target=operator.add](args = (%mean_11, 1e-07), kwargs = {})
    %sqrt_11 : [#users=1] = call_function[target=torch.sqrt](args = (%add_30,), kwargs = {})
    %truediv_8 : [#users=2] = call_function[target=operator.truediv](args = (%sub_12, %sqrt_11), kwargs = {})
    %to_15 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_8, torch.float32), kwargs = {})
    %weight_5 : [#users=1] = get_attr[target=encoder.layer.2.attention.output.LayerNorm.weight]
    %mul_13 : [#users=1] = call_function[target=operator.mul](args = (%weight_5, %truediv_8), kwargs = {})
    %bias_5 : [#users=1] = get_attr[target=encoder.layer.2.attention.output.LayerNorm.bias]
    %add_31 : [#users=2] = call_function[target=operator.add](args = (%mul_13, %bias_5), kwargs = {})
    %dense_7 : [#users=1] = call_module[target=encoder.layer.2.intermediate.dense](args = (%add_31,), kwargs = {})
    %gelu_2 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_7,), kwargs = {})
    %dense_8 : [#users=1] = call_module[target=encoder.layer.2.output.dense](args = (%gelu_2,), kwargs = {})
    %add_32 : [#users=4] = call_function[target=operator.add](args = (%dense_8, %add_31), kwargs = {})
    %float_7 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_32,), kwargs = {})
    %mean_12 : [#users=2] = call_method[target=mean](args = (%add_32, -1), kwargs = {keepdim: True})
    %sub_13 : [#users=1] = call_function[target=operator.sub](args = (%add_32, %mean_12), kwargs = {})
    %pow_7 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_13, 2), kwargs = {})
    %mean_13 : [#users=1] = call_method[target=mean](args = (%pow_7, -1), kwargs = {keepdim: True})
    %sub_14 : [#users=1] = call_function[target=operator.sub](args = (%add_32, %mean_12), kwargs = {})
    %add_33 : [#users=1] = call_function[target=operator.add](args = (%mean_13, 1e-07), kwargs = {})
    %sqrt_12 : [#users=1] = call_function[target=torch.sqrt](args = (%add_33,), kwargs = {})
    %truediv_9 : [#users=2] = call_function[target=operator.truediv](args = (%sub_14, %sqrt_12), kwargs = {})
    %to_16 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_9, torch.float32), kwargs = {})
    %weight_6 : [#users=1] = get_attr[target=encoder.layer.2.output.LayerNorm.weight]
    %mul_14 : [#users=1] = call_function[target=operator.mul](args = (%weight_6, %truediv_9), kwargs = {})
    %bias_6 : [#users=1] = get_attr[target=encoder.layer.2.output.LayerNorm.bias]
    %add_34 : [#users=2] = call_function[target=operator.add](args = (%mul_14, %bias_6), kwargs = {})
    %in_proj_3 : [#users=1] = call_module[target=encoder.layer.3.attention.self.in_proj](args = (%add_34,), kwargs = {})
    %view_19 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_3, [1, 256, 12, -1]), kwargs = {})
    %permute_18 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_19, 0, 2, 1, 3), kwargs = {})
    %chunk_3 : [#users=3] = call_method[target=chunk](args = (%permute_18, 3), kwargs = {dim: -1})
    %getitem_21 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_3, 0), kwargs = {})
    %getitem_22 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_3, 1), kwargs = {})
    %getitem_23 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_3, 2), kwargs = {})
    %q_bias_3 : [#users=1] = get_attr[target=encoder.layer.3.attention.self.q_bias]
    %getitem_24 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_3, [None, None, slice(None, None, None)]), kwargs = {})
    %view_20 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_24, [1, 1, 12, -1]), kwargs = {})
    %permute_19 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_20, 0, 2, 1, 3), kwargs = {})
    %add_35 : [#users=1] = call_function[target=operator.add](args = (%getitem_21, %permute_19), kwargs = {})
    %v_bias_3 : [#users=1] = get_attr[target=encoder.layer.3.attention.self.v_bias]
    %getitem_25 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_3, [None, None, slice(None, None, None)]), kwargs = {})
    %view_21 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_25, [1, 1, 12, -1]), kwargs = {})
    %permute_20 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_21, 0, 2, 1, 3), kwargs = {})
    %add_36 : [#users=1] = call_function[target=operator.add](args = (%getitem_23, %permute_20), kwargs = {})
    %tensor_95 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_15 : [#users=1] = call_function[target=operator.mul](args = (%tensor_95, 3), kwargs = {})
    %sqrt_13 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_15,), kwargs = {})
    %to_17 : [#users=0] = call_method[target=to](args = (%sqrt_13,), kwargs = {dtype: torch.float32})
    %truediv_10 : [#users=2] = call_function[target=operator.truediv](args = (%add_35, %sqrt_13), kwargs = {})
    %transpose_12 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_22, -1, -2), kwargs = {})
    %matmul_12 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_10, %transpose_12), kwargs = {})
    %unsqueeze_11 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_3 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_11,), kwargs = {})
    %to_18 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_11, cpu), kwargs = {})
    %__external_param__9 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_26 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__9, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_12 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_26, 0), kwargs = {})
    %pos_proj_3 : [#users=1] = call_module[target=encoder.layer.3.attention.self.pos_proj](args = (%unsqueeze_12,), kwargs = {})
    %view_22 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_3, [1, 512, 12, -1]), kwargs = {})
    %permute_21 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_22, 0, 2, 1, 3), kwargs = {})
    %transpose_13 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_21, -1, -2), kwargs = {})
    %matmul_13 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_10, %transpose_13), kwargs = {})
    %add_37 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_11, 256), kwargs = {})
    %clamp_6 : [#users=1] = call_function[target=torch.clamp](args = (%add_37, 0, 511), kwargs = {})
    %expand_6 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_6, [1, 12, 256, 256]), kwargs = {})
    %gather_6 : [#users=2] = call_function[target=torch.gather](args = (%matmul_13,), kwargs = {dim: -1, index: %expand_6})
    %full_like_3 : [#users=1] = call_function[target=torch.full_like](args = (%gather_6, 0), kwargs = {})
    %iadd_6 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_3, %gather_6), kwargs = {})
    %pos_q_proj_3 : [#users=1] = call_module[target=encoder.layer.3.attention.self.pos_q_proj](args = (%unsqueeze_12,), kwargs = {})
    %view_23 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_3, [1, 512, 12, -1]), kwargs = {})
    %permute_22 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_23, 0, 2, 1, 3), kwargs = {})
    %tensor_128 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_16 : [#users=1] = call_function[target=operator.mul](args = (%tensor_128, 3), kwargs = {})
    %sqrt_14 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_16,), kwargs = {})
    %itruediv_3 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_22, %sqrt_14), kwargs = {})
    %neg_3 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_11,), kwargs = {})
    %add_38 : [#users=1] = call_function[target=operator.add](args = (%neg_3, 256), kwargs = {})
    %clamp_7 : [#users=1] = call_function[target=torch.clamp](args = (%add_38, 0, 511), kwargs = {})
    %transpose_14 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_3, -1, -2), kwargs = {})
    %to_19 : [#users=0] = call_method[target=to](args = (%transpose_14,), kwargs = {dtype: torch.float32})
    %matmul_14 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_22, %transpose_14), kwargs = {})
    %expand_7 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_7, [1, 12, 256, 256]), kwargs = {})
    %gather_7 : [#users=1] = call_function[target=torch.gather](args = (%matmul_14,), kwargs = {dim: -1, index: %expand_7})
    %transpose_15 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_7, -1, -2), kwargs = {})
    %iadd_7 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_6, %transpose_15), kwargs = {})
    %add_39 : [#users=1] = call_function[target=operator.add](args = (%matmul_12, %iadd_7), kwargs = {})
    %apply_3 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_39, %byte, -1), kwargs = {})
    %matmul_15 : [#users=1] = call_function[target=torch.matmul](args = (%apply_3, %add_36), kwargs = {})
    %permute_23 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_15, 0, 2, 1, 3), kwargs = {})
    %contiguous_3 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_23,), kwargs = {})
    %view_24 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_3, [1, 256, -1]), kwargs = {})
    %dense_9 : [#users=1] = call_module[target=encoder.layer.3.attention.output.dense](args = (%view_24,), kwargs = {})
    %add_40 : [#users=4] = call_function[target=operator.add](args = (%dense_9, %add_34), kwargs = {})
    %float_8 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_40,), kwargs = {})
    %mean_14 : [#users=2] = call_method[target=mean](args = (%add_40, -1), kwargs = {keepdim: True})
    %sub_15 : [#users=1] = call_function[target=operator.sub](args = (%add_40, %mean_14), kwargs = {})
    %pow_8 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_15, 2), kwargs = {})
    %mean_15 : [#users=1] = call_method[target=mean](args = (%pow_8, -1), kwargs = {keepdim: True})
    %sub_16 : [#users=1] = call_function[target=operator.sub](args = (%add_40, %mean_14), kwargs = {})
    %add_41 : [#users=1] = call_function[target=operator.add](args = (%mean_15, 1e-07), kwargs = {})
    %sqrt_15 : [#users=1] = call_function[target=torch.sqrt](args = (%add_41,), kwargs = {})
    %truediv_11 : [#users=2] = call_function[target=operator.truediv](args = (%sub_16, %sqrt_15), kwargs = {})
    %to_20 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_11, torch.float32), kwargs = {})
    %weight_7 : [#users=1] = get_attr[target=encoder.layer.3.attention.output.LayerNorm.weight]
    %mul_17 : [#users=1] = call_function[target=operator.mul](args = (%weight_7, %truediv_11), kwargs = {})
    %bias_7 : [#users=1] = get_attr[target=encoder.layer.3.attention.output.LayerNorm.bias]
    %add_42 : [#users=2] = call_function[target=operator.add](args = (%mul_17, %bias_7), kwargs = {})
    %dense_10 : [#users=1] = call_module[target=encoder.layer.3.intermediate.dense](args = (%add_42,), kwargs = {})
    %gelu_3 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_10,), kwargs = {})
    %dense_11 : [#users=1] = call_module[target=encoder.layer.3.output.dense](args = (%gelu_3,), kwargs = {})
    %add_43 : [#users=4] = call_function[target=operator.add](args = (%dense_11, %add_42), kwargs = {})
    %float_9 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_43,), kwargs = {})
    %mean_16 : [#users=2] = call_method[target=mean](args = (%add_43, -1), kwargs = {keepdim: True})
    %sub_17 : [#users=1] = call_function[target=operator.sub](args = (%add_43, %mean_16), kwargs = {})
    %pow_9 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_17, 2), kwargs = {})
    %mean_17 : [#users=1] = call_method[target=mean](args = (%pow_9, -1), kwargs = {keepdim: True})
    %sub_18 : [#users=1] = call_function[target=operator.sub](args = (%add_43, %mean_16), kwargs = {})
    %add_44 : [#users=1] = call_function[target=operator.add](args = (%mean_17, 1e-07), kwargs = {})
    %sqrt_16 : [#users=1] = call_function[target=torch.sqrt](args = (%add_44,), kwargs = {})
    %truediv_12 : [#users=2] = call_function[target=operator.truediv](args = (%sub_18, %sqrt_16), kwargs = {})
    %to_21 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_12, torch.float32), kwargs = {})
    %weight_8 : [#users=1] = get_attr[target=encoder.layer.3.output.LayerNorm.weight]
    %mul_18 : [#users=1] = call_function[target=operator.mul](args = (%weight_8, %truediv_12), kwargs = {})
    %bias_8 : [#users=1] = get_attr[target=encoder.layer.3.output.LayerNorm.bias]
    %add_45 : [#users=2] = call_function[target=operator.add](args = (%mul_18, %bias_8), kwargs = {})
    %in_proj_4 : [#users=1] = call_module[target=encoder.layer.4.attention.self.in_proj](args = (%add_45,), kwargs = {})
    %view_25 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_4, [1, 256, 12, -1]), kwargs = {})
    %permute_24 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_25, 0, 2, 1, 3), kwargs = {})
    %chunk_4 : [#users=3] = call_method[target=chunk](args = (%permute_24, 3), kwargs = {dim: -1})
    %getitem_27 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_4, 0), kwargs = {})
    %getitem_28 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_4, 1), kwargs = {})
    %getitem_29 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_4, 2), kwargs = {})
    %q_bias_4 : [#users=1] = get_attr[target=encoder.layer.4.attention.self.q_bias]
    %getitem_30 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_4, [None, None, slice(None, None, None)]), kwargs = {})
    %view_26 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_30, [1, 1, 12, -1]), kwargs = {})
    %permute_25 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_26, 0, 2, 1, 3), kwargs = {})
    %add_46 : [#users=1] = call_function[target=operator.add](args = (%getitem_27, %permute_25), kwargs = {})
    %v_bias_4 : [#users=1] = get_attr[target=encoder.layer.4.attention.self.v_bias]
    %getitem_31 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_4, [None, None, slice(None, None, None)]), kwargs = {})
    %view_27 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_31, [1, 1, 12, -1]), kwargs = {})
    %permute_26 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_27, 0, 2, 1, 3), kwargs = {})
    %add_47 : [#users=1] = call_function[target=operator.add](args = (%getitem_29, %permute_26), kwargs = {})
    %tensor_129 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_19 : [#users=1] = call_function[target=operator.mul](args = (%tensor_129, 3), kwargs = {})
    %sqrt_17 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_19,), kwargs = {})
    %to_22 : [#users=0] = call_method[target=to](args = (%sqrt_17,), kwargs = {dtype: torch.float32})
    %truediv_13 : [#users=2] = call_function[target=operator.truediv](args = (%add_46, %sqrt_17), kwargs = {})
    %transpose_16 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_28, -1, -2), kwargs = {})
    %matmul_16 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_13, %transpose_16), kwargs = {})
    %unsqueeze_13 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_4 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_13,), kwargs = {})
    %to_23 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_13, cpu), kwargs = {})
    %__external_param__10 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_32 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__10, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_14 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_32, 0), kwargs = {})
    %pos_proj_4 : [#users=1] = call_module[target=encoder.layer.4.attention.self.pos_proj](args = (%unsqueeze_14,), kwargs = {})
    %view_28 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_4, [1, 512, 12, -1]), kwargs = {})
    %permute_27 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_28, 0, 2, 1, 3), kwargs = {})
    %transpose_17 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_27, -1, -2), kwargs = {})
    %matmul_17 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_13, %transpose_17), kwargs = {})
    %add_48 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_13, 256), kwargs = {})
    %clamp_8 : [#users=1] = call_function[target=torch.clamp](args = (%add_48, 0, 511), kwargs = {})
    %expand_8 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_8, [1, 12, 256, 256]), kwargs = {})
    %gather_8 : [#users=2] = call_function[target=torch.gather](args = (%matmul_17,), kwargs = {dim: -1, index: %expand_8})
    %full_like_4 : [#users=1] = call_function[target=torch.full_like](args = (%gather_8, 0), kwargs = {})
    %iadd_8 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_4, %gather_8), kwargs = {})
    %pos_q_proj_4 : [#users=1] = call_module[target=encoder.layer.4.attention.self.pos_q_proj](args = (%unsqueeze_14,), kwargs = {})
    %view_29 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_4, [1, 512, 12, -1]), kwargs = {})
    %permute_28 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_29, 0, 2, 1, 3), kwargs = {})
    %tensor_162 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_20 : [#users=1] = call_function[target=operator.mul](args = (%tensor_162, 3), kwargs = {})
    %sqrt_18 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_20,), kwargs = {})
    %itruediv_4 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_28, %sqrt_18), kwargs = {})
    %neg_4 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_13,), kwargs = {})
    %add_49 : [#users=1] = call_function[target=operator.add](args = (%neg_4, 256), kwargs = {})
    %clamp_9 : [#users=1] = call_function[target=torch.clamp](args = (%add_49, 0, 511), kwargs = {})
    %transpose_18 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_4, -1, -2), kwargs = {})
    %to_24 : [#users=0] = call_method[target=to](args = (%transpose_18,), kwargs = {dtype: torch.float32})
    %matmul_18 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_28, %transpose_18), kwargs = {})
    %expand_9 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_9, [1, 12, 256, 256]), kwargs = {})
    %gather_9 : [#users=1] = call_function[target=torch.gather](args = (%matmul_18,), kwargs = {dim: -1, index: %expand_9})
    %transpose_19 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_9, -1, -2), kwargs = {})
    %iadd_9 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_8, %transpose_19), kwargs = {})
    %add_50 : [#users=1] = call_function[target=operator.add](args = (%matmul_16, %iadd_9), kwargs = {})
    %apply_4 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_50, %byte, -1), kwargs = {})
    %matmul_19 : [#users=1] = call_function[target=torch.matmul](args = (%apply_4, %add_47), kwargs = {})
    %permute_29 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_19, 0, 2, 1, 3), kwargs = {})
    %contiguous_4 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_29,), kwargs = {})
    %view_30 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_4, [1, 256, -1]), kwargs = {})
    %dense_12 : [#users=1] = call_module[target=encoder.layer.4.attention.output.dense](args = (%view_30,), kwargs = {})
    %add_51 : [#users=4] = call_function[target=operator.add](args = (%dense_12, %add_45), kwargs = {})
    %float_10 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_51,), kwargs = {})
    %mean_18 : [#users=2] = call_method[target=mean](args = (%add_51, -1), kwargs = {keepdim: True})
    %sub_19 : [#users=1] = call_function[target=operator.sub](args = (%add_51, %mean_18), kwargs = {})
    %pow_10 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_19, 2), kwargs = {})
    %mean_19 : [#users=1] = call_method[target=mean](args = (%pow_10, -1), kwargs = {keepdim: True})
    %sub_20 : [#users=1] = call_function[target=operator.sub](args = (%add_51, %mean_18), kwargs = {})
    %add_52 : [#users=1] = call_function[target=operator.add](args = (%mean_19, 1e-07), kwargs = {})
    %sqrt_19 : [#users=1] = call_function[target=torch.sqrt](args = (%add_52,), kwargs = {})
    %truediv_14 : [#users=2] = call_function[target=operator.truediv](args = (%sub_20, %sqrt_19), kwargs = {})
    %to_25 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_14, torch.float32), kwargs = {})
    %weight_9 : [#users=1] = get_attr[target=encoder.layer.4.attention.output.LayerNorm.weight]
    %mul_21 : [#users=1] = call_function[target=operator.mul](args = (%weight_9, %truediv_14), kwargs = {})
    %bias_9 : [#users=1] = get_attr[target=encoder.layer.4.attention.output.LayerNorm.bias]
    %add_53 : [#users=2] = call_function[target=operator.add](args = (%mul_21, %bias_9), kwargs = {})
    %dense_13 : [#users=1] = call_module[target=encoder.layer.4.intermediate.dense](args = (%add_53,), kwargs = {})
    %gelu_4 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_13,), kwargs = {})
    %dense_14 : [#users=1] = call_module[target=encoder.layer.4.output.dense](args = (%gelu_4,), kwargs = {})
    %add_54 : [#users=4] = call_function[target=operator.add](args = (%dense_14, %add_53), kwargs = {})
    %float_11 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_54,), kwargs = {})
    %mean_20 : [#users=2] = call_method[target=mean](args = (%add_54, -1), kwargs = {keepdim: True})
    %sub_21 : [#users=1] = call_function[target=operator.sub](args = (%add_54, %mean_20), kwargs = {})
    %pow_11 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_21, 2), kwargs = {})
    %mean_21 : [#users=1] = call_method[target=mean](args = (%pow_11, -1), kwargs = {keepdim: True})
    %sub_22 : [#users=1] = call_function[target=operator.sub](args = (%add_54, %mean_20), kwargs = {})
    %add_55 : [#users=1] = call_function[target=operator.add](args = (%mean_21, 1e-07), kwargs = {})
    %sqrt_20 : [#users=1] = call_function[target=torch.sqrt](args = (%add_55,), kwargs = {})
    %truediv_15 : [#users=2] = call_function[target=operator.truediv](args = (%sub_22, %sqrt_20), kwargs = {})
    %to_26 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_15, torch.float32), kwargs = {})
    %weight_10 : [#users=1] = get_attr[target=encoder.layer.4.output.LayerNorm.weight]
    %mul_22 : [#users=1] = call_function[target=operator.mul](args = (%weight_10, %truediv_15), kwargs = {})
    %bias_10 : [#users=1] = get_attr[target=encoder.layer.4.output.LayerNorm.bias]
    %add_56 : [#users=2] = call_function[target=operator.add](args = (%mul_22, %bias_10), kwargs = {})
    %in_proj_5 : [#users=1] = call_module[target=encoder.layer.5.attention.self.in_proj](args = (%add_56,), kwargs = {})
    %view_31 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_5, [1, 256, 12, -1]), kwargs = {})
    %permute_30 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_31, 0, 2, 1, 3), kwargs = {})
    %chunk_5 : [#users=3] = call_method[target=chunk](args = (%permute_30, 3), kwargs = {dim: -1})
    %getitem_33 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_5, 0), kwargs = {})
    %getitem_34 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_5, 1), kwargs = {})
    %getitem_35 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_5, 2), kwargs = {})
    %q_bias_5 : [#users=1] = get_attr[target=encoder.layer.5.attention.self.q_bias]
    %getitem_36 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_5, [None, None, slice(None, None, None)]), kwargs = {})
    %view_32 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_36, [1, 1, 12, -1]), kwargs = {})
    %permute_31 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_32, 0, 2, 1, 3), kwargs = {})
    %add_57 : [#users=1] = call_function[target=operator.add](args = (%getitem_33, %permute_31), kwargs = {})
    %v_bias_5 : [#users=1] = get_attr[target=encoder.layer.5.attention.self.v_bias]
    %getitem_37 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_5, [None, None, slice(None, None, None)]), kwargs = {})
    %view_33 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_37, [1, 1, 12, -1]), kwargs = {})
    %permute_32 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_33, 0, 2, 1, 3), kwargs = {})
    %add_58 : [#users=1] = call_function[target=operator.add](args = (%getitem_35, %permute_32), kwargs = {})
    %tensor_163 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_23 : [#users=1] = call_function[target=operator.mul](args = (%tensor_163, 3), kwargs = {})
    %sqrt_21 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_23,), kwargs = {})
    %to_27 : [#users=0] = call_method[target=to](args = (%sqrt_21,), kwargs = {dtype: torch.float32})
    %truediv_16 : [#users=2] = call_function[target=operator.truediv](args = (%add_57, %sqrt_21), kwargs = {})
    %transpose_20 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_34, -1, -2), kwargs = {})
    %matmul_20 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_16, %transpose_20), kwargs = {})
    %unsqueeze_15 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_5 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_15,), kwargs = {})
    %to_28 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_15, cpu), kwargs = {})
    %__external_param__11 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_38 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__11, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_16 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_38, 0), kwargs = {})
    %pos_proj_5 : [#users=1] = call_module[target=encoder.layer.5.attention.self.pos_proj](args = (%unsqueeze_16,), kwargs = {})
    %view_34 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_5, [1, 512, 12, -1]), kwargs = {})
    %permute_33 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_34, 0, 2, 1, 3), kwargs = {})
    %transpose_21 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_33, -1, -2), kwargs = {})
    %matmul_21 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_16, %transpose_21), kwargs = {})
    %add_59 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_15, 256), kwargs = {})
    %clamp_10 : [#users=1] = call_function[target=torch.clamp](args = (%add_59, 0, 511), kwargs = {})
    %expand_10 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_10, [1, 12, 256, 256]), kwargs = {})
    %gather_10 : [#users=2] = call_function[target=torch.gather](args = (%matmul_21,), kwargs = {dim: -1, index: %expand_10})
    %full_like_5 : [#users=1] = call_function[target=torch.full_like](args = (%gather_10, 0), kwargs = {})
    %iadd_10 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_5, %gather_10), kwargs = {})
    %pos_q_proj_5 : [#users=1] = call_module[target=encoder.layer.5.attention.self.pos_q_proj](args = (%unsqueeze_16,), kwargs = {})
    %view_35 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_5, [1, 512, 12, -1]), kwargs = {})
    %permute_34 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_35, 0, 2, 1, 3), kwargs = {})
    %tensor_196 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_24 : [#users=1] = call_function[target=operator.mul](args = (%tensor_196, 3), kwargs = {})
    %sqrt_22 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_24,), kwargs = {})
    %itruediv_5 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_34, %sqrt_22), kwargs = {})
    %neg_5 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_15,), kwargs = {})
    %add_60 : [#users=1] = call_function[target=operator.add](args = (%neg_5, 256), kwargs = {})
    %clamp_11 : [#users=1] = call_function[target=torch.clamp](args = (%add_60, 0, 511), kwargs = {})
    %transpose_22 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_5, -1, -2), kwargs = {})
    %to_29 : [#users=0] = call_method[target=to](args = (%transpose_22,), kwargs = {dtype: torch.float32})
    %matmul_22 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_34, %transpose_22), kwargs = {})
    %expand_11 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_11, [1, 12, 256, 256]), kwargs = {})
    %gather_11 : [#users=1] = call_function[target=torch.gather](args = (%matmul_22,), kwargs = {dim: -1, index: %expand_11})
    %transpose_23 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_11, -1, -2), kwargs = {})
    %iadd_11 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_10, %transpose_23), kwargs = {})
    %add_61 : [#users=1] = call_function[target=operator.add](args = (%matmul_20, %iadd_11), kwargs = {})
    %apply_5 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_61, %byte, -1), kwargs = {})
    %matmul_23 : [#users=1] = call_function[target=torch.matmul](args = (%apply_5, %add_58), kwargs = {})
    %permute_35 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_23, 0, 2, 1, 3), kwargs = {})
    %contiguous_5 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_35,), kwargs = {})
    %view_36 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_5, [1, 256, -1]), kwargs = {})
    %dense_15 : [#users=1] = call_module[target=encoder.layer.5.attention.output.dense](args = (%view_36,), kwargs = {})
    %add_62 : [#users=4] = call_function[target=operator.add](args = (%dense_15, %add_56), kwargs = {})
    %float_12 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_62,), kwargs = {})
    %mean_22 : [#users=2] = call_method[target=mean](args = (%add_62, -1), kwargs = {keepdim: True})
    %sub_23 : [#users=1] = call_function[target=operator.sub](args = (%add_62, %mean_22), kwargs = {})
    %pow_12 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_23, 2), kwargs = {})
    %mean_23 : [#users=1] = call_method[target=mean](args = (%pow_12, -1), kwargs = {keepdim: True})
    %sub_24 : [#users=1] = call_function[target=operator.sub](args = (%add_62, %mean_22), kwargs = {})
    %add_63 : [#users=1] = call_function[target=operator.add](args = (%mean_23, 1e-07), kwargs = {})
    %sqrt_23 : [#users=1] = call_function[target=torch.sqrt](args = (%add_63,), kwargs = {})
    %truediv_17 : [#users=2] = call_function[target=operator.truediv](args = (%sub_24, %sqrt_23), kwargs = {})
    %to_30 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_17, torch.float32), kwargs = {})
    %weight_11 : [#users=1] = get_attr[target=encoder.layer.5.attention.output.LayerNorm.weight]
    %mul_25 : [#users=1] = call_function[target=operator.mul](args = (%weight_11, %truediv_17), kwargs = {})
    %bias_11 : [#users=1] = get_attr[target=encoder.layer.5.attention.output.LayerNorm.bias]
    %add_64 : [#users=2] = call_function[target=operator.add](args = (%mul_25, %bias_11), kwargs = {})
    %dense_16 : [#users=1] = call_module[target=encoder.layer.5.intermediate.dense](args = (%add_64,), kwargs = {})
    %gelu_5 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_16,), kwargs = {})
    %dense_17 : [#users=1] = call_module[target=encoder.layer.5.output.dense](args = (%gelu_5,), kwargs = {})
    %add_65 : [#users=4] = call_function[target=operator.add](args = (%dense_17, %add_64), kwargs = {})
    %float_13 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_65,), kwargs = {})
    %mean_24 : [#users=2] = call_method[target=mean](args = (%add_65, -1), kwargs = {keepdim: True})
    %sub_25 : [#users=1] = call_function[target=operator.sub](args = (%add_65, %mean_24), kwargs = {})
    %pow_13 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_25, 2), kwargs = {})
    %mean_25 : [#users=1] = call_method[target=mean](args = (%pow_13, -1), kwargs = {keepdim: True})
    %sub_26 : [#users=1] = call_function[target=operator.sub](args = (%add_65, %mean_24), kwargs = {})
    %add_66 : [#users=1] = call_function[target=operator.add](args = (%mean_25, 1e-07), kwargs = {})
    %sqrt_24 : [#users=1] = call_function[target=torch.sqrt](args = (%add_66,), kwargs = {})
    %truediv_18 : [#users=2] = call_function[target=operator.truediv](args = (%sub_26, %sqrt_24), kwargs = {})
    %to_31 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_18, torch.float32), kwargs = {})
    %weight_12 : [#users=1] = get_attr[target=encoder.layer.5.output.LayerNorm.weight]
    %mul_26 : [#users=1] = call_function[target=operator.mul](args = (%weight_12, %truediv_18), kwargs = {})
    %bias_12 : [#users=1] = get_attr[target=encoder.layer.5.output.LayerNorm.bias]
    %add_67 : [#users=2] = call_function[target=operator.add](args = (%mul_26, %bias_12), kwargs = {})
    %in_proj_6 : [#users=1] = call_module[target=encoder.layer.6.attention.self.in_proj](args = (%add_67,), kwargs = {})
    %view_37 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_6, [1, 256, 12, -1]), kwargs = {})
    %permute_36 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_37, 0, 2, 1, 3), kwargs = {})
    %chunk_6 : [#users=3] = call_method[target=chunk](args = (%permute_36, 3), kwargs = {dim: -1})
    %getitem_39 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_6, 0), kwargs = {})
    %getitem_40 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_6, 1), kwargs = {})
    %getitem_41 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_6, 2), kwargs = {})
    %q_bias_6 : [#users=1] = get_attr[target=encoder.layer.6.attention.self.q_bias]
    %getitem_42 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_6, [None, None, slice(None, None, None)]), kwargs = {})
    %view_38 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_42, [1, 1, 12, -1]), kwargs = {})
    %permute_37 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_38, 0, 2, 1, 3), kwargs = {})
    %add_68 : [#users=1] = call_function[target=operator.add](args = (%getitem_39, %permute_37), kwargs = {})
    %v_bias_6 : [#users=1] = get_attr[target=encoder.layer.6.attention.self.v_bias]
    %getitem_43 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_6, [None, None, slice(None, None, None)]), kwargs = {})
    %view_39 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_43, [1, 1, 12, -1]), kwargs = {})
    %permute_38 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_39, 0, 2, 1, 3), kwargs = {})
    %add_69 : [#users=1] = call_function[target=operator.add](args = (%getitem_41, %permute_38), kwargs = {})
    %tensor_197 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_27 : [#users=1] = call_function[target=operator.mul](args = (%tensor_197, 3), kwargs = {})
    %sqrt_25 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_27,), kwargs = {})
    %to_32 : [#users=0] = call_method[target=to](args = (%sqrt_25,), kwargs = {dtype: torch.float32})
    %truediv_19 : [#users=2] = call_function[target=operator.truediv](args = (%add_68, %sqrt_25), kwargs = {})
    %transpose_24 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_40, -1, -2), kwargs = {})
    %matmul_24 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_19, %transpose_24), kwargs = {})
    %unsqueeze_17 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_6 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_17,), kwargs = {})
    %to_33 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_17, cpu), kwargs = {})
    %__external_param__12 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_44 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__12, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_18 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_44, 0), kwargs = {})
    %pos_proj_6 : [#users=1] = call_module[target=encoder.layer.6.attention.self.pos_proj](args = (%unsqueeze_18,), kwargs = {})
    %view_40 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_6, [1, 512, 12, -1]), kwargs = {})
    %permute_39 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_40, 0, 2, 1, 3), kwargs = {})
    %transpose_25 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_39, -1, -2), kwargs = {})
    %matmul_25 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_19, %transpose_25), kwargs = {})
    %add_70 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_17, 256), kwargs = {})
    %clamp_12 : [#users=1] = call_function[target=torch.clamp](args = (%add_70, 0, 511), kwargs = {})
    %expand_12 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_12, [1, 12, 256, 256]), kwargs = {})
    %gather_12 : [#users=2] = call_function[target=torch.gather](args = (%matmul_25,), kwargs = {dim: -1, index: %expand_12})
    %full_like_6 : [#users=1] = call_function[target=torch.full_like](args = (%gather_12, 0), kwargs = {})
    %iadd_12 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_6, %gather_12), kwargs = {})
    %pos_q_proj_6 : [#users=1] = call_module[target=encoder.layer.6.attention.self.pos_q_proj](args = (%unsqueeze_18,), kwargs = {})
    %view_41 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_6, [1, 512, 12, -1]), kwargs = {})
    %permute_40 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_41, 0, 2, 1, 3), kwargs = {})
    %tensor_230 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_28 : [#users=1] = call_function[target=operator.mul](args = (%tensor_230, 3), kwargs = {})
    %sqrt_26 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_28,), kwargs = {})
    %itruediv_6 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_40, %sqrt_26), kwargs = {})
    %neg_6 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_17,), kwargs = {})
    %add_71 : [#users=1] = call_function[target=operator.add](args = (%neg_6, 256), kwargs = {})
    %clamp_13 : [#users=1] = call_function[target=torch.clamp](args = (%add_71, 0, 511), kwargs = {})
    %transpose_26 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_6, -1, -2), kwargs = {})
    %to_34 : [#users=0] = call_method[target=to](args = (%transpose_26,), kwargs = {dtype: torch.float32})
    %matmul_26 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_40, %transpose_26), kwargs = {})
    %expand_13 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_13, [1, 12, 256, 256]), kwargs = {})
    %gather_13 : [#users=1] = call_function[target=torch.gather](args = (%matmul_26,), kwargs = {dim: -1, index: %expand_13})
    %transpose_27 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_13, -1, -2), kwargs = {})
    %iadd_13 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_12, %transpose_27), kwargs = {})
    %add_72 : [#users=1] = call_function[target=operator.add](args = (%matmul_24, %iadd_13), kwargs = {})
    %apply_6 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_72, %byte, -1), kwargs = {})
    %matmul_27 : [#users=1] = call_function[target=torch.matmul](args = (%apply_6, %add_69), kwargs = {})
    %permute_41 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_27, 0, 2, 1, 3), kwargs = {})
    %contiguous_6 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_41,), kwargs = {})
    %view_42 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_6, [1, 256, -1]), kwargs = {})
    %dense_18 : [#users=1] = call_module[target=encoder.layer.6.attention.output.dense](args = (%view_42,), kwargs = {})
    %add_73 : [#users=4] = call_function[target=operator.add](args = (%dense_18, %add_67), kwargs = {})
    %float_14 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_73,), kwargs = {})
    %mean_26 : [#users=2] = call_method[target=mean](args = (%add_73, -1), kwargs = {keepdim: True})
    %sub_27 : [#users=1] = call_function[target=operator.sub](args = (%add_73, %mean_26), kwargs = {})
    %pow_14 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_27, 2), kwargs = {})
    %mean_27 : [#users=1] = call_method[target=mean](args = (%pow_14, -1), kwargs = {keepdim: True})
    %sub_28 : [#users=1] = call_function[target=operator.sub](args = (%add_73, %mean_26), kwargs = {})
    %add_74 : [#users=1] = call_function[target=operator.add](args = (%mean_27, 1e-07), kwargs = {})
    %sqrt_27 : [#users=1] = call_function[target=torch.sqrt](args = (%add_74,), kwargs = {})
    %truediv_20 : [#users=2] = call_function[target=operator.truediv](args = (%sub_28, %sqrt_27), kwargs = {})
    %to_35 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_20, torch.float32), kwargs = {})
    %weight_13 : [#users=1] = get_attr[target=encoder.layer.6.attention.output.LayerNorm.weight]
    %mul_29 : [#users=1] = call_function[target=operator.mul](args = (%weight_13, %truediv_20), kwargs = {})
    %bias_13 : [#users=1] = get_attr[target=encoder.layer.6.attention.output.LayerNorm.bias]
    %add_75 : [#users=2] = call_function[target=operator.add](args = (%mul_29, %bias_13), kwargs = {})
    %dense_19 : [#users=1] = call_module[target=encoder.layer.6.intermediate.dense](args = (%add_75,), kwargs = {})
    %gelu_6 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_19,), kwargs = {})
    %dense_20 : [#users=1] = call_module[target=encoder.layer.6.output.dense](args = (%gelu_6,), kwargs = {})
    %add_76 : [#users=4] = call_function[target=operator.add](args = (%dense_20, %add_75), kwargs = {})
    %float_15 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_76,), kwargs = {})
    %mean_28 : [#users=2] = call_method[target=mean](args = (%add_76, -1), kwargs = {keepdim: True})
    %sub_29 : [#users=1] = call_function[target=operator.sub](args = (%add_76, %mean_28), kwargs = {})
    %pow_15 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_29, 2), kwargs = {})
    %mean_29 : [#users=1] = call_method[target=mean](args = (%pow_15, -1), kwargs = {keepdim: True})
    %sub_30 : [#users=1] = call_function[target=operator.sub](args = (%add_76, %mean_28), kwargs = {})
    %add_77 : [#users=1] = call_function[target=operator.add](args = (%mean_29, 1e-07), kwargs = {})
    %sqrt_28 : [#users=1] = call_function[target=torch.sqrt](args = (%add_77,), kwargs = {})
    %truediv_21 : [#users=2] = call_function[target=operator.truediv](args = (%sub_30, %sqrt_28), kwargs = {})
    %to_36 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_21, torch.float32), kwargs = {})
    %weight_14 : [#users=1] = get_attr[target=encoder.layer.6.output.LayerNorm.weight]
    %mul_30 : [#users=1] = call_function[target=operator.mul](args = (%weight_14, %truediv_21), kwargs = {})
    %bias_14 : [#users=1] = get_attr[target=encoder.layer.6.output.LayerNorm.bias]
    %add_78 : [#users=2] = call_function[target=operator.add](args = (%mul_30, %bias_14), kwargs = {})
    %in_proj_7 : [#users=1] = call_module[target=encoder.layer.7.attention.self.in_proj](args = (%add_78,), kwargs = {})
    %view_43 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_7, [1, 256, 12, -1]), kwargs = {})
    %permute_42 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_43, 0, 2, 1, 3), kwargs = {})
    %chunk_7 : [#users=3] = call_method[target=chunk](args = (%permute_42, 3), kwargs = {dim: -1})
    %getitem_45 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_7, 0), kwargs = {})
    %getitem_46 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_7, 1), kwargs = {})
    %getitem_47 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_7, 2), kwargs = {})
    %q_bias_7 : [#users=1] = get_attr[target=encoder.layer.7.attention.self.q_bias]
    %getitem_48 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_7, [None, None, slice(None, None, None)]), kwargs = {})
    %view_44 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_48, [1, 1, 12, -1]), kwargs = {})
    %permute_43 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_44, 0, 2, 1, 3), kwargs = {})
    %add_79 : [#users=1] = call_function[target=operator.add](args = (%getitem_45, %permute_43), kwargs = {})
    %v_bias_7 : [#users=1] = get_attr[target=encoder.layer.7.attention.self.v_bias]
    %getitem_49 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_7, [None, None, slice(None, None, None)]), kwargs = {})
    %view_45 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_49, [1, 1, 12, -1]), kwargs = {})
    %permute_44 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_45, 0, 2, 1, 3), kwargs = {})
    %add_80 : [#users=1] = call_function[target=operator.add](args = (%getitem_47, %permute_44), kwargs = {})
    %tensor_231 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_31 : [#users=1] = call_function[target=operator.mul](args = (%tensor_231, 3), kwargs = {})
    %sqrt_29 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_31,), kwargs = {})
    %to_37 : [#users=0] = call_method[target=to](args = (%sqrt_29,), kwargs = {dtype: torch.float32})
    %truediv_22 : [#users=2] = call_function[target=operator.truediv](args = (%add_79, %sqrt_29), kwargs = {})
    %transpose_28 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_46, -1, -2), kwargs = {})
    %matmul_28 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_22, %transpose_28), kwargs = {})
    %unsqueeze_19 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_7 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_19,), kwargs = {})
    %to_38 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_19, cpu), kwargs = {})
    %__external_param__13 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_50 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__13, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_20 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_50, 0), kwargs = {})
    %pos_proj_7 : [#users=1] = call_module[target=encoder.layer.7.attention.self.pos_proj](args = (%unsqueeze_20,), kwargs = {})
    %view_46 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_7, [1, 512, 12, -1]), kwargs = {})
    %permute_45 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_46, 0, 2, 1, 3), kwargs = {})
    %transpose_29 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_45, -1, -2), kwargs = {})
    %matmul_29 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_22, %transpose_29), kwargs = {})
    %add_81 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_19, 256), kwargs = {})
    %clamp_14 : [#users=1] = call_function[target=torch.clamp](args = (%add_81, 0, 511), kwargs = {})
    %expand_14 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_14, [1, 12, 256, 256]), kwargs = {})
    %gather_14 : [#users=2] = call_function[target=torch.gather](args = (%matmul_29,), kwargs = {dim: -1, index: %expand_14})
    %full_like_7 : [#users=1] = call_function[target=torch.full_like](args = (%gather_14, 0), kwargs = {})
    %iadd_14 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_7, %gather_14), kwargs = {})
    %pos_q_proj_7 : [#users=1] = call_module[target=encoder.layer.7.attention.self.pos_q_proj](args = (%unsqueeze_20,), kwargs = {})
    %view_47 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_7, [1, 512, 12, -1]), kwargs = {})
    %permute_46 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_47, 0, 2, 1, 3), kwargs = {})
    %tensor_264 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_32 : [#users=1] = call_function[target=operator.mul](args = (%tensor_264, 3), kwargs = {})
    %sqrt_30 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_32,), kwargs = {})
    %itruediv_7 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_46, %sqrt_30), kwargs = {})
    %neg_7 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_19,), kwargs = {})
    %add_82 : [#users=1] = call_function[target=operator.add](args = (%neg_7, 256), kwargs = {})
    %clamp_15 : [#users=1] = call_function[target=torch.clamp](args = (%add_82, 0, 511), kwargs = {})
    %transpose_30 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_7, -1, -2), kwargs = {})
    %to_39 : [#users=0] = call_method[target=to](args = (%transpose_30,), kwargs = {dtype: torch.float32})
    %matmul_30 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_46, %transpose_30), kwargs = {})
    %expand_15 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_15, [1, 12, 256, 256]), kwargs = {})
    %gather_15 : [#users=1] = call_function[target=torch.gather](args = (%matmul_30,), kwargs = {dim: -1, index: %expand_15})
    %transpose_31 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_15, -1, -2), kwargs = {})
    %iadd_15 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_14, %transpose_31), kwargs = {})
    %add_83 : [#users=1] = call_function[target=operator.add](args = (%matmul_28, %iadd_15), kwargs = {})
    %apply_7 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_83, %byte, -1), kwargs = {})
    %matmul_31 : [#users=1] = call_function[target=torch.matmul](args = (%apply_7, %add_80), kwargs = {})
    %permute_47 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_31, 0, 2, 1, 3), kwargs = {})
    %contiguous_7 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_47,), kwargs = {})
    %view_48 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_7, [1, 256, -1]), kwargs = {})
    %dense_21 : [#users=1] = call_module[target=encoder.layer.7.attention.output.dense](args = (%view_48,), kwargs = {})
    %add_84 : [#users=4] = call_function[target=operator.add](args = (%dense_21, %add_78), kwargs = {})
    %float_16 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_84,), kwargs = {})
    %mean_30 : [#users=2] = call_method[target=mean](args = (%add_84, -1), kwargs = {keepdim: True})
    %sub_31 : [#users=1] = call_function[target=operator.sub](args = (%add_84, %mean_30), kwargs = {})
    %pow_16 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_31, 2), kwargs = {})
    %mean_31 : [#users=1] = call_method[target=mean](args = (%pow_16, -1), kwargs = {keepdim: True})
    %sub_32 : [#users=1] = call_function[target=operator.sub](args = (%add_84, %mean_30), kwargs = {})
    %add_85 : [#users=1] = call_function[target=operator.add](args = (%mean_31, 1e-07), kwargs = {})
    %sqrt_31 : [#users=1] = call_function[target=torch.sqrt](args = (%add_85,), kwargs = {})
    %truediv_23 : [#users=2] = call_function[target=operator.truediv](args = (%sub_32, %sqrt_31), kwargs = {})
    %to_40 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_23, torch.float32), kwargs = {})
    %weight_15 : [#users=1] = get_attr[target=encoder.layer.7.attention.output.LayerNorm.weight]
    %mul_33 : [#users=1] = call_function[target=operator.mul](args = (%weight_15, %truediv_23), kwargs = {})
    %bias_15 : [#users=1] = get_attr[target=encoder.layer.7.attention.output.LayerNorm.bias]
    %add_86 : [#users=2] = call_function[target=operator.add](args = (%mul_33, %bias_15), kwargs = {})
    %dense_22 : [#users=1] = call_module[target=encoder.layer.7.intermediate.dense](args = (%add_86,), kwargs = {})
    %gelu_7 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_22,), kwargs = {})
    %dense_23 : [#users=1] = call_module[target=encoder.layer.7.output.dense](args = (%gelu_7,), kwargs = {})
    %add_87 : [#users=4] = call_function[target=operator.add](args = (%dense_23, %add_86), kwargs = {})
    %float_17 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_87,), kwargs = {})
    %mean_32 : [#users=2] = call_method[target=mean](args = (%add_87, -1), kwargs = {keepdim: True})
    %sub_33 : [#users=1] = call_function[target=operator.sub](args = (%add_87, %mean_32), kwargs = {})
    %pow_17 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_33, 2), kwargs = {})
    %mean_33 : [#users=1] = call_method[target=mean](args = (%pow_17, -1), kwargs = {keepdim: True})
    %sub_34 : [#users=1] = call_function[target=operator.sub](args = (%add_87, %mean_32), kwargs = {})
    %add_88 : [#users=1] = call_function[target=operator.add](args = (%mean_33, 1e-07), kwargs = {})
    %sqrt_32 : [#users=1] = call_function[target=torch.sqrt](args = (%add_88,), kwargs = {})
    %truediv_24 : [#users=2] = call_function[target=operator.truediv](args = (%sub_34, %sqrt_32), kwargs = {})
    %to_41 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_24, torch.float32), kwargs = {})
    %weight_16 : [#users=1] = get_attr[target=encoder.layer.7.output.LayerNorm.weight]
    %mul_34 : [#users=1] = call_function[target=operator.mul](args = (%weight_16, %truediv_24), kwargs = {})
    %bias_16 : [#users=1] = get_attr[target=encoder.layer.7.output.LayerNorm.bias]
    %add_89 : [#users=2] = call_function[target=operator.add](args = (%mul_34, %bias_16), kwargs = {})
    %in_proj_8 : [#users=1] = call_module[target=encoder.layer.8.attention.self.in_proj](args = (%add_89,), kwargs = {})
    %view_49 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_8, [1, 256, 12, -1]), kwargs = {})
    %permute_48 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_49, 0, 2, 1, 3), kwargs = {})
    %chunk_8 : [#users=3] = call_method[target=chunk](args = (%permute_48, 3), kwargs = {dim: -1})
    %getitem_51 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_8, 0), kwargs = {})
    %getitem_52 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_8, 1), kwargs = {})
    %getitem_53 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_8, 2), kwargs = {})
    %q_bias_8 : [#users=1] = get_attr[target=encoder.layer.8.attention.self.q_bias]
    %getitem_54 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_8, [None, None, slice(None, None, None)]), kwargs = {})
    %view_50 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_54, [1, 1, 12, -1]), kwargs = {})
    %permute_49 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_50, 0, 2, 1, 3), kwargs = {})
    %add_90 : [#users=1] = call_function[target=operator.add](args = (%getitem_51, %permute_49), kwargs = {})
    %v_bias_8 : [#users=1] = get_attr[target=encoder.layer.8.attention.self.v_bias]
    %getitem_55 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_8, [None, None, slice(None, None, None)]), kwargs = {})
    %view_51 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_55, [1, 1, 12, -1]), kwargs = {})
    %permute_50 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_51, 0, 2, 1, 3), kwargs = {})
    %add_91 : [#users=1] = call_function[target=operator.add](args = (%getitem_53, %permute_50), kwargs = {})
    %tensor_265 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_35 : [#users=1] = call_function[target=operator.mul](args = (%tensor_265, 3), kwargs = {})
    %sqrt_33 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_35,), kwargs = {})
    %to_42 : [#users=0] = call_method[target=to](args = (%sqrt_33,), kwargs = {dtype: torch.float32})
    %truediv_25 : [#users=2] = call_function[target=operator.truediv](args = (%add_90, %sqrt_33), kwargs = {})
    %transpose_32 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_52, -1, -2), kwargs = {})
    %matmul_32 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_25, %transpose_32), kwargs = {})
    %unsqueeze_21 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_8 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_21,), kwargs = {})
    %to_43 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_21, cpu), kwargs = {})
    %__external_param__14 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_56 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__14, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_22 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_56, 0), kwargs = {})
    %pos_proj_8 : [#users=1] = call_module[target=encoder.layer.8.attention.self.pos_proj](args = (%unsqueeze_22,), kwargs = {})
    %view_52 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_8, [1, 512, 12, -1]), kwargs = {})
    %permute_51 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_52, 0, 2, 1, 3), kwargs = {})
    %transpose_33 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_51, -1, -2), kwargs = {})
    %matmul_33 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_25, %transpose_33), kwargs = {})
    %add_92 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_21, 256), kwargs = {})
    %clamp_16 : [#users=1] = call_function[target=torch.clamp](args = (%add_92, 0, 511), kwargs = {})
    %expand_16 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_16, [1, 12, 256, 256]), kwargs = {})
    %gather_16 : [#users=2] = call_function[target=torch.gather](args = (%matmul_33,), kwargs = {dim: -1, index: %expand_16})
    %full_like_8 : [#users=1] = call_function[target=torch.full_like](args = (%gather_16, 0), kwargs = {})
    %iadd_16 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_8, %gather_16), kwargs = {})
    %pos_q_proj_8 : [#users=1] = call_module[target=encoder.layer.8.attention.self.pos_q_proj](args = (%unsqueeze_22,), kwargs = {})
    %view_53 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_8, [1, 512, 12, -1]), kwargs = {})
    %permute_52 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_53, 0, 2, 1, 3), kwargs = {})
    %tensor_298 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_36 : [#users=1] = call_function[target=operator.mul](args = (%tensor_298, 3), kwargs = {})
    %sqrt_34 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_36,), kwargs = {})
    %itruediv_8 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_52, %sqrt_34), kwargs = {})
    %neg_8 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_21,), kwargs = {})
    %add_93 : [#users=1] = call_function[target=operator.add](args = (%neg_8, 256), kwargs = {})
    %clamp_17 : [#users=1] = call_function[target=torch.clamp](args = (%add_93, 0, 511), kwargs = {})
    %transpose_34 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_8, -1, -2), kwargs = {})
    %to_44 : [#users=0] = call_method[target=to](args = (%transpose_34,), kwargs = {dtype: torch.float32})
    %matmul_34 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_52, %transpose_34), kwargs = {})
    %expand_17 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_17, [1, 12, 256, 256]), kwargs = {})
    %gather_17 : [#users=1] = call_function[target=torch.gather](args = (%matmul_34,), kwargs = {dim: -1, index: %expand_17})
    %transpose_35 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_17, -1, -2), kwargs = {})
    %iadd_17 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_16, %transpose_35), kwargs = {})
    %add_94 : [#users=1] = call_function[target=operator.add](args = (%matmul_32, %iadd_17), kwargs = {})
    %apply_8 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_94, %byte, -1), kwargs = {})
    %matmul_35 : [#users=1] = call_function[target=torch.matmul](args = (%apply_8, %add_91), kwargs = {})
    %permute_53 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_35, 0, 2, 1, 3), kwargs = {})
    %contiguous_8 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_53,), kwargs = {})
    %view_54 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_8, [1, 256, -1]), kwargs = {})
    %dense_24 : [#users=1] = call_module[target=encoder.layer.8.attention.output.dense](args = (%view_54,), kwargs = {})
    %add_95 : [#users=4] = call_function[target=operator.add](args = (%dense_24, %add_89), kwargs = {})
    %float_18 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_95,), kwargs = {})
    %mean_34 : [#users=2] = call_method[target=mean](args = (%add_95, -1), kwargs = {keepdim: True})
    %sub_35 : [#users=1] = call_function[target=operator.sub](args = (%add_95, %mean_34), kwargs = {})
    %pow_18 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_35, 2), kwargs = {})
    %mean_35 : [#users=1] = call_method[target=mean](args = (%pow_18, -1), kwargs = {keepdim: True})
    %sub_36 : [#users=1] = call_function[target=operator.sub](args = (%add_95, %mean_34), kwargs = {})
    %add_96 : [#users=1] = call_function[target=operator.add](args = (%mean_35, 1e-07), kwargs = {})
    %sqrt_35 : [#users=1] = call_function[target=torch.sqrt](args = (%add_96,), kwargs = {})
    %truediv_26 : [#users=2] = call_function[target=operator.truediv](args = (%sub_36, %sqrt_35), kwargs = {})
    %to_45 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_26, torch.float32), kwargs = {})
    %weight_17 : [#users=1] = get_attr[target=encoder.layer.8.attention.output.LayerNorm.weight]
    %mul_37 : [#users=1] = call_function[target=operator.mul](args = (%weight_17, %truediv_26), kwargs = {})
    %bias_17 : [#users=1] = get_attr[target=encoder.layer.8.attention.output.LayerNorm.bias]
    %add_97 : [#users=2] = call_function[target=operator.add](args = (%mul_37, %bias_17), kwargs = {})
    %dense_25 : [#users=1] = call_module[target=encoder.layer.8.intermediate.dense](args = (%add_97,), kwargs = {})
    %gelu_8 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_25,), kwargs = {})
    %dense_26 : [#users=1] = call_module[target=encoder.layer.8.output.dense](args = (%gelu_8,), kwargs = {})
    %add_98 : [#users=4] = call_function[target=operator.add](args = (%dense_26, %add_97), kwargs = {})
    %float_19 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_98,), kwargs = {})
    %mean_36 : [#users=2] = call_method[target=mean](args = (%add_98, -1), kwargs = {keepdim: True})
    %sub_37 : [#users=1] = call_function[target=operator.sub](args = (%add_98, %mean_36), kwargs = {})
    %pow_19 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_37, 2), kwargs = {})
    %mean_37 : [#users=1] = call_method[target=mean](args = (%pow_19, -1), kwargs = {keepdim: True})
    %sub_38 : [#users=1] = call_function[target=operator.sub](args = (%add_98, %mean_36), kwargs = {})
    %add_99 : [#users=1] = call_function[target=operator.add](args = (%mean_37, 1e-07), kwargs = {})
    %sqrt_36 : [#users=1] = call_function[target=torch.sqrt](args = (%add_99,), kwargs = {})
    %truediv_27 : [#users=2] = call_function[target=operator.truediv](args = (%sub_38, %sqrt_36), kwargs = {})
    %to_46 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_27, torch.float32), kwargs = {})
    %weight_18 : [#users=1] = get_attr[target=encoder.layer.8.output.LayerNorm.weight]
    %mul_38 : [#users=1] = call_function[target=operator.mul](args = (%weight_18, %truediv_27), kwargs = {})
    %bias_18 : [#users=1] = get_attr[target=encoder.layer.8.output.LayerNorm.bias]
    %add_100 : [#users=2] = call_function[target=operator.add](args = (%mul_38, %bias_18), kwargs = {})
    %in_proj_9 : [#users=1] = call_module[target=encoder.layer.9.attention.self.in_proj](args = (%add_100,), kwargs = {})
    %view_55 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_9, [1, 256, 12, -1]), kwargs = {})
    %permute_54 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_55, 0, 2, 1, 3), kwargs = {})
    %chunk_9 : [#users=3] = call_method[target=chunk](args = (%permute_54, 3), kwargs = {dim: -1})
    %getitem_57 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_9, 0), kwargs = {})
    %getitem_58 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_9, 1), kwargs = {})
    %getitem_59 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_9, 2), kwargs = {})
    %q_bias_9 : [#users=1] = get_attr[target=encoder.layer.9.attention.self.q_bias]
    %getitem_60 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_9, [None, None, slice(None, None, None)]), kwargs = {})
    %view_56 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_60, [1, 1, 12, -1]), kwargs = {})
    %permute_55 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_56, 0, 2, 1, 3), kwargs = {})
    %add_101 : [#users=1] = call_function[target=operator.add](args = (%getitem_57, %permute_55), kwargs = {})
    %v_bias_9 : [#users=1] = get_attr[target=encoder.layer.9.attention.self.v_bias]
    %getitem_61 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_9, [None, None, slice(None, None, None)]), kwargs = {})
    %view_57 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_61, [1, 1, 12, -1]), kwargs = {})
    %permute_56 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_57, 0, 2, 1, 3), kwargs = {})
    %add_102 : [#users=1] = call_function[target=operator.add](args = (%getitem_59, %permute_56), kwargs = {})
    %tensor_299 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_39 : [#users=1] = call_function[target=operator.mul](args = (%tensor_299, 3), kwargs = {})
    %sqrt_37 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_39,), kwargs = {})
    %to_47 : [#users=0] = call_method[target=to](args = (%sqrt_37,), kwargs = {dtype: torch.float32})
    %truediv_28 : [#users=2] = call_function[target=operator.truediv](args = (%add_101, %sqrt_37), kwargs = {})
    %transpose_36 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_58, -1, -2), kwargs = {})
    %matmul_36 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_28, %transpose_36), kwargs = {})
    %unsqueeze_23 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_9 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_23,), kwargs = {})
    %to_48 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_23, cpu), kwargs = {})
    %__external_param__15 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_62 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__15, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_24 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_62, 0), kwargs = {})
    %pos_proj_9 : [#users=1] = call_module[target=encoder.layer.9.attention.self.pos_proj](args = (%unsqueeze_24,), kwargs = {})
    %view_58 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_9, [1, 512, 12, -1]), kwargs = {})
    %permute_57 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_58, 0, 2, 1, 3), kwargs = {})
    %transpose_37 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_57, -1, -2), kwargs = {})
    %matmul_37 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_28, %transpose_37), kwargs = {})
    %add_103 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_23, 256), kwargs = {})
    %clamp_18 : [#users=1] = call_function[target=torch.clamp](args = (%add_103, 0, 511), kwargs = {})
    %expand_18 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_18, [1, 12, 256, 256]), kwargs = {})
    %gather_18 : [#users=2] = call_function[target=torch.gather](args = (%matmul_37,), kwargs = {dim: -1, index: %expand_18})
    %full_like_9 : [#users=1] = call_function[target=torch.full_like](args = (%gather_18, 0), kwargs = {})
    %iadd_18 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_9, %gather_18), kwargs = {})
    %pos_q_proj_9 : [#users=1] = call_module[target=encoder.layer.9.attention.self.pos_q_proj](args = (%unsqueeze_24,), kwargs = {})
    %view_59 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_9, [1, 512, 12, -1]), kwargs = {})
    %permute_58 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_59, 0, 2, 1, 3), kwargs = {})
    %tensor_332 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_40 : [#users=1] = call_function[target=operator.mul](args = (%tensor_332, 3), kwargs = {})
    %sqrt_38 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_40,), kwargs = {})
    %itruediv_9 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_58, %sqrt_38), kwargs = {})
    %neg_9 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_23,), kwargs = {})
    %add_104 : [#users=1] = call_function[target=operator.add](args = (%neg_9, 256), kwargs = {})
    %clamp_19 : [#users=1] = call_function[target=torch.clamp](args = (%add_104, 0, 511), kwargs = {})
    %transpose_38 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_9, -1, -2), kwargs = {})
    %to_49 : [#users=0] = call_method[target=to](args = (%transpose_38,), kwargs = {dtype: torch.float32})
    %matmul_38 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_58, %transpose_38), kwargs = {})
    %expand_19 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_19, [1, 12, 256, 256]), kwargs = {})
    %gather_19 : [#users=1] = call_function[target=torch.gather](args = (%matmul_38,), kwargs = {dim: -1, index: %expand_19})
    %transpose_39 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_19, -1, -2), kwargs = {})
    %iadd_19 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_18, %transpose_39), kwargs = {})
    %add_105 : [#users=1] = call_function[target=operator.add](args = (%matmul_36, %iadd_19), kwargs = {})
    %apply_9 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_105, %byte, -1), kwargs = {})
    %matmul_39 : [#users=1] = call_function[target=torch.matmul](args = (%apply_9, %add_102), kwargs = {})
    %permute_59 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_39, 0, 2, 1, 3), kwargs = {})
    %contiguous_9 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_59,), kwargs = {})
    %view_60 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_9, [1, 256, -1]), kwargs = {})
    %dense_27 : [#users=1] = call_module[target=encoder.layer.9.attention.output.dense](args = (%view_60,), kwargs = {})
    %add_106 : [#users=4] = call_function[target=operator.add](args = (%dense_27, %add_100), kwargs = {})
    %float_20 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_106,), kwargs = {})
    %mean_38 : [#users=2] = call_method[target=mean](args = (%add_106, -1), kwargs = {keepdim: True})
    %sub_39 : [#users=1] = call_function[target=operator.sub](args = (%add_106, %mean_38), kwargs = {})
    %pow_20 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_39, 2), kwargs = {})
    %mean_39 : [#users=1] = call_method[target=mean](args = (%pow_20, -1), kwargs = {keepdim: True})
    %sub_40 : [#users=1] = call_function[target=operator.sub](args = (%add_106, %mean_38), kwargs = {})
    %add_107 : [#users=1] = call_function[target=operator.add](args = (%mean_39, 1e-07), kwargs = {})
    %sqrt_39 : [#users=1] = call_function[target=torch.sqrt](args = (%add_107,), kwargs = {})
    %truediv_29 : [#users=2] = call_function[target=operator.truediv](args = (%sub_40, %sqrt_39), kwargs = {})
    %to_50 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_29, torch.float32), kwargs = {})
    %weight_19 : [#users=1] = get_attr[target=encoder.layer.9.attention.output.LayerNorm.weight]
    %mul_41 : [#users=1] = call_function[target=operator.mul](args = (%weight_19, %truediv_29), kwargs = {})
    %bias_19 : [#users=1] = get_attr[target=encoder.layer.9.attention.output.LayerNorm.bias]
    %add_108 : [#users=2] = call_function[target=operator.add](args = (%mul_41, %bias_19), kwargs = {})
    %dense_28 : [#users=1] = call_module[target=encoder.layer.9.intermediate.dense](args = (%add_108,), kwargs = {})
    %gelu_9 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_28,), kwargs = {})
    %dense_29 : [#users=1] = call_module[target=encoder.layer.9.output.dense](args = (%gelu_9,), kwargs = {})
    %add_109 : [#users=4] = call_function[target=operator.add](args = (%dense_29, %add_108), kwargs = {})
    %float_21 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_109,), kwargs = {})
    %mean_40 : [#users=2] = call_method[target=mean](args = (%add_109, -1), kwargs = {keepdim: True})
    %sub_41 : [#users=1] = call_function[target=operator.sub](args = (%add_109, %mean_40), kwargs = {})
    %pow_21 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_41, 2), kwargs = {})
    %mean_41 : [#users=1] = call_method[target=mean](args = (%pow_21, -1), kwargs = {keepdim: True})
    %sub_42 : [#users=1] = call_function[target=operator.sub](args = (%add_109, %mean_40), kwargs = {})
    %add_110 : [#users=1] = call_function[target=operator.add](args = (%mean_41, 1e-07), kwargs = {})
    %sqrt_40 : [#users=1] = call_function[target=torch.sqrt](args = (%add_110,), kwargs = {})
    %truediv_30 : [#users=2] = call_function[target=operator.truediv](args = (%sub_42, %sqrt_40), kwargs = {})
    %to_51 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_30, torch.float32), kwargs = {})
    %weight_20 : [#users=1] = get_attr[target=encoder.layer.9.output.LayerNorm.weight]
    %mul_42 : [#users=1] = call_function[target=operator.mul](args = (%weight_20, %truediv_30), kwargs = {})
    %bias_20 : [#users=1] = get_attr[target=encoder.layer.9.output.LayerNorm.bias]
    %add_111 : [#users=2] = call_function[target=operator.add](args = (%mul_42, %bias_20), kwargs = {})
    %in_proj_10 : [#users=1] = call_module[target=encoder.layer.10.attention.self.in_proj](args = (%add_111,), kwargs = {})
    %view_61 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_10, [1, 256, 12, -1]), kwargs = {})
    %permute_60 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_61, 0, 2, 1, 3), kwargs = {})
    %chunk_10 : [#users=3] = call_method[target=chunk](args = (%permute_60, 3), kwargs = {dim: -1})
    %getitem_63 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_10, 0), kwargs = {})
    %getitem_64 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_10, 1), kwargs = {})
    %getitem_65 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_10, 2), kwargs = {})
    %q_bias_10 : [#users=1] = get_attr[target=encoder.layer.10.attention.self.q_bias]
    %getitem_66 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_10, [None, None, slice(None, None, None)]), kwargs = {})
    %view_62 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_66, [1, 1, 12, -1]), kwargs = {})
    %permute_61 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_62, 0, 2, 1, 3), kwargs = {})
    %add_112 : [#users=1] = call_function[target=operator.add](args = (%getitem_63, %permute_61), kwargs = {})
    %v_bias_10 : [#users=1] = get_attr[target=encoder.layer.10.attention.self.v_bias]
    %getitem_67 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_10, [None, None, slice(None, None, None)]), kwargs = {})
    %view_63 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_67, [1, 1, 12, -1]), kwargs = {})
    %permute_62 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_63, 0, 2, 1, 3), kwargs = {})
    %add_113 : [#users=1] = call_function[target=operator.add](args = (%getitem_65, %permute_62), kwargs = {})
    %tensor_333 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_43 : [#users=1] = call_function[target=operator.mul](args = (%tensor_333, 3), kwargs = {})
    %sqrt_41 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_43,), kwargs = {})
    %to_52 : [#users=0] = call_method[target=to](args = (%sqrt_41,), kwargs = {dtype: torch.float32})
    %truediv_31 : [#users=2] = call_function[target=operator.truediv](args = (%add_112, %sqrt_41), kwargs = {})
    %transpose_40 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_64, -1, -2), kwargs = {})
    %matmul_40 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_31, %transpose_40), kwargs = {})
    %unsqueeze_25 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_10 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_25,), kwargs = {})
    %to_53 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_25, cpu), kwargs = {})
    %__external_param__16 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_68 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__16, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_26 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_68, 0), kwargs = {})
    %pos_proj_10 : [#users=1] = call_module[target=encoder.layer.10.attention.self.pos_proj](args = (%unsqueeze_26,), kwargs = {})
    %view_64 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_10, [1, 512, 12, -1]), kwargs = {})
    %permute_63 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_64, 0, 2, 1, 3), kwargs = {})
    %transpose_41 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_63, -1, -2), kwargs = {})
    %matmul_41 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_31, %transpose_41), kwargs = {})
    %add_114 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_25, 256), kwargs = {})
    %clamp_20 : [#users=1] = call_function[target=torch.clamp](args = (%add_114, 0, 511), kwargs = {})
    %expand_20 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_20, [1, 12, 256, 256]), kwargs = {})
    %gather_20 : [#users=2] = call_function[target=torch.gather](args = (%matmul_41,), kwargs = {dim: -1, index: %expand_20})
    %full_like_10 : [#users=1] = call_function[target=torch.full_like](args = (%gather_20, 0), kwargs = {})
    %iadd_20 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_10, %gather_20), kwargs = {})
    %pos_q_proj_10 : [#users=1] = call_module[target=encoder.layer.10.attention.self.pos_q_proj](args = (%unsqueeze_26,), kwargs = {})
    %view_65 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_10, [1, 512, 12, -1]), kwargs = {})
    %permute_64 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_65, 0, 2, 1, 3), kwargs = {})
    %tensor_366 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_44 : [#users=1] = call_function[target=operator.mul](args = (%tensor_366, 3), kwargs = {})
    %sqrt_42 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_44,), kwargs = {})
    %itruediv_10 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_64, %sqrt_42), kwargs = {})
    %neg_10 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_25,), kwargs = {})
    %add_115 : [#users=1] = call_function[target=operator.add](args = (%neg_10, 256), kwargs = {})
    %clamp_21 : [#users=1] = call_function[target=torch.clamp](args = (%add_115, 0, 511), kwargs = {})
    %transpose_42 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_10, -1, -2), kwargs = {})
    %to_54 : [#users=0] = call_method[target=to](args = (%transpose_42,), kwargs = {dtype: torch.float32})
    %matmul_42 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_64, %transpose_42), kwargs = {})
    %expand_21 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_21, [1, 12, 256, 256]), kwargs = {})
    %gather_21 : [#users=1] = call_function[target=torch.gather](args = (%matmul_42,), kwargs = {dim: -1, index: %expand_21})
    %transpose_43 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_21, -1, -2), kwargs = {})
    %iadd_21 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_20, %transpose_43), kwargs = {})
    %add_116 : [#users=1] = call_function[target=operator.add](args = (%matmul_40, %iadd_21), kwargs = {})
    %apply_10 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_116, %byte, -1), kwargs = {})
    %matmul_43 : [#users=1] = call_function[target=torch.matmul](args = (%apply_10, %add_113), kwargs = {})
    %permute_65 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_43, 0, 2, 1, 3), kwargs = {})
    %contiguous_10 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_65,), kwargs = {})
    %view_66 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_10, [1, 256, -1]), kwargs = {})
    %dense_30 : [#users=1] = call_module[target=encoder.layer.10.attention.output.dense](args = (%view_66,), kwargs = {})
    %add_117 : [#users=4] = call_function[target=operator.add](args = (%dense_30, %add_111), kwargs = {})
    %float_22 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_117,), kwargs = {})
    %mean_42 : [#users=2] = call_method[target=mean](args = (%add_117, -1), kwargs = {keepdim: True})
    %sub_43 : [#users=1] = call_function[target=operator.sub](args = (%add_117, %mean_42), kwargs = {})
    %pow_22 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_43, 2), kwargs = {})
    %mean_43 : [#users=1] = call_method[target=mean](args = (%pow_22, -1), kwargs = {keepdim: True})
    %sub_44 : [#users=1] = call_function[target=operator.sub](args = (%add_117, %mean_42), kwargs = {})
    %add_118 : [#users=1] = call_function[target=operator.add](args = (%mean_43, 1e-07), kwargs = {})
    %sqrt_43 : [#users=1] = call_function[target=torch.sqrt](args = (%add_118,), kwargs = {})
    %truediv_32 : [#users=2] = call_function[target=operator.truediv](args = (%sub_44, %sqrt_43), kwargs = {})
    %to_55 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_32, torch.float32), kwargs = {})
    %weight_21 : [#users=1] = get_attr[target=encoder.layer.10.attention.output.LayerNorm.weight]
    %mul_45 : [#users=1] = call_function[target=operator.mul](args = (%weight_21, %truediv_32), kwargs = {})
    %bias_21 : [#users=1] = get_attr[target=encoder.layer.10.attention.output.LayerNorm.bias]
    %add_119 : [#users=2] = call_function[target=operator.add](args = (%mul_45, %bias_21), kwargs = {})
    %dense_31 : [#users=1] = call_module[target=encoder.layer.10.intermediate.dense](args = (%add_119,), kwargs = {})
    %gelu_10 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_31,), kwargs = {})
    %dense_32 : [#users=1] = call_module[target=encoder.layer.10.output.dense](args = (%gelu_10,), kwargs = {})
    %add_120 : [#users=4] = call_function[target=operator.add](args = (%dense_32, %add_119), kwargs = {})
    %float_23 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_120,), kwargs = {})
    %mean_44 : [#users=2] = call_method[target=mean](args = (%add_120, -1), kwargs = {keepdim: True})
    %sub_45 : [#users=1] = call_function[target=operator.sub](args = (%add_120, %mean_44), kwargs = {})
    %pow_23 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_45, 2), kwargs = {})
    %mean_45 : [#users=1] = call_method[target=mean](args = (%pow_23, -1), kwargs = {keepdim: True})
    %sub_46 : [#users=1] = call_function[target=operator.sub](args = (%add_120, %mean_44), kwargs = {})
    %add_121 : [#users=1] = call_function[target=operator.add](args = (%mean_45, 1e-07), kwargs = {})
    %sqrt_44 : [#users=1] = call_function[target=torch.sqrt](args = (%add_121,), kwargs = {})
    %truediv_33 : [#users=2] = call_function[target=operator.truediv](args = (%sub_46, %sqrt_44), kwargs = {})
    %to_56 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_33, torch.float32), kwargs = {})
    %weight_22 : [#users=1] = get_attr[target=encoder.layer.10.output.LayerNorm.weight]
    %mul_46 : [#users=1] = call_function[target=operator.mul](args = (%weight_22, %truediv_33), kwargs = {})
    %bias_22 : [#users=1] = get_attr[target=encoder.layer.10.output.LayerNorm.bias]
    %add_122 : [#users=2] = call_function[target=operator.add](args = (%mul_46, %bias_22), kwargs = {})
    %in_proj_11 : [#users=1] = call_module[target=encoder.layer.11.attention.self.in_proj](args = (%add_122,), kwargs = {})
    %view_67 : [#users=1] = call_function[target=torch.Tensor.view](args = (%in_proj_11, [1, 256, 12, -1]), kwargs = {})
    %permute_66 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_67, 0, 2, 1, 3), kwargs = {})
    %chunk_11 : [#users=3] = call_method[target=chunk](args = (%permute_66, 3), kwargs = {dim: -1})
    %getitem_69 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_11, 0), kwargs = {})
    %getitem_70 : [#users=2] = call_function[target=operator.getitem](args = (%chunk_11, 1), kwargs = {})
    %getitem_71 : [#users=1] = call_function[target=operator.getitem](args = (%chunk_11, 2), kwargs = {})
    %q_bias_11 : [#users=1] = get_attr[target=encoder.layer.11.attention.self.q_bias]
    %getitem_72 : [#users=1] = call_function[target=operator.getitem](args = (%q_bias_11, [None, None, slice(None, None, None)]), kwargs = {})
    %view_68 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_72, [1, 1, 12, -1]), kwargs = {})
    %permute_67 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_68, 0, 2, 1, 3), kwargs = {})
    %add_123 : [#users=1] = call_function[target=operator.add](args = (%getitem_69, %permute_67), kwargs = {})
    %v_bias_11 : [#users=1] = get_attr[target=encoder.layer.11.attention.self.v_bias]
    %getitem_73 : [#users=1] = call_function[target=operator.getitem](args = (%v_bias_11, [None, None, slice(None, None, None)]), kwargs = {})
    %view_69 : [#users=1] = call_function[target=torch.Tensor.view](args = (%getitem_73, [1, 1, 12, -1]), kwargs = {})
    %permute_68 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_69, 0, 2, 1, 3), kwargs = {})
    %add_124 : [#users=1] = call_function[target=operator.add](args = (%getitem_71, %permute_68), kwargs = {})
    %tensor_367 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_47 : [#users=1] = call_function[target=operator.mul](args = (%tensor_367, 3), kwargs = {})
    %sqrt_45 : [#users=2] = call_function[target=torch.sqrt](args = (%mul_47,), kwargs = {})
    %to_57 : [#users=0] = call_method[target=to](args = (%sqrt_45,), kwargs = {dtype: torch.float32})
    %truediv_34 : [#users=2] = call_function[target=operator.truediv](args = (%add_123, %sqrt_45), kwargs = {})
    %transpose_44 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%getitem_70, -1, -2), kwargs = {})
    %matmul_44 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_34, %transpose_44), kwargs = {})
    %unsqueeze_27 : [#users=4] = call_function[target=torch.Tensor.unsqueeze](args = (%unsqueeze_4, 1), kwargs = {})
    %long_11 : [#users=0] = call_function[target=torch.Tensor.long](args = (%unsqueeze_27,), kwargs = {})
    %to_58 : [#users=0] = call_function[target=torch.Tensor.to](args = (%unsqueeze_27, cpu), kwargs = {})
    %__external_param__17 : [#users=1] = get_attr[target=encoder.layer.0.attention.self.__external_param__6]
    %getitem_74 : [#users=1] = call_function[target=operator.getitem](args = (%__external_param__17, [slice(256, 768, None), slice(None, None, None)]), kwargs = {})
    %unsqueeze_28 : [#users=2] = call_function[target=torch.Tensor.unsqueeze](args = (%getitem_74, 0), kwargs = {})
    %pos_proj_11 : [#users=1] = call_module[target=encoder.layer.11.attention.self.pos_proj](args = (%unsqueeze_28,), kwargs = {})
    %view_70 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_proj_11, [1, 512, 12, -1]), kwargs = {})
    %permute_69 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_70, 0, 2, 1, 3), kwargs = {})
    %transpose_45 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%permute_69, -1, -2), kwargs = {})
    %matmul_45 : [#users=1] = call_function[target=torch.matmul](args = (%truediv_34, %transpose_45), kwargs = {})
    %add_125 : [#users=1] = call_function[target=operator.add](args = (%unsqueeze_27, 256), kwargs = {})
    %clamp_22 : [#users=1] = call_function[target=torch.clamp](args = (%add_125, 0, 511), kwargs = {})
    %expand_22 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_22, [1, 12, 256, 256]), kwargs = {})
    %gather_22 : [#users=2] = call_function[target=torch.gather](args = (%matmul_45,), kwargs = {dim: -1, index: %expand_22})
    %full_like_11 : [#users=1] = call_function[target=torch.full_like](args = (%gather_22, 0), kwargs = {})
    %iadd_22 : [#users=1] = call_function[target=operator.iadd](args = (%full_like_11, %gather_22), kwargs = {})
    %pos_q_proj_11 : [#users=1] = call_module[target=encoder.layer.11.attention.self.pos_q_proj](args = (%unsqueeze_28,), kwargs = {})
    %view_71 : [#users=1] = call_function[target=torch.Tensor.view](args = (%pos_q_proj_11, [1, 512, 12, -1]), kwargs = {})
    %permute_70 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%view_71, 0, 2, 1, 3), kwargs = {})
    %tensor_400 : [#users=1] = call_function[target=torch.tensor](args = (64,), kwargs = {dtype: torch.float32})
    %mul_48 : [#users=1] = call_function[target=operator.mul](args = (%tensor_400, 3), kwargs = {})
    %sqrt_46 : [#users=1] = call_function[target=torch.sqrt](args = (%mul_48,), kwargs = {})
    %itruediv_11 : [#users=1] = call_function[target=operator.itruediv](args = (%permute_70, %sqrt_46), kwargs = {})
    %neg_11 : [#users=1] = call_function[target=operator.neg](args = (%unsqueeze_27,), kwargs = {})
    %add_126 : [#users=1] = call_function[target=operator.add](args = (%neg_11, 256), kwargs = {})
    %clamp_23 : [#users=1] = call_function[target=torch.clamp](args = (%add_126, 0, 511), kwargs = {})
    %transpose_46 : [#users=2] = call_function[target=torch.Tensor.transpose](args = (%itruediv_11, -1, -2), kwargs = {})
    %to_59 : [#users=0] = call_method[target=to](args = (%transpose_46,), kwargs = {dtype: torch.float32})
    %matmul_46 : [#users=1] = call_function[target=torch.matmul](args = (%getitem_70, %transpose_46), kwargs = {})
    %expand_23 : [#users=1] = call_function[target=torch.Tensor.expand](args = (%clamp_23, [1, 12, 256, 256]), kwargs = {})
    %gather_23 : [#users=1] = call_function[target=torch.gather](args = (%matmul_46,), kwargs = {dim: -1, index: %expand_23})
    %transpose_47 : [#users=1] = call_function[target=torch.Tensor.transpose](args = (%gather_23, -1, -2), kwargs = {})
    %iadd_23 : [#users=1] = call_function[target=operator.iadd](args = (%iadd_22, %transpose_47), kwargs = {})
    %add_127 : [#users=1] = call_function[target=operator.add](args = (%matmul_44, %iadd_23), kwargs = {})
    %apply_11 : [#users=1] = call_function[target=torch.autograd.function.apply](args = (%add_127, %byte, -1), kwargs = {})
    %matmul_47 : [#users=1] = call_function[target=torch.matmul](args = (%apply_11, %add_124), kwargs = {})
    %permute_71 : [#users=1] = call_function[target=torch.Tensor.permute](args = (%matmul_47, 0, 2, 1, 3), kwargs = {})
    %contiguous_11 : [#users=1] = call_function[target=torch.Tensor.contiguous](args = (%permute_71,), kwargs = {})
    %view_72 : [#users=1] = call_function[target=torch.Tensor.view](args = (%contiguous_11, [1, 256, -1]), kwargs = {})
    %dense_33 : [#users=1] = call_module[target=encoder.layer.11.attention.output.dense](args = (%view_72,), kwargs = {})
    %add_128 : [#users=4] = call_function[target=operator.add](args = (%dense_33, %add_122), kwargs = {})
    %float_24 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_128,), kwargs = {})
    %mean_46 : [#users=2] = call_method[target=mean](args = (%add_128, -1), kwargs = {keepdim: True})
    %sub_47 : [#users=1] = call_function[target=operator.sub](args = (%add_128, %mean_46), kwargs = {})
    %pow_24 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_47, 2), kwargs = {})
    %mean_47 : [#users=1] = call_method[target=mean](args = (%pow_24, -1), kwargs = {keepdim: True})
    %sub_48 : [#users=1] = call_function[target=operator.sub](args = (%add_128, %mean_46), kwargs = {})
    %add_129 : [#users=1] = call_function[target=operator.add](args = (%mean_47, 1e-07), kwargs = {})
    %sqrt_47 : [#users=1] = call_function[target=torch.sqrt](args = (%add_129,), kwargs = {})
    %truediv_35 : [#users=2] = call_function[target=operator.truediv](args = (%sub_48, %sqrt_47), kwargs = {})
    %to_60 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_35, torch.float32), kwargs = {})
    %weight_23 : [#users=1] = get_attr[target=encoder.layer.11.attention.output.LayerNorm.weight]
    %mul_49 : [#users=1] = call_function[target=operator.mul](args = (%weight_23, %truediv_35), kwargs = {})
    %bias_23 : [#users=1] = get_attr[target=encoder.layer.11.attention.output.LayerNorm.bias]
    %add_130 : [#users=2] = call_function[target=operator.add](args = (%mul_49, %bias_23), kwargs = {})
    %dense_34 : [#users=1] = call_module[target=encoder.layer.11.intermediate.dense](args = (%add_130,), kwargs = {})
    %gelu_11 : [#users=1] = call_function[target=torch._C._nn.gelu](args = (%dense_34,), kwargs = {})
    %dense_35 : [#users=1] = call_module[target=encoder.layer.11.output.dense](args = (%gelu_11,), kwargs = {})
    %add_131 : [#users=4] = call_function[target=operator.add](args = (%dense_35, %add_130), kwargs = {})
    %float_25 : [#users=0] = call_function[target=torch.Tensor.float](args = (%add_131,), kwargs = {})
    %mean_48 : [#users=2] = call_method[target=mean](args = (%add_131, -1), kwargs = {keepdim: True})
    %sub_49 : [#users=1] = call_function[target=operator.sub](args = (%add_131, %mean_48), kwargs = {})
    %pow_25 : [#users=1] = call_function[target=torch.Tensor.pow](args = (%sub_49, 2), kwargs = {})
    %mean_49 : [#users=1] = call_method[target=mean](args = (%pow_25, -1), kwargs = {keepdim: True})
    %sub_50 : [#users=1] = call_function[target=operator.sub](args = (%add_131, %mean_48), kwargs = {})
    %add_132 : [#users=1] = call_function[target=operator.add](args = (%mean_49, 1e-07), kwargs = {})
    %sqrt_48 : [#users=1] = call_function[target=torch.sqrt](args = (%add_132,), kwargs = {})
    %truediv_36 : [#users=2] = call_function[target=operator.truediv](args = (%sub_50, %sqrt_48), kwargs = {})
    %to_61 : [#users=0] = call_function[target=torch.Tensor.to](args = (%truediv_36, torch.float32), kwargs = {})
    %weight_24 : [#users=1] = get_attr[target=encoder.layer.11.output.LayerNorm.weight]
    %mul_50 : [#users=1] = call_function[target=operator.mul](args = (%weight_24, %truediv_36), kwargs = {})
    %bias_24 : [#users=1] = get_attr[target=encoder.layer.11.output.LayerNorm.bias]
    %add_133 : [#users=1] = call_function[target=operator.add](args = (%mul_50, %bias_24), kwargs = {})
    return (add_133,)
RUNNING PY CODE
def ___make_graph_fn(compiled_graph):
    def fn(locals):
        print('running graph_fn (key = 6210)', locals.keys())
        graph_out = compiled_graph(locals['input_ids'].contiguous(), locals['attention_mask'].contiguous(), locals['token_type_ids'].contiguous(), locals['self'].embeddings.position_ids.contiguous())
        __stack__0_0 = graph_out[0]
        __stack__0 = (__stack__0_0,)
        return __stack__0
    return fn
def ___make_guard_fn(var_423, var_424, var_425, var_426):
    def fn(locals):
        try:
            print('running guard_fn (key = 6210)', locals.keys())
            ok = (var_424.tensor_guard_check(locals['attention_mask'])) and (locals['self'].config.output_hidden_states == False) and (isinstance(locals['self'].z_steps, int)) and (locals['inputs_embeds'] is None) and (locals['position_ids'] is None) and (locals['return_dict'] is None) and (isinstance(locals['self'].config.output_hidden_states, bool)) and (locals['output_attentions'] is None) and (isinstance(locals['self'].config.use_return_dict, bool)) and (locals['self'].config.use_return_dict == False) and (id(locals['self'].encoder) == 22897554686976) and (id(locals['self']) == 22897554686736) and (var_425.tensor_guard_check(locals['token_type_ids'])) and (id(locals['self'].embeddings) == 22897554686784) and (var_426.tensor_guard_check(locals['self'].embeddings.position_ids)) and (locals['input_ids'].device == torch.device('cpu')) and (locals['output_hidden_states'] is None) and (var_423.tensor_guard_check(locals['input_ids'])) and (locals['self'].z_steps == 0) and (locals['self'].config.output_attentions == False) and (isinstance(locals['self'].config.output_attentions, bool))
            print('ok = ', ok)
        except Exception as e:
            print('exception in guard_fn:', e, type(e))
            import traceback
            print(traceback.format_exc())
            return False
        return ok
    return fn
                
guard_fn: <function ___make_guard_fn.<locals>.fn at 0x14d300a845e0>
pc: 0 215
stack: 0 1
tracing opcode LOAD_GLOBAL None pc=496 frame=0(0x6614110)
restart: running injected code (f_lasti=496)
tracing opcode LOAD_CONST None pc=498 frame=0(0x6614110)
restart: running injected code (f_lasti=498)
tracing opcode CALL_FUNCTION None pc=500 frame=0(0x6614110)
restart: running injected code (f_lasti=500)
disable_trace
before pop_tracker [0] frame_id 0
restoring frame, prior = None
(tensor([[[ 0.0497, -1.1979,  0.3910,  ..., -0.0620,  2.1572, -1.0994],
         [-0.1630, -0.0368, -0.2848,  ...,  0.5103,  1.8274, -1.0234],
         [ 0.8611, -0.5216, -1.0815,  ...,  0.6257,  0.6994, -0.0116],
         ...,
         [ 0.6009,  0.9201, -1.3784,  ...,  1.0170, -0.5446, -0.7523],
         [-0.3582,  0.1347, -0.9105,  ..., -1.0697,  1.1350,  0.1875],
         [ 1.1840, -0.2845, -0.9350,  ...,  2.6221, -0.1118, -1.3873]]]),)
preprocess frame /home/drc/frontend/test/test_model_deberta.py 0 0x660efd0 forward
0: [33mLOAD_FAST[0m(6, output_attentions) 
1: [33mLOAD_CONST[0m(0, None) 
2: [33mIS_OP[0m(1, 1) 
3: [33mPOP_JUMP_IF_FALSE[0m(12, 12)  -> inst 6
4: [33mLOAD_FAST[0m(6, output_attentions) 
5: [33mJUMP_FORWARD[0m(6, 18)  -> inst 9
6: [33mLOAD_DEREF[0m(0, self) 
7: [33mLOAD_ATTR[0m(0, config) 
8: [33mLOAD_ATTR[0m(1, output_attentions) 
9: [33mSTORE_FAST[0m(6, output_attentions) 
10: [33mLOAD_FAST[0m(7, output_hidden_states) 
11: [33mLOAD_CONST[0m(0, None) 
12: [33mIS_OP[0m(1, 1) 
13: [33mPOP_JUMP_IF_FALSE[0m(32, 32)  -> inst 16
14: [33mLOAD_FAST[0m(7, output_hidden_states) 
15: [33mJUMP_FORWARD[0m(6, 38)  -> inst 19
16: [33mLOAD_DEREF[0m(0, self) 
17: [33mLOAD_ATTR[0m(0, config) 
18: [33mLOAD_ATTR[0m(2, output_hidden_states) 
19: [33mSTORE_FAST[0m(7, output_hidden_states) 
20: [33mLOAD_FAST[0m(8, return_dict) 
21: [33mLOAD_CONST[0m(0, None) 
22: [33mIS_OP[0m(1, 1) 
23: [33mPOP_JUMP_IF_FALSE[0m(52, 52)  -> inst 26
24: [33mLOAD_FAST[0m(8, return_dict) 
25: [33mJUMP_FORWARD[0m(6, 58)  -> inst 29
26: [33mLOAD_DEREF[0m(0, self) 
27: [33mLOAD_ATTR[0m(0, config) 
28: [33mLOAD_ATTR[0m(3, use_return_dict) 
29: [33mSTORE_FAST[0m(8, return_dict) 
30: [33mLOAD_FAST[0m(1, input_ids) 
31: [33mLOAD_CONST[0m(0, None) 
32: [33mIS_OP[0m(1, 1) 
33: [33mPOP_JUMP_IF_FALSE[0m(86, 86)  -> inst 43
34: [33mLOAD_FAST[0m(5, inputs_embeds) 
35: [33mLOAD_CONST[0m(0, None) 
36: [33mIS_OP[0m(1, 1) 
37: [33mPOP_JUMP_IF_FALSE[0m(86, 86)  -> inst 43
38: [33mLOAD_GLOBAL[0m(4, ValueError) 
39: [33mLOAD_CONST[0m(1, You cannot specify both input_ids and inputs_embeds at the same time) 
40: [33mCALL_FUNCTION[0m(1, 1) 
41: [33mRAISE_VARARGS[0m(1, 1) 
42: [33mJUMP_FORWARD[0m(52, 138)  -> inst 69
43: [33mLOAD_FAST[0m(1, input_ids) 
44: [33mLOAD_CONST[0m(0, None) 
45: [33mIS_OP[0m(1, 1) 
46: [33mPOP_JUMP_IF_FALSE[0m(104, 104)  -> inst 52
47: [33mLOAD_FAST[0m(1, input_ids) 
48: [33mLOAD_METHOD[0m(5, size) 
49: [33mCALL_METHOD[0m(0, 0) 
50: [33mSTORE_FAST[0m(9, input_shape) 
51: [33mJUMP_FORWARD[0m(34, 138)  -> inst 69
52: [33mLOAD_FAST[0m(5, inputs_embeds) 
53: [33mLOAD_CONST[0m(0, None) 
54: [33mIS_OP[0m(1, 1) 
55: [33mPOP_JUMP_IF_FALSE[0m(130, 130)  -> inst 65
56: [33mLOAD_FAST[0m(5, inputs_embeds) 
57: [33mLOAD_METHOD[0m(5, size) 
58: [33mCALL_METHOD[0m(0, 0) 
59: [33mLOAD_CONST[0m(0, None) 
60: [33mLOAD_CONST[0m(2, -1) 
61: [33mBUILD_SLICE[0m(2, 2) 
62: [33mBINARY_SUBSCR[0m(None, None) 
63: [33mSTORE_FAST[0m(9, input_shape) 
64: [33mJUMP_FORWARD[0m(8, 138)  -> inst 69
65: [33mLOAD_GLOBAL[0m(4, ValueError) 
66: [33mLOAD_CONST[0m(3, You have to specify either input_ids or inputs_embeds) 
67: [33mCALL_FUNCTION[0m(1, 1) 
68: [33mRAISE_VARARGS[0m(1, 1) 
69: [33mLOAD_FAST[0m(1, input_ids) 
70: [33mLOAD_CONST[0m(0, None) 
71: [33mIS_OP[0m(1, 1) 
72: [33mPOP_JUMP_IF_FALSE[0m(152, 152)  -> inst 76
73: [33mLOAD_FAST[0m(1, input_ids) 
74: [33mLOAD_ATTR[0m(6, device) 
75: [33mJUMP_FORWARD[0m(4, 156)  -> inst 78
76: [33mLOAD_FAST[0m(5, inputs_embeds) 
77: [33mLOAD_ATTR[0m(6, device) 
78: [33mSTORE_FAST[0m(10, device) 
79: [33mLOAD_FAST[0m(2, attention_mask) 
80: [33mLOAD_CONST[0m(0, None) 
81: [33mIS_OP[0m(0, 0) 
82: [33mPOP_JUMP_IF_FALSE[0m(180, 180)  -> inst 90
83: [33mLOAD_GLOBAL[0m(7, torch) 
84: [33mLOAD_ATTR[0m(8, ones) 
85: [33mLOAD_FAST[0m(9, input_shape) 
86: [33mLOAD_FAST[0m(10, device) 
87: [33mLOAD_CONST[0m(4, ('device',)) 
88: [33mCALL_FUNCTION_KW[0m(2, 2) 
89: [33mSTORE_FAST[0m(2, attention_mask) 
90: [33mLOAD_FAST[0m(3, token_type_ids) 
91: [33mLOAD_CONST[0m(0, None) 
92: [33mIS_OP[0m(0, 0) 
93: [33mPOP_JUMP_IF_FALSE[0m(206, 206)  -> inst 103
94: [33mLOAD_GLOBAL[0m(7, torch) 
95: [33mLOAD_ATTR[0m(9, zeros) 
96: [33mLOAD_FAST[0m(9, input_shape) 
97: [33mLOAD_GLOBAL[0m(7, torch) 
98: [33mLOAD_ATTR[0m(10, long) 
99: [33mLOAD_FAST[0m(10, device) 
100: [33mLOAD_CONST[0m(5, ('dtype', 'device')) 
101: [33mCALL_FUNCTION_KW[0m(3, 3) 
102: [33mSTORE_FAST[0m(3, token_type_ids) 
103: [33mLOAD_DEREF[0m(0, self) 
104: [33mLOAD_ATTR[0m(11, embeddings) 
105: [33mLOAD_FAST[0m(1, input_ids) 
106: [33mLOAD_FAST[0m(3, token_type_ids) 
107: [33mLOAD_FAST[0m(4, position_ids) 
108: [33mLOAD_FAST[0m(2, attention_mask) 
109: [33mLOAD_FAST[0m(5, inputs_embeds) 
110: [33mLOAD_CONST[0m(6, ('input_ids', 'token_type_ids', 'position_ids', 'mask', 'inputs_embeds')) 
111: [33mCALL_FUNCTION_KW[0m(5, 5) 
112: [33mSTORE_FAST[0m(11, embedding_output) 
113: [33mLOAD_DEREF[0m(0, self) 
114: [33mLOAD_ATTR[0m(12, encoder) 
115: [33mLOAD_FAST[0m(11, embedding_output) 
116: [33mLOAD_FAST[0m(2, attention_mask) 
117: [33mLOAD_CONST[0m(7, True) 
118: [33mLOAD_FAST[0m(6, output_attentions) 
119: [33mLOAD_FAST[0m(8, return_dict) 
120: [33mLOAD_CONST[0m(8, ('output_hidden_states', 'output_attentions', 'return_dict')) 
121: [33mCALL_FUNCTION_KW[0m(5, 5) 
122: [33mSTORE_FAST[0m(12, encoder_outputs) 
123: [33mLOAD_FAST[0m(12, encoder_outputs) 
124: [33mLOAD_CONST[0m(9, 1) 
125: [33mBINARY_SUBSCR[0m(None, None) 
126: [33mSTORE_FAST[0m(13, encoded_layers) 
127: [33mLOAD_DEREF[0m(0, self) 
128: [33mLOAD_ATTR[0m(13, z_steps) 
129: [33mLOAD_CONST[0m(9, 1) 
130: [33mCOMPARE_OP[0m(4, >) 
131: [33mEXTENDED_ARG[0m(1, 1) 
132: [33mPOP_JUMP_IF_FALSE[0m(390, 390)  -> inst 195
133: [33mLOAD_FAST[0m(13, encoded_layers) 
134: [33mLOAD_CONST[0m(10, -2) 
135: [33mBINARY_SUBSCR[0m(None, None) 
136: [33mSTORE_FAST[0m(14, hidden_states) 
137: [33mLOAD_CLOSURE[0m(0, self) 
138: [33mBUILD_TUPLE[0m(1, 1) 
139: [33mLOAD_CONST[0m(11, <code object <listcomp> at 0x14d3f5548be0, file "/home/drc/frontend/test/test_model_deberta.py", line 994>) 
140: [33mLOAD_CONST[0m(12, DebertaModel.forward.<locals>.<listcomp>) 
141: [33mMAKE_FUNCTION[0m(8, 8) 
142: [33mLOAD_GLOBAL[0m(14, range) 
143: [33mLOAD_DEREF[0m(0, self) 
144: [33mLOAD_ATTR[0m(13, z_steps) 
145: [33mCALL_FUNCTION[0m(1, 1) 
146: [33mGET_ITER[0m(None, None) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mSTORE_FAST[0m(15, layers) 
149: [33mLOAD_FAST[0m(13, encoded_layers) 
150: [33mLOAD_CONST[0m(2, -1) 
151: [33mBINARY_SUBSCR[0m(None, None) 
152: [33mSTORE_FAST[0m(16, query_states) 
153: [33mLOAD_DEREF[0m(0, self) 
154: [33mLOAD_ATTR[0m(12, encoder) 
155: [33mLOAD_METHOD[0m(15, get_rel_embedding) 
156: [33mCALL_METHOD[0m(0, 0) 
157: [33mSTORE_FAST[0m(17, rel_embeddings) 
158: [33mLOAD_DEREF[0m(0, self) 
159: [33mLOAD_ATTR[0m(12, encoder) 
160: [33mLOAD_METHOD[0m(16, get_attention_mask) 
161: [33mLOAD_FAST[0m(2, attention_mask) 
162: [33mCALL_METHOD[0m(1, 1) 
163: [33mSTORE_FAST[0m(2, attention_mask) 
164: [33mLOAD_DEREF[0m(0, self) 
165: [33mLOAD_ATTR[0m(12, encoder) 
166: [33mLOAD_METHOD[0m(17, get_rel_pos) 
167: [33mLOAD_FAST[0m(11, embedding_output) 
168: [33mCALL_METHOD[0m(1, 1) 
169: [33mSTORE_FAST[0m(18, rel_pos) 
170: [33mLOAD_FAST[0m(15, layers) 
171: [33mLOAD_CONST[0m(9, 1) 
172: [33mLOAD_CONST[0m(0, None) 
173: [33mBUILD_SLICE[0m(2, 2) 
174: [33mBINARY_SUBSCR[0m(None, None) 
175: [33mGET_ITER[0m(None, None) 
176: [33mFOR_ITER[0m(36, 390)  -> inst 195
177: [33mSTORE_FAST[0m(19, layer) 
178: [33mLOAD_FAST[0m(19, layer) 
179: [33mLOAD_FAST[0m(14, hidden_states) 
180: [33mLOAD_FAST[0m(2, attention_mask) 
181: [33mLOAD_CONST[0m(13, False) 
182: [33mLOAD_FAST[0m(16, query_states) 
183: [33mLOAD_FAST[0m(18, rel_pos) 
184: [33mLOAD_FAST[0m(17, rel_embeddings) 
185: [33mLOAD_CONST[0m(14, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
186: [33mCALL_FUNCTION_KW[0m(6, 6) 
187: [33mSTORE_FAST[0m(16, query_states) 
188: [33mLOAD_FAST[0m(13, encoded_layers) 
189: [33mLOAD_METHOD[0m(18, append) 
190: [33mLOAD_FAST[0m(16, query_states) 
191: [33mCALL_METHOD[0m(1, 1) 
192: [33mPOP_TOP[0m(None, None) 
193: [33mEXTENDED_ARG[0m(1, 1) 
194: [33mJUMP_ABSOLUTE[0m(352, 352)  -> inst 176
195: [33mLOAD_FAST[0m(13, encoded_layers) 
196: [33mLOAD_CONST[0m(2, -1) 
197: [33mBINARY_SUBSCR[0m(None, None) 
198: [33mSTORE_FAST[0m(20, sequence_output) 
199: [33mLOAD_FAST[0m(8, return_dict) 
200: [33mEXTENDED_ARG[0m(1, 1) 
201: [33mPOP_JUMP_IF_TRUE[0m(432, 432)  -> inst 216
202: [33mLOAD_FAST[0m(20, sequence_output) 
203: [33mBUILD_TUPLE[0m(1, 1) 
204: [33mLOAD_FAST[0m(12, encoder_outputs) 
205: [33mLOAD_FAST[0m(7, output_hidden_states) 
206: [33mEXTENDED_ARG[0m(1, 1) 
207: [33mPOP_JUMP_IF_FALSE[0m(420, 420)  -> inst 210
208: [33mLOAD_CONST[0m(9, 1) 
209: [33mJUMP_FORWARD[0m(2, 422)  -> inst 211
210: [33mLOAD_CONST[0m(15, 2) 
211: [33mLOAD_CONST[0m(0, None) 
212: [33mBUILD_SLICE[0m(2, 2) 
213: [33mBINARY_SUBSCR[0m(None, None) 
214: [33mBINARY_ADD[0m(None, None) 
215: [33mRETURN_VALUE[0m(None, None) 
216: [33mLOAD_GLOBAL[0m(19, BaseModelOutput) 
217: [33mLOAD_FAST[0m(20, sequence_output) 
218: [33mLOAD_FAST[0m(7, output_hidden_states) 
219: [33mEXTENDED_ARG[0m(1, 1) 
220: [33mPOP_JUMP_IF_FALSE[0m(448, 448)  -> inst 224
221: [33mLOAD_FAST[0m(12, encoder_outputs) 
222: [33mLOAD_ATTR[0m(20, hidden_states) 
223: [33mJUMP_FORWARD[0m(2, 450)  -> inst 225
224: [33mLOAD_CONST[0m(0, None) 
225: [33mLOAD_FAST[0m(12, encoder_outputs) 
226: [33mLOAD_ATTR[0m(21, attentions) 
227: [33mLOAD_CONST[0m(16, ('last_hidden_state', 'hidden_states', 'attentions')) 
228: [33mCALL_FUNCTION_KW[0m(3, 3) 
229: [33mRETURN_VALUE[0m(None, None) 

const_list [(<class 'code'>, <code object <listcomp> at 0x14d3f5548be0, file "/home/drc/frontend/test/test_model_deberta.py", line 994>), (<class 'bool'>, False), (<class 'tuple'>, ('output_hidden_states', 'output_attentions', 'return_dict')), (<class 'tuple'>, ('last_hidden_state', 'hidden_states', 'attentions')), (<class 'tuple'>, ('device',)), (<class 'tuple'>, ('input_ids', 'token_type_ids', 'position_ids', 'mask', 'inputs_embeds')), (<class 'str'>, 'You cannot specify both input_ids and inputs_embeds at the same time'), (<class 'str'>, 'You have to specify either input_ids or inputs_embeds'), (<class 'NoneType'>, None), (<class 'int'>, 2), (<class 'bool'>, True), (<class 'tuple'>, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')), (<class 'int'>, -1), (<class 'int'>, -2), (<class 'int'>, 1), (<class 'tuple'>, ('dtype', 'device')), (<class 'str'>, 'DebertaModel.forward.<locals>.<listcomp>'), (<class 'int'>, 0)]
guarded code
0: [32mEXTENDED_ARG[0m(1, 1) 
1: [32mJUMP_ABSOLUTE[0m(468, 468)  -> inst 234
2: [33mLOAD_FAST[0m(6, output_attentions) 
3: [33mLOAD_CONST[0m(8, None) 
4: [33mIS_OP[0m(1, 1) 
5: [33mPOP_JUMP_IF_FALSE[0m(16, 16)  -> inst 8
6: [33mLOAD_FAST[0m(6, output_attentions) 
7: [33mJUMP_FORWARD[0m(6, 22)  -> inst 11
8: [33mLOAD_DEREF[0m(0, self) 
9: [33mLOAD_ATTR[0m(0, config) 
10: [33mLOAD_ATTR[0m(1, output_attentions) 
11: [33mSTORE_FAST[0m(6, output_attentions) 
12: [33mLOAD_FAST[0m(7, output_hidden_states) 
13: [33mLOAD_CONST[0m(8, None) 
14: [33mIS_OP[0m(1, 1) 
15: [33mPOP_JUMP_IF_FALSE[0m(36, 36)  -> inst 18
16: [33mLOAD_FAST[0m(7, output_hidden_states) 
17: [33mJUMP_FORWARD[0m(6, 42)  -> inst 21
18: [33mLOAD_DEREF[0m(0, self) 
19: [33mLOAD_ATTR[0m(0, config) 
20: [33mLOAD_ATTR[0m(2, output_hidden_states) 
21: [33mSTORE_FAST[0m(7, output_hidden_states) 
22: [33mLOAD_FAST[0m(8, return_dict) 
23: [33mLOAD_CONST[0m(8, None) 
24: [33mIS_OP[0m(1, 1) 
25: [33mPOP_JUMP_IF_FALSE[0m(56, 56)  -> inst 28
26: [33mLOAD_FAST[0m(8, return_dict) 
27: [33mJUMP_FORWARD[0m(6, 62)  -> inst 31
28: [33mLOAD_DEREF[0m(0, self) 
29: [33mLOAD_ATTR[0m(0, config) 
30: [33mLOAD_ATTR[0m(3, use_return_dict) 
31: [33mSTORE_FAST[0m(8, return_dict) 
32: [33mLOAD_FAST[0m(1, input_ids) 
33: [33mLOAD_CONST[0m(8, None) 
34: [33mIS_OP[0m(1, 1) 
35: [33mPOP_JUMP_IF_FALSE[0m(90, 90)  -> inst 45
36: [33mLOAD_FAST[0m(5, inputs_embeds) 
37: [33mLOAD_CONST[0m(8, None) 
38: [33mIS_OP[0m(1, 1) 
39: [33mPOP_JUMP_IF_FALSE[0m(90, 90)  -> inst 45
40: [33mLOAD_GLOBAL[0m(4, ValueError) 
41: [33mLOAD_CONST[0m(6, You cannot specify both input_ids and inputs_embeds at the same time) 
42: [33mCALL_FUNCTION[0m(1, 1) 
43: [33mRAISE_VARARGS[0m(1, 1) 
44: [33mJUMP_FORWARD[0m(52, 142)  -> inst 71
45: [33mLOAD_FAST[0m(1, input_ids) 
46: [33mLOAD_CONST[0m(8, None) 
47: [33mIS_OP[0m(1, 1) 
48: [33mPOP_JUMP_IF_FALSE[0m(108, 108)  -> inst 54
49: [33mLOAD_FAST[0m(1, input_ids) 
50: [33mLOAD_METHOD[0m(5, size) 
51: [33mCALL_METHOD[0m(0, 0) 
52: [33mSTORE_FAST[0m(9, input_shape) 
53: [33mJUMP_FORWARD[0m(34, 142)  -> inst 71
54: [33mLOAD_FAST[0m(5, inputs_embeds) 
55: [33mLOAD_CONST[0m(8, None) 
56: [33mIS_OP[0m(1, 1) 
57: [33mPOP_JUMP_IF_FALSE[0m(134, 134)  -> inst 67
58: [33mLOAD_FAST[0m(5, inputs_embeds) 
59: [33mLOAD_METHOD[0m(5, size) 
60: [33mCALL_METHOD[0m(0, 0) 
61: [33mLOAD_CONST[0m(8, None) 
62: [33mLOAD_CONST[0m(12, -1) 
63: [33mBUILD_SLICE[0m(2, 2) 
64: [33mBINARY_SUBSCR[0m(None, None) 
65: [33mSTORE_FAST[0m(9, input_shape) 
66: [33mJUMP_FORWARD[0m(8, 142)  -> inst 71
67: [33mLOAD_GLOBAL[0m(4, ValueError) 
68: [33mLOAD_CONST[0m(7, You have to specify either input_ids or inputs_embeds) 
69: [33mCALL_FUNCTION[0m(1, 1) 
70: [33mRAISE_VARARGS[0m(1, 1) 
71: [33mLOAD_FAST[0m(1, input_ids) 
72: [33mLOAD_CONST[0m(8, None) 
73: [33mIS_OP[0m(1, 1) 
74: [33mPOP_JUMP_IF_FALSE[0m(156, 156)  -> inst 78
75: [33mLOAD_FAST[0m(1, input_ids) 
76: [33mLOAD_ATTR[0m(6, device) 
77: [33mJUMP_FORWARD[0m(4, 160)  -> inst 80
78: [33mLOAD_FAST[0m(5, inputs_embeds) 
79: [33mLOAD_ATTR[0m(6, device) 
80: [33mSTORE_FAST[0m(10, device) 
81: [33mLOAD_FAST[0m(2, attention_mask) 
82: [33mLOAD_CONST[0m(8, None) 
83: [33mIS_OP[0m(0, 0) 
84: [33mPOP_JUMP_IF_FALSE[0m(184, 184)  -> inst 92
85: [33mLOAD_GLOBAL[0m(7, torch) 
86: [33mLOAD_ATTR[0m(8, ones) 
87: [33mLOAD_FAST[0m(9, input_shape) 
88: [33mLOAD_FAST[0m(10, device) 
89: [33mLOAD_CONST[0m(4, ('device',)) 
90: [33mCALL_FUNCTION_KW[0m(2, 2) 
91: [33mSTORE_FAST[0m(2, attention_mask) 
92: [33mLOAD_FAST[0m(3, token_type_ids) 
93: [33mLOAD_CONST[0m(8, None) 
94: [33mIS_OP[0m(0, 0) 
95: [33mPOP_JUMP_IF_FALSE[0m(210, 210)  -> inst 105
96: [33mLOAD_GLOBAL[0m(7, torch) 
97: [33mLOAD_ATTR[0m(9, zeros) 
98: [33mLOAD_FAST[0m(9, input_shape) 
99: [33mLOAD_GLOBAL[0m(7, torch) 
100: [33mLOAD_ATTR[0m(10, long) 
101: [33mLOAD_FAST[0m(10, device) 
102: [33mLOAD_CONST[0m(15, ('dtype', 'device')) 
103: [33mCALL_FUNCTION_KW[0m(3, 3) 
104: [33mSTORE_FAST[0m(3, token_type_ids) 
105: [33mLOAD_DEREF[0m(0, self) 
106: [33mLOAD_ATTR[0m(11, embeddings) 
107: [33mLOAD_FAST[0m(1, input_ids) 
108: [33mLOAD_FAST[0m(3, token_type_ids) 
109: [33mLOAD_FAST[0m(4, position_ids) 
110: [33mLOAD_FAST[0m(2, attention_mask) 
111: [33mLOAD_FAST[0m(5, inputs_embeds) 
112: [33mLOAD_CONST[0m(5, ('input_ids', 'token_type_ids', 'position_ids', 'mask', 'inputs_embeds')) 
113: [33mCALL_FUNCTION_KW[0m(5, 5) 
114: [33mSTORE_FAST[0m(11, embedding_output) 
115: [33mLOAD_DEREF[0m(0, self) 
116: [33mLOAD_ATTR[0m(12, encoder) 
117: [33mLOAD_FAST[0m(11, embedding_output) 
118: [33mLOAD_FAST[0m(2, attention_mask) 
119: [33mLOAD_CONST[0m(10, True) 
120: [33mLOAD_FAST[0m(6, output_attentions) 
121: [33mLOAD_FAST[0m(8, return_dict) 
122: [33mLOAD_CONST[0m(2, ('output_hidden_states', 'output_attentions', 'return_dict')) 
123: [33mCALL_FUNCTION_KW[0m(5, 5) 
124: [33mSTORE_FAST[0m(12, encoder_outputs) 
125: [33mLOAD_FAST[0m(12, encoder_outputs) 
126: [33mLOAD_CONST[0m(14, 1) 
127: [33mBINARY_SUBSCR[0m(None, None) 
128: [33mSTORE_FAST[0m(13, encoded_layers) 
129: [33mLOAD_DEREF[0m(0, self) 
130: [33mLOAD_ATTR[0m(13, z_steps) 
131: [33mLOAD_CONST[0m(14, 1) 
132: [33mCOMPARE_OP[0m(4, >) 
133: [32mEXTENDED_ARG[0m(1, 1) 
134: [33mPOP_JUMP_IF_FALSE[0m(394, 394)  -> inst 197
135: [33mLOAD_FAST[0m(13, encoded_layers) 
136: [33mLOAD_CONST[0m(13, -2) 
137: [33mBINARY_SUBSCR[0m(None, None) 
138: [33mSTORE_FAST[0m(14, hidden_states) 
139: [33mLOAD_CLOSURE[0m(0, self) 
140: [33mBUILD_TUPLE[0m(1, 1) 
141: [33mLOAD_CONST[0m(0, <code object <listcomp> at 0x14d3f5548be0, file "/home/drc/frontend/test/test_model_deberta.py", line 994>) 
142: [33mLOAD_CONST[0m(16, DebertaModel.forward.<locals>.<listcomp>) 
143: [33mMAKE_FUNCTION[0m(8, 8) 
144: [33mLOAD_GLOBAL[0m(14, range) 
145: [33mLOAD_DEREF[0m(0, self) 
146: [33mLOAD_ATTR[0m(13, z_steps) 
147: [33mCALL_FUNCTION[0m(1, 1) 
148: [33mGET_ITER[0m(None, None) 
149: [33mCALL_FUNCTION[0m(1, 1) 
150: [33mSTORE_FAST[0m(15, layers) 
151: [33mLOAD_FAST[0m(13, encoded_layers) 
152: [33mLOAD_CONST[0m(12, -1) 
153: [33mBINARY_SUBSCR[0m(None, None) 
154: [33mSTORE_FAST[0m(16, query_states) 
155: [33mLOAD_DEREF[0m(0, self) 
156: [33mLOAD_ATTR[0m(12, encoder) 
157: [33mLOAD_METHOD[0m(15, get_rel_embedding) 
158: [33mCALL_METHOD[0m(0, 0) 
159: [33mSTORE_FAST[0m(17, rel_embeddings) 
160: [33mLOAD_DEREF[0m(0, self) 
161: [33mLOAD_ATTR[0m(12, encoder) 
162: [33mLOAD_METHOD[0m(16, get_attention_mask) 
163: [33mLOAD_FAST[0m(2, attention_mask) 
164: [33mCALL_METHOD[0m(1, 1) 
165: [33mSTORE_FAST[0m(2, attention_mask) 
166: [33mLOAD_DEREF[0m(0, self) 
167: [33mLOAD_ATTR[0m(12, encoder) 
168: [33mLOAD_METHOD[0m(17, get_rel_pos) 
169: [33mLOAD_FAST[0m(11, embedding_output) 
170: [33mCALL_METHOD[0m(1, 1) 
171: [33mSTORE_FAST[0m(18, rel_pos) 
172: [33mLOAD_FAST[0m(15, layers) 
173: [33mLOAD_CONST[0m(14, 1) 
174: [33mLOAD_CONST[0m(8, None) 
175: [33mBUILD_SLICE[0m(2, 2) 
176: [33mBINARY_SUBSCR[0m(None, None) 
177: [33mGET_ITER[0m(None, None) 
178: [33mFOR_ITER[0m(36, 394)  -> inst 197
179: [33mSTORE_FAST[0m(19, layer) 
180: [33mLOAD_FAST[0m(19, layer) 
181: [33mLOAD_FAST[0m(14, hidden_states) 
182: [33mLOAD_FAST[0m(2, attention_mask) 
183: [33mLOAD_CONST[0m(1, False) 
184: [33mLOAD_FAST[0m(16, query_states) 
185: [33mLOAD_FAST[0m(18, rel_pos) 
186: [33mLOAD_FAST[0m(17, rel_embeddings) 
187: [33mLOAD_CONST[0m(11, ('output_attentions', 'query_states', 'relative_pos', 'rel_embeddings')) 
188: [33mCALL_FUNCTION_KW[0m(6, 6) 
189: [33mSTORE_FAST[0m(16, query_states) 
190: [33mLOAD_FAST[0m(13, encoded_layers) 
191: [33mLOAD_METHOD[0m(18, append) 
192: [33mLOAD_FAST[0m(16, query_states) 
193: [33mCALL_METHOD[0m(1, 1) 
194: [33mPOP_TOP[0m(None, None) 
195: [32mEXTENDED_ARG[0m(1, 1) 
196: [33mJUMP_ABSOLUTE[0m(356, 356)  -> inst 178
197: [33mLOAD_FAST[0m(13, encoded_layers) 
198: [33mLOAD_CONST[0m(12, -1) 
199: [33mBINARY_SUBSCR[0m(None, None) 
200: [33mSTORE_FAST[0m(20, sequence_output) 
201: [33mLOAD_FAST[0m(8, return_dict) 
202: [32mEXTENDED_ARG[0m(1, 1) 
203: [33mPOP_JUMP_IF_TRUE[0m(438, 438)  -> inst 219
204: [33mLOAD_FAST[0m(20, sequence_output) 
205: [33mBUILD_TUPLE[0m(1, 1) 
206: [33mLOAD_FAST[0m(12, encoder_outputs) 
207: [33mLOAD_FAST[0m(7, output_hidden_states) 
208: [32mEXTENDED_ARG[0m(1, 1) 
209: [33mPOP_JUMP_IF_FALSE[0m(424, 424)  -> inst 212
210: [33mLOAD_CONST[0m(14, 1) 
211: [33mJUMP_FORWARD[0m(2, 426)  -> inst 213
212: [33mLOAD_CONST[0m(9, 2) 
213: [33mLOAD_CONST[0m(8, None) 
214: [33mBUILD_SLICE[0m(2, 2) 
215: [33mBINARY_SUBSCR[0m(None, None) 
216: [33mBINARY_ADD[0m(None, None) 
217: [32mEXTENDED_ARG[0m(2, 2) 
218: [32mJUMP_ABSOLUTE[0m(516, 516)  -> inst 258
219: [33mLOAD_GLOBAL[0m(19, BaseModelOutput) 
220: [33mLOAD_FAST[0m(20, sequence_output) 
221: [33mLOAD_FAST[0m(7, output_hidden_states) 
222: [32mEXTENDED_ARG[0m(1, 1) 
223: [33mPOP_JUMP_IF_FALSE[0m(454, 454)  -> inst 227
224: [33mLOAD_FAST[0m(12, encoder_outputs) 
225: [33mLOAD_ATTR[0m(20, hidden_states) 
226: [33mJUMP_FORWARD[0m(2, 456)  -> inst 228
227: [33mLOAD_CONST[0m(8, None) 
228: [33mLOAD_FAST[0m(12, encoder_outputs) 
229: [33mLOAD_ATTR[0m(21, attentions) 
230: [33mLOAD_CONST[0m(3, ('last_hidden_state', 'hidden_states', 'attentions')) 
231: [33mCALL_FUNCTION_KW[0m(3, 3) 
232: [32mEXTENDED_ARG[0m(2, 2) 
233: [32mJUMP_ABSOLUTE[0m(516, 516)  -> inst 258
234: [32mLOAD_GLOBAL[0m(25, guard_match) 
235: [32mLOAD_CONST[0m(17, 0) 
236: [32mLOAD_CONST[0m(17, 0) 
237: [32mLOAD_GLOBAL[0m(27, locals) 
238: [32mCALL_FUNCTION[0m(0, 0) 
239: [32mCALL_FUNCTION[0m(3, 3) [90m# call guard_match(frame_id, callsite_id, locals) [0m
240: [32mUNPACK_SEQUENCE[0m(2, 2) 
241: [32mSTORE_FAST[0m(22, __case_idx) 
242: [32mSTORE_FAST[0m(21, __graph_fn) 
243: [32mLOAD_FAST[0m(22, __case_idx) 
244: [32mLOAD_CONST[0m(17, 0) 
245: [32mCOMPARE_OP[0m(2, ==) 
246: [32mEXTENDED_ARG[0m(1, 1) 
247: [32mPOP_JUMP_IF_FALSE[0m(506, 506)  -> inst 253
248: [32mLOAD_FAST[0m(21, __graph_fn) 
249: [32mLOAD_GLOBAL[0m(27, locals) 
250: [32mCALL_FUNCTION[0m(0, 0) 
251: [32mCALL_FUNCTION[0m(1, 1) [90m# call graph_fn (key=6210) [0m
252: [32mRETURN_VALUE[0m(None, None) 
253: [32mLOAD_GLOBAL[0m(23, enable_trace) 
254: [32mLOAD_CONST[0m(17, 0) 
255: [32mCALL_FUNCTION[0m(1, 1) 
256: [32mPOP_TOP[0m(None, None) 
257: [32mJUMP_ABSOLUTE[0m(4, 4)  -> inst 2
258: [32mLOAD_GLOBAL[0m(26, disable_trace) 
259: [32mLOAD_CONST[0m(17, 0) 
260: [32mCALL_FUNCTION[0m(1, 1) 
261: [32mPOP_TOP[0m(None, None) 
262: [32mRETURN_VALUE[0m(None, None) 

running guard_fn (key = 6210) dict_keys(['input_ids', 'attention_mask', 'token_type_ids', 'position_ids', 'inputs_embeds', 'output_attentions', 'output_hidden_states', 'return_dict', 'self'])
ok =  True
running graph_fn (key = 6210) dict_keys(['input_ids', 'attention_mask', 'token_type_ids', 'position_ids', 'inputs_embeds', 'output_attentions', 'output_hidden_states', 'return_dict', '__graph_fn', '__case_idx', 'self'])
exception in _fn: module 'torch.autograd.function' has no attribute 'apply' <class 'AttributeError'>
restoring frame, prior = None
